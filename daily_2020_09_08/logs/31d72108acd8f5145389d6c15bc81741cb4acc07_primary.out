cset: moving following pidspec: 17436
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.662307244 seconds)
loading group "shootout"... done (took 1.085575566 seconds)
loading group "string"... done (took 0.409377055 seconds)
loading group "linalg"... done (took 7.948170522 seconds)
loading group "parallel"... done (took 0.156178871 seconds)
loading group "find"... done (took 1.289010952 seconds)
loading group "tuple"... done (took 1.975924458 seconds)
loading group "union"... done (took 12.560583874 seconds)
loading group "dates"... done (took 1.318555564 seconds)
loading group "micro"... done (took 0.20340038 seconds)
loading group "simd"... done (took 4.364559027 seconds)
loading group "io"... done (took 1.035145701 seconds)
loading group "random"... done (took 8.761800875 seconds)
loading group "problem"... done (took 1.464238789 seconds)
loading group "array"... done (took 19.330329957 seconds)
loading group "misc"... done (took 1.491730064 seconds)
loading group "scalar"... done (took 39.406849034 seconds)
loading group "sort"... done (took 3.138657247 seconds)
loading group "sparse"... done (took 11.780287042 seconds)
loading group "collection"... done (took 17.58019284 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.506787956 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122364923 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126037701 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116850359 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202869409 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116206925 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124004531 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.0837536 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.809697988 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.136206417 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.110018442 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412578103 seconds)
done (took 5.206206479 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.161381989 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090487166 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080176738 seconds)
  done (took 1.278558094 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.062498104 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130498275 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063047404 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063720516 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06429716 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063840479 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06388818 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063906208 seconds)
  done (took 1.621828777 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.069285937 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064630595 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063229399 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.065177837 seconds)
  done (took 1.373740356 seconds)
done (took 5.622348067 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.232906396 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.097098692 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.275873574 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.437772834 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.591509539 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091098124 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.070978673 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.067393699 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.125769475 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318392371 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10331851 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.180882845 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.08940296 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.172920125 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.977644004 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.11648263 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082373184 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.11901538 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090149967 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127611373 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.388132887 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074596532 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.070759246 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.06727597 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.065608398 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.645007938 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657496402 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.125879208 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080281026 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.159480032 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.113114748 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.649424144 seconds)
  done (took 10.609791459 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.089426267 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.087319866 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06663184 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122184624 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092127998 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067850314 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072633145 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065690034 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087300792 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.123246293 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091114283 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09715696 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064706752 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067419244 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072709898 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.195298134 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.076726568 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077903235 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.065555841 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078417526 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104920919 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077122052 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076038766 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075484171 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127280639 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.164985748 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.093352328 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.094850143 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06512318 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07777838 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113031427 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124432615 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069604171 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063529093 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.118878785 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093803155 seconds)
  done (took 4.461586344 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.942313505 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089672455 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.097161903 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.608150335 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.062702116 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.146010802 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.2379319 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069372133 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.37986052 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.11075542 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.143545438 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.109561428 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.144599281 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.117395368 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068114708 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.185956481 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.112304853 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.468514306 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065959764 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065315183 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06394031 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.066409624 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066161715 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.061589578 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06794596 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093208771 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061451304 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.08538686 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.173650814 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.902421534 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.232213552 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063822768 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161919302 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.084535714 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.35996832 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.067027582 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079568576 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.403867308 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.119218399 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.062798349 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162527793 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.112826253 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.061514596 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.113491402 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.075307991 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.065888748 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.065916607 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.066402566 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069389145 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079718696 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100007194 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064322418 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062079926 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159269986 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.061276198 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06359814 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.065274189 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.14757377 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063453459 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.139335818 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062352695 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067070253 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.099609674 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066804106 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087779451 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.097371599 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.346127086 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.052086328 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064531339 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.240260417 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073684271 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.063102401 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068671596 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064782696 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.06570793 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065434963 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071616587 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068254896 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066135096 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105546418 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064234603 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067734288 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063849059 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069958586 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096335913 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062549682 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.469108931 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061255796 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096506112 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063163726 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.072844278 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.101563973 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063462867 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.068355158 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064182462 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064061986 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063005456 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063582746 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067624472 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.093174776 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068143181 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.219286003 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063923859 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.041162504 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066158382 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063549403 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069505797 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068101304 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067999339 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065336523 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06798555 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066336698 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06301903 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.10817899 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065626208 seconds)
  done (took 21.565201218 seconds)
done (took 38.689449269 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.251590487 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078180554 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078614839 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079107483 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078602913 seconds)
  done (took 1.768217936 seconds)
done (took 2.962727075 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.104245207 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.061463452 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.097454955 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.096705215 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.062040565 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.062113945 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.097645405 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.062048206 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.096521493 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.0964418 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.096952334 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.095919137 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.060791793 seconds)
  done (took 2.29081298 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066697088 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077947918 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079079817 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060321867 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069716684 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080047368 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061786732 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078254421 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084961023 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079240145 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079039543 seconds)
  done (took 2.00507835 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066414651 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.07783353 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.080389761 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.05990465 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071059649 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079303022 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059776971 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.07881821 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081880796 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.08303652 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079256866 seconds)
  done (took 1.996909778 seconds)
done (took 7.475998341 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.063686877 seconds)
  done (took 1.226430316 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.515230895 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.299869175 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.06465557 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.084166813 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.187938502 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.092303172 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.207248913 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.068956659 seconds)
  done (took 7.859533775 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.09608904 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.064953544 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067551546 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.067634133 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066504092 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066035902 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.067084076 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066499111 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.06615196 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.066646414 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068290365 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067653029 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066142241 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.066450121 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.066477199 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066980457 seconds)
  done (took 2.369585117 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094510948 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095187396 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070845026 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071733708 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069408449 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069000684 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071809947 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070776427 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.068059616 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.069410178 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071613319 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069977365 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069700008 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060810584 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.071145324 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072042457 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067712624 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070684264 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071038948 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072808752 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071805391 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061008548 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069613484 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070459609 seconds)
  done (took 3.011389108 seconds)
done (took 15.647575771 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.175479563 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072160309 seconds)
  done (took 1.422241449 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066243128 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.066689907 seconds)
  done (took 1.321665467 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.072203073 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.058229079 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.079085891 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.069997018 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059940143 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06005527 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.077962142 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059962955 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059776073 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059650761 seconds)
  done (took 1.845987151 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.061006978 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.067808674 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06564985 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068143662 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066495161 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061041729 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063872018 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061861479 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068701773 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06024881 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064708462 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080171186 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064373086 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081716509 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064436853 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064728788 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066601878 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063759173 seconds)
  done (took 2.387294932 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.058708908 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059651261 seconds)
  done (took 1.315053096 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.062658405 seconds)
    (2/7) benchmarking "second"...
    done (took 0.059805696 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063124093 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063117968 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06067099 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059960081 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060387231 seconds)
  done (took 1.617386283 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400640093 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11693844 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.334190761 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066674403 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.075591378 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.244774931 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.061475575 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066643234 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067005239 seconds)
  done (took 2.665722681 seconds)
done (took 13.777521995 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077410701 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.169351377 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086290959 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.406880588 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089987358 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065103191 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.110806847 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.171684294 seconds)
done (took 2.389729615 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.2152512 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.333847792 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.884294907 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.066682626 seconds)
  done (took 3.483198936 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.321066004 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.075582787 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076060121 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064869662 seconds)
  done (took 1.746067433 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06185572 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067207694 seconds)
  done (took 1.331978674 seconds)
done (took 7.986471777 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061131834 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087873289 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.061324934 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060736146 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060747852 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.061434866 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060499118 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.061433598 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062121866 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060952062 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.061860812 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.061461873 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.060780071 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.061161058 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060685819 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06063997 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06089733 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060718105 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06140981 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062235762 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061915448 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061496374 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061729046 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061939567 seconds)
  done (took 2.729202422 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.076385845 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06271715 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.064308216 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065341542 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065792438 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065010237 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064904543 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063635767 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065275456 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063786668 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06560404 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065738352 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063419889 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065814486 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063438931 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065600369 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065468662 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064010564 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063771784 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065594358 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.065281894 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063755957 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066134396 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065393457 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.065218213 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065641567 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063592833 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064312176 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065336101 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065856202 seconds)
  done (took 3.173520168 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06147395 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057394428 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.058281075 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067709088 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058568175 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.05887814 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058667161 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057968629 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058918125 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059996913 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058711344 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.058649059 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059053324 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.058206267 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058226224 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058929626 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.062186996 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.076259851 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058329026 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058112429 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06219503 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058200112 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058109876 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058187581 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059082811 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058823476 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057991872 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059244324 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.058188424 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059352316 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058146033 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.062374956 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.071385625 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.058863265 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067854575 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06281965 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.0583242 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061927271 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059673731 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058198944 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057908575 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058190312 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058079236 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058179213 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.067087825 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.05856751 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059492163 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.059067189 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.05826547 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.058199157 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.058397599 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060486615 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.063293982 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059894479 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.058197809 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059987807 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057877076 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059055051 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058339509 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.05804863 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057866236 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.061250159 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.06039582 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.059533394 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076261961 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059827165 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06762936 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06040629 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.059024446 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.061384511 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058938017 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.074852991 seconds)
  done (took 5.575368275 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080963399 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083791248 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062940693 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063227791 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059747259 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059121801 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066778553 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059887722 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063122441 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078440806 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059248285 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062974973 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063085182 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062383684 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059301441 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063333556 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066986197 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059492119 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058708519 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062586363 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059773076 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066461566 seconds)
  done (took 2.654509019 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.134291596 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063210899 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101493601 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074476558 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067189818 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074292647 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064321725 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064477345 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064730576 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065218354 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065305973 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06569564 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067326944 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06480372 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065148783 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064542895 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064541103 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065310341 seconds)
  done (took 2.517887179 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073473021 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063180516 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084613857 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06370654 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064015719 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064319773 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06811494 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068612137 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063537077 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064248933 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068971192 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064020763 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063425639 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063735113 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063792918 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06418685 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06341136 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063899342 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06855285 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068351833 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068186223 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068318942 seconds)
  done (took 2.688518991 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071853405 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061803365 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076055524 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065420362 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059972431 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059201996 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064293043 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063041162 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064263075 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.062969086 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063265989 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059084932 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064934212 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063468532 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065079856 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063352909 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062784203 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063470489 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063194731 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059444489 seconds)
  done (took 2.499455475 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082713378 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060092059 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060461417 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078617587 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061427254 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.060914433 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078172091 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060172297 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.062220788 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082760438 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061813142 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061244062 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080327209 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08031123 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061458189 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08007342 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080144505 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080477068 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061721814 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061517843 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082660516 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061846528 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080204296 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061408632 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061899023 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061405959 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061881248 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080086179 seconds)
  done (took 3.172223556 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061079099 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059984026 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060629266 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06053857 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060744723 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061574751 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061937838 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06185624 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061806761 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062861179 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.061811802 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06208944 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061559026 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.061766483 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061939406 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.061547447 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061867687 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062029502 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062334294 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062008894 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062193947 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061123292 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.061174539 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061598326 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062272557 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.061629037 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061982986 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061701898 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061119346 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061983063 seconds)
  done (took 3.076734213 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.070486621 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069243895 seconds)
  done (took 1.368262143 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059395824 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0730332 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057315179 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068430462 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067585215 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062416275 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068367825 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067596148 seconds)
  done (took 1.748073072 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064243928 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.08632522 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059459945 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.061013663 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064334835 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.117962857 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.074656884 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.073240421 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072954918 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06301543 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061190822 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.072610017 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.060109211 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072102869 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062137931 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068473865 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066780967 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072139264 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072044035 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058798125 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071392195 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061535395 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059005262 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061340618 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060531835 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066674782 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075057938 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071612979 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068434671 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057811258 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078493989 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.059176423 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060655577 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068157466 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063991632 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058948211 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094213344 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059648201 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064949947 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059058611 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070761687 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0789067 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072702403 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.076318122 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061286326 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061564859 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.05906056 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061205684 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062372328 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068589822 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.05930488 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06627341 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058863022 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061140588 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06893438 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059504737 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065284494 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068170447 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07174206 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069338952 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071260426 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073792898 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067478641 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067933585 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060051542 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077456055 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.061051061 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071533658 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072933455 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060780423 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072684892 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.05906827 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058143201 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059042927 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09101692 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061087306 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.06040365 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.05926621 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.059342111 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.061058478 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068156678 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065371238 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065624346 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062798264 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074897715 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067567776 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058889085 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.066483463 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.076056641 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06205947 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.059465672 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.074601623 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.061767554 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058974818 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075729252 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068911433 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.061318686 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059869306 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062179209 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072367818 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060077939 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057368637 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066928902 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060528545 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.06176208 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.06348405 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066468275 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058738284 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068424562 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.063800551 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060012077 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057334568 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062800568 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.05943585 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057363488 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06732989 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058553757 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072254393 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064530755 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072439434 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072283348 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068667496 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073513637 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058506717 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057180035 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.075606157 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06777572 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060071262 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.208392227 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059803258 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071335486 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060879613 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.062220266 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.069653875 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060603325 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062547096 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060473113 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065811041 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061659955 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062253168 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064022222 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067724965 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071277325 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.061153992 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068338385 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06016515 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074627943 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068792741 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063889718 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06339475 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.060550454 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07100707 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065851856 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068780141 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.05922901 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.060081831 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059203916 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069517142 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068784526 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061404879 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067694022 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064134267 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.060442729 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059676448 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.061633417 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063237999 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064155807 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060838734 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066407587 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068233547 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075830227 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067778683 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067375848 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058458855 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059237919 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.061465765 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058919599 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.063437751 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06814644 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074350729 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.0714584 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07933004 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059673583 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068178554 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060847869 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075392482 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071857672 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060699797 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064583286 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058453704 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061413904 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068338486 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07067044 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.07307658 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073972225 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063705748 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063717739 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.059085875 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073497451 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.059938206 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067468751 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.068422457 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.064821894 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059880976 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.061514751 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068153795 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06370259 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059674541 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074373121 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.066271807 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059341065 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072574618 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.060000365 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.0700828 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059421182 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062938406 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064405357 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06173971 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068454627 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074285384 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058670813 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.060439025 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074433066 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.061684534 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061449055 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066661954 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.073259053 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063713945 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06702254 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070012983 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068897323 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063762847 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068611608 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060546063 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.068045173 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.06288348 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071184036 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.059291739 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076147642 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058011766 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.073356598 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.059805436 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.069956101 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.059119155 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067848484 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059576512 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.077154393 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059671266 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.057778732 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.06769302 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.055753565 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065224826 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057128822 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063165316 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06452452 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.067471028 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059989543 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067730784 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059748897 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066098476 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062114813 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.203238994 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.068881216 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065958621 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060528288 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068595175 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071347167 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068305979 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.062175953 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.06160574 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060375394 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069161382 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061765843 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060995916 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067634093 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063866735 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065253244 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061376288 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061560712 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.062037353 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06762596 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068865211 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077705385 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068042678 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066516812 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068581845 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059317531 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074466173 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059447662 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066711118 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.05887709 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066051986 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068546215 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059967049 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078386992 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.061589331 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067167718 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071821385 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067605515 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06384827 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076924393 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063413462 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067621076 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067868798 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.063904228 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.065487717 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061764322 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067427116 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068640533 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069712651 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.060659423 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066657299 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06734213 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061269599 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068258551 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061640286 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067130719 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060539539 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057194828 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062984691 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070766239 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064089139 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064588195 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06003228 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.058315149 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059577204 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067098193 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063711123 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067873702 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074030816 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058615636 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.060377827 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059338382 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065171353 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077199112 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068739122 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066780751 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063775923 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.059133988 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.061295691 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.061553832 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.06009471 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063262538 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058589803 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.059503026 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069742278 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061506528 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06370078 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060267414 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060937273 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068499114 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.06475723 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060125567 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065758047 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.059515922 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064334239 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.058815097 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.061358398 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063666287 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.058652775 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062658262 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.069521884 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.075788751 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065229706 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067452666 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.060370245 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066591883 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074500791 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067319773 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060270071 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068101473 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058421194 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076476804 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06789274 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066808545 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068171511 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.060022194 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074355016 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062847266 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.06813237 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073042303 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059659534 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.065355958 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.058271425 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073373768 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.062718667 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.058127165 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065977526 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065702181 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064031339 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.06949298 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.058975239 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.065853467 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06454728 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.202100244 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.062309483 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.064641661 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069301957 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076154349 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.061747449 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065225294 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067570692 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068358313 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064392259 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071565581 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067459584 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061071315 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062212253 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063061769 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060574765 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071051438 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060008446 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06423247 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063445193 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059168673 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066109213 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075778913 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068761752 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069196108 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059764395 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.059134217 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.076957452 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063138675 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064039427 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067719841 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068304737 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072216824 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068912867 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075590439 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060762907 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064575476 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071321947 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060676912 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.059844515 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062912677 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061633382 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068457524 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069134702 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066633321 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061986387 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066132037 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072401972 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.061398589 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063711929 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.064949947 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.060772228 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069252887 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066914525 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067146614 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.060800305 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059035472 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062542854 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06776387 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066677322 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067705846 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060971696 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.066811489 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.072900942 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066646645 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063163044 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059564909 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063068582 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067888911 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065205623 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.05932836 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064116925 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062804419 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067381176 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069276896 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063750643 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059592959 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076130746 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068017847 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.068220299 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061550585 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061941089 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059958145 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058862695 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070501516 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059115273 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061397187 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.0643004 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061375637 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.076688196 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067485238 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074765108 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06081806 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063725414 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059194049 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068663244 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064311608 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059633839 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069574284 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058888133 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074613007 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.071097186 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.06820734 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058646275 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06330888 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067306654 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07354891 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068180144 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06835405 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.063533116 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068894099 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.0612995 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.069636486 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.058747385 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057674702 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.06840852 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067357481 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070711741 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058591595 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.067991533 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060919634 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066137416 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066007961 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.060473877 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060141182 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060094306 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067202722 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062768479 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067093608 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062944115 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074337073 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059318285 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068429052 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067076409 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.208122214 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073443961 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073672905 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068922001 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061899804 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067014697 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.067998501 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.061612834 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064391968 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063989857 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081120934 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06199054 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061420236 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073687243 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067147138 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059638131 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067142537 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06423518 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070122324 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.06115907 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.069363919 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.06483981 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060849123 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064135928 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064152476 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058761073 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059724238 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059645977 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069563479 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063973317 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060163406 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078130095 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061164676 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067963978 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070258752 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065978573 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061938071 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058497439 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060646913 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07190296 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074168782 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062904216 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067725214 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.0618147 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068913902 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059350244 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067708038 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.083536496 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067576144 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059267984 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059313486 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073229766 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074074099 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063710158 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068351446 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070657007 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061341592 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080593751 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067896162 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060834106 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.070017379 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062424615 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.058774043 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058508916 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.06156523 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070687483 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059345818 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062234899 seconds)
  done (took 40.883204117 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095697339 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059837865 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058856701 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059263731 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071097079 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060960816 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059379924 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060361223 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060864328 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062597011 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059291544 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059700427 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070554621 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073180782 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070319609 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063932657 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059189599 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060537136 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059131586 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060340963 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069893192 seconds)
  done (took 2.695622483 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065450382 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.073523542 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070939492 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075644847 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067543378 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064297787 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0713832 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064333713 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072344385 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069541383 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07188412 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064287905 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069116701 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069238733 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069168521 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063931731 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071682583 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067523947 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064049065 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071188488 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064155225 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070865021 seconds)
  done (took 2.830408852 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059625406 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058662919 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067789689 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.059853403 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059106926 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062539267 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.0586394 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.062950958 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.062660673 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.063026942 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067554999 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059874701 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058484837 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.064318535 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.058754351 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059389278 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.100812712 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059819084 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059786526 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058540554 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064145802 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067608879 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059360661 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059151358 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063150107 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062299726 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058827593 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061658263 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.05982831 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063202473 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06009048 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058984733 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067399591 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067186359 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063228813 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063304419 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060732801 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059745869 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058945162 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058757266 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067129516 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060964259 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059071094 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060491234 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067423503 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059062892 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058784532 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067311476 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058800196 seconds)
  done (took 4.381722818 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.069245202 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107659225 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063663584 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088490208 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.071337984 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.064411088 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.063117239 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08908023 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059033487 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060136955 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.072132263 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07350314 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062666312 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063934107 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066235782 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062426991 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063224055 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061492034 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065647282 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062136112 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065933198 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066054098 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072740823 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073223758 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06435174 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061164103 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062290543 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063923988 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073297929 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066010137 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064132075 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064357436 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073337074 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065398944 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062274519 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061818874 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.073918391 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063106189 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062331103 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060261121 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061875958 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063771456 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066119895 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074480252 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062706792 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067233399 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062472041 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060283114 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073309341 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062090674 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.066744397 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.073776713 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063565059 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062764328 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063887359 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073363032 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062440781 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06141281 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.062650795 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.072681937 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06055165 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063321789 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074171564 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062066409 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066271474 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074495603 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067138028 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063779744 seconds)
  done (took 6.021692902 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0687478 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.089980941 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071069604 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071305738 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070615423 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070680229 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070663131 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070148129 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070149368 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070755496 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070098406 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108163107 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066164617 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075075429 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070276828 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070029872 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07022715 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070091335 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070148961 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069941673 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070523051 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071272924 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070286511 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070719571 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07264358 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066105628 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069789643 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069871356 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070878177 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070159662 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072944226 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069972962 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070032671 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071116364 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.072801134 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070043432 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060152189 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070276375 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070220885 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070638218 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066230588 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070678565 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070161397 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065987646 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069825644 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069938627 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070763143 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073284401 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077781089 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071265122 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070391728 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070631601 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070430281 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070473372 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071121389 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078081134 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071316572 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071171709 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070321478 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070885627 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071036341 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078213363 seconds)
  done (took 5.795716386 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073476211 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06722517 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079911849 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061622486 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059064796 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069467891 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059277044 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.059252609 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066896336 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067648958 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069239726 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068840065 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071291121 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068860973 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068854 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071342547 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0686045 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068940779 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066777337 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068942476 seconds)
  done (took 2.709538796 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070699604 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077201937 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064920294 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06939512 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064952092 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068951505 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.064185048 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064989033 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065536494 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06507615 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070503981 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070252476 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065379341 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069373882 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070605866 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068942148 seconds)
  done (took 2.432572854 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064507791 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066673685 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.067612649 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060993185 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064374162 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059981289 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060489506 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058950051 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059994796 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073439394 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060593315 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07200063 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060179014 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059384075 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06057859 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065706968 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059296976 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06051598 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060382645 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.06541506 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066895442 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06103839 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064127783 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060182357 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065668752 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067133708 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061993774 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063845514 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060522552 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060705654 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066095184 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066972963 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060073351 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061170385 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059174281 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060074083 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060202778 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060837742 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06593031 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060419668 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058969893 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064962926 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060412723 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061716791 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059597628 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.061183201 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059321344 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066008399 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060698472 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065573035 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060518874 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062284891 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060991853 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067707337 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063240148 seconds)
  done (took 4.79095418 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073062135 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063417271 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058673565 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059147654 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063884102 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065180047 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0649198 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064221777 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065006089 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059153549 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064947904 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06398141 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065056465 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064761079 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064869861 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064339488 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058894678 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064201483 seconds)
  done (took 2.503605991 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069176872 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06380729 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.06912499 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064375951 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064593106 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063675227 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059605906 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059259669 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059488374 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063910021 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06384517 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063298029 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059592196 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063391118 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063987983 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063619063 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063328349 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059411887 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063912827 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061142802 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063979589 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059385829 seconds)
  done (took 2.735497762 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.085303673 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083200069 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.122409744 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077719256 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085759867 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.069802684 seconds)
  done (took 1.871945025 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08781451 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10231188 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064212252 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064197033 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073999709 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067517513 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067415036 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067807322 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073872494 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072016764 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067847944 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073701114 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074231226 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069402332 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074180111 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076781362 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067757888 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069482733 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064027622 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076901702 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067468456 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073771715 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0676246 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067385352 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067710027 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069771519 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076926007 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072218047 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069332622 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073971886 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0763937 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06755901 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074086676 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072264533 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064810291 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073901925 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067892802 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077331126 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073992132 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069836668 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064028054 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074298379 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074240638 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069584321 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077095207 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068507386 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070001199 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067948109 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068522817 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079650761 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07456186 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069920114 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074440091 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077342641 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07718321 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078555111 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071789809 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069492987 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074450769 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072768922 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070056684 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074776065 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070208774 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072798185 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077298647 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070007249 seconds)
  done (took 6.12068085 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094944793 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063753071 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066834495 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072105123 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069805702 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068049189 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068039468 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0719333 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06814038 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064888993 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102515321 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067851351 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069709796 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069608556 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067992488 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067953883 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068155682 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069862022 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064815877 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07887813 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065992901 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068712475 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069409602 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069651391 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072113394 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077026172 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067849529 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067937286 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067813777 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06809889 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069614664 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067691301 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069715707 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064933098 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070264411 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06785971 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068152644 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069731508 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067705841 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074108762 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070212116 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076769927 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06806106 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067983297 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072209317 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067568002 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067591874 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064919799 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067642583 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064696456 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072328317 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072463759 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072551782 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070339856 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068473563 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068351424 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068366194 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068161329 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068127783 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077000524 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069841309 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067852842 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079462252 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067896502 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067701113 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069817388 seconds)
  done (took 6.00888105 seconds)
done (took 124.19498423 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206713064 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181542097 seconds)
  done (took 1.720704738 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071237382 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09358088 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073687311 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133282384 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068828954 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10215968 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101220882 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.072221774 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068230262 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067741018 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068594679 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072567621 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135246494 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067904232 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068024515 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070702791 seconds)
  done (took 2.686805295 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102126441 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.178904392 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110331699 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067445521 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104384609 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074855406 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067618228 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078495901 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071231938 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071647232 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074929542 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07332477 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07134594 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073408707 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071810309 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074638638 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070946713 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07463353 seconds)
  done (took 2.871427599 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.090870305 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.083238108 seconds)
  done (took 1.540609074 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.150117815 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.101224084 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.140881157 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.313124789 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.129392068 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.12483257 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127979444 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.123575497 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.107398485 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120147024 seconds)
  done (took 2.797685381 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098698415 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171184383 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304472826 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11786826 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074208231 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100101207 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120761203 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080228113 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079120172 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07857568 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080548382 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075288177 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096306076 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077049869 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074595681 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074839064 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.099681792 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073966401 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07310059 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074177754 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099440317 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068728484 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074542764 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074112958 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076801767 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076246904 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06942703 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068508353 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074149222 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073273777 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076921525 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095633475 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074229344 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.096984902 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070582291 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.097605436 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.071384961 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070452543 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.071509972 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070061995 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.073397555 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.073463922 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075562251 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.072977952 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06824075 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.071057848 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067926526 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066647652 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.075132952 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068048917 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.075305589 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.074500286 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.097018254 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067350302 seconds)
  done (took 5.98655326 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104373508 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101788751 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067155137 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109080568 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100950052 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066599385 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100226186 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095046767 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104412539 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06667541 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065568102 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066211733 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073673322 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.075822404 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111109863 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103356845 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068093189 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066204694 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103311034 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10292817 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065389902 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09592186 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095017388 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101928232 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.065251794 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06662669 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064707703 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065533275 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071689517 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.071973303 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065362301 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07321957 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.07764481 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072338645 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064999778 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064874707 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064978321 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.072643246 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073775042 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073131276 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.072117985 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064352209 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064994253 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066218501 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066212522 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064445421 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071877918 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.072832471 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.072074209 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065057159 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065525949 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064886658 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065142343 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07276907 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.071423834 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.073002555 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073020308 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065111923 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064894718 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066707809 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073682597 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.073712606 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072871264 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06625426 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073572258 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065155629 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074315192 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077293099 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06481656 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065879625 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06575016 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065420647 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065575844 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072385795 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.071869312 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065686262 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065241003 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064797178 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074302824 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073969226 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067076511 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073472611 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066376064 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066836378 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06705398 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067110611 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.073701764 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.075199741 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068134246 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06634325 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066718814 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066527193 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06576782 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073203728 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074947392 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074777772 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073892714 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067540614 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073704285 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072972181 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066550124 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07280546 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065831917 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065971427 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066431449 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073023765 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07212602 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.073813465 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064858482 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064965756 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.070323997 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.072567099 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.196843196 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07362288 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075194451 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.073065343 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065399453 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078034883 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065505694 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.074606218 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06596505 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074449032 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066219784 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073240819 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066079858 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064960832 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065435544 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.072416165 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066454331 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06681825 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06779009 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067736631 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074616625 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078446015 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06771112 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074829964 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07526401 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066808414 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074911554 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067622972 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075338161 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067201554 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067924993 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066107699 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077243871 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067255971 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067092988 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06728057 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076605847 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065423346 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074444125 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.071992436 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065239383 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075353049 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07452119 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.071703039 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.074586029 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066357386 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065590953 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065330306 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065640666 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071268125 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072823695 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0673524 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067127411 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.072215399 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.074639327 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06515164 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.071994633 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071641072 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.072164113 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065218144 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065118253 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.075159165 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074297815 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.072089084 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.072273496 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072748267 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065374121 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071900408 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072209865 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06509643 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077449005 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06543319 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.076485433 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072530803 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.071380049 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072716535 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.074081093 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.074203159 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.074594264 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.076623441 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065756642 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065767668 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.072490009 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066609711 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067781609 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074123125 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067818334 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067719517 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080254068 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06597009 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.074184024 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065351387 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07279151 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064792193 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065467952 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076062655 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065283297 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065722011 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073124795 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066979915 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073183182 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076275785 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.071237239 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064405218 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064733958 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071182209 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.071388298 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064221989 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063812184 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065669913 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071553283 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071530939 seconds)
  done (took 17.601205089 seconds)
done (took 36.578433043 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.200297728 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153987226 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.187843342 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.10981734 seconds)
  done (took 2.118504962 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.091441385 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.094035336 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.074266358 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062102331 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.078884631 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.061919822 seconds)
  done (took 1.871861506 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.265137823 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.185286233 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168299093 seconds)
  done (took 2.022411467 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210320686 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193864742 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464624068 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284896822 seconds)
  done (took 2.656895664 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.126511761 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.077324046 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.060284795 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.071008704 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.104710751 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.134136654 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.084886996 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.10902748 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073445369 seconds)
  done (took 2.302533577 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.128989096 seconds)
done (took 12.539296207 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.219475804 seconds)
    (2/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.271851197 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09605538 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.067021849 seconds)
    (5/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.11082562 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.145381095 seconds)
    (7/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074381993 seconds)
    (8/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.07316066 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.145135276 seconds)
    (10/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072601798 seconds)
    (11/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115198902 seconds)
    (12/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074768143 seconds)
    (13/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.231464397 seconds)
    (14/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072314773 seconds)
    (15/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.197289287 seconds)
    (16/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075268945 seconds)
    (17/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.194931216 seconds)
    (18/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072940127 seconds)
    (19/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071886372 seconds)
    (20/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096354617 seconds)
    (21/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.212801274 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.219895911 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112454813 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092476802 seconds)
    (25/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.179871775 seconds)
    (26/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.074343243 seconds)
    (27/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.175650142 seconds)
    (28/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076086365 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074852579 seconds)
    (30/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.074652015 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075385755 seconds)
    (32/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079131174 seconds)
    (33/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071045552 seconds)
    (34/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073446197 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093111417 seconds)
    (36/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.148708302 seconds)
    (37/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.171275058 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074859095 seconds)
    (39/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.062805132 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086846973 seconds)
    (41/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091988437 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071781891 seconds)
    (43/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.181769991 seconds)
    (44/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.152499283 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087330218 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062210512 seconds)
    (47/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068461243 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072194913 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086757708 seconds)
    (50/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.062448305 seconds)
    (51/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.084159299 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 0.146601555 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064965337 seconds)
    (54/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072014727 seconds)
    (55/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.194019572 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.065286341 seconds)
    (57/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.196196802 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075163851 seconds)
    (59/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.170793535 seconds)
    (60/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.141551994 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.192579748 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063665443 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07275096 seconds)
    (64/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075711879 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090702439 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091053493 seconds)
    (67/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.130624085 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089800339 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062395315 seconds)
    (70/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06494199 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129100404 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090853108 seconds)
    (73/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072140956 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.191898287 seconds)
    (75/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064683644 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124605129 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06138064 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110684631 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.072139837 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139746684 seconds)
    (81/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066039709 seconds)
    (82/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.0682278 seconds)
    (83/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.220875899 seconds)
    (84/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.061242119 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.357622423 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.223697203 seconds)
    (87/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.185131225 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.194040905 seconds)
    (89/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072957539 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113609665 seconds)
    (91/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.061256532 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.062190827 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.138162561 seconds)
    (94/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.063497288 seconds)
    (95/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.071078667 seconds)
    (96/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064167262 seconds)
    (97/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.064392905 seconds)
    (98/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.145960197 seconds)
    (99/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159817594 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077270416 seconds)
    (101/309) benchmarking ("sort", Float64, false)...
    done (took 0.132608626 seconds)
    (102/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.14023866 seconds)
    (103/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065558867 seconds)
    (104/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.15322899 seconds)
    (105/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.15745984 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069092692 seconds)
    (107/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06185688 seconds)
    (108/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.070909149 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.147576951 seconds)
    (110/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065213027 seconds)
    (111/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.147732335 seconds)
    (112/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.063141722 seconds)
    (113/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.165134983 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085406525 seconds)
    (115/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.139841419 seconds)
    (116/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068618747 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084052422 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120548764 seconds)
    (119/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075414713 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.076818868 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167908207 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076293719 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072048751 seconds)
    (124/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075558753 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.064451597 seconds)
    (126/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.063641642 seconds)
    (127/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.064617446 seconds)
    (128/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.063186278 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08618318 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071585905 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123857797 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.18395762 seconds)
    (133/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065568145 seconds)
    (134/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072346298 seconds)
    (135/309) benchmarking ("sort", BigInt, false)...
    done (took 0.245007451 seconds)
    (136/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.196058872 seconds)
    (137/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177399309 seconds)
    (138/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065969228 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07587303 seconds)
    (140/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.072266533 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075523218 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071385709 seconds)
    (143/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.154745729 seconds)
    (144/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.063293749 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089671474 seconds)
    (146/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.186566165 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086817944 seconds)
    (148/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.0681778 seconds)
    (149/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.075797505 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.061367597 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070748088 seconds)
    (152/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.064054515 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.064941677 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119978062 seconds)
    (155/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.064325618 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.14946471 seconds)
    (157/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.062400853 seconds)
    (158/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.156396767 seconds)
    (159/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.064510543 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149365487 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087974751 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.063845248 seconds)
    (163/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.183400741 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082562097 seconds)
    (165/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.063950957 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.12147054 seconds)
    (167/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090986279 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177895792 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.091170379 seconds)
    (170/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065137095 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146367484 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.063516755 seconds)
    (173/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08806619 seconds)
    (174/309) benchmarking ("sort", Float32, false)...
    done (took 0.131071556 seconds)
    (175/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.064596873 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063536319 seconds)
    (177/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066133703 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.217343899 seconds)
    (179/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.083687993 seconds)
    (180/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.070899436 seconds)
    (181/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122559068 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.062991587 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084606935 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148238049 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088312968 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.062744833 seconds)
    (187/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.063347462 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.063463075 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.246734296 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078411959 seconds)
    (191/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.064651019 seconds)
    (192/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.143364018 seconds)
    (193/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.064264942 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065371732 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065086191 seconds)
    (196/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.093173132 seconds)
    (197/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.064763114 seconds)
    (198/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.064446386 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072452418 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064900427 seconds)
    (201/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065866704 seconds)
    (202/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.065589775 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.133341956 seconds)
    (204/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.142084908 seconds)
    (205/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073078136 seconds)
    (206/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.072449456 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071226854 seconds)
    (208/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075274802 seconds)
    (209/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.147670975 seconds)
    (210/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06675847 seconds)
    (211/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.076723868 seconds)
    (212/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06615256 seconds)
    (213/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071779213 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.063569538 seconds)
    (215/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.063399079 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076071544 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076265021 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120161317 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.144184594 seconds)
    (220/309) benchmarking ("sort", Int8, false)...
    done (took 0.16650424 seconds)
    (221/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072718145 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064108778 seconds)
    (223/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071538916 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08562974 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130316814 seconds)
    (226/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071581957 seconds)
    (227/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.064070674 seconds)
    (228/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074029601 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177976872 seconds)
    (230/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.063409554 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06524486 seconds)
    (232/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064036552 seconds)
    (233/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.065549777 seconds)
    (234/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.065552268 seconds)
    (235/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066165558 seconds)
    (236/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065791797 seconds)
    (237/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06486937 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06400871 seconds)
    (239/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066558767 seconds)
    (240/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.063218775 seconds)
    (241/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.063576792 seconds)
    (242/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.215463162 seconds)
    (243/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.063842922 seconds)
    (244/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.064772472 seconds)
    (245/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070939037 seconds)
    (246/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064781395 seconds)
    (247/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066143564 seconds)
    (248/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.079353048 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177428916 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.085662683 seconds)
    (251/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.169998541 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06300811 seconds)
    (253/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.205690995 seconds)
    (254/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.063460084 seconds)
    (255/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.064684402 seconds)
    (256/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.064263635 seconds)
    (257/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.07134745 seconds)
    (258/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.072044195 seconds)
    (259/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.144904277 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064741491 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06343253 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070015564 seconds)
    (263/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064878678 seconds)
    (264/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.065071849 seconds)
    (265/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066650568 seconds)
    (266/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.063066391 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162803529 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064541356 seconds)
    (269/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.062958476 seconds)
    (270/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.066592483 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062645962 seconds)
    (272/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.062155911 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.062152064 seconds)
    (274/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.061431313 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.064589401 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071687183 seconds)
    (277/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.065072056 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.087635825 seconds)
    (279/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.063835086 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064793016 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14565716 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.142759184 seconds)
    (283/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073097822 seconds)
    (284/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06326962 seconds)
    (285/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.063525126 seconds)
    (286/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.062985008 seconds)
    (287/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.064679739 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064267894 seconds)
    (289/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.158943017 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075484225 seconds)
    (291/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.064559914 seconds)
    (292/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.061314064 seconds)
    (293/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.061378376 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142156071 seconds)
    (295/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.062858775 seconds)
    (296/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.064928923 seconds)
    (297/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062496582 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069616175 seconds)
    (299/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.074265334 seconds)
    (300/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071330989 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063622537 seconds)
    (302/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066259949 seconds)
    (303/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064642159 seconds)
    (304/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.063150316 seconds)
    (305/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.061819441 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063376146 seconds)
    (307/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.077044926 seconds)
    (308/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.063380208 seconds)
    (309/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.062039383 seconds)
  done (took 32.419953434 seconds)
done (took 33.840826158 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083590918 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086924034 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.070709182 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.082120127 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.078095082 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096629333 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070106266 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.075018483 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.0770955 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.07531274 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.075009924 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.06873582 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.071570374 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071518533 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.069708198 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08478037 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077193362 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071184423 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071122745 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.061632969 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.070498488 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062703829 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.061845954 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068702439 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.073526449 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.06901338 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07159301 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.071487671 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062689719 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063183839 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067444301 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071653742 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064475582 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.074306809 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070470238 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.070999235 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072511413 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075422207 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.061894084 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062377567 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072910652 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062806071 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070501149 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.068627008 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067264219 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069261735 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.070567232 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.073833641 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085865561 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068812161 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075082279 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074888348 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075521936 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069555622 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069279071 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071270193 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068539023 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08470692 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070996437 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066811332 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072567185 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071411953 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.068712971 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.070645205 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.070638064 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073494618 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074322838 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069277821 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073260867 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069688914 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062222277 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.070416646 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06711056 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062608722 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073353194 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075921955 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061055011 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.066876545 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070333217 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070708247 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.061767599 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067385292 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.061333602 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067066927 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066409106 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068267644 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067593218 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070197162 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061441982 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07263719 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.069900036 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071222006 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.061491274 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074769626 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06204326 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068499197 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062410259 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062580827 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.061879479 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067821427 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062025783 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066609788 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.070247655 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061204768 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.06674761 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.075440852 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062259661 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.069947039 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.061686285 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061819939 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.072763177 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073270853 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062801238 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066672625 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061358722 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.067467172 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061615524 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062093335 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062271608 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062642855 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067598203 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062154449 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066712866 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.067928061 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.074649244 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.061871048 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066787316 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065918419 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062200765 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068759357 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.062173684 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061517973 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.060611949 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.074829919 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065910019 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061909915 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.066672714 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065339316 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.069442286 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.060024366 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.069862393 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067293984 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.065161332 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.06738258 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.200797322 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074977329 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068049707 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067428754 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06197732 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06271294 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061688922 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062809449 seconds)
done (took 12.166133615 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063593227 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.089884724 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.070519114 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.078640395 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.075163789 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063803236 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.066400733 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.079332189 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.065453181 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.081799961 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084917795 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.082807563 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.088394047 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.0615051 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062763151 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.063469247 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.061637184 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.069907535 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.077217258 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084589535 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.091659196 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.062750367 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.070866985 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.078137617 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.07314262 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.078927818 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.063572787 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063443246 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065326938 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.079397583 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086832884 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.062932021 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064359814 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.077054244 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.077040595 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.069388168 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063829987 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.066663058 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063503771 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063494352 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065985218 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.07837879 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.069098394 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.067005371 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.063964864 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064063123 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063023785 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.06637871 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.075590715 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.065775269 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.070429525 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.073927458 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.064511858 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062989463 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061688832 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.066704798 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06263528 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.063612118 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063213827 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.062784627 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063228993 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065537599 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.063885983 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.063831944 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066320319 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.065308227 seconds)
  done (took 6.092400145 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.080539035 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091311308 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.079390887 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079955196 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062673077 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063562596 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063450102 seconds)
  done (took 2.041374627 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063750884 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.076138559 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079110694 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079204164 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.071617419 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.080648277 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063593684 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092908156 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062687279 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.074679358 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.107785519 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080203219 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066482 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074691669 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063587237 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.072460447 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065402187 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073090676 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073351764 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081390821 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069148043 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093082109 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078740242 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065481816 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.08564667 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069761908 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063861074 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065662591 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066758351 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06621495 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066508319 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104630192 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.069487661 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077182172 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066863739 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064280762 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.071443128 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068834934 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067859803 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074173493 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.070744754 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.064943072 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.061925756 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065597477 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.06594336 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.066982786 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062302216 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06474577 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064350526 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.074996067 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062837052 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068988694 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068344477 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070413276 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071699791 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068314392 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071218139 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064953662 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074871663 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.071073329 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064489669 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.102578815 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.071083877 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.06808017 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.070676701 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.067432609 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.066923632 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.068455227 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064384912 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065154384 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065318609 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.073520032 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.064480603 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.065609805 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066313723 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065272166 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.067465895 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.079324533 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.07967166 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075996786 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065175596 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.064434296 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067237607 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.079342172 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067866959 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064151825 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066931161 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06251247 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.067506529 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064662629 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069516154 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065081047 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071475966 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.065469217 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067201693 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071211799 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063330955 seconds)
  done (took 8.377932681 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065833273 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.064945499 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.065525173 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.064617015 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065119291 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.0644953 seconds)
  done (took 1.943017084 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.087100249 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.064408004 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078391163 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.064055724 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.098594847 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.070521758 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.070342668 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071927999 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.076901729 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07690782 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.070339597 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.073202665 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.070160544 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.065572993 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.069955762 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.064821849 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.070456305 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066598446 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.075715593 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065800442 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.076283474 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.065613662 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065574026 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.075273155 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.066399904 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.064180405 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064531247 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075674636 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077341757 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.071971985 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.065292483 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.06630512 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071368653 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.071768318 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.070537711 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071612728 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.063468482 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.069404826 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065755592 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.06620281 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.072561636 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065484363 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.065990162 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.068837134 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.071837244 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071337614 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.069115533 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.067300675 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.06981319 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.068651934 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.068818655 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.064527247 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.066179647 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.068933614 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071381864 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071594587 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068786799 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.069747038 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.065606615 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07179932 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.063809543 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.066470473 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071623465 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065876941 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.06765477 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.069061109 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071350332 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.065405413 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065978934 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.064058805 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.069175068 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06344906 seconds)
  done (took 6.537693067 seconds)
done (took 26.502708097 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.564097208 seconds)
  done (took 2.060661949 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.557472476 seconds)
  done (took 2.095625899 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.666227452 seconds)
  done (took 8.201299491 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.288098943 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.31719901 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.708894029 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128889287 seconds)
  done (took 3.011400731 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.719184191 seconds)
  done (took 2.269103955 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.228923055 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.218569461 seconds)
  done (took 2.005653242 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.342925417 seconds)
  done (took 1.881128683 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.116953993 seconds)
  done (took 2.654926028 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.218946611 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155468688 seconds)
  done (took 1.922736654 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.477761481 seconds)
  done (took 2.015413051 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.109608173 seconds)
  done (took 5.652199531 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.227471116 seconds)
  done (took 1.807032239 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.231264177 seconds)
  done (took 1.779005534 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.747889032 seconds)
  done (took 3.285176023 seconds)
done (took 42.186886174 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081147738 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082291471 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082309296 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077828726 seconds)
  done (took 1.837152979 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.071493905 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.066271962 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.070067437 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.070156798 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.068172319 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069560543 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.069310341 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.066006941 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.068158029 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.066040333 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.064839471 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.066034792 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.068839521 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.066431309 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.068668241 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.069897638 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.066149276 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.066134945 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.069122662 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.06608672 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.068930198 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.066441518 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.064817253 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066773067 seconds)
  done (took 3.164321579 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076143269 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069225188 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071746837 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.067538131 seconds)
  done (took 1.833558271 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.071937814 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.081247344 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.082557443 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.088594083 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073586764 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.072819087 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.079459157 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.080803154 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06294406 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.083076989 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.064889742 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.063617696 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.06361002 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.083209673 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.079296164 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.059835422 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.060964546 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.072340898 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.071553022 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.074439854 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.064944752 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.062535945 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073767034 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.071763194 seconds)
  done (took 3.293015177 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078791185 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.062583055 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07549303 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088696041 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090761506 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06239686 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07567479 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09005325 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123434599 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062477792 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068377761 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062597703 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103045535 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06247795 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077331323 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103420659 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10715052 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06602053 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094462555 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063664098 seconds)
  done (took 3.1784856 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074464759 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066225955 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066893567 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.063049433 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074020614 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.069645225 seconds)
  done (took 1.973941908 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066151129 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065178456 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064154234 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063952267 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068225495 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.063847445 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063178628 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064780556 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064716866 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064228257 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064010421 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.063051743 seconds)
  done (took 2.32692545 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.165089792 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065785783 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067785369 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065162112 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.068072326 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063620795 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.077755417 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.065517875 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.080512109 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063838131 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063693633 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06578807 seconds)
  done (took 2.462600553 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093719342 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.092429763 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.127040811 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108351736 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088936738 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.090964252 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.142500141 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.129961319 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109761748 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068564142 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081154712 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100843155 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096463494 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133506504 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105953403 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.06936254 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.096171287 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078517107 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10048454 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107619519 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105118136 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107634382 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085177745 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097177068 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100353961 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108826678 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.067905728 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067436856 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.131049612 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.094007923 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.085435086 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.088848085 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105365629 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.065580805 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.082356502 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.095854625 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081229583 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098457132 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.084126299 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091934532 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073960998 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.120688009 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097009198 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103115145 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116404357 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089895739 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101437464 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.096090684 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079742341 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.111576879 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092426109 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087999984 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072745926 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.149070019 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087722121 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.100955552 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10699395 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.0779667 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084508776 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.089199559 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.117260818 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.093420578 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.250998723 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10101319 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.087249921 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091494397 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.132982747 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084805016 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102592454 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126838357 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.089657372 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075004589 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.090808142 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068749113 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.097836844 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100303466 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093866326 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108659148 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076067483 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117095556 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.103606209 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069233388 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.107870134 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089084146 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150477876 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094968019 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097970483 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08904883 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.142268987 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082191478 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076690207 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090901782 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128916496 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087328577 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093941906 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122256049 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087089739 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079486535 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072503448 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.082263897 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090958482 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106048713 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094402473 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085742514 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079633072 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086352559 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07252203 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077877234 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.093968864 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085433524 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114576259 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100166675 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110517338 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.074976093 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104779596 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.089706239 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129455 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.114265291 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.08192973 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106480969 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131801436 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.10421572 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080991557 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097108316 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109193732 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100365198 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.084829989 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129549955 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.260774291 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084932726 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.088241197 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090552811 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.102921235 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14870167 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088241773 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.103955595 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.133223375 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.1026559 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090649856 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080196757 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.08804213 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104559043 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.135511293 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.088463641 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.067185197 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092265971 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124840915 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073778511 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092824536 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.086415009 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.081464955 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078045869 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.065605437 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098657193 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.130745836 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.111445927 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097542984 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.091772373 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.066145396 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096813649 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094077423 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145254013 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113439374 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095663463 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.089000594 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09748795 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077293002 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.128535155 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.127479528 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089916092 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089520711 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123026707 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.087408354 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.099116152 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106064763 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104060273 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.095473134 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.136829912 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120003904 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.113983758 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102605978 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122408712 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078097569 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104165902 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.070683533 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100118312 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.073421209 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098356064 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.230180104 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.110319322 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078250188 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.098925307 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.067211617 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073535 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.102019062 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087178641 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083721158 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.129233225 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.120703893 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.078698108 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.091507665 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098174801 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095875295 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.104343979 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.084761688 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089970888 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075203657 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.078374734 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089029746 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093597085 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101127314 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.075141128 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072303033 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138019596 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100860382 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089202602 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088216919 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.11372474 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081519664 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079699672 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103273409 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.133757635 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.115021581 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078045382 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089027663 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.066400795 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080973552 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.072551396 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107244869 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.071366023 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110159092 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.065811913 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.127575071 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085680423 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099108718 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090359011 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121424994 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082939174 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121376027 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085336276 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106674673 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092637856 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.087485484 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.10415766 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.089311812 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096602245 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102201235 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084262618 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087282105 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120609012 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105225576 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11387191 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10623775 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.132849472 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105015977 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070932726 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099743459 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.087410418 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.301814592 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098944115 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083563891 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.087271937 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103312517 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081247232 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138566486 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084321072 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.078967242 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111874664 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.088737594 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086768171 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07407331 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.099745173 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084171313 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107808046 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.094223925 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.090641089 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103674415 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105326852 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083613324 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083797901 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121646023 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.125322034 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.098926132 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084566419 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08611566 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097451023 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091542772 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.107381799 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078860903 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.073048756 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.065120934 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.069454337 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.115574196 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10275033 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092329763 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091714949 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100175539 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069049959 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086483394 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088837092 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.080519945 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086928233 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.110960647 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101629032 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.126796123 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.098768008 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090349752 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.135924289 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.127142345 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088062031 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091673491 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094297063 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073947364 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146789553 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113129766 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.075567111 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079229541 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.074627688 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083620594 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.068284257 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103347702 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103586097 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074338844 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097221811 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091571301 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.114097261 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088314724 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073162195 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.076279886 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.22268074 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.073124976 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.097277495 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.075306908 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076074112 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.123990511 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101397175 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104018349 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078679395 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072473811 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130532202 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.066597219 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.131022823 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081166903 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106349446 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.07779666 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076962293 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088630287 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101861822 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105186719 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111625009 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068856715 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10133124 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148744989 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073809038 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072680611 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.071702316 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109436685 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085124252 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143969006 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087920835 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086455146 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074390007 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122057219 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101559728 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080266581 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122048741 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077152218 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.06862479 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07997811 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.105627409 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.068852068 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07217747 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110071916 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.621318867 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088391663 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.074268882 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081935812 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120786084 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079649923 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107011569 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.115667457 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104842105 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.177116906 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070732506 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089735764 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.10299048 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096137988 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089080663 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077534433 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.085505428 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088544444 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.077706759 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104736655 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.07850278 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084854937 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.077444594 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.101798233 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.12665529 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082717248 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.24673592 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088837765 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085879982 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097665677 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106310652 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.100705066 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.083438964 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086298614 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.104230783 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081202974 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077161749 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097948382 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.074319734 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075412097 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110944706 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.08233584 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.089630084 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102020693 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.082600603 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108802201 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116999812 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112453891 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.095566097 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076281077 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083404806 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.085713612 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071353798 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077245916 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072607693 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.067592983 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105414611 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084707061 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079184674 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.098116625 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.103792086 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097664989 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105691698 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087925028 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093924026 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099328806 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.12517249 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150059208 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09718869 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.117231307 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131124292 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075038624 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.073836271 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.077359411 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130334628 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.077335101 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089141394 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.228887148 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075579765 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.078498971 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09044634 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106212617 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079182373 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078979124 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096492297 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109960206 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081973446 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079684732 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091399584 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.102640628 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.128170884 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085647897 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.072420186 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10659826 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098514365 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119689561 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.069640507 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07812916 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.278918595 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085941534 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100739935 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077523399 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118813757 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130954138 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073132313 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08834633 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068218999 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08574089 seconds)
  done (took 49.363033121 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.152640229 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.14593977 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.079562127 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.094447421 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.190109447 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.205765654 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.115941194 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.09134556 seconds)
  done (took 2.751131819 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.065786014 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.078956906 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.09927195 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.080778351 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.063793848 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.064901207 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.19360144 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079330966 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063708456 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.103461412 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.072263847 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065300394 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.351084037 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065192831 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065996841 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074413863 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066278111 seconds)
  done (took 3.311517884 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.353310669 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611360539 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.321705649 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071497997 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.93383853 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088585441 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.127885007 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136608628 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.078133396 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532185822 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.365879783 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129662702 seconds)
  done (took 18.425886792 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074186683 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072824356 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.075070319 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.074539801 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071282018 seconds)
  done (took 2.03466503 seconds)
done (took 97.517544779 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080237985 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.164219558 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065206089 seconds)
  done (took 1.932175734 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.080026345 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.077734136 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.077697217 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.075605995 seconds)
  done (took 1.984427398 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071384641 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.0728328 seconds)
  done (took 1.810883728 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.238050399 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159773312 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087838889 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081442661 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078840571 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078870676 seconds)
  done (took 1.910708053 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07146195 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07089795 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070683622 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07017712 seconds)
  done (took 1.943133125 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067255735 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.064521369 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065594834 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06821129 seconds)
  done (took 1.926058772 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.082645922 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081701975 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.073996197 seconds)
  done (took 1.902753216 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111963663 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09540968 seconds)
  done (took 1.870465711 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.07873172 seconds)
  done (took 1.745724192 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088403056 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094333044 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.144889757 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.106913838 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14271811 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.12688367 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.074449161 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.075699986 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.070365134 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.06950333 seconds)
  done (took 2.658021612 seconds)
done (took 21.918611811 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07537477 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363874189 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.356377682 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082778011 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.685516521 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35302888 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.964534248 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087210757 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.094673035 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065279633 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081059536 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.645599811 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.957364034 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321930057 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.943174744 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318614028 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647665904 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065637825 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064463017 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065364455 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.950837879 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06433508 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064690565 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064926263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.645636232 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369929578 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06647563 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325354294 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065271411 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068126595 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353085378 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066533724 seconds)
  done (took 15.988703761 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069898029 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11865018 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070144352 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080166844 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.067452737 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066252942 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068195493 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.065508318 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.104360864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065395393 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081509103 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065051699 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.069123907 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066700057 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085435097 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065844695 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067249226 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066446212 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067704825 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066481027 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083075396 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065201105 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065976252 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066518153 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066070662 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078721995 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066800382 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065548738 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065969342 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068303862 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069241391 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067258544 seconds)
  done (took 3.986666268 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122586553 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124789823 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070665559 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104731889 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115334292 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067105045 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147061321 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087734647 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109647747 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065724053 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081876636 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065177337 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100031175 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067034394 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085484602 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066068398 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067204731 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066548091 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065740271 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06701166 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083599653 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065688505 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066176574 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066574568 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06641668 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080216596 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067573695 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065903733 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065728814 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068429734 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069973077 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067109419 seconds)
  done (took 4.262984161 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068113468 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.069311371 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.076577967 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.077230284 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.064204362 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.065729253 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.067248939 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.063819482 seconds)
  done (took 2.237638885 seconds)
done (took 28.157859124 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076987278 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065318596 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.068304349 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084150798 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070251924 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.067984313 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06205447 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071234211 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.06798805 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.068003474 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.070130656 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.063668649 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.06708621 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062066063 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.069089612 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063358273 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.070357091 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068216963 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.068245717 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.069342123 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.065728366 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.06955814 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071539072 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.068426178 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.068244246 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.06869754 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.072702761 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069605174 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.064042341 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.066776579 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.066041783 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.077751417 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070416223 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.070151994 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.063934976 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06371934 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067580722 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065694278 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.070242989 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.072204859 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.065811527 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.072055492 seconds)
  done (took 4.533392581 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086331514 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089887974 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082777043 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078768163 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100821772 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079357375 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087790542 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.075788088 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074284886 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086901861 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070222452 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.075099299 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076313835 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.068981482 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.075323791 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.071319853 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076949612 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.070257345 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075100276 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.074967239 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087329975 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.069570582 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076087017 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.076472069 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.071049143 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077064846 seconds)
  done (took 3.727309988 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07191721 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085729869 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088858269 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.150673677 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107385757 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078465635 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078132955 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097673486 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096141499 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065256663 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069076872 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.090830481 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094932807 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.071585736 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.103954628 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08226141 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.075593938 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066361474 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07167649 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.0967136 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086585516 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083217892 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097374534 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083228146 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063801291 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073483594 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071062455 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.07910557 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07194101 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075937277 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069258395 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067921429 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.065403857 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.075815202 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069499218 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.062694755 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.08626384 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076996596 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078789585 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105840058 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073683192 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065909892 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092993747 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12832056 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066230774 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.069573813 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.070265363 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078504238 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067294114 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092573838 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081856079 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064078174 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.082067505 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066176816 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065673185 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079449842 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066278037 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06623726 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07612136 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070623548 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083886128 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069127168 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083708851 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064447785 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074842293 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065432875 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066509207 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06330318 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098062602 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071353717 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113458184 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065682301 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063316875 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076443562 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075376962 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070908951 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06456488 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082493868 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075621901 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.06822475 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075983511 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067373739 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.06767843 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098190307 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063687952 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.062686839 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062650296 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.066962797 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067551577 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065603635 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.077550697 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064431756 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068188871 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.078913589 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064716919 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065154227 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.067257617 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.065792042 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06403174 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07610726 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070202516 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067509317 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07793845 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066265326 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069210133 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079571738 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073743634 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064782716 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.06626778 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.067182039 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066167859 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068960076 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067763847 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066467454 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.070650772 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.071589873 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.069903438 seconds)
  done (took 10.577897753 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16504818 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154014921 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066122156 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146436134 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.072596881 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.06938419 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148998752 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.08419343 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.065262095 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06636591 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.064578265 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.092431395 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.087818988 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.098408557 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.06951659 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.065872494 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.090509669 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.098122128 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152489953 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147810574 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090521572 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073036789 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068034034 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06622665 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.066646697 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.073365586 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.082001034 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073679547 seconds)
  done (took 4.332694987 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076226217 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.093243223 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071670915 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.076957065 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.084155246 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.065177463 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067223795 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066375875 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079000844 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.072960586 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.065293154 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.06986985 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.068520949 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.067269977 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065550463 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071221152 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.071163828 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.063880162 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068960289 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.069026166 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074812835 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090506248 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069735217 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064715178 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.067399 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06513875 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.072676575 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.075438784 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064469347 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.078419731 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06221317 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.069966352 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078468853 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065760193 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064713087 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065517549 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065353504 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065076905 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065180489 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06308286 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063058974 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.069829743 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063745646 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.072161545 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078524785 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071789337 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.066450074 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.067148432 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.06714513 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061875586 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067888546 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067857846 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067824708 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.072401033 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069034306 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067189756 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068324156 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.093970164 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07060262 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064568534 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064133585 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.063563836 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.066480343 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074156955 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081139506 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.066363601 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063563046 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064933572 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070262092 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078682694 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064470356 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069367178 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062145228 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.064994208 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.067434241 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067646471 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.066038011 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063543169 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065071878 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06519463 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064981288 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064571285 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.064909482 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067370807 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062869165 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.063743864 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066125633 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.065798863 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07198842 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.063883029 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.067550343 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065618327 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063626039 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067256038 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.070376597 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068115822 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079158871 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.074931984 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.065917024 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.063513383 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.0785106 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.066672605 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.064313028 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.070990957 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.068557622 seconds)
  done (took 8.978954824 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089821943 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069295141 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086298251 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091282105 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.075215412 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.070636908 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077842198 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.065979822 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.080514975 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065047147 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073824659 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.063645911 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078198652 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074441081 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.066519406 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.074949308 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.067903075 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083864564 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078836042 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.063526277 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073620351 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076570187 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.076914957 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.0814806 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080849607 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081696 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.076567499 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068499316 seconds)
  done (took 3.85012631 seconds)
done (took 37.676673808 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.748962984 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.018708848 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.754796103 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.994838682 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.80619502 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.074861772 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.794571511 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.753158156 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.910772156 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.781500744 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.065175453 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.187663397 seconds)
done (took 66.633292807 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.788064655 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.924898689 seconds)
    (2/2) benchmarking "String"...
    done (took 1.981023832 seconds)
  done (took 5.593060339 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.922310092 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.394778471 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.018303298 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.757294548 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.762529294 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.18082775 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.545448747 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.20182448 seconds)
  done (took 30.552308453 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.89005846 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.979435825 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.444060363 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.487712419 seconds)
  done (took 15.537795385 seconds)
done (took 63.175471132 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.761913787 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.752856366 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.769649028 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.780174377 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.749420364 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.754410657 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.754761205 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.756431209 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.802993605 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.869844262 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.752611973 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.752494092 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.756851702 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.7553103 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.33058367 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.801687845 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.77660589 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.756131234 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.762656843 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.766451392 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.761497568 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.753471152 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.211071108 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.906147295 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.363941566 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.987595884 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.220649124 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.136282252 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.762634676 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.916282039 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.840181497 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.049002537 seconds)
  done (took 203.558144131 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.760001539 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.511505309 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.611836547 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.767649237 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.827921108 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.939878473 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.857055326 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.146821558 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.761885455 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.781854817 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.85421483 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.761133221 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.91730918 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.777716608 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.792782512 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.849652362 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.905908069 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.967865041 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.792228119 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.911556589 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.784049015 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.696630387 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.669879857 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.857129525 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.801723024 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.844197185 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.773005198 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.769690914 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.935747897 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.833821507 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.76684449 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.784424234 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.946589152 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.624535559 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.767442055 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.781911417 seconds)
  done (took 167.824139586 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.941729833 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.768462134 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.763847259 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.813285466 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.881295992 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.763391658 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.438757199 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.766646523 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.922641467 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.764913704 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.758766486 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.76091853 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.763048952 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.761003833 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.777974593 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.859288391 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.758137396 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.779447982 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.765558257 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.791367238 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.764416389 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.763352255 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.7636112 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.766570036 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.765834919 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.766050957 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.763753529 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.765363572 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.950908921 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.008469164 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.764279748 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.765598456 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.847721427 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.775238424 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.889078219 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.762017759 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.858405346 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.812227245 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.888895188 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.766317904 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.983748263 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.865372493 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.764282702 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.76592514 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.831682412 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.774678239 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.757972588 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.763492711 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.771233617 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.831089511 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.016259274 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.76533452 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.8875392 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.251779201 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.765900051 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.765223361 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.767666571 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.36827066 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.763066024 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.766778324 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.771236664 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.772211711 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.766413165 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.76178844 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.153798026 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.835426921 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.93120766 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.091634037 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.765204596 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.244439708 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.968412509 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.765495582 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.768836058 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.767215413 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.769284027 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.769026443 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.770122218 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.895007202 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.769453641 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.893408607 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.847794363 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.883262674 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.767190522 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.770926233 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.595525223 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.839949296 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.799866477 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.768668554 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.602909712 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.768404938 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.141606746 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.546699894 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.768059792 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.767372107 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.783076099 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.770368534 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.773602662 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.767774076 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.848822649 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.767361999 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.887189932 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.494256251 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.769248359 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.171882532 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.760615261 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.767326873 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.76985354 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.851558567 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.892076269 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.76394246 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.836003734 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.771559403 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.769785494 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.886638326 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.766507539 seconds)
  done (took 399.773833424 seconds)
done (took 774.848790767 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.347396034 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.315242105 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.402538624 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.333523049 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.308373564 seconds)
  done (took 13.399372635 seconds)
done (took 15.094705585 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.783681432 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.775037584 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.824566358 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.852469789 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.782559363 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.786347576 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.846257465 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.788541212 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.815743781 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.823159884 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.851464619 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.854424419 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.791308728 seconds)
  done (took 25.268820074 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.777650165 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.909106918 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.994489152 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.809146123 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.77606998 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.985349204 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.833682226 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.901740124 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.910966181 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.988433918 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.99578238 seconds)
  done (took 22.580070708 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.777041369 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.915409778 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.985947417 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.814423164 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.779043529 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.990579672 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.842187111 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.905414644 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.909742522 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.059547051 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.003940776 seconds)
  done (took 22.688772257 seconds)
done (took 72.232942237 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.76759637 seconds)
  done (took 3.462195305 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.784381561 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.908092588 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.768129126 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.769913221 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.76918366 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.768426126 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.770525107 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.77096671 seconds)
  done (took 16.005377217 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.766462746 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.766892212 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.767187243 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.767332663 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.767743922 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.765643208 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.767083544 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.767562207 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.768130192 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.767136828 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.769123831 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.767128424 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.767147055 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.766690451 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.766797323 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.767254899 seconds)
  done (took 29.972941649 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.769978827 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.767838338 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.767595073 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.76744262 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.767030085 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.768793772 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.76882935 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.769502434 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.769581387 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.769217615 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.768771458 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.767951022 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.767755109 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.768713931 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.770584381 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.76788147 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.768358396 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.768968863 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.772902333 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.768436603 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.770570006 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.768708801 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.769668972 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.768750066 seconds)
  done (took 44.150955432 seconds)
done (took 95.295768601 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.50908888 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.523835281 seconds)
  done (took 9.731790976 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.767398802 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.769381386 seconds)
  done (took 5.239175577 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.768593429 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.768886977 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.770143392 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.770368799 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.769745733 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.770552449 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.772347762 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.770499382 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.772258918 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.769917328 seconds)
  done (took 19.401649311 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.770118232 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.77008712 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.770001574 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.768844061 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.769655414 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.769729184 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.769765274 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.770497907 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.769661683 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.772224658 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.768814516 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.771105284 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.770701426 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.769742191 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.771726225 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.769389405 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.769588254 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.770025151 seconds)
  done (took 33.561078224 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.770917413 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.770308112 seconds)
  done (took 5.239490318 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.770634748 seconds)
    (2/7) benchmarking "second"...
    done (took 1.7696972 seconds)
    (3/7) benchmarking "month"...
    done (took 1.770236705 seconds)
    (4/7) benchmarking "year"...
    done (took 1.771421241 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.770406075 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.771033655 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.770508648 seconds)
  done (took 14.09393083 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.771566079 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.927731087 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.980181296 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.611913702 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.772829899 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.776887248 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.068382193 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.77458602 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.776702654 seconds)
  done (took 20.162905005 seconds)
done (took 109.129853171 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.559448479 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.771027594 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.035969941 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.834378846 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.799147879 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.112889619 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.790234363 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.417502805 seconds)
done (took 42.022476713 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.805034292 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.777440778 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.816081557 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.819871454 seconds)
  done (took 22.113864615 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.770334258 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.211905115 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.799544921 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.704180227 seconds)
  done (took 22.416189994 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.162412744 seconds)
    (2/2) benchmarking "read"...
    done (took 2.125311382 seconds)
  done (took 5.995117262 seconds)
done (took 59.035587266 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773294902 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.773811126 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.773888882 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.77304945 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.771811382 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.773373873 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.77248121 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.775513046 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.770861005 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.772704067 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.773664982 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.774719537 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.774083963 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.774588135 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774256646 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.774358473 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77474016 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773432162 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.774050436 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777418636 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.774418959 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.773520175 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.773457477 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.773605251 seconds)
  done (took 44.27540865 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.770591222 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.774524323 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.773465439 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.774629022 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.774362792 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.776756086 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.77457099 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.775065216 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.777361255 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.774798331 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.775217542 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.779392813 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.774898269 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.775450072 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774019915 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.776178533 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.777672542 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775926892 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776180961 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.777592647 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.77568877 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775843845 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.779817383 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776177352 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.775532907 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778277055 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.777794993 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.776563059 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.777559838 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.776162365 seconds)
  done (took 54.985688262 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.776128039 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.77836395 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.777696173 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.777190277 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.776926129 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.777755424 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.77796299 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.777012609 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.778429959 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.777906769 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.776509737 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.777166324 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.776511829 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.776613775 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.776842459 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.776499063 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.776819926 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.779658646 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.779393443 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.778323329 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.778520044 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.778761058 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.779569941 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.777979749 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.780653725 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.78198436 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.781036256 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.780350826 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.782383313 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.779896187 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.780284911 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.776765205 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.778610316 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.778641916 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.778833029 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.778955151 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.78241834 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.777958642 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.780886415 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.779015052 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.778569609 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.779919155 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.780626129 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.780873813 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.78099131 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.781531333 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.779769588 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.780542456 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.779675884 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.780355588 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.781478738 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.781351015 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.780158558 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.781849256 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.780573587 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.7805152 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.781201135 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.779997 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.782139122 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.780571173 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.781520335 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.781466683 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.784482448 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.781885636 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.781333281 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.78064215 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.782737567 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.779984047 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.781046554 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.78060531 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.781942648 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.77937953 seconds)
  done (took 129.842127981 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.779941426 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.780357161 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.779568297 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.780804294 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.7808946 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.781061599 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.783398473 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782069794 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782534848 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.780251471 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781804209 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.781463547 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781015795 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.781920186 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782847464 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.780816455 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.780826143 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.781933286 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.782698716 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.78486189 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.781760626 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.781960585 seconds)
  done (took 40.905486687 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783305169 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.780697987 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.783258114 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.782680359 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.782477938 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.782206491 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.781625839 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.783559714 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78352665 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.783001149 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783582173 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782990716 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.782775576 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784924121 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78255906 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.783744193 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.783633186 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.783333467 seconds)
  done (took 33.804709883 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.787396674 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.782577046 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.784032986 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.783718146 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.784156983 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.785243001 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.78509297 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.784246283 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.782809228 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.782678215 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.783900071 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786336342 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.783399808 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78352929 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783439948 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.784155361 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.783530614 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783358586 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783922183 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.783334635 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.784379633 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.782787808 seconds)
  done (took 40.960787546 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78358733 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.785002928 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.784213488 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.784773647 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.784320055 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.785060188 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.784773902 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.784990358 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.785261379 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.784543839 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.787689144 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.78434636 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.785173564 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.785699653 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.786338688 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.784966342 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.786002466 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.788970235 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786853473 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.786533334 seconds)
  done (took 37.42372815 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.788376258 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787981981 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.787735867 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788485975 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787446672 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.787175615 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.791141692 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.787988128 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.791017761 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.790022851 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.789216338 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.788253884 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.789389223 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.79015167 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.791090135 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788625952 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.788938927 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.790223015 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.789600053 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.789613878 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.788824341 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.788090766 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.788527806 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.79005495 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.788734865 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.789731901 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787395411 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.78984785 seconds)
  done (took 51.808091956 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.786763186 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.786820604 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.78853799 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.786549819 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.786884589 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.786308634 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.787484985 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.787051994 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.788510882 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.787933511 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.787782942 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.789253522 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.787875273 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.786855266 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.787854103 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.787912683 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788782373 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.787590081 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789928579 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789788123 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.788948654 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789018747 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.788549672 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.78923552 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789165577 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.788526862 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.788207097 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.789820692 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789010281 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.789698048 seconds)
  done (took 55.363579503 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.811175853 seconds)
    (2/2) benchmarking "in"...
    done (took 1.810716631 seconds)
  done (took 5.33963696 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.788479737 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789667153 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.790927068 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.789709134 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.789129684 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.790372757 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.791153782 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790816584 seconds)
  done (took 16.038457731 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.794088001 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.798260206 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.791989632 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.791643811 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.791747647 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.802158262 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.800243221 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.794973057 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.796475639 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.798592003 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.796190079 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.79626483 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.800402354 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.798091251 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.791164493 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.798501637 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.797355398 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.797849409 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.796739937 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.79237161 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.796934937 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.792551638 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.791871843 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.793536734 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.793322185 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.798087838 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.803915638 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.79900647 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.795704592 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.795905727 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.802651507 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.792509073 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.793487914 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.801049145 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.794006531 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.792597476 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.803942926 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.795123927 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.792773312 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.792343673 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.799874509 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.797662966 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.79866478 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.804149727 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.794609073 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.793344097 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.794122681 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.795799389 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.801028122 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.800511293 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.804645839 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.795554012 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.793567524 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.793289931 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.797777612 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.796575987 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.793839597 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.799927387 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.804028885 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.804470056 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.799925736 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.818928594 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.806830101 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.796848952 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.795771461 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.80722128 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.823753453 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.800897238 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.79789101 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.793651672 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803979623 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.794898723 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.79424477 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.792976517 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.812525061 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.805422684 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.796317185 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.794864278 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.794742575 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.796326994 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.79822935 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.796935504 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.79791401 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.797412176 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.807379522 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.823508749 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.795644546 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.794511232 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.799221827 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.80303908 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.80065219 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.799715648 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.803262317 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.794880327 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.799300273 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.804969029 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.799624337 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.79685714 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.803611957 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.809896224 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.798875573 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.796337132 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.802503648 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.807363463 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.795934351 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.798460697 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.801821826 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.798159345 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.808576662 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.799641894 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.797294455 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.797511701 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.806018247 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.801886276 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.796922231 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805423334 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.809051346 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.811993487 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.806499742 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.80422714 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.802902506 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.800808579 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.808535505 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.822870297 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.796773971 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.804977294 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.805079512 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.811966985 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.804503354 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.797171235 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.802547094 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.797864291 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.796349978 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.804933915 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.798797294 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.797561365 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.79839161 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.79895529 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.79787925 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.799657588 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.809100496 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.802292176 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.802716169 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.801495602 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.804947301 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.799853778 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.804832484 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.809692498 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.807271646 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.800670432 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.801152694 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.806244735 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.80511955 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.80175219 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.799503374 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.797801072 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.799759362 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.809298023 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.803798868 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.800631141 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.798148932 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.807315662 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.804486181 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.799706809 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.802831752 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.807308962 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.802269342 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.803495891 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803951312 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.802780871 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.80476895 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.801499695 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.806462813 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.800484573 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.80094131 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.800700708 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.799243483 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.807911892 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.806585333 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.816651333 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.808017152 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.812130455 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.80087699 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.812894576 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.801615036 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.807114445 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.804448886 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.804054811 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.801572531 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.799755301 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.801890879 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.8067376 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.825358169 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.815698145 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.805602234 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.81097584 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.815471944 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.806737202 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.810582189 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.801298114 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.806491079 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.805429 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.802913084 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.802590357 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.803006893 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.807987315 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.809194742 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.802554825 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.807816137 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.803735445 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.802522872 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.805473869 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.802719798 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.806746347 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.802969279 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.810245915 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.813227842 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.80334706 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.815419476 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.809078118 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.803550404 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.803987537 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.809031308 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.805139733 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.804302334 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.809330996 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.810678992 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.811653404 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.806694694 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.815659956 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.811918992 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.811690428 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.811101979 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.804017137 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.809105295 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.804312882 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.811239643 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.812197627 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.809016364 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.803073488 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.815468556 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.804162844 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.810096459 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.804955701 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.807864889 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.807045204 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.808022638 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.806150869 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.803406571 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.814115016 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.805774952 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.808686558 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.80387508 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.816117929 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.813503859 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.809395388 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.807487732 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.811884423 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.815043982 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.814788021 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.813223753 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.815524568 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.811458097 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.812972716 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.808553545 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.808330113 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.822424771 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.818381738 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.804914826 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.805023235 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.80744895 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.809297219 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.804572729 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.807008002 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.817473883 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.814115866 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.814842321 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.809604817 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.80657811 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.807122451 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.816162978 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.810562282 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.810905943 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.811941128 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.811815596 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.809226785 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.807041205 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.811610916 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.807476685 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.809315781 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.811998597 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.805094643 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.809437472 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.80627297 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.819279265 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.809607513 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.809393794 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.818632343 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.810376953 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.814604468 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.81167404 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.811464939 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.810978686 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.811417816 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.815921141 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.815737994 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.810517809 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.813113963 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.820999907 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.814158212 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.819216252 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.811781718 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.825108309 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.808245896 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.807237162 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.809614224 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.815949648 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.818250692 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.808204601 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.815576576 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.819208898 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.816774118 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.816089767 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.812995983 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.807606694 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.810627478 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.808999286 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.816318798 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.818016128 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.814517098 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.808800737 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.811175929 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.807948908 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.817793822 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.817200323 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.813081466 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.813085052 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.817944915 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.808661117 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.815264631 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.810111979 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.811110986 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.811125751 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.808044234 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.808850852 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.82002238 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.811940127 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.817518242 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.814869389 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.810375509 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.821539284 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.811464294 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.811439675 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.818026921 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.809185278 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.820126236 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.808594899 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.81148372 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.81777849 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.810946981 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.818093377 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.825088563 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.822305828 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.820784695 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.815770005 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.811457373 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.814514181 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.822216367 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.834619913 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812082266 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.814835612 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.813473808 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.820979203 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.816819126 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.817960869 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.818270953 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.820743088 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.814112568 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.818697689 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.817388389 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.827184535 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.813215114 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.812640189 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.811652202 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.819613224 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.821148326 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.811187463 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.821081429 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.817305494 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.820558465 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.826844383 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.811394027 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.821225366 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.812130913 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.811265636 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.813081857 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.81163495 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.816660659 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.816250825 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.813027257 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.813483952 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.816473519 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.820051713 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.819700247 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.818112762 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.8251121 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.814263176 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.813972274 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.823392359 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.813752278 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.817101063 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.813472565 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.819571136 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.82323661 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.812925658 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.82309439 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.820053724 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.825094186 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.817618397 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.812908953 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.812771516 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.819923886 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.82047073 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.814829532 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.817504817 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.825635238 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.819743382 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.828635298 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.827117197 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.815937747 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.82259848 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.824985082 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.825757342 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.81608925 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.821765534 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.816065451 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.819050568 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.819721814 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.818274805 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.816049396 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.821516128 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.823957923 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.814750397 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.82232488 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.81688253 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.814083409 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.819650164 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.820258926 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.824022758 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.814788407 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.814187313 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.822082133 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.817515149 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.817846438 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.819881187 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.819055941 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.81410874 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.82034583 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.820024072 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.818125153 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.81571898 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.815258961 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.819196292 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.815269521 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.81550674 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.824301567 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.825488176 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.814616427 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.821571415 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.832193398 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.814795344 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.820216682 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.823868206 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.822242295 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.818483608 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.815917042 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.817461382 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.815711303 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.827826234 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.817343044 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.816915654 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.824780632 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.818528052 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.824398694 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.819978318 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.823999091 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.816787306 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.824107804 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.815482559 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.82368643 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.834485544 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.822672234 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.821605259 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.825371806 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.824231291 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.82159227 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.817794643 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.817381069 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.824912077 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.826516468 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.825124311 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.823119182 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.822146149 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.819255091 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.821715779 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.820129084 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.821912225 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.818618879 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.816725669 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.823538398 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.829882946 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.830077914 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.818646639 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.82312346 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.819520759 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.824732054 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.838035909 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.819284092 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.820237868 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.820186845 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.823200317 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.82710013 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.828301334 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.836040673 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.824498123 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.820003821 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.826420887 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.840300636 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.825509242 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.831419268 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.855519539 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.830445141 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.824776935 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.821996955 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.828042002 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.820446753 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.830259476 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.822219049 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.829063482 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.822242081 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.818903909 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.832599274 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.82076689 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.820666219 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.82138403 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.828940893 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.829156271 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.82163708 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.837648378 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.821481027 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.820830087 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.829160682 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.830487075 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.819169126 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.819364359 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.820027618 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.824195025 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.819211321 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.822365411 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.834513558 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.822376152 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.825634893 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.836659647 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.840801998 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.825000318 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.820580518 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.822530683 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.829201779 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.827429312 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.821089983 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827785962 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.829012054 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.827826738 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.829246011 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.825229137 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.824970824 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.825667611 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.822399402 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.823528101 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.83812061 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.838518043 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.831159878 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.831124728 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.830260072 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.821945673 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.831736813 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.832309108 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.823595825 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.827201079 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.824119338 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.822004169 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.822596918 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.822968022 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.829046672 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.832039843 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.823780014 seconds)
  done (took 1081.725456171 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.830398788 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.820320788 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.822386565 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.823652937 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.822591961 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.822857748 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.824566317 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.822442754 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.823143197 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.824299552 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.822998809 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.82753121 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.824231473 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.823078592 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.822984685 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.825081071 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824517047 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.825025819 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.824363736 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823963928 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.82394075 seconds)
  done (took 40.05377966 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.823603309 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.823665536 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.823618961 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.824223016 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824327138 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.823745806 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.825107723 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825096593 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.823734022 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.822494077 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.824118754 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827777271 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.824502814 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.824726717 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823667744 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.825006211 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.823146503 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.825700824 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.824336601 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.824545044 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.82462616 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.824511009 seconds)
  done (took 41.88681826 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.826371668 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.82607628 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.82755808 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.824827169 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.826138376 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.827933068 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.825687036 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.83472945 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.833738203 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.835179349 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.836637855 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.833110057 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.826544427 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.83788998 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.826577956 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.827768827 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.977231566 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.828486809 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.828137439 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.82682068 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.828447299 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.8396817 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.826965768 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.825772703 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.8351593 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.828324008 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.826560315 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.826145014 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.827300388 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.835064322 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.831684621 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.827026603 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.830498552 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.832870067 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.835579454 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.83621435 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.833344556 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.832055477 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.827138747 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.827399516 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.839945018 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.852569362 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.827452099 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.828648387 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.838297528 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.828062256 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.82649276 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.833147641 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.835381606 seconds)
  done (took 91.61640037 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.827655436 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.828169549 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.829475178 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.829171157 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.830286561 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.828550776 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.828110923 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.828128616 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.828995853 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.828413185 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.828301725 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.828185071 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.828383941 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.828790459 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.82889515 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.830322631 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.829441283 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.829450557 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.829857754 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.828767028 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.835398789 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.82850188 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.829077273 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.828062233 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.830243044 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.828154299 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.831055741 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.830177034 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.830150265 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.82942949 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.828107879 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.829970503 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.830040232 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.829503463 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.831022084 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.829304025 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.831468615 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.830199393 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.830032824 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.829756171 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.830810284 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.829648246 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.830220681 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.830194093 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.830799613 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.830545285 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.830043669 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.831091028 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.830304307 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.831307516 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.830665909 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.830471584 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.829790275 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.834484832 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.831273334 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.831331535 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.831156654 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.831377689 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.831464003 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.831560029 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.831102659 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.831979228 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.830820609 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.831749007 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.832375781 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.832464393 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.831627591 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.831290748 seconds)
  done (took 126.206041327 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836184917 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.834358541 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833451238 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.834119838 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.834580675 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.834323467 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.834796202 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.833365096 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.832783638 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.834182654 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.832895725 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.835682532 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.833079529 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.833072302 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.834462759 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.835075269 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.836010368 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.839593497 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.834157157 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.833628325 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.832726912 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.833404012 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.835178689 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.834500457 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.835339962 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.834187302 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.834100754 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.832941276 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.835626628 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.834622205 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.835064646 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.834419499 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.83443639 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.838780041 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.834671182 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.835209913 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.835364571 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835516751 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.83473887 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.83656091 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.834246667 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.835067901 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.834302623 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.834246992 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.83700798 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.8356337 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.83497887 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.83641051 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.833790278 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.838377312 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.83743443 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.836306781 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.836023118 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.83680697 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.837435905 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.834963343 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.83495844 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.834925282 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.836134458 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.834267281 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.835365092 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.834162544 seconds)
  done (took 115.531354427 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.834923897 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.833390219 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.836203355 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.839407695 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.83483162 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.834694399 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.835215281 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.835729545 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.838433144 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.83401093 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834718635 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.834512324 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83671863 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834101907 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.834804996 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835948855 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.835342237 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.835191319 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.834803342 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.83962053 seconds)
  done (took 38.473659412 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.834366823 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.835452056 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.835931837 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.836082054 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.840355666 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.836273378 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.836916053 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836957186 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83634258 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839012581 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.835864714 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.836623409 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836904689 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.837440322 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.838207489 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.845123569 seconds)
  done (took 31.16079332 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.838552519 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.836695121 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.837622371 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.845909376 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.838694171 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.838932943 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.839072782 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.840996785 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.837672805 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.842039031 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.839598892 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.839541028 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.840377492 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.840809863 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.845892117 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.839745508 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.840354376 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.838567622 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.83970639 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.839386781 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.839062244 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.83925301 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.839252736 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.839609084 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.838997594 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.842722704 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.840912223 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.840564568 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.841560735 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.841984402 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.845270353 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.83614346 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.839059198 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.840431004 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.842390844 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.84012527 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.84340188 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.839558427 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.838996406 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.83927183 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.839253547 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.841629969 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.837108135 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.837355028 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.84045393 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.840184038 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.838902691 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.84120801 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.837681894 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.83985547 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.83964241 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.839513144 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.843862109 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.837884131 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.839208169 seconds)
  done (took 102.969955644 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.839886425 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.838654383 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.840992213 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.839279574 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.840314723 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.83890347 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.83929926 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.842157159 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.838422714 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.83958311 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.839449499 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.840463225 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.845856773 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.836708596 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.840214395 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838831407 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.840769141 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.841679733 seconds)
  done (took 34.886708237 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.83930499 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.842205562 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.840837243 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.838999468 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.842393001 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.838905334 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.839065764 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.837923778 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839876423 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.839254105 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841286419 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.838646006 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840759322 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.839754873 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.840740039 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841439756 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.840475236 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841238423 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.839409285 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.841592428 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.841403543 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.845982959 seconds)
  done (took 42.263864921 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.849091223 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.850522859 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.864173757 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.879104369 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.871397012 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.883976575 seconds)
  done (took 12.96623206 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842284939 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841463327 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.845113517 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838853369 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841574347 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840241421 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839022022 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843561766 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841468394 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842582967 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842748025 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842975982 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842327904 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842011938 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84308763 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842748632 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842865587 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843402613 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842718678 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841668084 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841663516 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843880071 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84382935 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843750913 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841817245 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845637452 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843209469 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843571751 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84312012 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8467232 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84066809 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843561547 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842128068 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84348165 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847506701 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842886821 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843945955 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844701298 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843335461 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843604314 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.846937634 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84165215 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844576672 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844429913 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842867418 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845089651 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842168972 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845151874 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843629331 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844394429 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845207945 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84407801 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846017083 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844001867 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844480663 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844729782 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846100371 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844070832 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844713496 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843635071 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844461266 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845399347 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843409375 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84273561 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845225422 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844992594 seconds)
  done (took 123.442069268 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845826306 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.843433619 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844284185 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846193605 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848556984 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846645213 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846216524 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847054775 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844173133 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845484156 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846027317 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846895902 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847389923 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846634258 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845767697 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846648976 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846128427 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846031505 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846958219 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844728942 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84690854 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846533477 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846367328 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846544129 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847229991 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847172899 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8474651 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847556295 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847848357 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84790512 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847163877 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845942266 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847551834 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.848446923 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84745694 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847783062 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847897495 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847891462 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847589121 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846501239 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846013995 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847971839 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847682481 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846897595 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846249536 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849003117 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848301384 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847157164 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848774426 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848263906 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850555733 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8486452 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847896927 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848770135 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851706051 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848755209 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84912161 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84817949 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847069139 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848905901 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849243905 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849742986 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851549719 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849539823 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848550651 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850848533 seconds)
  done (took 123.706892959 seconds)
done (took 2519.349710015 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.93986382 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.928200732 seconds)
  done (took 15.643449759 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.011986322 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.966467051 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.852663612 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.886998028 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.85000837 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.881387406 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.872794603 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.85166756 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.851930565 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.851584914 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.853761919 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.037218761 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.860532468 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.850037577 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.852708748 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.946662449 seconds)
  done (took 52.062027457 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.857206045 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.856247321 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.870061762 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.857835289 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.858828755 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.871907182 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.891503918 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.863007678 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.895603861 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.871628303 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.927036118 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.869761189 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.85896661 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.910192907 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.876659551 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.875326025 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.953555241 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.93456148 seconds)
  done (took 35.677456026 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.937933687 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.869577093 seconds)
  done (took 10.593778021 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.877972463 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.879522441 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.880839919 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.888397952 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.866254111 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.85769426 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.876977898 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.865954292 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.858518711 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.878157506 seconds)
  done (took 70.512051762 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.865962549 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.857957492 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.860296766 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.858124425 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.850368932 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.857765801 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.858426204 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.859121759 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.545025792 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.893646942 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.868830659 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.864280491 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.857356549 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.859067467 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.8566008 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.883088054 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.979010496 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.856779592 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.85870647 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.863001118 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.856596715 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.911212195 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.870918339 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.860272545 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.889446682 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.544724439 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.867762989 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.863957901 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.984709486 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.855529368 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.856060121 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.066906529 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.860831041 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.322382858 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.134212427 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.861617816 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.866968946 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.865680993 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.85579214 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.980697757 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.858134255 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.864410788 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.769541362 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.104282654 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.951777969 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.903622662 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.211178643 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.858867112 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.859926393 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.893713707 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.862550428 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.859756376 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.873513577 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.368773342 seconds)
  done (took 132.253839152 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.860308181 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.212238453 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.0312043 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.86530857 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.151916767 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070498394 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.866289843 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.908636078 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.867927386 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.09474462 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.119788011 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.96838895 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.865248647 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.863749619 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.861350957 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.859631725 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.006055781 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.933321673 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.865234285 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.862227982 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.890529126 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.103196855 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.988825384 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.865475241 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.88733508 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.068074735 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.984800205 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.967397159 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.629709172 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.86269963 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.924103856 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.86385138 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.86625249 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.863198425 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.016076026 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.955926173 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.943850015 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.863882451 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.864062012 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.862774121 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.519661006 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06173588 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.957649837 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.989754696 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.114736644 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.068531799 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.642892329 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.866638451 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.602388827 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.027254722 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.094298153 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.099226072 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.98039639 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.864354917 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.391282825 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.866445309 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.862759313 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.107040192 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.082450051 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.9587661 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.8691908 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.864435022 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.862384463 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.101482691 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.864377516 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.959162427 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.869776249 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.864482028 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.963550179 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.962163594 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.096174325 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.075647983 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.89543712 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.191061837 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.369662714 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.110768916 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.928184344 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.113741016 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.867535078 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.862786708 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944162146 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.697312674 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.118792056 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.107018415 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.109387874 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.89929093 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.58476952 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.866480859 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.090877471 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.085699047 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.117282838 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.106867216 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.09796767 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.184229695 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.865282835 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.868254835 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.099452649 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.98369897 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.86675964 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.211336694 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095024381 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.415811758 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.894393343 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.173609002 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99800268 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.870827509 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.494847202 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.870837742 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.090771636 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.906035806 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.866907987 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.870127221 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.085256587 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.841486229 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.86862586 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.518551345 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.926972535 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.87441387 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099024628 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.870309454 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.128682918 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.87312735 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099548495 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.296474456 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.90214088 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.097683115 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.110950388 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.872334886 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.112892976 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.109611542 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.983215357 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.090719688 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.5672551 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.869384326 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.152001971 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.87031653 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.86688291 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.039054767 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.868559799 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.013781182 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.875635606 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.148406014 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88902469 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.102140576 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.86987941 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.124378907 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.900392469 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.916859185 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.870877911 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99513091 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.872752615 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.701802036 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.02873776 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.870109923 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.866979917 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.654663582 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.8698195 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.016215002 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.091890765 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888477147 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.942567478 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.533423376 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.869252108 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950262879 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.891284437 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.253956077 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.870644893 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.12151003 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.873608812 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.869250084 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.870398116 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.103450058 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.054453012 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.87207709 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.869973122 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.76677995 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.870505387 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.87253718 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.051442888 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.210821049 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.87109634 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069509473 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873062921 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.996743906 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.872827978 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.935965393 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.209674624 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.868054338 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.871180003 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.870184166 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.873505492 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.876328509 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.130573076 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.894026523 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.387684764 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.008273046 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.137580993 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.178897003 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.115633455 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.915118588 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.876159453 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.127336913 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.873371211 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.936131833 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.875605125 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.890456544 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.102907072 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.877127786 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.07781158 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.140685858 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.726262794 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.920100019 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.873742314 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.870634365 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.873766237 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.013776291 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957567388 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.874540274 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.877724095 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.987061031 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.994101082 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.089993195 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.874074359 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.964596442 seconds)
  done (took 902.422507721 seconds)
done (took 1220.944964973 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.874764908 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.874548773 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.869772744 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.875551196 seconds)
  done (took 29.287941118 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.869341231 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.873756843 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.871276281 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.87343071 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.868529011 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.874915563 seconds)
  done (took 13.025857267 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.972799387 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.879173946 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.876391178 seconds)
  done (took 21.520196274 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.941831385 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.273833392 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.010138947 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.298673224 seconds)
  done (took 10.318736067 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.869069731 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.86943208 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.867916869 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.870977406 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.871195788 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.871126931 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.867377734 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.868252769 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.871367527 seconds)
  done (took 18.621933268 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.649140425 seconds)
done (took 99.219295202 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.040477639 seconds)
    (2/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.643658648 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.932667917 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.961090567 seconds)
    (5/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.724853794 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.003756934 seconds)
    (7/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.88495464 seconds)
    (8/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.017416379 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.995811854 seconds)
    (10/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.019440329 seconds)
    (11/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.879687701 seconds)
    (12/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.962292544 seconds)
    (13/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.251096477 seconds)
    (14/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.888425112 seconds)
    (15/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.875221659 seconds)
    (16/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.892589429 seconds)
    (17/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.971832517 seconds)
    (18/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.485205075 seconds)
    (19/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.055261591 seconds)
    (20/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.879939975 seconds)
    (21/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.96135306 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 8.687292391 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.260926653 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.88926593 seconds)
    (25/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.016935961 seconds)
    (26/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.010031194 seconds)
    (27/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.036381014 seconds)
    (28/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.886636891 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.054262812 seconds)
    (30/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.275731716 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.238279273 seconds)
    (32/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.002745326 seconds)
    (33/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.871201562 seconds)
    (34/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.410531794 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.968341742 seconds)
    (36/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 3.801351585 seconds)
    (37/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.070244408 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.102792154 seconds)
    (39/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.386500008 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.184595089 seconds)
    (41/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.52296809 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.124466823 seconds)
    (43/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.142637063 seconds)
    (44/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.122513328 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.735331053 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.976026723 seconds)
    (47/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.886260337 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.004511563 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.189861538 seconds)
    (50/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.971568473 seconds)
    (51/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.303190896 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 2.094616089 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.879125214 seconds)
    (54/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 3.648335757 seconds)
    (55/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.246844611 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.497834203 seconds)
    (57/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.265986106 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.164425528 seconds)
    (59/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.290731988 seconds)
    (60/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.875461412 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.050338604 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.036764862 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.892436481 seconds)
    (64/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.512363425 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.281495702 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.309695926 seconds)
    (67/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.347384228 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.482988845 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.966413683 seconds)
    (70/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.261639375 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.971485915 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.736005887 seconds)
    (73/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.90277569 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.037362137 seconds)
    (75/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.272449721 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.973341011 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.21074242 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.00635214 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.887156176 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.880103488 seconds)
    (81/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.012072413 seconds)
    (82/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.007186441 seconds)
    (83/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.169692031 seconds)
    (84/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.058557999 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.176900018 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.187430864 seconds)
    (87/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.628830475 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.159540442 seconds)
    (89/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.882982458 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.011790111 seconds)
    (91/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.972805496 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.086808743 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.014990249 seconds)
    (94/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.993445842 seconds)
    (95/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.958456962 seconds)
    (96/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.467796632 seconds)
    (97/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.444035181 seconds)
    (98/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.973834978 seconds)
    (99/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.062953016 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.000332934 seconds)
    (101/309) benchmarking ("sort", Float64, false)...
    done (took 5.590566014 seconds)
    (102/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.043566811 seconds)
    (103/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.942400134 seconds)
    (104/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.974106229 seconds)
    (105/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.030290908 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.898871077 seconds)
    (107/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.947604082 seconds)
    (108/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.898510987 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.898130489 seconds)
    (110/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.120502407 seconds)
    (111/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.132377263 seconds)
    (112/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.765980478 seconds)
    (113/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.967790872 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 4.220499276 seconds)
    (115/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.953728441 seconds)
    (116/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.952799038 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.762650444 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.594795737 seconds)
    (119/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.991634697 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.499238309 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.150861845 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.185875091 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.897521712 seconds)
    (124/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.877834037 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.883284667 seconds)
    (126/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 3.789313751 seconds)
    (127/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.636996573 seconds)
    (128/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.075569183 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.756427215 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.9122 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.002140632 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.870754377 seconds)
    (133/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.938965729 seconds)
    (134/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.903102118 seconds)
    (135/309) benchmarking ("sort", BigInt, false)...
    done (took 6.881525251 seconds)
    (136/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.184910501 seconds)
    (137/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.886300593 seconds)
    (138/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.874765768 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.183876044 seconds)
    (140/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.955838252 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.16682809 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.018200586 seconds)
    (143/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.974007519 seconds)
    (144/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.259740525 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.559084102 seconds)
    (146/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.718134448 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.359884788 seconds)
    (148/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.966902909 seconds)
    (149/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.355352122 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.185216586 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.908011698 seconds)
    (152/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.096171909 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.885439956 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.885916326 seconds)
    (155/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.023791543 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.015948973 seconds)
    (157/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.901032846 seconds)
    (158/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.968791374 seconds)
    (159/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.036794664 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.892139178 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.649988631 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.139063504 seconds)
    (163/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.059841019 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.358208695 seconds)
    (165/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.198771245 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.64469468 seconds)
    (167/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.000651628 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.88437827 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.854644271 seconds)
    (170/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.172088234 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.89156538 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.272039667 seconds)
    (173/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.894975527 seconds)
    (174/309) benchmarking ("sort", Float32, false)...
    done (took 5.539467972 seconds)
    (175/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.988877452 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.1504784 seconds)
    (177/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.94355576 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.87799959 seconds)
    (179/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.597430072 seconds)
    (180/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.877738954 seconds)
    (181/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.889866644 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.180279922 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.776295222 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.892594216 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.484340085 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.277893721 seconds)
    (187/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.57953047 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.747269942 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.727783096 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.683554573 seconds)
    (191/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.884180225 seconds)
    (192/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.044235295 seconds)
    (193/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.996006198 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.192383624 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.149695758 seconds)
    (196/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.920281747 seconds)
    (197/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.276013119 seconds)
    (198/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.621173425 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.941940428 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.223482372 seconds)
    (201/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.117402721 seconds)
    (202/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.515120568 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.008830711 seconds)
    (204/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.122949896 seconds)
    (205/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.904738736 seconds)
    (206/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.899654635 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.117291435 seconds)
    (208/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.891567036 seconds)
    (209/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.198406272 seconds)
    (210/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.87917736 seconds)
    (211/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.110574438 seconds)
    (212/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.190856241 seconds)
    (213/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.012254589 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.183950195 seconds)
    (215/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.150681679 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.515630417 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.185013211 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.887020762 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.960842169 seconds)
    (220/309) benchmarking ("sort", Int8, false)...
    done (took 4.842157086 seconds)
    (221/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.903170027 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.072106233 seconds)
    (223/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.896977318 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.993083459 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.012582265 seconds)
    (226/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.901877766 seconds)
    (227/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.134220282 seconds)
    (228/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.890802043 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.88920058 seconds)
    (230/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.063687056 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.89189934 seconds)
    (232/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.047413177 seconds)
    (233/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.196090932 seconds)
    (234/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.093126546 seconds)
    (235/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.077984102 seconds)
    (236/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.19171997 seconds)
    (237/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.580784551 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.308267415 seconds)
    (239/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.965281455 seconds)
    (240/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.261006266 seconds)
    (241/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.268302166 seconds)
    (242/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.177246784 seconds)
    (243/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.248302155 seconds)
    (244/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.143310256 seconds)
    (245/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.895640387 seconds)
    (246/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.285083559 seconds)
    (247/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.87959334 seconds)
    (248/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.689597083 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.89866388 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.001671 seconds)
    (251/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.023411053 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.023596288 seconds)
    (253/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.880273321 seconds)
    (254/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.967841404 seconds)
    (255/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.957007583 seconds)
    (256/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.205589925 seconds)
    (257/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.309859382 seconds)
    (258/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.017551371 seconds)
    (259/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.126521102 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.896878925 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.24461567 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.145538708 seconds)
    (263/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.896281803 seconds)
    (264/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.05290128 seconds)
    (265/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.884555119 seconds)
    (266/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 3.580689586 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.891297793 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.889333407 seconds)
    (269/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.001884626 seconds)
    (270/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.966975687 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.292949956 seconds)
    (272/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.198231349 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.160831314 seconds)
    (274/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.096400421 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.96273789 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.901621936 seconds)
    (277/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.193983525 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.2228168 seconds)
    (279/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.243496656 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.893949256 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.959640451 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.922316712 seconds)
    (283/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.600289435 seconds)
    (284/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.244563208 seconds)
    (285/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.021603085 seconds)
    (286/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.986709816 seconds)
    (287/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.991985731 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.230147988 seconds)
    (289/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.334538809 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.845147421 seconds)
    (291/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.986803059 seconds)
    (292/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.96400062 seconds)
    (293/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.991412608 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.889679151 seconds)
    (295/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.887735716 seconds)
    (296/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.01574142 seconds)
    (297/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.882441996 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.938680836 seconds)
    (299/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.558466345 seconds)
    (300/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.92028426 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.229136299 seconds)
    (302/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.985607073 seconds)
    (303/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.09910265 seconds)
    (304/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.366190001 seconds)
    (305/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.996208495 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.094517186 seconds)
    (307/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.373011192 seconds)
    (308/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.55302366 seconds)
    (309/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.762674442 seconds)
  done (took 1013.662328631 seconds)
done (took 1015.543716814 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.943407661 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.906241558 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.887853633 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.910388903 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.001196611 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.93350456 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.898274569 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.889267835 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.938261119 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.935598138 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.88521931 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.923635205 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.884525508 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.883982357 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.883142826 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.899570972 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.192187304 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.908116101 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.899282342 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.892047073 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.899367584 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.88120849 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.928422407 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.920483933 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.883600763 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.883726518 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.882614994 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.897123049 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.99001943 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.878572385 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.881944202 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.890030528 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.180554736 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.901539809 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.87387524 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.89479241 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.890011883 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.886433208 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.878731481 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.909582966 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.318764375 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.881665076 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.874406257 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.872797575 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.87372711 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.881288364 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.874022041 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.881952353 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887328033 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.888774375 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.31052289 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.894344276 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.875238069 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.869517025 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.882613256 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.872009027 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.874922628 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889945166 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.887646031 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.885042532 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.160666754 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.901448882 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.874168629 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.88502916 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.876280414 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.340440924 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.869531879 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.875168171 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.306747073 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.876364203 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.339758735 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.879563774 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.867525872 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.876619557 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.895446697 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.166866675 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.885468803 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.863048863 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.868964944 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.858118668 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.87198243 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.875616374 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.865328862 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.862630049 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.87394272 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.902345792 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.872436788 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.858927985 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.870992355 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.87648514 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.866160622 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.869654157 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.86123093 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.855080191 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.870745308 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.859818227 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.858336308 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.858910864 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.861837915 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.870185332 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.295094001 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.878043124 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.852095774 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.85220826 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.855512259 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.868381992 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.293764803 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.859744389 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.876163179 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.905423174 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.853350923 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.142533371 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.881886426 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.869690077 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.864763986 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.853082525 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.848922863 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.144269164 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.316554834 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.872602604 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.849992768 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.847468553 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.867465321 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.852543859 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.847124284 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.157242489 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.877739762 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.865488559 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.971517966 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.862441828 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.882453017 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.845491574 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.851034618 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.893752744 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.864914159 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.881428814 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.848576065 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.863175444 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.864647369 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.844821187 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.85927579 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.860857392 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.845843333 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.854028726 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.843577447 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.891124358 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.861475708 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.86001662 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.865868908 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.969304914 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.842354081 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.137844788 seconds)
done (took 293.44937348 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.927099877 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.849061199 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.966443262 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.840373298 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.936984914 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.921136064 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.840264447 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.84103129 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.841182737 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.34527063 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.840387965 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.844914217 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.848870488 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.840340853 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.918400576 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.840741759 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.841599093 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.135728693 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.842799257 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.92981763 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.84920207 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.84136478 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.841301084 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.348906349 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.851651708 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.851312593 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.930095682 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.841385059 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.137950909 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.851793369 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.849276757 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.13730486 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.929852028 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.854482036 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.849605693 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.849238156 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.938306319 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.850901442 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.917186375 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.917473365 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.967482146 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.876446215 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.850752085 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.851365992 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.844929579 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.848917695 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.844653347 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.877378455 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.855803537 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.84947112 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.140646799 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.852116756 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.849872061 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.845944139 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.84540066 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.859068765 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.846249439 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.848072685 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.932811189 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.847100021 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.920387065 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.352709939 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.349901312 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.847840313 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.853356882 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.84551685 seconds)
  done (took 183.111949943 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.923601897 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.927120953 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.922176298 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.859957964 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.904641428 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.922392698 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.859951423 seconds)
  done (took 15.09682324 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.862053701 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.848861711 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.90466079 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.904583565 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.847067872 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.04235114 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.86762671 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.851919894 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.883175226 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.848109972 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.507580734 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.904884754 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.854429124 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.855367185 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.867800685 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.911414191 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.858079997 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.848882996 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.965043955 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.004948725 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.852003224 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.854495605 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.882424213 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.868805623 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.848891906 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.848700159 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.848977139 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.864168438 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.849072872 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.848242056 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.849610256 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.908465232 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.849348182 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.857348932 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.848600286 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.85050454 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.849883073 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.849539055 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.849297873 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.856826033 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.849349423 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.850234697 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.850005692 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.848993895 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.84833273 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.881672667 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.849231186 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.850714359 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.849939739 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.849523195 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.88594266 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.849639248 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.849556837 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.854483218 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.903355281 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.856813018 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.851769006 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.85061326 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.850697343 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.850054332 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.850120813 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.006998854 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.908104787 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.851228164 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.907586161 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.010997446 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.851596009 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.850341677 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.849644379 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.94648482 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.850081537 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.908290017 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.851233021 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.974522086 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.850833304 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.046547484 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.883459271 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.862619158 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.862940569 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.859564971 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.866742549 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.850873243 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.862153353 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.866171048 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.856384447 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.851378728 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.851760741 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.862152228 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.868205065 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.852246124 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.911863918 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.851969122 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.852769578 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.994959877 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.85359819 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.970168938 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.888295639 seconds)
  done (took 204.382683062 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.867780033 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.868030003 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.862784251 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.875954904 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.862064916 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.861083842 seconds)
  done (took 12.980263526 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.86284758 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.855197619 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.851658407 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.851557881 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.852856497 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.85300024 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.852561788 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.862957495 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.857055549 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.852385403 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.854241178 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.855593293 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.854214977 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.853785719 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.852670925 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.852222935 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.85271175 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.85318443 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.853394925 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.854242158 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.995339019 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.854368702 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.854676711 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.857539684 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.857659397 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.852681154 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.874194155 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.854092782 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.853139451 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.871675608 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.859460022 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.8558924 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.858290526 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.870156491 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.858806736 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.858640722 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.858753835 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.859272163 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.854694089 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.855339597 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.857859119 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.855653875 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.855167915 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.857900333 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.865739085 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.862993226 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.863503841 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.874929828 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.855455034 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.858363218 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.858885119 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.855183417 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.856548668 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.858569444 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.860736495 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.870087976 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.862988168 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.856083859 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.856035212 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.860242856 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.859070073 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.856423523 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.866816095 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.859788178 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.862688799 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.859368391 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.860406618 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.861132826 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.857924091 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.856590842 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.861261284 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.855592351 seconds)
  done (took 136.709957888 seconds)
done (took 554.072364239 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.869348633 seconds)
  done (took 8.654724993 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.978628577 seconds)
  done (took 8.871950474 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.605503405 seconds)
  done (took 10.409758066 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.904510027 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.909838279 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.886765583 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.889635726 seconds)
  done (took 29.405625647 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.196696315 seconds)
  done (took 9.000179432 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.894603028 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.878735917 seconds)
  done (took 15.654763712 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.975094058 seconds)
  done (took 8.778800427 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.28511457 seconds)
  done (took 9.100751169 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.894348245 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.901868481 seconds)
  done (took 15.62353897 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.876090977 seconds)
  done (took 8.673493388 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.591424954 seconds)
  done (took 9.486735606 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.869208951 seconds)
  done (took 8.68331282 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.928252464 seconds)
  done (took 8.723943363 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.892926648 seconds)
  done (took 8.683711447 seconds)
done (took 161.539372765 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.874293995 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.868148865 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.868290123 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.864766272 seconds)
  done (took 29.265102163 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.888045185 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.88733553 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.895597125 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.887553953 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.877026368 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.876996907 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.886238963 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.886960913 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.878448044 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.884764214 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.887909548 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.883755673 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.884094708 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.893901381 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.896192069 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.882357701 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.885422638 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.882948071 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.87341167 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.891208949 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.8795406 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.883155845 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.847847493 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.847844905 seconds)
  done (took 46.953037979 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.04237956 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.922935134 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.012137476 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.90403627 seconds)
  done (took 9.659337904 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.851426839 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.912106004 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.899711161 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.894431545 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.942313928 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.951142259 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.900571643 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.057842125 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.964307102 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.974682197 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.855650272 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.868968364 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.872516555 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.903877348 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.950713049 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.848350516 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.849831867 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.965212803 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.912608087 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.059038009 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.850448481 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.902950943 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.935008536 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.902616567 seconds)
  done (took 47.806916453 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.850236713 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.857157792 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.854871015 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.850783802 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.846547232 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.846946747 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.853241111 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.852336028 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.869598774 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.848206343 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.846407755 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.847899545 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.853553591 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.847615444 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.847209593 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.860183063 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.862421401 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.847378372 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.850854505 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.855173923 seconds)
  done (took 38.828907642 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.854051266 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.701197918 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.19925864 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.107391735 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.854185043 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.85407574 seconds)
  done (took 31.347501278 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.867338576 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.864182046 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.856976506 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.91226494 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.995621902 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.866186184 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.856114378 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.867482651 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.902303321 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.921594846 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.87860701 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.884418336 seconds)
  done (took 24.45125688 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.857573293 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.857361434 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.858124045 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.87003435 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.865550061 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.863260367 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.863483009 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.856423394 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.869135078 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.874909138 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.867026058 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.867929782 seconds)
  done (took 44.152397953 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.061445926 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.073384687 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.074731976 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.316970826 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.833219502 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.751919038 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.586816085 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.623483448 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.188876916 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.868095449 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.852271014 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.793219694 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.133009581 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.895677852 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.154000383 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.82014737 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.88888733 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160199617 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.890271323 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.890375902 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.201838862 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.940908901 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.101415153 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.93592401 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.104898532 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.256083943 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.130785559 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.151797257 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.2404602 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.025347227 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 4.949243854 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.935159663 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.899278476 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.902121086 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.901788184 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.911919221 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160878995 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.891618462 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.971421345 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.873068969 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.814022277 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.264132454 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.01729751 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.315790411 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.021318378 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.132710886 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.895642415 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.949096188 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.949056745 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.207264992 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.006153588 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.104100069 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.819278396 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.315675328 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.026755588 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.893347397 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.89563743 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.589249272 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.13218682 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.972618601 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.269180693 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.013929713 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.889830484 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.984564084 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.89224702 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.003832965 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.090849978 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.894067376 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.898396127 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.896648852 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.988366491 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.105946434 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.893354992 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.891483625 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.911123765 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.894087417 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.242882309 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.320944451 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.882725645 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.4520006 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.305677226 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.862480968 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.244717164 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.938941793 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.183641772 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.110244721 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.98282434 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.1365357 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.767000233 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.90028813 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.700975101 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.974763204 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.957711256 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.893520242 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.947259195 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.246897436 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.021063166 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.89425787 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.821412098 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.906275956 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.096022784 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.254808 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.949036395 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.893204728 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.891411963 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.892775888 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.896950195 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.904833316 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.908287948 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.806458455 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.185131353 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.008569017 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.151917045 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.8931167 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.581280435 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.165942845 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.017560109 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.513713309 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.026340164 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.849852573 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.036435519 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.895929269 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.892056423 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.088965135 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.30951709 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.952818058 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.133103725 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.986569953 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.919646402 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.894485481 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.970185782 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.119078996 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.8882077 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.147130106 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.13915572 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.534773943 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.973635195 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.967748567 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.889820771 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.095855177 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.963429453 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.425188595 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.111339101 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.326475596 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.868376661 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.475245695 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.185608015 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26932504 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.890273246 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 4.941247999 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.908589529 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.574560433 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.798472061 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.877721426 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.226542106 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.925755914 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.914141793 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.873420274 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.873322467 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.879901097 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.953583434 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.947263659 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.947046353 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.799944151 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.876206516 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.875981509 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.873657136 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.408875628 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.651314424 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.170459467 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.874878938 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.94720974 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.875089447 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.471812577 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.877238114 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.919351086 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.958540078 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.660433392 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.913133055 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.195819948 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.307736075 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.998891203 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.875097553 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.876984917 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.574341201 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.880436243 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.569712246 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.160878763 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.882600294 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.342661931 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.940698343 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.956692985 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.879763944 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.866825054 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.866591464 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.86620668 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.067806317 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.372469335 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.248823747 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.225884801 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.952190944 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.143092442 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.058129387 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.233137223 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.555016956 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.390640829 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.09164232 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.866702252 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.868550364 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.333598771 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.873574349 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.081214965 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.067584422 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.154078015 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.173328617 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.281042429 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.870601282 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.884646897 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.106850069 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.866751952 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.307568593 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.951625465 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.281551714 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.689236681 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.133755573 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.934330398 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.877840336 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.518717178 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.007886351 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.821390925 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.994604474 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.794308624 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.592161864 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161204811 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.150971272 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.854509813 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.210592516 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.172737424 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.191997944 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.503900438 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.841736361 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.922166727 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.944563993 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.869401862 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.287840004 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.905217663 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.920118207 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.873068219 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.86573385 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.873475764 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.554662572 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.942018321 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.997628767 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.628101954 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.250904026 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.778677682 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.137931856 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.924732622 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.335552396 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.914128312 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.080834301 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.869835381 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.304704894 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.918855088 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.147071788 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.831401627 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.077585448 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.076824107 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.887897069 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.870529028 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.794826903 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.734321514 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.868042411 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.934162429 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.756913996 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.86749052 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.196469065 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.353386743 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.901154781 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.868452016 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.241867876 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.34411311 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.062705711 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.874382194 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.081296813 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.016039336 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.788500331 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.344391884 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.447135472 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.565927886 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.878208616 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.06933685 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.239103222 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.044610457 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.905386865 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.945627033 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.144512957 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.849145181 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.865048782 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.388201215 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.965537812 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.108262199 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.206522972 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.263418258 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.329406117 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.130106221 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.859149062 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.084783376 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.256852964 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.117634407 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.79978702 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.967974386 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.078983362 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.157138648 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.750303991 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.577822391 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.110471997 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.872972777 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.795893664 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.078661502 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.381927851 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.251925428 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.408385265 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.942584877 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.898065259 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.351886526 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.881938486 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.80554016 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.867496852 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.819119867 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.086288514 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.937588463 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.907953895 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.426524199 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.17412664 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.295137024 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.9948126 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.908258879 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.796441073 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.579117981 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.820491642 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.960658887 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.91001328 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.942617627 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.872894539 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.073829004 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.308517642 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.92549742 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.41825201 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.078157083 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176752661 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.149875379 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.188591963 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.830412105 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142504375 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.826315692 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.270841235 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.959952328 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.949236837 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.871555794 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.873190682 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142939344 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.254054836 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.356236614 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.907540113 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.254416152 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.983138516 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.874889254 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.876982126 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.242936595 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.10853873 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.085396251 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.949363808 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.076845251 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.946532299 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.385886371 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.877169119 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.874758551 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.0087342 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.837354829 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.659326619 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.173367776 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.628140027 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.076706623 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.396434639 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.736708561 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.9492189 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.923204218 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.874055129 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.009256268 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.880110176 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.114622235 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.147847972 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.640527897 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.878129334 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.877127583 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.734568649 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.580908379 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.114575727 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.893407416 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.877082333 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.881178151 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.99479476 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.87946678 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.153085918 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.933858561 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.876600057 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.883569243 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.091348619 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.391192888 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.894962951 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.577187196 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.080298475 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.876498493 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.359847197 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.346859185 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.023349625 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.922305734 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.948054108 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.131281329 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.414491724 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.946628737 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.874363326 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.102206533 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.878976738 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150084479 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151842975 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.880915376 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.094405825 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.236267441 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167259044 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.885912864 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.752529768 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.874711073 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.149830882 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.945838664 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.875753344 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.887971116 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.887412282 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.589966532 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.365707248 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.039554771 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.257835285 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.746956687 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.637832266 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.882840885 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.884757283 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.638872948 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.610801918 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.094541366 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.173759299 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.829182268 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.084248082 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.58605101 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.85919027 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.15432195 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.811398142 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.885442283 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.265731028 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.156099751 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.814572837 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.885273803 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.507665841 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.889955294 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.966990375 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.883171717 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.010490064 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.15681915 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.316661547 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.003098779 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.522888634 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.585061231 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.823187939 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.935694643 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.693333438 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.445671833 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.649142658 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.906531613 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.900164403 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.811043755 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.886810795 seconds)
  done (took 1641.425276749 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.920438136 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.911963678 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.940260992 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.940607542 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.922617549 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.023240256 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.921769827 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.914791459 seconds)
  done (took 57.305287935 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.895382225 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.90717653 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.898110909 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.893116193 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.923138032 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.893825573 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.049919886 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.920402635 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.896116868 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.901793717 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.899756396 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.89307283 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.154532446 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.912435499 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.906736407 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.885970869 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.897837971 seconds)
  done (took 74.546465234 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.890911453 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.100439033 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.944974949 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.897150785 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.845838961 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.899196925 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.854167212 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.893743216 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.891666285 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.115086262 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.184549916 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.903287186 seconds)
  done (took 90.233791719 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.899737276 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.896079147 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.897080857 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.895180304 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.896757486 seconds)
  done (took 11.301838394 seconds)
done (took 2149.138460996 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.305621139 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.943467423 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.985132624 seconds)
  done (took 5.740563418 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.04174353 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.091503701 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.202582616 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.962249995 seconds)
  done (took 10.117304955 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.149523851 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.276603805 seconds)
  done (took 6.236198818 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.243761862 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.900148073 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.252845395 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.888815174 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.890687783 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.88785904 seconds)
  done (took 22.487545684 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.889857738 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.889976391 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.891413624 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.890485791 seconds)
  done (took 9.376035459 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.889357388 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.603306146 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.889110185 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.898209061 seconds)
  done (took 21.092063581 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.03717498 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.001837717 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.028383605 seconds)
  done (took 7.880115059 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.117901062 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.114369503 seconds)
  done (took 7.044536386 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.032488048 seconds)
  done (took 3.847114895 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.917419849 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.158500724 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.411168764 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.873113084 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.617153671 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.973047349 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.263606215 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.15367254 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.317320092 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.362581133 seconds)
  done (took 25.863421453 seconds)
done (took 135.196631089 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.434421192 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.928807516 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.102343021 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.291999926 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.132988031 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.10129656 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.1102036 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.282506309 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.961965439 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.95733543 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.321875112 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.167607934 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.063831375 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.924201734 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.068093208 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.925458072 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.129900449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.293022179 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.955731973 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.204734502 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.120091776 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.926261427 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.122691737 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.93775874 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.132012928 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.051084355 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.473474711 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.928345318 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.104528795 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.482447419 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.05336265 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.34973741 seconds)
  done (took 169.858155735 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.903812903 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.905022867 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.902713034 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.899305683 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.186353645 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.90168139 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.903084207 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.90181503 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.12918594 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.12348708 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.901551867 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.19583471 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.901761817 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.902381668 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.904845839 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.904108636 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.258360111 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.90149665 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.90279865 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.90372807 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.9046575 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.028517062 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.901631002 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.039958171 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.251309587 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.904019907 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.903689267 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.902144111 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.903538412 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.905087019 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.903662589 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.901533828 seconds)
  done (took 208.703919146 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.902386869 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.903991502 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.902487949 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.905331818 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.902662023 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.900521081 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.904526601 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.903954686 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.705547594 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.672206144 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.90185514 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.904746829 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.906782452 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.903777092 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.905165917 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.904261741 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.903442258 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.904523936 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.904765385 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.903126673 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.90296186 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.634977463 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.903021336 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.671803711 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.90156898 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.90561053 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.903141539 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.90507989 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.904753554 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.908968658 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.905187596 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.904616379 seconds)
  done (took 221.822580466 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.140739109 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.898380001 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.899152012 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.959022848 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.898649543 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.8997835 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.899492821 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.146409727 seconds)
  done (took 19.569244817 seconds)
done (took 621.790328571 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.221057669 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.620501726 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.050416867 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.927107599 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.172905462 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.975661362 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.92297559 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.988996754 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.771516637 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.999034246 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.322748742 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.933272338 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.693595128 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.954789378 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.047805379 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.977723765 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.294712482 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.634288667 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.070451556 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.598751189 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.086770521 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.847259612 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.003812259 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.819146197 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.3381384 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.88143046 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.971315673 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.292982087 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.93071916 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.089803298 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.52536849 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.203167887 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.940133074 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.927151982 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.976758132 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.954439028 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.136872767 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.937842794 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.052976633 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.642793977 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.58655205 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.64377478 seconds)
  done (took 101.78926823 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.914391094 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.911440936 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.910774183 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.912649883 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.919741712 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.91193157 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.912656439 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.913413301 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.911178242 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.914018863 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.912856642 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.918803335 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.91026161 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.919202089 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.911991397 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.910566533 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.911027211 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.919716842 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.913686045 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.911374013 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.91443472 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.91260152 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.903782918 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.91322477 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.913358171 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.914294605 seconds)
  done (took 51.587064182 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.900802584 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.109267313 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.159897326 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.929150186 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.910092923 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.913572912 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.938864001 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.906991998 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.91321324 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.911769712 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.008930903 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.90730332 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.924263572 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.159872181 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.927633043 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.902760201 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.903314691 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.914986258 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.115945278 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.924675495 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.943169352 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.909670001 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.941450737 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.928206463 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.913862211 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.910176273 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.915475479 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.387435736 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.924756911 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.010699058 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.984302975 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.943303709 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.256277275 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.173507763 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.966655676 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.908095652 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.905328299 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.018495833 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.916348411 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.91066667 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.941672825 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.919843192 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.160422937 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.458416404 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.927743246 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.903643876 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.384133426 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.028947827 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.953641215 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.920465214 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.168250551 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.929404844 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.904614831 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.914182222 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.950197305 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.924024882 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.911438621 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.204638908 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.928002148 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.942360078 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.913313556 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.914203448 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.126698416 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.922724041 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.108776579 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.920955139 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.921348067 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.914901892 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.164066231 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.933582151 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.46727493 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.929535692 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.906188284 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.017413145 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.114642847 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.408985726 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.929472475 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.124287126 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.274979963 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.950841246 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.928240727 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.369449858 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.956039493 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.924808022 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.906852909 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.906488979 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.905048235 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.952984747 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.941768795 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.374779155 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.465242078 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.227458485 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.956366904 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.927868026 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.91525971 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.208033874 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.918307485 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.907749206 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.153407087 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.479620627 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.930308786 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.91989927 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.449253165 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.9315384 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.943942888 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.926677109 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.175772913 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.932642442 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.954831061 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.90824813 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.923580755 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.919430039 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.945495248 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.927004116 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.907942499 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.446774235 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.033626985 seconds)
  done (took 237.725910562 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.916679045 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.914474759 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.915945919 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.916015719 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.914368587 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.918647586 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.912498937 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.914037281 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.918446327 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.916007639 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.914151066 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.919692432 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.919617239 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.920177014 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.955040291 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.917218486 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.406871505 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.915246141 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.917227471 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.917051404 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.479043848 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.919249962 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.91771474 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.91840818 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.918279855 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.919499986 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.925288283 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.951560162 seconds)
  done (took 168.647384789 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.910552331 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.973561922 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.921840649 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.966671777 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.921012272 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.910525943 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.016315659 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.934660845 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.922595402 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.912122818 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.910303063 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.95179186 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.918899493 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.008114164 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.949673974 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.016944454 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.021356516 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.917585599 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.913166765 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.912625372 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.967064346 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.922600619 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.95045341 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.983076448 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.924707844 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.975118092 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.923278647 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.911857952 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.920384469 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.033001668 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.931442258 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.944270606 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.955095712 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.940860192 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.034314613 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.033740929 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.014982568 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.016391004 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.926629706 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.91338273 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.913139939 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.914036649 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.97494901 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.925449418 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.922115949 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.028000015 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.932791583 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.912760997 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.915027617 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.913682132 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.933982083 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.938663431 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.955187615 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.046050329 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.958480855 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.940314632 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.018692832 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.0353734 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.914445257 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.017717667 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.91895074 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.025395965 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.930459806 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.914909738 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.91510048 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.919095001 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.961559187 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.023634434 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.024028747 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.928341597 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.020122483 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.965444556 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.928358993 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.91441317 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.916584926 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.978061981 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.032892584 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.965933339 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.984114984 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.96114004 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.922597326 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.920158796 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.915917248 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.950294691 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.921985457 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.027547538 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.037472201 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.920149065 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.914388555 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.915332002 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.915376881 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.947299824 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.985546252 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.965170836 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.021897512 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.95918201 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.961808153 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.9221689 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.930498666 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.919475798 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.957664913 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.924223158 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.927979577 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.197922619 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.956773232 seconds)
  done (took 207.252255673 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.311699225 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.964108272 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.996195196 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.196313894 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.309985263 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.792578118 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.962034242 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.968687475 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.993327923 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.099754171 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.042246395 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.02600005 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.964232296 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.945252121 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.965515865 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.995919345 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.997213671 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.266810818 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.180349819 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.575878122 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.96100437 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.234452985 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.313630501 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.353411307 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.024152036 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.328542599 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.548164061 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.063248805 seconds)
  done (took 64.225231894 seconds)
done (took 833.050901392 seconds)
SAVING RESULT...
DONE!
