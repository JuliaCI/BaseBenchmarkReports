cset: moving following pidspec: 1709
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.265579337 seconds)
loading group "string"... done (took 0.471162295 seconds)
loading group "linalg"... done (took 7.709561489 seconds)
loading group "parallel"... done (took 0.175459594 seconds)
loading group "find"... done (took 1.178512135 seconds)
loading group "tuple"... done (took 2.146073628 seconds)
loading group "dates"... done (took 1.351477678 seconds)
loading group "micro"... done (took 0.250007807 seconds)
loading group "io"... done (took 0.660848176 seconds)
loading group "scalar"... done (took 41.513684859 seconds)
loading group "sparse"... done (took 12.698284115 seconds)
loading group "broadcast"... done (took 1.038974888 seconds)
loading group "union"... done (took 13.788496169 seconds)
loading group "simd"... done (took 4.806431862 seconds)
loading group "random"... done (took 9.662818191 seconds)
loading group "problem"... done (took 1.992068612 seconds)
loading group "array"... done (took 22.503785154 seconds)
loading group "misc"... done (took 1.426593286 seconds)
loading group "sort"... done (took 3.600122643 seconds)
loading group "collection"... done (took 19.584958607 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.517405296 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138134064 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133803084 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148917198 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.205300776 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143600387 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157770087 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.115486195 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.966128288 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.187584838 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154407538 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.498946624 seconds)
done (took 5.118789321 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.222513208 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094195387 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103814484 seconds)
  done (took 0.875861134 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078032865 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146608844 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094744387 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078915679 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095368056 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080809898 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094322038 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078802487 seconds)
  done (took 1.355467576 seconds)
done (took 3.228030746 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.722160489 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.286838333 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.206314788 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.474202369 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193989428 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214506757 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675503447 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.365777348 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254491315 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101072363 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144668839 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391648122 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135979672 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680333086 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089356575 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124031269 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.18017426 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448754049 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084365866 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111895749 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11732258 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141818777 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128914366 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091699101 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185760035 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084404331 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.195859717 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108590933 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080919506 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.290849132 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200896803 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687832414 seconds)
  done (took 10.922634382 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112007636 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135018274 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098138622 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138799631 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135261008 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09963275 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08506362 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097195903 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121646678 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175924576 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115346196 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136741747 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095246852 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083077874 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11623754 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243968196 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120199805 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105309078 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100616521 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089506856 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138446584 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113280807 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094042191 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.10898013 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166377202 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208061027 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.126993431 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127376614 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097243986 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112373354 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.129165254 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.158089822 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096130088 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081415296 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174115953 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124235625 seconds)
  done (took 5.16072639 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.18849043 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121573329 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167857913 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165043977 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140534837 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161460046 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113588641 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.232384371 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.112823567 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165500744 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142764715 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116833271 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080956768 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098724495 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095746808 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.633449103 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164637568 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134745799 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097336642 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105279712 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101449843 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363650571 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087802467 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096975612 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082080281 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08234069 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161065202 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081431758 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.259386417 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.102099663 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.105824596 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100505635 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.157429184 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134808148 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12747988 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117318499 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09968642 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095340259 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178112667 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089423035 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098066416 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104121945 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136301299 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13455478 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097988098 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.0794388 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.22134374 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08186425 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096600997 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098855779 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.987038308 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182147464 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092441533 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098394402 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.334602524 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102257811 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100321724 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079397324 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097431784 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.287581879 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.199564679 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082666344 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100197677 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080865047 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.101714873 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.395522104 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100628523 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.818255601 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083194936 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107313689 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083056962 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098229588 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104623275 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089745633 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117989123 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082037864 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100804411 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080522139 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09873541 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083697944 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112161943 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094328325 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085148415 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098535736 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150168477 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096410464 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100441128 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130124938 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103559937 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082591417 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134791333 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102035679 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083605314 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136747371 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101132859 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.094539255 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103192554 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145143045 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098841061 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.195006681 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096126215 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126768555 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099443286 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114325193 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112930638 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100972866 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0872502 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098149333 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079653066 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168370697 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083508436 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100086477 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083445336 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113874253 seconds)
  done (took 22.941595662 seconds)
done (took 39.711177571 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.334052913 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10664052 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106540277 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10690386 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087271777 seconds)
  done (took 1.49920423 seconds)
done (took 2.236843986 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.283339124 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.174300953 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095595224 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169854022 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077560376 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.194097521 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160861476 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09536911 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202902689 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076901012 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182485556 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077747364 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095646108 seconds)
  done (took 2.645835722 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095448552 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116523076 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084175664 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113827235 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078040695 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114660874 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095631354 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120010435 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112189179 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086628583 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095910843 seconds)
  done (took 1.839682456 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095977596 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116084167 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083727125 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113608636 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078029351 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112865115 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09409429 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118872127 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111991444 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087811231 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095539246 seconds)
  done (took 1.844391396 seconds)
done (took 7.060270579 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.093049785 seconds)
  done (took 0.823623382 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.025212788 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.130775645 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112642193 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.153362163 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.320698593 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.198689479 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.558255582 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125486973 seconds)
  done (took 15.551307003 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.11675539 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.115878908 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.106496535 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088670856 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.103521987 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087339141 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104054035 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104069883 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086216737 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106233853 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084880043 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102525877 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102752691 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085140478 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.105046623 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084561624 seconds)
  done (took 2.378777553 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.1226546 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121119235 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108766602 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110902402 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089102388 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107685251 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109729857 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091908263 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105089596 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105963242 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094121471 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108583183 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10635855 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08185291 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109403712 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110866732 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088559857 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109207973 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109289621 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092920056 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110069487 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099039246 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089291812 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.111456798 seconds)
  done (took 3.342128592 seconds)
done (took 22.83153442 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.163063997 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109288187 seconds)
  done (took 1.005164233 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096704168 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113871353 seconds)
  done (took 0.945458268 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099188999 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09749193 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.125153584 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112461722 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082681771 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099362911 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123636159 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.08222255 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099285768 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083161791 seconds)
  done (took 1.743648301 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085429925 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.112837115 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104420502 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097723127 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108471935 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098595159 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091918939 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102416188 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113699621 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078582502 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10502763 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117597625 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087809398 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11922029 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10861691 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085324657 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104983832 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.103140994 seconds)
  done (took 2.575129692 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081714368 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100080154 seconds)
  done (took 0.929996801 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083786904 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096565789 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083579417 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100256867 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09663416 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079501071 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096628934 seconds)
  done (took 1.38333591 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.488123941 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136681946 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.269942421 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104789947 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106422981 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.310970143 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098377515 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085208322 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103199168 seconds)
  done (took 2.507420873 seconds)
done (took 11.83264212 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094290014 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.120931608 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115493715 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.477116854 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107139974 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098456329 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14854421 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.251684842 seconds)
done (took 2.169267447 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.159661562 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326858065 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116132686 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068840525 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09819556 seconds)
  done (took 1.363344772 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079909699 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101859467 seconds)
  done (took 0.926363709 seconds)
done (took 3.211967529 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081455085 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099675501 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.114234183 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.101257125 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.079543172 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.101892997 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.079370076 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098438388 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082416793 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099436292 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.082142572 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.099686975 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099122172 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079016188 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096375668 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079655137 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098792948 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080768339 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097209131 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079488568 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.099631182 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081850802 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097489206 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079443395 seconds)
  done (took 2.967801271 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100429449 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099831622 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105122474 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087934125 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103994982 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088584288 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105036964 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100354198 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090040656 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102681851 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085914948 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.103357964 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102092663 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086128592 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102810025 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103907184 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088821668 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100755268 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085233173 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103591038 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.106197569 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083351689 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10405248 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08820087 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102748053 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103561755 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084469091 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101525881 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088465791 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.103853271 seconds)
  done (took 3.663657891 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085446204 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096089705 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081015092 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105133097 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079325154 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100593534 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079442641 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099445729 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081288818 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098199874 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081411104 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.098205565 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080619029 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099303086 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081685689 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101396152 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111173498 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.08021855 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097939257 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08045105 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100959495 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080029327 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097941808 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079705613 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097463581 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079733433 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098378229 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079654583 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099041919 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079802199 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100834849 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083549649 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098448492 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086181614 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101616207 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.080267068 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101909425 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080810528 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098721345 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079930921 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.097320521 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.080302163 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.097843671 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087535395 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.099051424 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100147034 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081169142 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100450841 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081136569 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101617353 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079985872 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.098001978 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082613012 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099506724 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08499988 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097905844 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081459952 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.097795716 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081058085 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.097779451 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.079705095 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.096903429 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.082688631 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.098480629 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113796664 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087099269 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097795883 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081756747 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099479902 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084126501 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100512561 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.09493613 seconds)
  done (took 7.323566999 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084386803 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109264206 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081985069 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101206279 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078566646 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099810222 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101539099 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080925976 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100589479 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087812068 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099191929 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08186581 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100483597 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09341797 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0986938 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099821515 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087855423 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097191182 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08069062 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102399698 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081471516 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103169122 seconds)
  done (took 2.816437617 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212822711 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108160368 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145674531 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.112234962 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084869722 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110030097 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105252369 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089926368 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105764923 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08619706 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103818459 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105965931 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085892488 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103529932 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085881881 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105175617 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1062219 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087304905 seconds)
  done (took 2.708119966 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09382367 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099289741 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103306282 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099512738 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100007197 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083953344 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105983873 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109124326 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084768459 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099479923 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091175144 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102404372 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100911482 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083143067 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101517319 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081729768 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10201995 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083330282 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111118848 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108590538 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091616997 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111191129 seconds)
  done (took 2.913363778 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097940876 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101106025 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.11861886 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084116195 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095087091 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080149897 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106928368 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082582042 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109041295 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103117795 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084062099 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099960362 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090535158 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100916389 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106917519 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083242163 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103604673 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083691449 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103455587 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078959443 seconds)
  done (took 2.678713606 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106017743 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103817898 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103318095 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095830731 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103883309 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086095746 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11342133 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104111174 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085120336 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12956152 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103469749 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085793985 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112929375 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110262462 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085341295 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113457523 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113893714 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113381448 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085699133 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103633318 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.240630265 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085771317 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112198609 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103828116 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084896553 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10359378 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085445329 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109485524 seconds)
  done (took 3.75497805 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0818562 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101417274 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080761296 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.100121144 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.08179656 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.100273537 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081448484 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.100516605 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08351578 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099808867 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084035244 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101503013 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08394742 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.10169292 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083424451 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101808101 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086040939 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099319456 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081252463 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099298461 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083297518 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101719296 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084300999 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09929543 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081454956 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101632883 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081432242 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099668439 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083339528 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099678855 seconds)
  done (took 3.517762402 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09295748 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108879169 seconds)
  done (took 0.974516213 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079207697 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118146401 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.0811783 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105857883 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089676414 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103202398 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111006279 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089461495 seconds)
  done (took 1.546761458 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097361398 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112267312 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085628941 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116207503 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.113728849 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097789226 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163919447 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.105123245 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090896969 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.100643797 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098388158 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.102171227 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108382336 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084659281 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107948775 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090540547 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100427424 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091128699 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105211633 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083063982 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105195047 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114374677 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087174111 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100323837 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085853267 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114219705 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112610635 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085929998 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107007735 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093896154 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.108813752 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078918334 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.102966082 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10318168 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082281759 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112978741 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096919328 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10641916 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11188917 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086220021 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115757041 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.079832933 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.107857029 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108624246 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095028098 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10460326 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08648374 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.098145476 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082444192 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106163886 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.07981329 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102750013 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078777433 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109878368 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10781612 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100095077 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.102294189 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086705108 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.106310687 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088045873 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.110704157 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105186562 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086855885 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102821679 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092489515 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.108088408 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092306877 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098785089 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.079050852 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.101117755 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111729116 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107598618 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111868135 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104005993 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086541325 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.101403096 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088426187 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105296496 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092808023 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.11159677 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103516415 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089743943 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110341861 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083949074 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105562923 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109367265 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.080955371 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102782769 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080837341 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116231925 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09990007 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081040663 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099422138 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093356725 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.106604013 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084480552 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.101774536 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096035795 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.098107479 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086006815 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105895208 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103912578 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095074273 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110291254 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111215915 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093238652 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.111822731 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086183505 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107320428 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081435929 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105270972 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087111109 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110804114 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078955829 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106941489 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.105989487 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086700498 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111186688 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083771678 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10375275 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111432004 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091922063 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.102446672 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081725205 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.106784542 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084668874 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108194251 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091644661 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102604366 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.098784805 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080671707 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107685016 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085148849 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.108897336 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091652644 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107528774 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097854174 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083026007 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10883402 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092660979 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.104266307 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085618548 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108158858 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.104509821 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084413225 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109336753 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086778056 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103078834 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089807627 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.106188912 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079793493 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108891666 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107116829 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083662013 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107277005 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08827329 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105443203 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08449337 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100444345 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107020132 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084956059 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100935811 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082901823 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100600607 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094395057 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106344558 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080856244 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.10142144 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.112296636 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083500172 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103760832 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084560646 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106357951 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086393593 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102609392 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085128256 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105272998 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117524987 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091502542 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106544991 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090572355 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11508956 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103865464 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087097978 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104179157 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086912556 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10540997 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093485484 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110822143 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109908633 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087435742 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099742164 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089745322 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111878829 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083168114 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101438713 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100142108 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087675645 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107948848 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086909066 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10279216 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081251932 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102524173 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105476203 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086280494 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100811724 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082026866 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107884707 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084424985 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.112758307 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105081303 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.0953704 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109172199 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080782858 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108555541 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102030986 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091969056 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099671232 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082915941 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.1030907 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.087378876 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103884204 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088974759 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.098566229 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093069473 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112543883 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104378196 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08525039 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104616177 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095019342 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.106622994 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089032654 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108233226 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109950389 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098814625 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105010183 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088882149 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113962274 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.086362106 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09866185 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110618827 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084394024 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.10462088 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084690608 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102618926 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089260664 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114530186 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108848028 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079572285 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.107465573 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084137222 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.103384474 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081382662 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112003559 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089684454 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.106144874 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113313858 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087132523 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.107015876 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090374224 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.104732855 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087721857 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105893577 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10882526 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086555405 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107475894 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08602777 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107171304 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084732715 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.103223653 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087398537 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105523331 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085597441 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111812072 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.107524845 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08641458 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107848195 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087840012 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106738469 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086442787 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104401494 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089022676 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10623557 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104553044 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088741456 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099635404 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09349557 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104402704 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09440073 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105275833 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082697776 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.110665261 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.108476666 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.092428935 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10627015 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.08759375 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.107393945 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086683818 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108480076 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113616798 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083961145 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.114501187 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092640748 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105834683 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.107961164 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085880744 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107363421 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084681649 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.106783653 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088018109 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105764235 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085687309 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110219096 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088458541 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105962586 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107146582 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087679357 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.10534717 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087400776 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099936113 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083714775 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.105251454 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086705136 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113059069 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106258805 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089602334 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103603881 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08779115 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104349527 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082450678 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.114117945 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11518063 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08698432 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114101686 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086728581 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107050154 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114911255 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080746036 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104413207 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084098154 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103259926 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094452063 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.107542273 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094982801 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105810549 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085315469 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.103005691 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10661582 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.085550943 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100037055 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085344904 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108041059 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08741461 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10363156 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08464929 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106189826 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085078529 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109693069 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10195775 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086163655 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102922984 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080997887 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102989778 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083238131 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.1096222 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087683548 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.103396205 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084716801 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105527821 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.107353907 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.096160394 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10561654 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088319876 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112804822 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086900378 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.109762868 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091808563 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.100944512 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109032164 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08652955 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105978861 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.0856674 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.110105373 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090133722 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107551646 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113038595 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086214301 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106319215 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087064113 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.104068077 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086091808 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.105489929 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086111151 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.106062807 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087987664 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114888917 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10440104 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088780862 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106047997 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087065208 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111230821 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087620222 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108556016 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11441138 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089106234 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10779621 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093306767 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.109794666 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089375917 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108584985 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106757909 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092796266 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.104644865 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093303522 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.105380888 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087302198 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10809777 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084357297 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105899783 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105106643 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086003683 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.111005305 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087570497 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.105760982 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085658851 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.104189358 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088838994 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110137142 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114116189 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089066135 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10902798 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.082057484 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.103365391 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087698402 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10466346 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089025212 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10967897 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112897799 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089670978 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.107537261 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085756614 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114367727 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092255446 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110999196 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103671284 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.09164886 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107850829 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089332492 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.107795463 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086544501 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107714646 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109344892 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085885522 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102111946 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092422462 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107081174 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087752797 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.108266474 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087483642 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106796283 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101641367 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089047732 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.109180898 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094051192 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109452919 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087160912 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117230367 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10594654 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087678238 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110459907 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085293894 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112305264 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082168386 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.107544599 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088655586 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108681748 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102498376 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086322524 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.10428336 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090364696 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105817851 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082403119 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117313895 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094398651 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.108829471 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104966259 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086155629 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101476794 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082321017 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.105691316 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086207432 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105451074 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093967281 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104461613 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084906491 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101856266 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105459841 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089352308 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.109539769 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084111966 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102334245 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085965683 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109019589 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09364927 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107057824 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086552199 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111293012 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109322843 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085954371 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111595948 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083963378 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111231473 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097666978 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108473938 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106814702 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092770274 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115464409 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087874082 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.103141795 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08885256 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.109624534 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106335634 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088859867 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108192169 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101626361 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110459542 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086536813 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.106795507 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109286464 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.0873461 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114246831 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088791382 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108352224 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092835524 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108848212 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11650077 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089961192 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113108788 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089583062 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.109446987 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085717501 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108125139 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104106172 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084826495 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107827871 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087583063 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112180952 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114312735 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.0875091 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117322137 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095213355 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.112376255 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083457432 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.106336594 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086034763 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103055113 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088458728 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.105510186 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104649334 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086195896 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106147669 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088319335 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113416173 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089883351 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.108991174 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087355311 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.10139008 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088840272 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.110108223 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107669116 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.084620896 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107487737 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088670923 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113527879 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094612283 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.107987171 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088797173 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108777833 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108014105 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083800138 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.11401485 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087083915 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.110389309 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087448466 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109145797 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.090019122 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112235258 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114243501 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090019897 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.110274087 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.10053544 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110762557 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085643252 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.105524323 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.113057074 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.086120675 seconds)
  done (took 59.70168285 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152704438 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082387478 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099767495 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079918334 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114352694 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100555688 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080804985 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100804298 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081273455 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103427746 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080900564 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099388365 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109505687 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107724572 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114943863 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104698201 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081164535 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100968911 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079569652 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101601465 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110309669 seconds)
  done (took 2.912948822 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109669438 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117960406 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115828124 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119927291 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090800161 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117667867 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115114808 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097340851 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.121017892 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111696143 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120515018 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096673015 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.112040007 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112194435 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112111003 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09402509 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120673008 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110564512 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.097350872 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114985833 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115178288 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11465179 seconds)
  done (took 3.2594024 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087459308 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103147954 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08714858 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098518844 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084020185 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099235781 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088198844 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102239954 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08787251 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103324432 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083356155 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102360693 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085976505 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.09884594 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102373349 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083050907 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154438683 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108298045 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084963834 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105721119 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.080747227 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106419858 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.080420059 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.100571277 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102405403 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090639596 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105400975 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082790778 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103954051 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083518855 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105082723 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082600961 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105912856 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.084990481 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.103414817 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.083514098 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104787633 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104326672 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080798415 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.10173078 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08578661 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100004011 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085021835 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106769642 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08267967 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102993459 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087107401 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103971838 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.079932292 seconds)
  done (took 5.500661351 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.108818967 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162428546 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086921734 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.147764222 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127823773 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.118652406 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092556004 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14811982 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.108275646 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086872979 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129762975 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.126715682 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108945707 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.094390515 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.114949346 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108631859 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.09074208 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107974848 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.093368571 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10928438 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.114477142 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094296717 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.124143561 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123518061 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113098532 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087847018 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107948099 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.094169184 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.122286214 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114878521 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.115037156 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.097055484 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126084072 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.114851381 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089037257 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111931564 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.127875809 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088807402 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.113064314 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106477924 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091380149 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11381553 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.095221211 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.129605311 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108877625 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.114196761 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089113173 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10588245 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.123094756 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091563843 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118870627 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125500303 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093515114 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.110148653 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115331818 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.10608168 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109568515 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107201534 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.092529918 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.12328655 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.106568431 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.094005608 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.125170584 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111376516 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.097017356 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.125484368 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113982512 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093327773 seconds)
  done (took 8.468774454 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09977472 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.116493172 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122886538 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123786086 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092825421 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112389706 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111564461 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091763627 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11207066 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117859944 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113169957 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.136277253 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087223219 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116286939 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113302429 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093207154 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113228773 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112235086 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093022542 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112839391 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112425133 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122339887 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093333908 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123175354 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144955842 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107182316 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093499192 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112267497 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12309858 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111959548 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10741848 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.11238846 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11271131 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121927149 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124883718 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092621805 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103947327 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09213604 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.112480803 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111759901 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.087069027 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122767844 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112721061 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106925497 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092929782 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11289876 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122814215 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126356304 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096918796 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118495638 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113640275 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122838982 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091278485 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11353187 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122732233 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149500387 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122748733 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123053745 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092695136 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123173147 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123296724 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131305897 seconds)
  done (took 7.802393492 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113693791 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117310278 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119993751 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101014904 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083844608 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109922098 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083900927 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102992913 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09511517 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.116174802 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118520917 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109962853 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094234113 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118303927 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110344766 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113410069 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089949581 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112742537 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116765892 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089860206 seconds)
  done (took 2.959270598 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09869224 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129546737 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087651574 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113191947 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109056947 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092542697 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108954851 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108165969 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08739482 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108602968 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09804545 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117527771 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10649962 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093090199 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117876506 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112401022 seconds)
  done (took 2.534262127 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101963383 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121268286 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121605584 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086151559 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104992201 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08226279 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106947137 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101501892 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082856118 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122080119 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086330978 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110644488 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105815494 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084286304 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102049839 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089687093 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103852203 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083953448 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106354478 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.122118385 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096781153 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105493984 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.086611603 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108427313 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106143224 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091715973 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107294694 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.083176718 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.106197295 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10720554 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086704106 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114606061 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082413048 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105117088 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104206059 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085148352 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106354054 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086374348 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109701255 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086138491 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.106489462 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10519262 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088568204 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108489535 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083346407 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106531796 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081788426 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112095534 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103920397 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086781217 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106296511 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088568858 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107604409 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117445272 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090006075 seconds)
  done (took 6.332200971 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104925118 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113327231 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081695454 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104901402 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08992013 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109899029 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110104068 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089489654 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109046905 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085587408 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107705473 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091031742 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108650132 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109839308 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090255634 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110253486 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08106387 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107904104 seconds)
  done (took 2.658838255 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096456776 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10872586 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094113971 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107738286 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086308791 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110973386 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081815027 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.108309497 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085754007 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.109048478 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107442134 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090180913 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108610078 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.092585807 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111426576 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090290188 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.114537688 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086894459 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10784968 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10188414 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089763746 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104641159 seconds)
  done (took 3.043059677 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.12339402 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.131301615 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.098138904 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.240001806 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106721627 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.136219476 seconds)
  done (took 1.683671045 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114370466 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122575923 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107487291 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108153104 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117659559 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087752135 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10938805 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109433252 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119366741 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103274465 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109623301 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120031837 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118786252 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098313388 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115555298 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115511232 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087888954 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10941609 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107807772 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130592681 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08866162 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119949895 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108426633 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088868745 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110402213 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119162169 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118581936 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103244808 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109098217 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119323824 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115594806 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089097325 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120317346 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123775869 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090014157 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119544135 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109526422 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129798884 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094725635 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119822567 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110255082 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09651774 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119569515 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115491779 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119865152 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088540894 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114822292 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110152141 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088750129 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136391692 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11626232 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118277908 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117264313 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099979981 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120008522 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138241348 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125194316 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119653404 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116836724 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103143631 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119927427 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117961731 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120473263 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125389709 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09645475 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118295656 seconds)
  done (took 8.237307642 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106939295 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130007785 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109531514 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103145812 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099224128 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110053486 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10899473 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08916631 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11039399 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08755518 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154458825 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109196495 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119239467 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120209701 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08866111 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109063182 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109719318 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118819028 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08888053 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137942284 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110288803 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119246149 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097535932 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119900237 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126491975 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116910093 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089119039 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113396871 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109296676 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089333595 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116292766 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109083459 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118940507 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089150164 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120510794 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109721272 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088655054 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116120541 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110423286 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094922817 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119554745 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131702468 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10913303 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088740908 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124249367 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110183151 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109996849 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088385256 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109344317 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088015035 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124396337 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126090974 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125368771 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119974027 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089398794 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109769911 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108966335 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089832838 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109554353 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11605795 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119187962 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089544917 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138305361 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109786742 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110093268 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09934362 seconds)
  done (took 8.120536385 seconds)
done (took 158.825179784 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102227322 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138860986 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096708641 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169685445 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107625895 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120379376 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139551151 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098524844 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107872638 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086902223 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108195526 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088167736 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172185835 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08666757 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10822813 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.1094902 seconds)
  done (took 2.699611196 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.205744528 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.258283228 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105654754 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108802608 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090612119 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110935202 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08473587 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113727706 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.111020241 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086654133 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.11009449 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087530387 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.1066732 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087194085 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111290617 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089447838 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10668388 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089778518 seconds)
  done (took 2.926893876 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115759894 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147374448 seconds)
  done (took 1.130164537 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12352624 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183281706 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298985727 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156415759 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120373921 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127948868 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158062883 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132226645 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199959437 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124642408 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124796593 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098779076 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143192548 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11724607 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095586007 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118811413 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142747638 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.094230174 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116198552 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116721826 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118617588 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106968199 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096455721 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115034413 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182486391 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12141557 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086098309 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108025855 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.096054779 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116108853 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11425453 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.105317585 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.120302159 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.158708829 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.12552891 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.159097183 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.120147822 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112216749 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095587368 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113895306 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119252077 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099277893 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.127072146 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120536008 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088457432 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120784995 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086344147 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.108171936 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115369866 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.099556232 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11662796 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.094000543 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.179645967 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.09802943 seconds)
  done (took 7.601600452 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.804238839 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.165602631 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09157288 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.891610051 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139841223 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104105836 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.789271941 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111293196 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.261656319 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.769297669 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13886763 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105437993 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.24037284 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260736326 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.938562662 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318796304 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.673592211 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127218732 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151344582 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157476506 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095997045 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138302157 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13073476 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43277741 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116437842 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092192719 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118266899 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12013326 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163195818 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124960306 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094924684 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200072368 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.252316773 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185997146 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117262423 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11062991 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090104213 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171498603 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269872789 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21908828 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182428116 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08650702 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112708526 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120476008 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110653033 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109633785 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166684788 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.199530736 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174384075 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091513258 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123343697 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119476263 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099056498 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.189626432 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121791646 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.301557057 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.315811489 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111631657 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098984585 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.130020115 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267517216 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123644977 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.209428499 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137122374 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216695548 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088671329 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807482774 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.17136575 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112416578 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117836813 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097189074 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116258213 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119846375 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17060645 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.409291362 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102869605 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115735894 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089877481 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233585353 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125913938 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090583434 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162936734 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117086542 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118504116 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102806444 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122344516 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170979249 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.259784417 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101403125 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119972227 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115787679 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10155415 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11631859 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214788201 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224294167 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163208472 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234886252 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100585921 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.188012927 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171748644 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119350756 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.17546806 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117740837 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104582688 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12222063 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220498536 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147643251 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103031097 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11774162 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117695509 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150910133 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107015896 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118908759 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.172069648 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.486302376 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170575104 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108692425 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108097056 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119886307 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162865471 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11919346 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265480702 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099827298 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.19256943 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097179695 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110015006 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.096741271 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.188658009 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100925976 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120965479 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122772424 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096672161 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.259896629 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.199844064 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124677898 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247005525 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186146439 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098544445 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196402791 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097283295 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192092963 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098944377 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121230995 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115897948 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780609014 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124019717 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119179555 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094899127 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189878395 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112136302 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102978064 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126970083 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108784749 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786608348 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129669536 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122305066 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125117984 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098528454 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118570659 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117425313 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095167435 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163091032 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235719425 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122775148 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117566054 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.106145655 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.185089317 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09588546 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127492232 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126433359 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104464963 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121486833 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115440688 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103523885 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196102374 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167298528 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.225898523 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.570251175 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113432262 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126299479 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233945588 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090934944 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292328477 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118755699 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.208570907 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188525187 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100660109 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313654073 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.169234662 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189987234 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.129133325 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19824389 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088695192 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116992548 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168411832 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111643598 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097034649 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164752632 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12604385 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12389673 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.964639546 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091175993 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230307052 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.1106437 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173539359 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116900215 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120567618 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.280390934 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112549831 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128105831 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.168531595 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115208371 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10577477 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.873781366 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10484823 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122020156 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119063747 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227206045 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166177694 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118963453 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097939218 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122083413 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.166811372 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.214078249 seconds)
  done (took 44.521126639 seconds)
done (took 59.743799386 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278600668 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.221300532 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261965185 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171947777 seconds)
  done (took 1.905694948 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174531053 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150738763 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121122198 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108443711 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151045623 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086901381 seconds)
  done (took 1.685139068 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.336909739 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.295860896 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.218696242 seconds)
  done (took 1.747097779 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.253199647 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.273422366 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.333889527 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.423243191 seconds)
  done (took 2.28051201 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.201591189 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132170554 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.08856345 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.129187711 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.176028355 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245195026 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142306056 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.168505432 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122708853 seconds)
  done (took 2.344220377 seconds)
done (took 10.863268318 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.252576732 seconds)
    (2/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.156560966 seconds)
    (3/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.24838757 seconds)
    (4/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.107630392 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.135142889 seconds)
    (6/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.176479953 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124395025 seconds)
    (8/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.234990935 seconds)
    (9/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.094047449 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119698189 seconds)
    (11/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.150877818 seconds)
    (12/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104187949 seconds)
    (13/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.199454492 seconds)
    (14/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.124359495 seconds)
    (15/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10465685 seconds)
    (16/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.125930838 seconds)
    (17/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.196630594 seconds)
    (18/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.227927032 seconds)
    (19/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.12016399 seconds)
    (20/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.113263323 seconds)
    (21/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09120138 seconds)
    (22/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.204691921 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.152437051 seconds)
    (24/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116894068 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.124586287 seconds)
    (26/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.20122626 seconds)
    (27/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.127622123 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.23061301 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.153990539 seconds)
    (30/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.25834785 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.101810642 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.113937619 seconds)
    (33/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.104303413 seconds)
    (34/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.118361272 seconds)
    (35/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.261951433 seconds)
    (36/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.188428921 seconds)
    (37/286) benchmarking ("sort", Int8, false)...
    done (took 0.197973305 seconds)
    (38/286) benchmarking ("sort", Int8, true)...
    done (took 0.229451518 seconds)
    (39/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095055882 seconds)
    (40/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.125072734 seconds)
    (41/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.222218803 seconds)
    (42/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.215813784 seconds)
    (43/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.127528871 seconds)
    (44/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.182064013 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118213013 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.110566748 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110198139 seconds)
    (48/286) benchmarking ("sort", BigInt, false)...
    done (took 0.222293703 seconds)
    (49/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091979835 seconds)
    (50/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.152746117 seconds)
    (51/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.14110022 seconds)
    (52/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.152274337 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.136033127 seconds)
    (54/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.192655136 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.089965423 seconds)
    (56/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091119289 seconds)
    (57/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097682353 seconds)
    (58/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.105542695 seconds)
    (59/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.13150893 seconds)
    (60/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.234369454 seconds)
    (61/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117295609 seconds)
    (62/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.233541285 seconds)
    (63/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.195518915 seconds)
    (64/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.133129118 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111637358 seconds)
    (66/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.126953344 seconds)
    (67/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.071188049 seconds)
    (68/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.121494978 seconds)
    (69/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119610178 seconds)
    (70/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.143275827 seconds)
    (71/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.09832175 seconds)
    (72/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.200113611 seconds)
    (73/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.118189968 seconds)
    (74/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105126112 seconds)
    (75/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.146436063 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.137888777 seconds)
    (77/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.094401628 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109842649 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.088278346 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109769058 seconds)
    (81/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.095137663 seconds)
    (82/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066534977 seconds)
    (83/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.137447635 seconds)
    (84/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.23834329 seconds)
    (85/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.154693312 seconds)
    (86/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06823485 seconds)
    (87/286) benchmarking ("sort", Float64, false)...
    done (took 0.173980354 seconds)
    (88/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.19599642 seconds)
    (89/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.085494236 seconds)
    (90/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.117427348 seconds)
    (91/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.08362806 seconds)
    (92/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.156474875 seconds)
    (93/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103474682 seconds)
    (94/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.118574567 seconds)
    (95/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.161784377 seconds)
    (96/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.091702003 seconds)
    (97/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.096659267 seconds)
    (98/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.137034251 seconds)
    (99/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175915521 seconds)
    (100/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.185451069 seconds)
    (101/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067744009 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.087343818 seconds)
    (103/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.091938648 seconds)
    (104/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.139592798 seconds)
    (105/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104850261 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117956184 seconds)
    (107/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.08722406 seconds)
    (108/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.112209697 seconds)
    (109/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.096444953 seconds)
    (110/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.1140562 seconds)
    (111/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.162570194 seconds)
    (112/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138998011 seconds)
    (113/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.122017942 seconds)
    (114/286) benchmarking ("sort", Float32, false)...
    done (took 0.152018663 seconds)
    (115/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174654715 seconds)
    (116/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.111791835 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 0.183486151 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.097864349 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118131964 seconds)
    (120/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.159637644 seconds)
    (121/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.107083114 seconds)
    (122/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.077298554 seconds)
    (123/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.090894244 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094691363 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117978926 seconds)
    (126/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067650735 seconds)
    (127/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.122167667 seconds)
    (128/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096375907 seconds)
    (129/286) benchmarking ("sort", BigInt, true)...
    done (took 0.240411933 seconds)
    (130/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067321617 seconds)
    (131/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132277932 seconds)
    (132/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06957672 seconds)
    (133/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.186892446 seconds)
    (134/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.191493664 seconds)
    (135/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.137622657 seconds)
    (136/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.207871773 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.102111957 seconds)
    (138/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.11779985 seconds)
    (139/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.094025489 seconds)
    (140/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.097426451 seconds)
    (141/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091802995 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109678859 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095815815 seconds)
    (144/286) benchmarking ("sort", Float32, true)...
    done (took 0.234352991 seconds)
    (145/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.090867923 seconds)
    (146/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099708598 seconds)
    (147/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.198680896 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111660119 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097280036 seconds)
    (150/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.112021798 seconds)
    (151/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.152304808 seconds)
    (152/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.092386166 seconds)
    (153/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.149976881 seconds)
    (154/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.090665887 seconds)
    (155/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.098274486 seconds)
    (156/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.189133871 seconds)
    (157/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.11281701 seconds)
    (158/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.077777028 seconds)
    (159/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087358756 seconds)
    (160/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.092465927 seconds)
    (161/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111652655 seconds)
    (162/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.114304288 seconds)
    (163/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.123323026 seconds)
    (164/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088725706 seconds)
    (165/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.124099718 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094998508 seconds)
    (167/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.170722272 seconds)
    (168/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.06805053 seconds)
    (169/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118581738 seconds)
    (170/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098186473 seconds)
    (171/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.159276352 seconds)
    (172/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.127804995 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088923985 seconds)
    (174/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.112572697 seconds)
    (175/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.09206005 seconds)
    (176/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.198776563 seconds)
    (177/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110882969 seconds)
    (178/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.079221071 seconds)
    (179/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.06758963 seconds)
    (180/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.091301444 seconds)
    (181/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067533737 seconds)
    (182/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094705772 seconds)
    (183/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091404396 seconds)
    (184/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114805827 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 0.227628835 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110458362 seconds)
    (187/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.11723399 seconds)
    (188/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068605795 seconds)
    (189/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139760069 seconds)
    (190/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.077532603 seconds)
    (191/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.09070176 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.122044979 seconds)
    (193/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.186496665 seconds)
    (194/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068755756 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.112344174 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098852055 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119231984 seconds)
    (198/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.130498753 seconds)
    (199/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127042623 seconds)
    (200/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068827285 seconds)
    (201/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091275056 seconds)
    (202/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.14123762 seconds)
    (203/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.092457256 seconds)
    (204/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.146628598 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117456365 seconds)
    (206/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068547611 seconds)
    (207/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067571938 seconds)
    (208/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.091677091 seconds)
    (209/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069533067 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.111402257 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088354657 seconds)
    (212/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067673518 seconds)
    (213/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.314529449 seconds)
    (214/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069044732 seconds)
    (215/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.111402585 seconds)
    (216/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.068091779 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111118507 seconds)
    (218/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.098035677 seconds)
    (219/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137749999 seconds)
    (220/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137462844 seconds)
    (221/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102057963 seconds)
    (222/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.112584372 seconds)
    (223/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.140492864 seconds)
    (224/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.093955946 seconds)
    (225/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.099903753 seconds)
    (226/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115044833 seconds)
    (227/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.068039621 seconds)
    (228/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.119526612 seconds)
    (229/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.15204563 seconds)
    (230/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.143290058 seconds)
    (231/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.095838714 seconds)
    (232/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.17403872 seconds)
    (233/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.113242757 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.088282478 seconds)
    (235/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138757032 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087807574 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117910163 seconds)
    (238/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068888816 seconds)
    (239/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.11235143 seconds)
    (240/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166275924 seconds)
    (241/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078850193 seconds)
    (242/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116025891 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097549714 seconds)
    (244/286) benchmarking ("sort", Float64, true)...
    done (took 0.233658364 seconds)
    (245/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066921576 seconds)
    (246/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.164257229 seconds)
    (247/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.110080225 seconds)
    (248/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096835258 seconds)
    (249/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.117384239 seconds)
    (250/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111759319 seconds)
    (251/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092848744 seconds)
    (252/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.068582665 seconds)
    (253/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067227568 seconds)
    (254/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117861328 seconds)
    (255/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067297107 seconds)
    (256/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.112058203 seconds)
    (257/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078939611 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.111745293 seconds)
    (259/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067974184 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087469812 seconds)
    (261/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.09104341 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.0965902 seconds)
    (263/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.139186102 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109007213 seconds)
    (265/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.069540603 seconds)
    (266/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.077051081 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.11001549 seconds)
    (268/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087722526 seconds)
    (269/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.091449787 seconds)
    (270/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.076899427 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095497813 seconds)
    (272/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.188173436 seconds)
    (273/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120202925 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.094035257 seconds)
    (275/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.101353909 seconds)
    (276/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068952459 seconds)
    (277/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093716527 seconds)
    (278/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.158592693 seconds)
    (279/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.112533916 seconds)
    (280/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.111032904 seconds)
    (281/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.110036134 seconds)
    (282/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067752488 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117663713 seconds)
    (284/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.068119197 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087193664 seconds)
    (286/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.093077813 seconds)
  done (took 36.652261272 seconds)
done (took 37.55316707 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.106247124 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15002532 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.097215165 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136153321 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124597821 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092423136 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119029232 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098452299 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12526927 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126279631 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09996703 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093396573 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097286243 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121837185 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09723697 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140208971 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123982226 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095606357 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118984682 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087320723 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119444012 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086989371 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112935026 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070797844 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122835776 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.097023933 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117642252 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.09684429 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.111293355 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.086855294 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.116956108 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118487536 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086624488 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124749391 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094380769 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11944662 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098962474 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120983997 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08988536 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111761602 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.09495939 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.110388439 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093932235 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.118665257 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.093116577 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.116871939 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120004938 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101197991 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140710437 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094066807 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.120386106 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.097113199 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.121348512 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117812115 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092201785 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119406245 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092952825 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140305371 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096079077 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116223623 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119179558 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096003335 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116351698 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095986739 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119741311 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.098100092 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.121870111 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.093100215 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.121999174 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11618148 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087715272 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119583153 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090880384 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110336937 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096721003 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122488842 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087516012 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117104762 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.094621476 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115666178 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.08745975 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113602329 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.089662873 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.117930598 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090121388 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.094711329 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.091705323 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117881335 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.087582784 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.120466996 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.094309526 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.118255703 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089629832 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.123550414 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.088230546 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.116630965 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087917874 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.111861458 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090290426 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11536325 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.087148237 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114498875 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120987308 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089675478 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117904825 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.1011789 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.111414474 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.09444144 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.1106543 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.087323541 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126702358 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098001744 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.112025564 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093273763 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.11058449 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094675261 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110572296 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.087550963 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.11277386 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111128407 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095128093 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110992838 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09079438 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118963075 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.10226277 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.111408822 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.091982263 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114228625 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.088046391 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.117236888 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088634733 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.111834936 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.090109377 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.102963064 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090633888 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.111863643 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09555367 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114058294 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.09740688 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113129526 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097487269 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116953959 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094802506 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117102339 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.087674932 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099231807 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094635026 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114330829 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.090065164 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111761495 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.089898342 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111073923 seconds)
done (took 17.075329341 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.092886247 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186398275 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153620594 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142711212 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10867218 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11303005 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122688505 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119907026 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114461455 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143766887 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111569658 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132413102 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148708431 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088474612 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112913408 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092646561 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113832588 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.104900806 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148152803 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133898383 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166812876 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.088269719 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147416821 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136457166 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.097805792 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12965453 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112953483 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092664015 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116002972 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113941034 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133995972 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.092105105 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113039626 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134683599 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.106184854 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121091776 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088423084 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119777723 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089952194 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112493613 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142748285 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.110568291 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.118386711 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.09405826 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.11627857 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.09072759 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114696109 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122065828 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099499348 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117210154 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.1034272 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157395148 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.116230208 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12420782 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087928807 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123384518 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.098558744 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115473199 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.089054339 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.115548621 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.088409201 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.116266349 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127298697 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.118377213 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.116996252 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122073282 seconds)
  done (took 8.696886156 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.111568332 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14061626 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10679023 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132400715 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112870871 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08905821 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113201088 seconds)
  done (took 1.767041394 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09523647 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136046668 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111789512 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137629242 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134543509 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.113075736 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124560983 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089910682 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134340935 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090455689 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135605161 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151609198 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091354164 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122911987 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139319233 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08983664 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139849133 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089922968 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117788504 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113017232 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117556555 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136025435 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092835029 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11486787 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104222974 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115166344 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163153334 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096363677 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115999668 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092892727 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113231271 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.127536857 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.129047398 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126970962 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089420722 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130996984 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.10486396 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113536416 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.101722382 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.119977087 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128961797 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090815437 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116595779 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087951341 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119263329 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101061798 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118374412 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.109206632 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118320833 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.111553434 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.122382616 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.10586186 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118802455 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119741145 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.092095045 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123414831 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099620583 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117836852 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110046243 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118858182 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132778959 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106737336 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129365649 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.107562996 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118159158 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.104285814 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.129622834 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11782755 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092893895 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119065029 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.107573362 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11334957 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.091462067 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.126817456 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092030511 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.138764408 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139014707 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092050349 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126694986 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.091034625 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116352276 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090663109 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.138846425 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093935966 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116192585 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093410099 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120156399 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.088377827 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.115452754 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118671439 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088432307 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117171255 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.093517874 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116177473 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093015469 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132979811 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091155087 seconds)
  done (took 11.959561408 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095507662 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115891716 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094357001 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11665118 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091222777 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116907056 seconds)
  done (took 1.612908619 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.123972155 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119059769 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104834947 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123117979 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157041825 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10563574 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130988962 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12567367 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10921878 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129964726 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131340138 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107524002 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137990548 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12287665 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105590543 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122501946 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.106219234 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126655109 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129091888 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097985471 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138546948 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122343776 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098571394 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133893817 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094338909 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122483021 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129073129 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103511229 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128312283 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.09928468 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123958017 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119777256 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097957173 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125158926 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131325332 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097942794 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121716066 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.094921055 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126311813 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11987035 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107011488 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122586852 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.103182505 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.12105106 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125532973 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.097632986 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120880768 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126712033 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.105334295 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120840976 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095488476 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122200014 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119670946 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095415998 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123316221 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100259868 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.12130759 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131351781 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.097995348 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122766104 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094579951 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119695815 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124960784 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094720336 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.130642851 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095313678 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122904693 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123171594 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097958475 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122788353 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.094394963 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119676664 seconds)
  done (took 9.346933906 seconds)
done (took 34.341027031 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.695601279 seconds)
  done (took 1.668445992 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.828183831 seconds)
  done (took 1.804765686 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.073560014 seconds)
  done (took 18.08164854 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.488460021 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.568867067 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.002142049 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.174915046 seconds)
  done (took 3.21104715 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.955666658 seconds)
  done (took 1.950063865 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.288475613 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.237042983 seconds)
  done (took 1.506813362 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.775183844 seconds)
  done (took 1.766196509 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.434823875 seconds)
  done (took 2.414935459 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.330424349 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184330427 seconds)
  done (took 1.509870041 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.566583664 seconds)
  done (took 1.556380765 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.808196827 seconds)
  done (took 10.805368334 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.276820198 seconds)
  done (took 1.282535453 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307634579 seconds)
  done (took 1.299980003 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.519575064 seconds)
  done (took 4.515535829 seconds)
done (took 54.359942693 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104988842 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12821836 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102274279 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125499663 seconds)
  done (took 1.448481921 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106628717 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123153284 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102157473 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122034553 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102696407 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.122607017 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125376053 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101893327 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12225898 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097548931 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122547965 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095264638 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.126054904 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124117152 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094405037 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124708067 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101062797 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12176461 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125316966 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097392516 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119628745 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099382331 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126530999 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09618561 seconds)
  done (took 3.698691136 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106148687 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120339529 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097327917 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119109503 seconds)
  done (took 1.447518444 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.107436872 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144389775 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.140473232 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101999687 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.145112387 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137747402 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093361352 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11829036 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095252554 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126640464 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09168668 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15194012 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139275161 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.101322405 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128502491 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089978866 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11872121 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138773983 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101663007 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127201625 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.09436698 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12721502 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091811953 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141752148 seconds)
  done (took 3.853228781 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.177109248 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128470222 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140454268 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096073761 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161654922 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141325695 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090083519 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142159752 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088917102 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132776521 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.092880839 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160351017 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131484438 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089087755 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115426347 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.090053097 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129894289 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131032579 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091879325 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129052187 seconds)
  done (took 3.460959733 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103841562 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118401091 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089064416 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117146483 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100292182 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122639728 seconds)
  done (took 1.656243098 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096362239 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116221168 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090714932 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116442554 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095609801 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116157223 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089299666 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116245105 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090456458 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116525031 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089900084 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114618867 seconds)
  done (took 2.252549505 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.514164159 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121457311 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120961505 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090061954 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123109698 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089982828 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.131017249 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093425413 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142334314 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089357427 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117703705 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.095060913 seconds)
  done (took 2.732171995 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24510606 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126802287 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279078292 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345327479 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154826378 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166142573 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.305304038 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164531613 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.194412241 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154266506 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199441168 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22645278 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153087237 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193910569 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139543345 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.12052643 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21937637 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227622024 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153996396 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239204897 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181779739 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169697614 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183799586 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152668376 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140695597 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162848769 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095853508 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131693306 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237356946 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182201549 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192247578 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162752015 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147602597 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233901888 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234067433 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198846617 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284583228 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136517718 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.141973025 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170128768 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258203211 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140265106 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210092159 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158413364 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133432276 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199672646 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161117438 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175752844 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146081706 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142124626 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224397899 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218026503 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.187543442 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140689145 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.324462402 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153728057 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.160525905 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193343649 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227850476 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227761052 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193796976 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12232991 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189902808 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189798724 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212710212 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.154230759 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.178360426 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148807899 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18663177 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192381781 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168107251 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179460908 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.210629068 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138486544 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171638278 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175840576 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171799547 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261054613 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188323742 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12399949 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172108182 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123949876 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134189787 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19704671 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125051276 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217977473 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145986906 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165701137 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213631922 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161406785 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162759577 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196371354 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214482388 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122344729 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112959977 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155081112 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128948313 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201093524 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114808917 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160932863 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157974589 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.132321308 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171608086 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125728095 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187933934 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091742428 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171631428 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214663675 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100712502 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164235188 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153627288 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15311189 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181500775 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198923768 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143289342 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13608662 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212135014 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18306362 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145025118 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179336777 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226405745 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.119110105 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151793829 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230563981 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221667887 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14236393 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204129275 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149360971 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137434631 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134382783 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185651243 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158486668 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163315681 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106768295 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.210329655 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204826467 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126435839 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113701615 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225999134 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107016561 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135066368 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157401225 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150140714 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138718902 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.117373871 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.147389006 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177657286 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207788063 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12905532 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192948017 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122218733 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236203495 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141871101 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152635788 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124121051 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123032887 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.189535047 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227358732 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106548497 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235225481 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172194939 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202236777 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170206295 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137638996 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180947788 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131998093 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094442182 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223417613 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167640497 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162719126 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196461238 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197910436 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.204084336 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.186272759 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169823935 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175564503 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167658646 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157042266 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111811494 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163491063 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160074707 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.126453763 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.141459647 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.10773781 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152232386 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144703292 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134730635 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199703432 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173196447 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219418988 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16129586 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150497228 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184324474 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103238726 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206077008 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17938215 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14800816 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.198525775 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195222042 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191533463 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145487308 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230911949 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094545764 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12708748 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142645834 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17033718 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107760763 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13828206 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16531016 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184319985 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178896447 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174293094 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23633828 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17491703 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193750076 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.124323489 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171554275 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180663048 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180035805 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181680766 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117160424 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151982877 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179977771 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151454512 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26030707 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170609316 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176196179 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229233522 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.125729792 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133520121 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15244996 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181352896 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156242115 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174786109 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147781918 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139620347 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156564217 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104962741 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161980542 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178905731 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165382076 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209492666 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151347074 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189289485 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128335145 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164179677 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161120133 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136292934 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.110742794 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172476721 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196085436 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146479756 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163366876 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184506044 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133080252 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310370885 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230149665 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192948865 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139465925 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156241412 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135710461 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164646529 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168566984 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179815786 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160487766 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216882899 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15975542 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109965247 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139709888 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150423957 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153543449 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.10695349 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149368557 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17716325 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139732099 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183909835 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157302593 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160085015 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17442665 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151320024 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118224422 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151534867 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247033161 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187007419 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243944529 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.123732003 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.203776731 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209191486 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127048563 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106170483 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136231846 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180494625 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137869525 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194307895 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189786321 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229601056 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183860806 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179580743 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141685542 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120985709 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132768997 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198228767 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205931092 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147971924 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.150470395 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199814238 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.139020147 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104732712 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16836086 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315406549 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120311115 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217175383 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080874063 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282285537 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126735485 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106606315 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164827141 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233243537 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137497811 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153571735 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169525446 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164082474 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1650425 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15145206 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219992525 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215064001 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202387732 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210727237 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106393643 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159782643 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171130022 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215708251 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159093474 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113137053 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23261544 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197532757 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194000855 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143945726 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169623939 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169286664 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162235706 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190912305 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137201425 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209345989 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137137508 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221144426 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153902533 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112137914 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176579754 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.217618957 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142469653 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185370258 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185753824 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137121041 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107326963 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161495421 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207262988 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121864311 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129348357 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177927887 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127545958 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196330584 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26864025 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134756723 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155503148 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120528537 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137200721 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157418712 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161867689 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139279207 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140246395 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222661605 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.109309018 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215557046 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20653283 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171641506 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16881382 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148536853 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.68980985 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133666627 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19465342 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150364494 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183771599 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151364148 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173934093 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161155281 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171033537 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198387308 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16125195 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233599121 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19323786 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.207703943 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106846828 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159558596 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157943289 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147116504 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15697813 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169724909 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162913202 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.14785182 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179630205 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166268338 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135355288 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113271651 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228340911 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121659209 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210822381 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182747589 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112002745 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17348558 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219439653 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135148016 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177261109 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206131365 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144510067 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152519145 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135717644 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.152203893 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238521747 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127268224 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192186498 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216646389 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133629541 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197748751 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.120148995 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225895443 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160321022 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189483156 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145700372 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15767184 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158989421 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137922885 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104650498 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157240926 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166526196 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152579403 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16201571 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142520017 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218681188 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098415615 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147296226 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289275695 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17427955 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248523353 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136923866 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109600538 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16216537 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15011568 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178448155 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180170406 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138163673 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136060544 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135357477 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.12956341 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112508581 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157519401 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193774237 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161549746 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239768127 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137907374 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253483789 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14201967 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156647173 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089142362 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133333075 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152122588 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147355989 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152510237 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195298323 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268863689 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147906003 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.107486128 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150884128 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126729333 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108538144 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16846048 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164737224 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181048773 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143154286 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110244663 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157369816 seconds)
  done (took 82.604186841 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169107932 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132620768 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148263924 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204587176 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177925819 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272131009 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212020643 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25494484 seconds)
  done (took 2.664674719 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.100042646 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148080279 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157879292 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134064532 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09321287 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121049783 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.340177879 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133512749 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092428412 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.149733121 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.148665339 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.120007392 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.53038427 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.119190996 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120461993 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083653069 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.117971901 seconds)
  done (took 3.797792439 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.176448849 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.495628467 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.036456828 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195585917 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160025997 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.118896214 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.710343872 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095640664 seconds)
  done (took 12.082959862 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.122093147 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137628748 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.125188061 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.155611794 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.142707651 seconds)
  done (took 1.789372508 seconds)
done (took 124.478821634 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.10452191 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128092242 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10026342 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131007945 seconds)
  done (took 1.546270144 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.101321156 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073644548 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101906926 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07551497 seconds)
  done (took 1.445808856 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.191418546 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.169457768 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401430719 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072860063 seconds)
  done (took 1.601525597 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.121669566 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134148965 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105532957 seconds)
  done (took 1.471584611 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.113291494 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130100821 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104003006 seconds)
  done (took 1.454127295 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114189703 seconds)
  done (took 1.221295507 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.11553865 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138535987 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109647692 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137302952 seconds)
  done (took 1.608045393 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.105328254 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128023101 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110094903 seconds)
  done (took 1.448168449 seconds)
done (took 13.252809182 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109986035 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423007566 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.38632116 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139981175 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723647551 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381297745 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.062697676 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146558359 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167030785 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094449372 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140595394 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673007822 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.053740294 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.376335816 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.011830182 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.374737131 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676407137 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122363022 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092186005 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122870138 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.04543787 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09429419 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121467146 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093577745 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703065347 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.398026936 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123817569 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.343511998 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121042556 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126679409 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384114924 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123664043 seconds)
  done (took 17.05050043 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10175681 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174982183 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098681982 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124650488 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124017168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095016444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124795459 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094425491 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181076501 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123300421 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111890245 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123368749 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.09859086 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124907523 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144962367 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093683422 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125275785 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093621355 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123346976 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095267174 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141283712 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121312134 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096377539 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122088319 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0950083 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136157646 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096462989 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121853269 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093136633 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12744017 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127994395 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097072354 seconds)
  done (took 4.860935598 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148441884 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184493536 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128806082 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127482247 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169692931 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124695937 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199507821 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12025459 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184359617 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123629969 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14049331 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093976312 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157503846 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09595719 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144174468 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12266837 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097922999 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12264431 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093169671 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123764162 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11236289 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121643892 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122975381 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094355078 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123073096 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109470609 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125085774 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094058379 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122955098 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127347992 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101302985 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124500284 seconds)
  done (took 5.19838201 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.104610104 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127024437 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110809406 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13945441 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095079807 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126282185 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098529334 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12555371 seconds)
  done (took 2.038796875 seconds)
done (took 30.259469767 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117269301 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12849182 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107525462 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135405216 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103677554 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131776968 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09224805 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134798292 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.106115254 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.1321432 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137961707 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09327614 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123459482 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093024059 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136418551 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098110441 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134518031 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10384204 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134869987 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132896933 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096184151 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133324962 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103910501 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133504296 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105355176 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133934373 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.109668697 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.130165413 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12270872 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096619185 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124528183 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104604488 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124436306 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.107050802 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127782181 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098637321 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124517723 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095751971 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133605103 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.105623457 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.129542822 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.13319018 seconds)
  done (took 6.05449605 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.11579473 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140772848 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105590204 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082158666 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117854701 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081711391 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.1380833 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080935823 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110278724 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10833415 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074926303 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107237221 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079136024 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073428035 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.106252822 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076112981 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108332333 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076023589 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076886509 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105841797 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080510954 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073714209 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109228138 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079906358 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075412868 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111196283 seconds)
  done (took 3.609278233 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107546819 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134980229 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115234735 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184631651 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162164922 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.101225162 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13301363 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.111969846 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.139126527 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120993797 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.098201217 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150178279 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111481953 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131027846 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093418762 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13818723 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.107560648 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.123974472 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129618228 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113513572 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139574788 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103545142 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142136984 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.105048856 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.122553687 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094999167 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.127530302 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136890489 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099107078 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132359675 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099073282 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126310644 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.095867801 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.134539016 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126911026 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095929954 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14264775 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104348475 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131401263 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.09434055 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.131221367 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.09425992 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145628683 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161616647 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093895852 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130462382 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.098321912 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.134489925 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.094204737 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142468632 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132612371 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.094233275 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125898348 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.093385649 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121864036 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108816323 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.12440991 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096356771 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132758109 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099380586 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136665977 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.097812693 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140071621 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121499733 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101956743 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12146023 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.094660302 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120792413 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.116374134 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124801767 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163340158 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095472641 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123309661 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102908787 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130627311 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100423466 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.123766405 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109873182 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13253249 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.096844131 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.133246194 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126036437 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097591224 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.14106661 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096997897 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124449341 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.095564588 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129608946 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.09648239 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.124466653 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107810534 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.123193743 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096356587 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141456445 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122170377 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095498503 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130036635 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099335518 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.123558265 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107701775 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.129898923 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093678892 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.134509671 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122890958 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09762716 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.132988827 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.099203731 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.123213162 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.098935067 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.13078053 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.094049266 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.125164801 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096688858 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.12527629 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103802053 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131255574 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128059786 seconds)
  done (took 14.978160979 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235996365 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218072525 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.19062363 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.295739306 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.105509723 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.147220824 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214366532 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157851956 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.093643539 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16230986 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172911351 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183558254 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170631526 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181463287 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170007929 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.124070401 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112972518 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.168040327 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216697356 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.295070368 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115364331 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133936049 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163953621 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.16224865 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107518618 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.143722165 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.143582963 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.107400107 seconds)
  done (took 5.822738331 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.116846322 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157216759 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099610074 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146320383 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150409023 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09370532 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129699269 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.096249089 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137076097 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137754016 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094578596 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.13109764 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101334292 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134038332 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.094168747 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.134677602 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13304654 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09665957 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126827964 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.099216431 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134691145 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.104031219 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128578555 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092751392 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134024613 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.093280603 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.11674844 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144261371 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.09402839 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146342474 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.092005552 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133176577 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137645471 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095379997 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123376301 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.097354381 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126069244 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.097078078 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12621885 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.093375831 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123491111 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078796554 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123466901 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.110403491 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.131425349 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.081819861 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130888118 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.100142766 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125872359 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.092007759 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.128674193 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.09718299 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.128482647 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.102282101 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127814474 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.095255763 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.127780429 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.086868327 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.13219636 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.096490007 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115572778 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.093831554 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.130035341 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.089916065 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.133165538 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.098882596 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.123640388 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.096100725 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.129513983 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130233678 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.097130761 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130373224 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093880666 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127765271 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.097403952 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130521532 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.098641835 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123507758 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.094746886 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.12522063 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076958796 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124994652 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076014459 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098490318 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.122438686 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.093030247 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.127878798 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130714304 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110537768 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.127116373 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103800088 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.126043119 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.094096731 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.128944251 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.084340571 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.128137826 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.110595328 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.144132803 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125298228 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.092641963 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.140977975 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.098224788 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124533202 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076996879 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.134359762 seconds)
  done (took 13.147123581 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139252289 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156873588 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09626216 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.14294615 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158208964 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158678681 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102526983 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132823758 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09714071 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.14332634 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.095720691 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.134063553 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096995833 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138949607 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159045498 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105935536 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127343684 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109724017 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128856409 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17065885 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.11343639 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144078312 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.112052354 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126348274 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.101244166 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141533528 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161969332 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.109279404 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138002021 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.114425504 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.14037217 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160946421 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.114633204 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129841642 seconds)
  done (took 5.547511722 seconds)
done (took 50.272217931 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.220914925 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.454848897 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.211955853 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.116046403 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.257552251 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.222651383 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.241995463 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.210072246 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.858880794 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.212783732 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.477253193 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.833852884 seconds)
done (took 60.45143538 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.218903067 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.367616009 seconds)
    (2/2) benchmarking "String"...
    done (took 1.52610134 seconds)
  done (took 4.03457977 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.815654145 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.174818127 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.472046028 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.210873536 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.206753928 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.501057612 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.952686587 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.586376374 seconds)
  done (took 28.235320323 seconds)
done (took 42.439014946 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.21746322 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.263504523 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.243668694 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.187018407 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.316594575 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.229786189 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.241624513 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.222665141 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.236131895 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.191533427 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.227439177 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.227607943 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.231772085 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.240620055 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.223775552 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.205966802 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.276186672 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.74967104 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.616545168 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.211980633 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.220180975 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.231242327 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.222965351 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.209871484 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.219785888 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.207105069 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.208006685 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.207813734 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.777241518 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.209990282 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.223324081 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.408321622 seconds)
  done (took 190.037707682 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.210914961 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.273846199 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.39297741 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.248544007 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.71201085 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.412322213 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.359738197 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.782174988 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.231043196 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.220260825 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.453239027 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.214387688 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.526979731 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.18145941 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.242899956 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.276853489 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.433110004 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.531013748 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.247787577 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.34326239 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.240192981 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.448884467 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.346055602 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.409759964 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.234970493 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.242488826 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.243674691 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.219636622 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.404360274 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.373649004 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.220701782 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.266670906 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.842903744 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.061253945 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.224893141 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.214701729 seconds)
  done (took 150.426723977 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.213019362 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.21276327 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213318806 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.247610878 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.213957835 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.802539014 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.802935103 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.727378276 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.378906763 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.655337246 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.478493403 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.21109816 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308814411 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.227322335 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.215927266 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.230709644 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.255573247 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.216032466 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.215440209 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.801812624 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.228977084 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.677764393 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.3932671 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.226064353 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248701678 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.607676098 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211163109 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249282338 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.774898251 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.546292718 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.261753982 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212109061 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.214323776 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.609095959 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331704267 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214120985 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249086682 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.214921183 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.497781017 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212229163 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.215287176 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.217525118 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.882127827 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.212214951 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.805697437 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.217137886 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.174639878 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213858432 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.214882002 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.215804672 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.748529771 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.969236213 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.232780646 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.216299314 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.218422074 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.215381089 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.215881315 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.250100819 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.216034225 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.559055666 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.31402092 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.233023983 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.220661834 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2511668 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.216873274 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.474062183 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.23488491 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.601052862 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.288821026 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.32839847 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.806140302 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218081691 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318416629 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337235352 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.214764138 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.219215881 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.219252117 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.218830274 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.330817913 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.215904675 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.637307918 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.214822455 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.396390852 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.231354546 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.677857329 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.317410202 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.215400657 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.650286971 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.221095161 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.219176412 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.974652599 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313811514 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.214650184 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.219499253 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.218547623 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.647051818 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.807303123 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.505304521 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.220232448 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.934365995 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.221591221 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.660707785 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.782210073 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.919594655 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.220583071 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33505542 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.395243565 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.234153685 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.219802232 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.63942059 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.221016845 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.278149932 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.221320271 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.619575135 seconds)
  done (took 369.228337697 seconds)
done (took 710.827703894 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.820139587 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.808998669 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.912189352 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.800627529 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.757885767 seconds)
  done (took 10.240548732 seconds)
done (took 11.383507185 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.409323997 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.40687856 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280035291 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.413513447 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249585405 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.429148102 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.387249888 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.236937753 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.323372124 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.300698072 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.324118861 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.270100719 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.256718158 seconds)
  done (took 18.428194313 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.550234306 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.536184387 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280545501 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.548089786 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25741438 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.551748947 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.426427821 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.438822145 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.43944863 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254484435 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235271093 seconds)
  done (took 16.662244393 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.557018602 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.537987993 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284524606 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.549244496 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260090241 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.579034156 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.434954089 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.463906236 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441333928 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2549523 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235013392 seconds)
  done (took 16.74038239 seconds)
done (took 52.975552393 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.231653597 seconds)
  done (took 2.373718596 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.266456725 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.427180869 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.249034637 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.236623642 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.231920949 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.235743008 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.23652205 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.231601817 seconds)
  done (took 11.259071358 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.229309111 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.23318938 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.232246244 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.231949529 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.229184127 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.231905736 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.230374686 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.231798964 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.229328321 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.232119349 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.230769095 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.228826615 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.228980098 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.229554059 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.23235873 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.230719097 seconds)
  done (took 20.837848179 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.231540959 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.230322732 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.229854689 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.231167942 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.231001524 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.230271475 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.230772531 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.230053489 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.229446807 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.230082288 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.230248547 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.229458039 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.229908182 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.230403011 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.230659608 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.232442757 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.23138735 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.231477672 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.235646753 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.229937738 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.230627426 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.232244138 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.231034483 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.231322059 seconds)
  done (took 30.688412802 seconds)
done (took 66.303204664 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.874567691 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.961993823 seconds)
  done (took 6.981791426 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.234033776 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.233782608 seconds)
  done (took 3.616161191 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.233980356 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.234721767 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.232823456 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.233031729 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.233212912 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.232383066 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.233603381 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.233983192 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.234503434 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.233386484 seconds)
  done (took 13.482073285 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.234424785 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.23368455 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.234809669 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.234903784 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.234503253 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.232988767 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.234155006 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.23425603 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.234745722 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.229821116 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.234367775 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.233458612 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.235543653 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.232364677 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.234504286 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.232993731 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.232912044 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.231678911 seconds)
  done (took 23.35365425 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.235487253 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.236035866 seconds)
  done (took 3.619381816 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.233087436 seconds)
    (2/7) benchmarking "second"...
    done (took 1.232858219 seconds)
    (3/7) benchmarking "month"...
    done (took 1.233440388 seconds)
    (4/7) benchmarking "year"...
    done (took 1.233673373 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.233536476 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.234011942 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.233853076 seconds)
  done (took 9.783202726 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.23592515 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.428602083 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.534118466 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.816817615 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.238213155 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.239502415 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.109942207 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.239018058 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.24283393 seconds)
  done (took 14.233511151 seconds)
done (took 76.217521 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.281457117 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.244690087 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.533548284 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.23944238 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.245290089 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.573011709 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.264677308 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.350928319 seconds)
done (took 37.885020297 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.232214688 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.222752914 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.086823229 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.222819012 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.319728393 seconds)
  done (took 19.001280896 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.302960294 seconds)
    (2/2) benchmarking "read"...
    done (took 1.565089951 seconds)
  done (took 5.017220807 seconds)
done (took 31.401428794 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237816146 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.237365423 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.23466448 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.23819484 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.234974832 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.236869435 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.234352182 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.235737475 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.238323467 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.237461204 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.238410775 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.236934309 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23623154 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236048669 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235010639 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.236120815 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238282394 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.236114487 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235819113 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23481932 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.238914322 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238508114 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.237086221 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.236199129 seconds)
  done (took 30.831398314 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.239010309 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.235999121 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.238726952 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.237319732 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.236825608 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.239359365 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.238404033 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.236229114 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.239868799 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.23804642 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236178808 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.236412483 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.236757496 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.235490172 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238876766 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.23670328 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.239262788 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235909144 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238533099 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.237643364 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.239682143 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237619477 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.23612976 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241402071 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.237794071 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236721433 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.240023134 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.238014267 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238869263 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.2372159 seconds)
  done (took 38.287127862 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.24407924 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.249394526 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.240216745 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.239990922 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.240339276 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.240740148 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.239090153 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.240240919 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.240138917 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.241733182 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.240918998 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.239975378 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.240318403 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.240734227 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.24087883 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.241269486 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.241621033 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.241091501 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.241483195 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.241295358 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.241208844 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.242179376 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.2419832 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.242493412 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.241454887 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.241737319 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.240919972 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.24144893 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.242027905 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.241813259 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.241971322 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.242710555 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.240905264 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.241444284 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.242878006 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.24309582 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.24692188 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.251058029 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.242597456 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.244534768 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.244054062 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.245245652 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.243580356 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.243538318 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.243968511 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.242614051 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.242546251 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.242533343 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.243357945 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.24329059 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.243649594 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.242140816 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.244427224 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.24327789 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.241966215 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.243075575 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.244314882 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.245371187 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.243945119 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.242700207 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.243180882 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.243585359 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.243425025 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.243804051 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.245097688 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.246538865 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.243139755 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.243082282 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.243821963 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.243891994 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.244204293 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.243621393 seconds)
  done (took 90.633291455 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.24387276 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.242768743 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.24087886 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.241260535 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242539754 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.244556687 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.241012991 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244769771 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240452631 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.244280044 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244026274 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.241239299 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240573352 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.244935225 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244423511 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.241494883 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.245013374 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2434175 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.245225394 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.246145484 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245605458 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.243345811 seconds)
  done (took 28.509546055 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247160884 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248424579 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.244276603 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.246991529 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.243504235 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.245900222 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.246322629 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.248898682 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245022949 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243748443 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245204782 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246370392 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.24427263 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245738741 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243989201 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245983891 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246325601 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246698468 seconds)
  done (took 23.584337732 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.245579095 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.244994124 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.247528603 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.244917685 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.246204822 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.247388121 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245024031 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.248105652 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.246979477 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.245509765 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.247342036 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247720618 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.247980551 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242500854 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248131759 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.245011264 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.248193367 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245471734 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248209454 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.245086024 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.245645747 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.249853288 seconds)
  done (took 28.584994642 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248884226 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.248230469 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.246418371 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.245255354 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.245516605 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.249253735 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.248213901 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.245564451 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.249930084 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.249504711 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243824601 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.249464717 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.247391501 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.248344521 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.245511602 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246387017 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.249674967 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.245642383 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250117758 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.24550383 seconds)
  done (took 26.110151304 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.250785946 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250931719 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.251471352 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251251454 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25138316 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.251679412 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250825536 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.251534642 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252604229 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.251904808 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.25212276 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.252141351 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251602583 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.251763885 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.250928307 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252978754 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251667059 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25286983 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.252843626 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252366782 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25368562 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.25310188 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253143599 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.254221956 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.252292966 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.253227063 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252927851 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.25333871 seconds)
  done (took 36.224549742 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253048347 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.251464681 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.249501179 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.250065144 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.249426935 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.251102108 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.250658713 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.252236489 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.25429451 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.25050917 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.25208568 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.252741133 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.252905881 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.253957665 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253650516 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.254390714 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253939799 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.251472118 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251876145 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250692954 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.253513749 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253500048 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.253142334 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.251331644 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251024852 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.253113822 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251413736 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.25219957 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254971065 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.251075405 seconds)
  done (took 38.730215922 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.274432544 seconds)
    (2/2) benchmarking "in"...
    done (took 1.272261628 seconds)
  done (took 3.71220805 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.25219209 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254944783 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.254904685 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.253393047 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.253075062 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.253931624 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.253362826 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25202723 seconds)
  done (took 11.194692105 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.255144151 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.256081821 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.256374672 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.256020219 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.257026092 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.255865938 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263167762 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.275119761 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.257750537 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.256833715 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.263335823 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.264843098 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.259569056 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256692096 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.256233238 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256717201 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.25606911 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.256641069 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.258739388 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.256992208 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258050025 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259135592 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259089567 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.255046335 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.258972058 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.26855525 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.27967651 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.258290418 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259433542 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.261154207 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.257628105 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.254309213 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.258442344 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.259307961 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.257480093 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.260694713 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266330585 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276305274 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.263368615 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277252522 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258657669 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.25614083 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.259434299 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.260541772 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260505199 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.259345433 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.259948192 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.256760409 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.259525491 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.262780023 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.266650698 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260496236 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.256029597 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262295397 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.259368112 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263813564 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.27973748 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.264247632 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.27213074 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.271487437 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.289752014 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.283456531 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261117888 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.258533228 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271512947 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.287898232 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267249618 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.276935317 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.255863211 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.256620996 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.263357738 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290743381 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.284395654 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.260309991 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261159751 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.261037054 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26080781 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260926634 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.2675571 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.282721137 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.262115127 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26284705 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270617745 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.293057864 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.262199225 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.259137623 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.262206316 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.262045272 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.263576474 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273556819 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.280964871 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.26194572 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.261232849 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.261227548 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.26154661 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.263288621 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.261259453 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263340753 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.259523065 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.261678204 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262026248 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265820713 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.27327537 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262324322 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262682219 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.268573058 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.280597987 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259495679 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.267946515 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.263050181 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26309443 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.264134632 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.269814101 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.259390741 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264340351 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.272714961 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.263840734 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.264553868 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.259966355 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.264650179 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273813732 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.291773483 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.263370103 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.261215807 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.266583968 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.27841927 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265011915 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.266542152 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.264302261 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.259179665 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.258691411 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.263592237 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.262337903 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.263036253 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264258808 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265548631 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.262649465 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.261691607 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.263639725 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.265405557 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.263884179 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.266398839 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.263848623 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.265759903 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.262724599 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.267838794 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.272196172 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.285424529 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.266873309 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.266172637 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.264876712 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266706067 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.266193701 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.264744972 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.267375834 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266524871 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.265907091 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.264216438 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266582811 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.265072724 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267962065 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.265918291 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271597421 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.265582976 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.270427464 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.266019841 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.264209089 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.266986187 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.265387429 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.265752526 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.267178805 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.265790209 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.271625855 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.27859369 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.266096559 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.267036481 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.27105446 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26748755 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269141798 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.27047765 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.271587779 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.277965439 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.268932224 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.273343877 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.288217318 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267784218 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.268745007 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.267371032 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.26838039 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.269117624 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.271361394 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.279714963 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279725758 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293749118 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.269063606 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.274476015 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.270151564 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.274517246 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.272346529 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.269057351 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.269791002 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267156314 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267295617 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26906761 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.270443439 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.268394037 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.268990639 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.270204497 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.271160903 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.267768931 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271386871 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.269773884 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269107676 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.266478465 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266336715 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269741438 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.268884503 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.264524099 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.267295389 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.276410653 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.273323672 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.269056391 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.276198966 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.267184916 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26931096 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267866046 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.269798943 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.267237691 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.270414781 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26919815 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.267772091 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274049816 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.289925394 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.268997322 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274189604 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.288523178 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.268587313 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.27097734 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.268213925 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.266009702 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.271095382 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.280899326 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.269817314 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.271889891 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.272578238 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27097133 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270682806 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.276769717 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.288689937 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.270834889 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.271241439 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.269928445 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.269075069 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.270114154 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.270075866 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.270000682 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272616189 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272247429 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.272221234 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27327952 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.272983419 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.275542959 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.274404636 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277561961 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.283612514 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.278624137 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.274702934 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.275790024 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.275639157 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.278692315 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.27437953 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.27524271 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.274701375 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286127251 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.297808685 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280768644 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.293734656 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.271650293 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277121856 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.29417322 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.278527308 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274827034 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273418214 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.275369343 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.275362814 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.272907038 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276243287 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.276200104 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276821644 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.274503666 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.277928854 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.273413114 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.272601523 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.277205851 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.276406286 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.275924743 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.274532299 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.275804096 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.277307375 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278328205 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.275181233 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.275600944 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281718452 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.296311937 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.274553892 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.274274501 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.27413954 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.274478992 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.277533822 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.275436099 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.280648731 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.287628061 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.279329318 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.288410225 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.276321353 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.286174492 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.276401042 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.280133426 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.28606853 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.273764259 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.274170165 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.276652476 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.277316412 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28220354 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.297081689 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.277960561 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.281863849 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.278218707 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.276482991 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.277000686 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.275855177 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276367763 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.276132896 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.286085475 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.29754733 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.283895794 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278100466 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.275429638 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.279479219 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.278838814 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.276939063 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280724723 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.277354224 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.278492054 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.274614678 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.27803923 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.27598547 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.277363775 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.277869468 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.275584997 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.278778982 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.284992562 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.300928087 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284235489 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.280346167 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.287443064 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.299683503 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.286544375 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.301063134 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.280466713 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.276984448 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.282501903 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.279644781 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.277687964 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.277423148 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.277704075 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.278325949 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.284248503 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.27934181 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.28149052 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.278849929 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.277158595 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.279300379 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.291288251 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.309193202 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.282344571 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.287156452 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.277665166 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.281509518 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.287134989 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.2834736 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.281012132 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.284694618 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.29467098 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.291773366 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.282045686 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.280680697 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281123204 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280618469 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.282263757 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.28129729 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.282417894 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.281876855 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.278606084 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.282544798 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283217994 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.282485606 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.281500819 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282426304 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.28296991 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.292176763 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.302553603 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.283528921 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282548877 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.283537189 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.281223496 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.281772094 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.280607395 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284684359 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282825857 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.282477476 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290619936 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.292165178 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.2848874 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.281788523 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.283276929 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.283391429 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.28373788 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284930266 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.285076262 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284466458 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.285202601 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.283866834 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.284108803 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.282319005 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.281881941 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.282427744 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280503534 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286377441 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.292908182 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.284193592 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.280405737 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.284246979 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284277168 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.281612168 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.285522694 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.289757002 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.306041657 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.296778348 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.295123673 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.289974538 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.28526759 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288954405 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.295710498 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.281030605 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.286175622 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.284761932 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.286789774 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.286488237 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.290416927 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283354092 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.291187194 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.305062085 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.283545551 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.293946052 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.307219638 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.283505932 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.28788625 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.28960946 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.283504591 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.281659215 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.283529251 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.284842072 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292664171 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.30869841 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.288242523 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288697988 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.28629666 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.287163737 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292228781 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286251689 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.285812392 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.281180445 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.285361471 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285225077 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28827798 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.281473676 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.286285674 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.286775774 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.291253338 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.296691843 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.284798906 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286262696 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.288916973 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.288880563 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286327183 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287844176 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.283160718 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.282852138 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.284617032 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.286309446 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.288510325 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.287547915 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.286994232 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.289551465 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.291453274 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28732155 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.292592942 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.301112517 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.298590021 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.283440321 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.286500669 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.289702241 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.288709088 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.288056451 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.290621194 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.290645339 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.287961556 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.285876132 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28914712 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.288928651 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.291303907 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304809909 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.311134321 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28722382 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.288798688 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290411422 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.28996648 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.288328112 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.287845826 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.288247332 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.293101627 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.299866554 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.291791385 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.297025649 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.312331665 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.292659603 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.296715018 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.29476306 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.300056764 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.295850759 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293310268 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.291698008 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.29766301 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.309423043 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.293155273 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.303470851 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.323716538 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.313166758 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.290075915 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.29028798 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.29119683 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.293074297 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.294693116 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.29270145 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.294277494 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.293193663 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.292830972 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.294389357 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.301277464 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.296158635 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.292658257 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.291362161 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.29067802 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.289782527 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.288902477 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.291670619 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.2936137 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.290929378 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.293510308 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.294843747 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.294063555 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.306719828 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.321123567 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.292398614 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.291956074 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.290474365 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.294914422 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.296039229 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.307060581 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.303543625 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.292080601 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.295311727 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.296453947 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291651058 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.29274603 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.29145525 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.291889579 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.295203185 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.293379961 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.304601354 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.322345496 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.299164933 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.295117441 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.298002278 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.295236085 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294103501 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295221239 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.296709525 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.296639239 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.298255521 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.299844179 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.296478277 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.293810454 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.298870993 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.305170751 seconds)
  done (took 763.053220427 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.295136226 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294048639 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291449965 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.293195779 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291602177 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293756158 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294772532 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.295087461 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.291864825 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.296239953 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.29508905 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294216733 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293539756 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292571426 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292310936 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293315366 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293438156 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292989732 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292051563 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292110576 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292155708 seconds)
  done (took 28.365619416 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.297398969 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.292777152 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.293047717 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.2958971 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293215359 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.295561831 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.292586996 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295374233 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295540757 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293836716 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.295312624 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29567468 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.293919478 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.293724364 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293510462 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295630149 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.294442764 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294021573 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.295583901 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295268533 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296387643 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.293548818 seconds)
  done (took 29.688493957 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.300424007 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.297946739 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.296554596 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.294375723 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.297942181 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.29361467 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.297378294 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.297535257 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.297410895 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.297785032 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.296219384 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.297584864 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.308031965 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.304974189 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.298072434 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.296504735 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.441684355 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.297820928 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.300599327 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.299688428 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.298358928 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.302530012 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.317282801 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.295445827 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.297791067 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.297879754 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.302032185 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.299028885 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.298270772 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.301945608 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.306727975 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.300517113 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.301147403 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.303034613 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.300246184 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.302383958 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.308284565 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.299658012 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.299307164 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.29851802 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.310272969 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.324030813 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.298814644 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.304620788 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.321619177 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.299318676 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.303909646 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.310378951 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.297722686 seconds)
  done (took 65.120346428 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.30404872 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.29877996 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.297436513 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300690258 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.300544081 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.299920754 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.299473476 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.299728005 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.29675058 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.29792202 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.300883224 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.2985434 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.296909714 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.300771836 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.300642988 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.298438758 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.297550154 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.298134217 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.298836745 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.297052248 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.297932266 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.299674066 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.301141702 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.299498198 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.300690537 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.30013635 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.298002629 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.301347266 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.298472973 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.299109698 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.300206895 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.300972981 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.299702585 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.299157573 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.298820783 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.30104895 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.301078666 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.299112848 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.301942114 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.299390279 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.302079369 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.30286201 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.301150553 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.303296554 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.308121949 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.2987284 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.299487409 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.30168789 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.300310032 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.302169679 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.301457706 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.29999435 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.302686259 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.301029722 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.302808571 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.30288274 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.300237987 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.300825941 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.30368102 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.302037715 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.300933222 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303546433 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.302277361 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.30468536 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.303827101 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.302104228 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.30258255 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.302575837 seconds)
  done (took 89.652848153 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306369165 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.304204607 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.30400471 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304342639 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.304097189 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.30434992 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.305032341 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.306132274 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304826254 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.304416248 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.30459041 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.303841373 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.303224492 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.303705071 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305163538 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.304156969 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.304081933 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.303724136 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.305063226 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306193037 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.304943996 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.30606922 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.307311869 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306764966 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.305656894 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.305135331 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.303993641 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.305985064 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308493474 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.305436066 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.307033474 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.307717431 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305450309 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.306190729 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.306859155 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.305095807 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30560164 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.306525698 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.308143029 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.306808329 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.307755788 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307120047 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.307225474 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.30589396 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.307387599 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.308361185 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.308189764 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.307786893 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.306664485 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.307775453 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.307665811 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.311117111 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.306412426 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.30737589 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307472691 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.308960241 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308560314 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307768121 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307554625 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.307067584 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.309179026 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.308034642 seconds)
  done (took 82.203996657 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.310123073 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.30723771 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.305114469 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.306966868 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.309505688 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.305131547 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.307738455 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.308356529 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.308481912 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.308544112 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308490765 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304882745 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305562755 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30796868 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.30608735 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307055567 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306081444 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.305372339 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.308599941 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.305835602 seconds)
  done (took 27.360558812 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.309703769 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.30967385 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.307208057 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.306231817 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.31146081 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.30601712 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.308885762 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31596053 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30709491 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31071331 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.309441413 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310324268 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307687544 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.307154981 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.310837093 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.307975643 seconds)
  done (took 22.164736031 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.310453718 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.309540726 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.310792651 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.30943248 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.307609977 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.311788188 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.312489914 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.308342642 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.307990363 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.311082573 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.309741626 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.312168737 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.311356511 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.311858022 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.307862809 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.310901203 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.309471357 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.306874458 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.31073302 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.312207169 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.30894202 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.309231418 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.311491851 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.311161539 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.309726051 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.308455636 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.309566894 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.309893855 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.310218261 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.310807818 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.310309641 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.310239266 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.308581392 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.30942401 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.311511173 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.309714994 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.312122079 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.312306174 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.312331624 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.313056634 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.314809107 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.30948911 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.312413277 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.313333955 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.310608836 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.313769109 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.310682273 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.310760688 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.310043079 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.311983285 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.314158813 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.314800654 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.313896372 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.313892409 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.313811112 seconds)
  done (took 73.320879904 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317653698 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.313255841 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.310453379 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.315411071 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.314449491 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.310329958 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.314304203 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.312943578 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.312973331 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.314053987 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.312752342 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.31542293 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312401904 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313534065 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.312756751 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314966877 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.312559838 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.312767537 seconds)
  done (took 24.865356086 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.31558054 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.312086522 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.314253556 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.313556047 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.313274355 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.316575182 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.311430403 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.31600624 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316355498 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.314841448 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312742345 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.317307127 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315031456 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.316268056 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.314601774 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312157466 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.316245661 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315398464 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.312336687 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.31139084 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.316558438 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.315284828 seconds)
  done (took 30.14381634 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.318369039 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.314033429 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.31499306 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.333389169 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.335863973 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.34041804 seconds)
  done (took 9.181758338 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3281841 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315627324 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313451137 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318027016 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317307026 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313373353 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314803867 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314153273 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31735275 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314646056 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314268994 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316844854 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316198062 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316157847 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316130087 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318650359 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314996793 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316654985 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315186432 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320060673 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314123236 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31955921 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315213668 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31520965 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315684769 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315530519 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319013762 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314527575 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313965448 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31787542 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319883029 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316520508 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319036065 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315780767 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319013092 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320225239 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318053242 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31948295 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31927278 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316677163 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.31817769 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319153151 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318374573 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316838801 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320040234 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317037013 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316559793 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317098211 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316411283 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319061881 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318877488 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315707439 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317192305 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319374516 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320257607 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318638448 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317915336 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318102035 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320031136 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318403557 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317747073 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32027507 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318613193 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318002764 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320665692 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318385417 seconds)
  done (took 88.205346051 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320957471 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.32120808 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319597452 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32302654 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320158574 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321154741 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318231061 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323713166 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319528574 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318215461 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321798584 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319033808 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318209317 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319649166 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318879866 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316997774 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319120686 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317568911 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319750851 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321310052 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318522137 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319650141 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318659073 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318884351 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319135083 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323802938 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318048483 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320085856 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319018302 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319239473 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319512037 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320348528 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318441938 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.320507332 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318847884 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31924082 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321398548 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321353525 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320561584 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32297493 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320860749 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322749948 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320568002 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320300584 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321157134 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319599029 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32176307 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320541395 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319847184 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319865013 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320136304 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321772968 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322127358 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321680286 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320516208 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320648946 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319688814 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320587592 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322091241 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325351382 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321509566 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32048333 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324960545 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320827375 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322876704 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32053767 seconds)
  done (took 88.379842269 seconds)
done (took 1779.262517526 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.488655857 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.441016367 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.323444476 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.345456957 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.322960933 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.319010789 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.344893124 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.3212968 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.325425497 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.326570572 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.322094893 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.533515896 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.332758224 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.321851666 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.326663626 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.417448647 seconds)
  done (took 43.04704197 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.358886387 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.330520463 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.455687942 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.351380274 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.355556171 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.525919958 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.385569971 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.333193105 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.520518841 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.377894606 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.076954209 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.353671507 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.327115346 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.592933633 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.353714292 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.52262882 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.60370942 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.012896184 seconds)
  done (took 31.072208614 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.82742845 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.332807095 seconds)
  done (took 9.393591095 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.354069528 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.329813086 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.332260322 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.331210782 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.32017172 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.322122475 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.327342719 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.329100296 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.35652998 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.464776756 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.33448895 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.338899941 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.348786366 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.332954763 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.329662441 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.367902837 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.488995817 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.327273708 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.326393124 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.33326529 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.329370514 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.429602337 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.372248756 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.328493089 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.465853988 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.379591078 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.336575285 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.33686289 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.46446453 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.328351637 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.33015899 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.330136002 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.332638762 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.283009699 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.896030793 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.341886794 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.37308801 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.340092878 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.327492379 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.482380647 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.331150684 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.336419011 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.330580263 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.883940198 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.471448733 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.456562705 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.662985603 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.347917234 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.335135143 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.397396121 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.332481485 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.332600326 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.376841094 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.134421085 seconds)
  done (took 112.779533655 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.344936683 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.714488871 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.497260706 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.346261561 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.123648109 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.998966509 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.341523017 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.644695734 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.346084048 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.325433597 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.616857494 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.863979028 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.340318302 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.37545426 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.784382487 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.378456326 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327892517 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.189214193 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.340327355 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.329425467 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845092147 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.342761236 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.340268406 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.49025058 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.365207591 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.810643187 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.848963377 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.742327071 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.344207191 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.325558584 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.824933938 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.343130517 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.348623842 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.330422172 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.605570457 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.711158727 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.701548847 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.347113662 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.373794626 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.32945655 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.346957291 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.807731472 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.746544831 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.352188372 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.325356515 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.806696339 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.343067612 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.338061479 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.331653916 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.544793423 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.019391374 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.329940312 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.840358407 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.327650675 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.690922263 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.418354069 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.34474299 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.837841181 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.343463402 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.464651744 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.345924625 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.327473342 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.327437745 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.331276754 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.326940204 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.702557335 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.685209645 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.329008919 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.700480052 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.83325829 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.344581631 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.908737242 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.270041494 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.347270923 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.434944634 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.328494738 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.033004023 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.845957663 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.375688636 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.328508927 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.687746 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.350928702 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.62127732 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.345048676 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.345842192 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852355763 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.341531001 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.39499159 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.339735418 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.329032866 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.091519187 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327836271 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.62757533 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.387901135 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.331561196 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.329409369 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.350373651 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.341976456 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.328841924 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.333435173 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.892643458 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.349057716 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.322271668 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.347920661 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330845203 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.347348686 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.332614511 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.334195574 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.562461257 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.763256584 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.349914551 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.335937127 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.33031674 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.334833344 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.501788704 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.338055736 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.665101954 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.348101635 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.331612982 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.335242329 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.029035848 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.372091216 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.331297413 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.337068133 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.26229365 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.538851251 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.35293009 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.331176331 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.335053924 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.349469786 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.65837698 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.351531491 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.415474279 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.33184332 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065722509 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.355841567 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.352130179 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.68273435 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.34339954 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.291298413 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.3517353 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.33568721 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.631904001 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.616141988 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.612540473 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.333666775 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.351840598 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.046477794 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.389353115 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484382494 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.353417812 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.337412063 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.534195243 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.807347007 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.335638504 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.979542837 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.335590906 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.557902371 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.338641168 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.64372291 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.867617679 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.349079364 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.337133791 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.078011599 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.044321586 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.166318946 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.340959779 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.624012841 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.323307927 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.813613381 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.336146955 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.335026765 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.906356704 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.341137347 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.34134082 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.337514823 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.336477224 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.391847095 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.517266418 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.545059465 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.341530284 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.816756307 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.401762843 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.334703127 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.359457185 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.337690714 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.687574238 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.36279459 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.340381347 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.373515305 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.338985231 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.342793976 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.832837272 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.325515531 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.34175763 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.493506362 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.998155168 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.350568687 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.338839968 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.902005404 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.562978796 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.911117666 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.353271363 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.669735445 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.354276559 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.378810861 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.098747083 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.392448268 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.871497396 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.353557661 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.334614212 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.969965397 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.349767886 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.698880214 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.335147395 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.337157089 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920124621 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.350492844 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.340723749 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.655193698 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.359769829 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.594633768 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.334882686 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.349415252 seconds)
  done (took 1113.34252258 seconds)
done (took 1310.868519314 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.339395541 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.345063566 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.321822429 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.34219978 seconds)
  done (took 26.596883543 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.350821672 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.348109631 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.349502052 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.347532187 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.345947583 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.347652572 seconds)
  done (took 9.340245977 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.402366711 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.341483922 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.341416998 seconds)
  done (took 19.334946591 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.566338569 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.688743842 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.69095378 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.659378301 seconds)
  done (took 10.856929239 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.349179819 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.344709013 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.349427945 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.348472886 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.352700063 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.352168023 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.352117605 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.351807378 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.350874862 seconds)
  done (took 13.402098425 seconds)
done (took 80.781232284 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.368947561 seconds)
    (2/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.36709327 seconds)
    (3/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.527356453 seconds)
    (4/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.501505275 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.598409241 seconds)
    (6/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.224692832 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.396766267 seconds)
    (8/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.526900998 seconds)
    (9/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.225728842 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.366666572 seconds)
    (11/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.354238209 seconds)
    (12/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.070695957 seconds)
    (13/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.372600323 seconds)
    (14/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.426255431 seconds)
    (15/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.222798655 seconds)
    (16/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.425675842 seconds)
    (17/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.736346273 seconds)
    (18/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.320780949 seconds)
    (19/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.90861055 seconds)
    (20/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.466828054 seconds)
    (21/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.404526155 seconds)
    (22/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.358529721 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.071924353 seconds)
    (24/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.365652493 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.265528686 seconds)
    (26/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.328106175 seconds)
    (27/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.344037795 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.341135642 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.332906257 seconds)
    (30/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.018842766 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.46885216 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.323540126 seconds)
    (33/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.426482161 seconds)
    (34/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.408743382 seconds)
    (35/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.043117302 seconds)
    (36/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.32056956 seconds)
    (37/286) benchmarking ("sort", Int8, false)...
    done (took 4.384120156 seconds)
    (38/286) benchmarking ("sort", Int8, true)...
    done (took 6.340764476 seconds)
    (39/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.382522195 seconds)
    (40/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.368868833 seconds)
    (41/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.323928533 seconds)
    (42/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.361801915 seconds)
    (43/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.909857211 seconds)
    (44/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.349492326 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.469434608 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.598331913 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.147622261 seconds)
    (48/286) benchmarking ("sort", BigInt, false)...
    done (took 6.341464189 seconds)
    (49/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.17774103 seconds)
    (50/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.896671567 seconds)
    (51/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.549739666 seconds)
    (52/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.322305773 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.722860173 seconds)
    (54/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.63097905 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.406093111 seconds)
    (56/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.322536934 seconds)
    (57/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.427527161 seconds)
    (58/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.346625059 seconds)
    (59/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.810605063 seconds)
    (60/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.340838111 seconds)
    (61/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.865030042 seconds)
    (62/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.930884047 seconds)
    (63/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.384682796 seconds)
    (64/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.755795763 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.267088989 seconds)
    (66/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.341728539 seconds)
    (67/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.32341124 seconds)
    (68/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.391244678 seconds)
    (69/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.393567307 seconds)
    (70/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.743504754 seconds)
    (71/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.374369889 seconds)
    (72/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.323844715 seconds)
    (73/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.341756071 seconds)
    (74/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.635289636 seconds)
    (75/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.257626494 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.018962347 seconds)
    (77/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.857349933 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.76215846 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 5.609648873 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.960376685 seconds)
    (81/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.424640785 seconds)
    (82/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.244181266 seconds)
    (83/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.112616528 seconds)
    (84/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.441250232 seconds)
    (85/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.764469372 seconds)
    (86/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.240710408 seconds)
    (87/286) benchmarking ("sort", Float64, false)...
    done (took 5.689659715 seconds)
    (88/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.325783275 seconds)
    (89/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.536451398 seconds)
    (90/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.395218906 seconds)
    (91/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.329816785 seconds)
    (92/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.043811186 seconds)
    (93/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.09071292 seconds)
    (94/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.450276367 seconds)
    (95/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.165351056 seconds)
    (96/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.349171904 seconds)
    (97/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.393189516 seconds)
    (98/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.450057307 seconds)
    (99/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.32681478 seconds)
    (100/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.343055133 seconds)
    (101/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.329894473 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.23751298 seconds)
    (103/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.332156276 seconds)
    (104/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.362367707 seconds)
    (105/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.780067663 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.558458244 seconds)
    (107/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.634321301 seconds)
    (108/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.733536168 seconds)
    (109/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.44666341 seconds)
    (110/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.366580797 seconds)
    (111/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.166073209 seconds)
    (112/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.246239702 seconds)
    (113/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.380727954 seconds)
    (114/286) benchmarking ("sort", Float32, false)...
    done (took 5.391930327 seconds)
    (115/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.643981748 seconds)
    (116/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.149244812 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 1.876015013 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.389841826 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.609648279 seconds)
    (120/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.453007999 seconds)
    (121/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.333264363 seconds)
    (122/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.723838617 seconds)
    (123/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.327108762 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.186223914 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.604844475 seconds)
    (126/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.803121248 seconds)
    (127/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.444876387 seconds)
    (128/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.448210612 seconds)
    (129/286) benchmarking ("sort", BigInt, true)...
    done (took 6.348589209 seconds)
    (130/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.896537988 seconds)
    (131/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.859028302 seconds)
    (132/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.332355956 seconds)
    (133/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.833534031 seconds)
    (134/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.590657566 seconds)
    (135/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.050316877 seconds)
    (136/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.47936762 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.457178289 seconds)
    (138/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.349921423 seconds)
    (139/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.351271795 seconds)
    (140/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.330461194 seconds)
    (141/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.184953269 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.173162707 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.373701524 seconds)
    (144/286) benchmarking ("sort", Float32, true)...
    done (took 6.348143771 seconds)
    (145/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.223830954 seconds)
    (146/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.479893791 seconds)
    (147/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.974720784 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.350013257 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.373217551 seconds)
    (150/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.462147632 seconds)
    (151/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.347049514 seconds)
    (152/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.992612909 seconds)
    (153/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.134799081 seconds)
    (154/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.826123511 seconds)
    (155/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.35269419 seconds)
    (156/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.401123636 seconds)
    (157/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.409294112 seconds)
    (158/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.219562574 seconds)
    (159/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.168071332 seconds)
    (160/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.016350146 seconds)
    (161/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.371751979 seconds)
    (162/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.47538938 seconds)
    (163/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.376155731 seconds)
    (164/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.38928441 seconds)
    (165/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.356730065 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.395519316 seconds)
    (167/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.331601142 seconds)
    (168/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.347359923 seconds)
    (169/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.396552327 seconds)
    (170/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.394144382 seconds)
    (171/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.203860701 seconds)
    (172/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.03595614 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.365617249 seconds)
    (174/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.360114061 seconds)
    (175/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.455360592 seconds)
    (176/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.941445131 seconds)
    (177/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.894812222 seconds)
    (178/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.331999346 seconds)
    (179/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.331623689 seconds)
    (180/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.690470424 seconds)
    (181/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.141271094 seconds)
    (182/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.394654926 seconds)
    (183/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.067240764 seconds)
    (184/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.351665445 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 5.521491915 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.427021074 seconds)
    (187/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.437827718 seconds)
    (188/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.912924766 seconds)
    (189/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.379821082 seconds)
    (190/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.172926802 seconds)
    (191/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.467951265 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.779888943 seconds)
    (193/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.471535695 seconds)
    (194/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.332626845 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.368319507 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.98351788 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.585754904 seconds)
    (198/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.753095459 seconds)
    (199/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.816833973 seconds)
    (200/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.898964638 seconds)
    (201/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.348993533 seconds)
    (202/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.357306325 seconds)
    (203/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.299835612 seconds)
    (204/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.330749232 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.380900666 seconds)
    (206/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.578894082 seconds)
    (207/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.354499588 seconds)
    (208/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.617138822 seconds)
    (209/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.343158974 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.395973737 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.039261609 seconds)
    (212/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.33422127 seconds)
    (213/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.058975283 seconds)
    (214/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.470848864 seconds)
    (215/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.352228251 seconds)
    (216/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.651351089 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.805836033 seconds)
    (218/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.50405768 seconds)
    (219/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.992982848 seconds)
    (220/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.365877861 seconds)
    (221/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.875379174 seconds)
    (222/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.360972415 seconds)
    (223/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.412992497 seconds)
    (224/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.074766539 seconds)
    (225/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.369427287 seconds)
    (226/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.418755955 seconds)
    (227/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.657945638 seconds)
    (228/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.369294714 seconds)
    (229/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.704753293 seconds)
    (230/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.577616752 seconds)
    (231/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.394952235 seconds)
    (232/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.336700826 seconds)
    (233/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.495253329 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.728393841 seconds)
    (235/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.455238905 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.587492786 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.397293894 seconds)
    (238/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.682041358 seconds)
    (239/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.381853776 seconds)
    (240/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.35312132 seconds)
    (241/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.33842123 seconds)
    (242/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.460472872 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.739459482 seconds)
    (244/286) benchmarking ("sort", Float64, true)...
    done (took 6.355668275 seconds)
    (245/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.672146625 seconds)
    (246/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.379854637 seconds)
    (247/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.480599089 seconds)
    (248/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.36514438 seconds)
    (249/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.442645138 seconds)
    (250/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.375704327 seconds)
    (251/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.338130308 seconds)
    (252/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.337614517 seconds)
    (253/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.335856444 seconds)
    (254/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.381774249 seconds)
    (255/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.373185052 seconds)
    (256/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.436567825 seconds)
    (257/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.342711962 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.369930501 seconds)
    (259/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.336466721 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.37093438 seconds)
    (261/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.349329491 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.439602632 seconds)
    (263/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.004793039 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.445331981 seconds)
    (265/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.339348955 seconds)
    (266/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.771262219 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.475131962 seconds)
    (268/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.864922073 seconds)
    (269/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.348962485 seconds)
    (270/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.752834238 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.184038228 seconds)
    (272/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.452446439 seconds)
    (273/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.468654209 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.403782671 seconds)
    (275/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.823805846 seconds)
    (276/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.306380091 seconds)
    (277/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.388740487 seconds)
    (278/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.456270452 seconds)
    (279/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.408430828 seconds)
    (280/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.139853424 seconds)
    (281/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.445864807 seconds)
    (282/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.34741645 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.379939078 seconds)
    (284/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.027734916 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.794366617 seconds)
    (286/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.35445082 seconds)
  done (took 955.079748237 seconds)
done (took 956.335207421 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.395203835 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386868525 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.369557173 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.393512364 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.48357358 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.400504036 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.381062967 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.37261335 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.421707867 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.419582651 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.368802625 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.399158583 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.37233046 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.371297783 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.37414568 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385188421 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.502311027 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.371338775 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.386780194 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.381717218 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.38546503 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.369837106 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.423182852 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.394984363 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.376775785 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.376042351 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.3751476 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.39164934 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.48470185 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.375317134 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.375051525 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.382310327 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.505216661 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.369361873 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.368369632 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.391076556 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.383186142 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.382875211 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.377192475 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.402807897 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.95415592 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.385455895 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.372688737 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.373655749 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.372075735 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.377558809 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.373034219 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.384132744 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387255717 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389392028 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.029010661 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.408755024 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.377042098 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.374148673 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.384954678 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.374432449 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.380458669 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390967905 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.39758569 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394563637 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.491858808 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.378514649 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.377189931 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.392160725 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.384811133 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.971834879 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.383437496 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.379131806 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.945508519 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.393758997 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.969935628 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.39634171 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.376104362 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.392192716 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.408190448 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.507008638 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.368144649 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.373628885 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.383027519 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.376563154 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.388196515 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389441567 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.381650772 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.377465645 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.389576639 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.399115289 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.383782727 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.375890338 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.387251673 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.393266375 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.386440295 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.390762008 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.377844013 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.371899003 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.385718459 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.379921141 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.376374098 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.377494293 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.381134152 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.388691297 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.94241692 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.407476771 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.372933129 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.3727489 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.374200222 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.387530842 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.947758429 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.390208773 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.397903987 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.425100126 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.379080218 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.492100799 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.377554958 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394164502 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.386867695 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.379126698 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.37198733 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.494712924 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.933758146 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.406241022 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.379884089 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.375500093 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.394605901 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.378242372 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.375647477 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.507776437 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.377467134 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392651167 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.498322419 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.387360466 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.408473243 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.376082526 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.382903438 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.40256444 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396943347 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.409410626 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.380550683 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396606896 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.396831431 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.37441762 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.387938202 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.389970061 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.379760376 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.385340324 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.373618323 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.403894129 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39158319 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395041843 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.401148189 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.498638389 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.376380276 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.495904231 seconds)
done (took 233.845637491 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.440640347 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.373492238 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.4651416 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.37969173 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.47799715 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.479018228 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.373898911 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.37442965 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.375187678 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.754267781 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.374546054 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.374031467 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.374539377 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.377986049 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.464345959 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.377228082 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.374136722 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.71659766 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.380759197 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.452750099 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.379826191 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.374751812 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.375781734 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.759029241 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.373959265 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.379931977 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.44938221 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.377350713 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.722731931 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.379583608 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.373778862 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.725891759 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.469477418 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.396249014 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.386393069 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.386375451 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.480811926 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.395960395 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.459882028 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.463830467 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.4679191 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.419839929 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.377983086 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.370220466 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.379551934 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.380113779 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.381293678 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.40436777 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.379887093 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.38156098 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.723829928 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.390775988 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.384806925 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.377036646 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.375903085 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.40066184 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.381988718 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.380920323 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.472439086 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.381463935 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.445601483 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.761047173 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.76012186 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.382183609 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.38235455 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.377427056 seconds)
  done (took 151.470401389 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.45020013 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.454800482 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.499786804 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.396006145 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.430948302 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.507424944 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.395021717 seconds)
  done (took 11.41777618 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.389789922 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.382496068 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.430273453 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.430363538 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.381847198 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.559881215 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.384971062 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.391741381 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.387938557 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.433772152 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.382352164 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.384210793 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.389651079 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.374494927 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.432329109 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.39198463 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.49924811 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.383079745 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.385934024 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.536987233 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.389462418 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.378239224 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.44444883 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.392610689 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.387739162 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.393134255 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.199151673 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387117086 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380299233 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.383406738 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380160289 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.460670588 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.383931039 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.382088002 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380955856 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.498323478 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.386159945 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.385669792 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.383170853 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.38148913 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.386281285 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.382684389 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.384527801 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.381175656 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.382201823 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.406869872 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.385431413 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.383998961 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.38380213 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.384024318 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.432711885 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.387441737 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.381675648 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.382509097 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.438379622 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.394167699 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.3868287 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.386694099 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.388764515 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383137778 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.534824483 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.435364826 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.384491158 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.432153072 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.388292485 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.385714535 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.386250701 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.3861681 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438740966 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.387817579 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.436827008 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.385281587 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.575145546 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.412950652 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.391485807 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.38921938 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.390094452 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.390473578 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.387934506 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.395738323 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.3860823 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.386754892 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.395412475 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.388901592 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383979551 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.554940804 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.49722112 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.387530237 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.396946028 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.392176552 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.384996882 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.438068524 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.386725826 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.383219231 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.439767623 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.50409939 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.456151714 seconds)
  done (took 158.677581325 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.396134998 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.394066165 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.39084675 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.410663962 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.404850221 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.390201534 seconds)
  done (took 9.675547132 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.393300063 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.391472628 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.387577337 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.388490665 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.386836089 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.393655896 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.392813699 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.393339511 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.395242147 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.392186 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.388129102 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.394660524 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.392342776 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.391749364 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.392587886 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.391725616 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.387561534 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.389382925 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.387862347 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387774613 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.497173659 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.388469442 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.393502762 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.392696478 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.393125021 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.393412878 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.396241971 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.39265341 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.389163539 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.394227108 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.408343652 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.39449466 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.395215 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.401048152 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.399218876 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.394313019 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.397269226 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.392077194 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.392976593 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.390613565 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.395956189 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.394478217 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.394476775 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.393100947 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.394978749 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.399787244 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.397265786 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.398482954 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.394013804 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.393730999 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.395049796 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.392143361 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.391107101 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.396275184 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.394446001 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.411836042 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.400655305 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.395357069 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.397223755 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.396327835 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.398526001 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.392934102 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.396800972 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.400963053 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.393635828 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.393237444 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.396301226 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.397503866 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.397276346 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.395903893 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.39398366 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.394528974 seconds)
  done (took 102.784173088 seconds)
done (took 435.304385344 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.462392147 seconds)
  done (took 7.753695534 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.574365324 seconds)
  done (took 7.867628318 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.829608621 seconds)
  done (took 24.128274786 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.493159199 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.395146505 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.38346028 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.395103244 seconds)
  done (took 26.961027021 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.983659708 seconds)
  done (took 8.277891808 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.390994703 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.384187209 seconds)
  done (took 14.069918931 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.604989652 seconds)
  done (took 7.898347369 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.019479028 seconds)
  done (took 8.317929397 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.408747186 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.414986213 seconds)
  done (took 14.388668705 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.369862801 seconds)
  done (took 7.665464176 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.794345558 seconds)
  done (took 12.087005272 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.387792975 seconds)
  done (took 7.683534459 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.443412898 seconds)
  done (took 7.738379353 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.154598251 seconds)
  done (took 10.449241371 seconds)
done (took 166.581958882 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.39091927 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.384100926 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.383875758 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.383671116 seconds)
  done (took 26.834925251 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.43316962 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.425473286 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.430351777 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.438822526 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.430183724 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.428558698 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.420780169 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.419624521 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.438922643 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.431551408 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.430958866 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.431972974 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.428548381 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.421361501 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.430195472 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.430342846 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.439039386 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.428542482 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.420247058 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.431654075 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.39607829 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.440188869 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.432237902 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.3974709 seconds)
  done (took 35.552912236 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.924999925 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.470447092 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.548700257 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.447972083 seconds)
  done (took 7.687392638 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.450524697 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.449191606 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.465772118 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.500011039 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.527270547 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.458198088 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.424784371 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.41809483 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.403556853 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.449043103 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.524862083 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.466557695 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.534341856 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.39708609 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.579481666 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.396860061 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.397412703 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.449120755 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.501588521 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.514317727 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.39907106 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.448504371 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.45634559 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.467274341 seconds)
  done (took 36.375108517 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.402924036 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.414642347 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.396284777 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.395305063 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.405414475 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.39665586 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.398097831 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.401619276 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.398073267 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.403018132 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.395076182 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.408829257 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.396710818 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.396927193 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.403434893 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.398372908 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.403474059 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.396297066 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.396941509 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.404325766 seconds)
  done (took 29.310425803 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.393968739 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.247966878 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.742016791 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.648261166 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.395202996 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.38919437 seconds)
  done (took 28.115201867 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.479595436 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.644875508 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.396016018 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.800094306 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.887321612 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.412467369 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.403654028 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.667076195 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.037642004 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.026193198 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.467792378 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.47912313 seconds)
  done (took 21.001824109 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.396334685 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.413128241 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.405658284 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.414424191 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.466080261 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.423155358 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.409210824 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.396314664 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.466953228 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.487782341 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.424460067 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.465244802 seconds)
  done (took 38.471460685 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485599864 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.447534267 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.455592074 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398049093 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.145684204 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605709795 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.431730341 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.168709475 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.415255041 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66896202 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406470068 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482760272 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.655865274 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397040544 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400767954 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.466221781 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639213474 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922581994 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395841785 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.821891895 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425726218 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402963899 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.775494022 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.649429927 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.623895867 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.382357448 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.658207994 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.171863665 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.717225023 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417426935 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407672239 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397296567 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671430923 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094893971 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508835744 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.630994123 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433686501 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.944778918 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.397167754 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.835544576 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402926787 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.415237392 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409162655 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397199591 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.334954089 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397914106 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162133732 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.419092693 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.109810613 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397011635 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.692205944 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497529042 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.401261002 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.972078726 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.48425188 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.410760617 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.401954682 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495851378 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98979457 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.130902594 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414613706 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.338587086 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.3985714 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.839856195 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09834611 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.420168359 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.402355628 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402069868 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332444409 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.802317414 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421065855 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542701235 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.423682343 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.06534436 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162176801 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.415269556 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.3456853 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99454921 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414800962 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.340434556 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628914932 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.174844923 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340970053 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.352032549 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.335419195 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180535653 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413286889 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.929693635 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425310369 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.175944474 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.653040432 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436462636 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424967473 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.625141121 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.281846631 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400941154 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.403582596 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528881365 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420530537 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.148718516 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351833499 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.402300112 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660140793 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.612616932 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402480196 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.50885683 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93512827 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417789324 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.4222896 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.415497455 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.643609081 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.062840928 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.440161616 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.116923096 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424157791 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.179303183 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222868157 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414373099 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.411790894 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.406484389 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705071709 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.267033874 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.289968062 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470914807 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410738587 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406610654 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.87146426 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.261146328 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.305401057 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.629985939 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418732727 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.417952466 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.40648306 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371173258 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.406652326 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424791669 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.186822309 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.628889802 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404922488 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683915111 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338640803 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546587157 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.422464126 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.627011537 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.760057535 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.431598161 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665021335 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401447039 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.410894501 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421198632 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423489201 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504657994 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428700836 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.413759234 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.667923858 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.407617163 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.409731649 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.867100653 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.191092778 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406779857 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.411142083 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404041696 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059037553 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413314715 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.408219031 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30452732 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.420414746 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474032612 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413845995 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.644178812 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.918054313 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426949759 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.408068418 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.412754122 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636296123 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416230373 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.848584652 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491782247 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.923089191 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073715414 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441863186 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.34137791 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.117560518 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.100306967 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408439165 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.598597807 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407405458 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.642679362 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.437462878 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.42766578 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.057905642 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43162978 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.852030558 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.418579789 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418863816 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.41362089 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408648331 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.881054542 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.169246903 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423008394 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.42352073 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551856602 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.421221673 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.343254348 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.92478737 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414963511 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.408653958 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.186331191 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442728282 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.865568405 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266915353 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68705852 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425689335 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.703317721 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.971865135 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.446012809 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.40869078 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416607797 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416579604 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.429424258 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42244781 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.421361494 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.859432229 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.868374613 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97450896 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245696072 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028164829 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.816922418 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.43433523 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.298460519 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.168572763 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360824519 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.071081245 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676084301 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191504783 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.384242584 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929466703 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.795381318 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.300875869 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.712523055 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647525406 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.79514228 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.434805777 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.714374898 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630804357 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444427767 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.422195265 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.346103412 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.929620852 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012965938 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428932921 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487295191 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176383796 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428680991 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.207348612 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.445824093 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.246500635 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864547734 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.978435836 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.806738321 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419665752 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.430054364 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283773787 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.434644533 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.94234414 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115167683 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.444737111 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.937356386 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369960209 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.653297522 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.441268902 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.410905755 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.176529747 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.423036886 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.67792268 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.711382015 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354583623 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.416550207 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018057674 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.290115882 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.42244814 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415485446 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238529942 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431494806 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.739500379 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.42244264 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.930116005 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442479318 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.350100434 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350317692 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.106925406 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.425770586 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393664837 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959831777 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.422649065 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415725727 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445662303 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264837667 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.673097155 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.428247635 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.545058531 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661059267 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419452546 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43691473 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.420478399 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4180748 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.420658334 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.300592455 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.652798615 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.471818211 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.665198769 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.493100156 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.316827014 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.466869894 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630345469 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.316114579 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.417204605 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697092982 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.142747361 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.436167983 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2355755 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458695915 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.421117764 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.44037791 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429762527 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434972245 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506334501 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65394548 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.443730684 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.426643957 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863090226 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440822056 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418067516 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.430818817 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510964096 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.161570759 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.904056203 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.195246222 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071614541 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290291505 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.102238681 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.736700106 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.423682758 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425391984 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356774753 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565398329 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.94601889 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693029414 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550899919 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.424735594 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438168483 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419043767 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434061061 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637143633 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693934961 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.299294919 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4205403 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.091474219 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.31537513 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430726792 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.632512992 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970461127 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024230812 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.805726429 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424028643 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.17766357 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708867425 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.512997333 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421284602 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.014661868 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.441711181 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.235927264 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.422614703 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4234986 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565011825 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718091421 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131979414 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.447157286 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.579462955 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.198595358 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.874929803 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.680517129 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.0067045 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.666587143 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091855139 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.227790358 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690104084 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48978906 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666525565 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.557594845 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573192595 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.437875458 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.326389462 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426155535 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271568215 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.132170766 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.435110093 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084011443 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.7077777 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.421869403 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.439788015 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442468721 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.434337353 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.650657289 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.216431353 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.652328727 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43388779 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.432526886 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.999783274 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086966933 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.740367593 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363101619 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.424462824 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.685133725 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.674789091 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449409968 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.874044954 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.13303677 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022541046 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.397722451 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44543224 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426420006 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.240792864 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087922814 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.936465415 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994710116 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.091144036 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428753204 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703628982 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.428307409 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.426344273 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720252679 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.427606735 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.424605387 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.688710121 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.0915568 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.298342711 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.42487715 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.053047992 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.364331624 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.652599226 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427370656 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364860795 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421531109 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.897194635 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.44332318 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548786459 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433850409 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.424727914 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426148862 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.16333465 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.720015501 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.429405629 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.421137608 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.417640134 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.439083654 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526280462 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032800786 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447376741 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.103243695 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.774569022 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.683670386 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.431493375 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.410512847 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.428802871 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426221206 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14987052 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.401828984 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.428803663 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027004403 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.430630833 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.442094715 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.429804754 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.642898523 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638529998 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.444092763 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666844658 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450677957 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445990488 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.327794238 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.204374242 seconds)
  done (took 1710.703727919 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.430900988 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.479581897 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.45024371 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.449644615 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.458118777 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.492687193 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.460679166 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.526051663 seconds)
  done (took 53.078459445 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.43183969 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.584895339 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.459028081 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.429437348 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.442424136 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.432986004 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.95560507 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.453324597 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.433530474 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.441661602 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.438457512 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.434510394 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.157978031 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.442106925 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.44472286 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.413822091 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.441937257 seconds)
  done (took 67.176626772 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.157253761 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.840120086 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.066552889 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.432218258 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.483582276 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.453550287 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.934670129 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.4492655 seconds)
  done (took 56.150815656 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.448718988 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.447415846 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.449555362 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.447596723 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.448252443 seconds)
  done (took 8.575368722 seconds)
done (took 2120.332041628 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.439028293 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.43968172 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.436113019 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.439142774 seconds)
  done (took 7.087562345 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.4143361 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.144975845 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.409262959 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.425513128 seconds)
  done (took 18.728681793 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.430904345 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.449092769 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.226946979 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.122270404 seconds)
  done (took 5.683701178 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.184361323 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.197542917 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.179670908 seconds)
  done (took 7.89805582 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.435102354 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.435380378 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.436739361 seconds)
  done (took 20.641528488 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.749452419 seconds)
  done (took 3.0852115 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.585179831 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.632257106 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.781142384 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.806219538 seconds)
  done (took 8.142019869 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.828147154 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.813724452 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.623332198 seconds)
  done (took 6.599545399 seconds)
done (took 92.083790898 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.633457305 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.453861635 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.637873254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.605301782 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.685366725 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.639428568 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.893844136 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.577427848 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.106990813 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.096141635 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.600083343 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.663613918 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.834795627 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.45967099 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.840219116 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.456775728 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.669981779 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.677376396 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.288989132 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.429524647 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.891373855 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.244973869 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.431003348 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.26084509 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.66360092 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.589519587 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.817888214 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.453785561 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.433082617 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.841392412 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.589346462 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.433558708 seconds)
  done (took 199.236676996 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.433967078 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.434713337 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.448789909 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.445593082 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.431081972 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.431952465 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.434653949 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.447424436 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.443219421 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.4414129 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.4360531 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.448538646 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.431258323 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.456934368 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.432281707 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.448040224 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.44987468 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.455219104 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.433131493 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.439122076 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.432229602 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.449081753 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.433050233 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.46022182 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.434088001 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.448809769 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.431827838 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.460157178 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.434550532 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.433095678 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.433945319 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.453478088 seconds)
  done (took 207.468067752 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.458256273 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.448895494 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.436604156 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.448424626 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.434618153 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.456716205 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.450416089 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.43450334 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.46097861 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.433789821 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.433132537 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.443395895 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.435485955 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.434014128 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.436313461 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.449325693 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.449577145 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.434587022 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.448590092 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.439387985 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.436124468 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.433953657 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.437780913 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.453419891 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.436476711 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.434769753 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.451066516 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.460261754 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.434428216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.452882234 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.445562125 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.443658866 seconds)
  done (took 207.528328597 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.647215722 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.450071002 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.446676163 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.407032851 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.446591415 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.448164579 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.442172927 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.636760829 seconds)
  done (took 15.266556127 seconds)
done (took 630.836206038 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.897381582 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.605725267 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.652899008 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.464605509 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.358403477 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.48749686 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.465318949 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.659092646 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.397943275 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.658226002 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.82107545 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.477338133 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.977511733 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.462475495 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.748572368 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.579283328 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.395349259 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.529848375 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.81168235 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.12597189 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.754256698 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.044364641 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.669974554 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.400750053 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.984548022 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.998122127 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.266842311 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.365032903 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.47890366 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.823820813 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.255870734 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.540464798 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.535116797 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.534295297 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.589776935 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.567468812 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.508682716 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.530875477 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.678190476 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.813826696 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.065948153 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.215752875 seconds)
  done (took 98.540954036 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.435488015 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.4325101 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.43069899 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.430836838 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.437086784 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.434312749 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.435258186 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.430700416 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.432423375 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.433935251 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.432633659 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.436115303 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.433283641 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.432762444 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.434427369 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.433122319 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.436793885 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.440081609 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.436765423 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.435960505 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.437191033 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.438161996 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.432731285 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.434456602 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.432968077 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.436048528 seconds)
  done (took 38.642570214 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.450556812 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.715692357 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.891031251 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.453063675 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.451057834 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.453807325 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.541670996 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.453855286 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.453524314 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.45284766 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.620692753 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.454076739 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.491619778 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.930332516 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.454528107 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.452898621 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.45246519 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.450639261 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.724263873 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.460712122 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.560639808 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.455570288 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.543729636 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.467500644 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.473310163 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.453508057 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.457306668 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.054406956 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.470675195 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.625580847 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.352449335 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.545493518 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.994869808 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.934959556 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.352485827 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.46120485 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.452703132 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.626799211 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.456852166 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.454486577 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.543824239 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.460549635 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.916054942 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.154362265 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.469405312 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.453919077 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.075746106 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.648933417 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.743120294 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.467857944 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.944152034 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.462314125 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.457110097 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.455052498 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.740461752 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.464264235 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.45717765 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.095543826 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.482660394 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.544874376 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.46143771 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.457875788 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.733878053 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.455216052 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.729144435 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.460663672 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.463278904 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.47342125 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.918606407 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.461866728 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.177586527 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.476311837 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.455332229 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.627020501 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.729824283 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.119854658 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.484071549 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.738593839 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.009316429 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.560981955 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.466195552 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.044147322 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.571746487 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.465814251 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.46479596 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.459597893 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.462766666 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.50542561 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.545245974 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.121515195 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.187180459 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.12838857 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.572084154 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.474903732 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.458862185 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.098994201 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.483699063 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.457652483 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.916642051 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.179825334 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.481855159 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.464166998 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.177081969 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.481776095 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.550159654 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.465505123 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.92706701 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.464652453 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.503339833 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.461919515 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.469118107 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.479489775 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.548585098 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.466690717 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.458147728 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.151701387 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.659952425 seconds)
  done (took 192.661675027 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.461527524 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.446821553 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.45371274 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.447308493 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.451841111 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.46494679 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.451612105 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.455866065 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.462058125 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.452837711 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.451184404 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.453314338 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.453038434 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.459388553 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.462263601 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.461423923 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.066486545 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.451658276 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.455198371 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.465314856 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.273420352 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.458766885 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.453434826 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.467482251 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.455319234 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.463605574 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.457672972 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.454249972 seconds)
  done (took 155.566340692 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.464799983 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.091811139 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.477220138 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.61706292 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.489719072 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.459000229 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.608603301 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.522900189 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.475569089 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.457877725 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.457758003 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.799903109 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.460097263 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.038995788 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.675135861 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.632326966 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.032166886 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.475624271 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.459436037 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.457058581 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.613871919 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.471031654 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.799114795 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.089587641 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.478661519 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.09230724 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.443894843 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.463059258 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.460735496 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.095243599 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.474686713 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.799085128 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.548181155 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.534719773 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.109750755 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.085935706 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.093457265 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.62649692 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.459988531 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.460908827 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.461657823 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.445746291 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.096083164 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.477326358 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.462913987 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.085187376 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.480064052 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.463724805 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.469848334 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.460112342 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.52970374 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.545381403 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.819787161 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.098947852 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.567424696 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.47627496 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.612095407 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.849813417 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.463459923 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.079615457 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.448821991 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.101794382 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.479869526 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.44822494 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.464000174 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.467712948 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.637853397 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.617312283 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.074881927 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.485476076 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.075251602 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.657130905 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.463057287 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.463114091 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.466364963 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.099844526 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.09176052 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.660227405 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.621526548 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.684177743 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.455571453 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.463374452 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.44833776 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.554345615 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.469307246 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.106143163 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.06670191 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.479804426 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.466915012 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.465585583 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.466112673 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.667180725 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.12352322 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.570315797 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.042922262 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.823282815 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.807507448 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.464790686 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.535851418 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.47841219 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.809631501 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.466658958 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.531467343 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.917093464 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.806738991 seconds)
  done (took 175.656215232 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.73952135 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.833522118 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.573195057 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.620507439 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.103471012 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.05831478 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.8210501 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.616525045 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.583519632 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.753875928 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.775271685 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.56542526 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.698592162 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.550533716 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.247667944 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.567610624 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.589369727 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.631235243 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.638435051 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.582041543 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.177863911 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.766333583 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.67665224 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.450289862 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.564899261 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.295197165 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.057979705 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.015066815 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.659174644 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.944357747 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.047684668 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.656109529 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.497774177 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.2094787 seconds)
  done (took 70.931995994 seconds)
done (took 733.344445436 seconds)
SAVING RESULT...
DONE!
