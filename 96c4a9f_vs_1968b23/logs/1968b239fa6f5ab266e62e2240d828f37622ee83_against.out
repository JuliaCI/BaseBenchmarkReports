cset: moving following pidspec: 24401
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.234860514 seconds)
loading group "string"... done (took 0.462348297 seconds)
loading group "linalg"... done (took 7.566410825 seconds)
loading group "parallel"... done (took 0.170331932 seconds)
loading group "find"... done (took 1.154748375 seconds)
loading group "tuple"... done (took 2.095135585 seconds)
loading group "dates"... done (took 1.344538205 seconds)
loading group "micro"... done (took 0.247733122 seconds)
loading group "io"... done (took 0.651854656 seconds)
loading group "scalar"... done (took 41.022583636 seconds)
loading group "sparse"... done (took 12.91418885 seconds)
loading group "broadcast"... done (took 1.057826467 seconds)
loading group "union"... done (took 14.386537615 seconds)
loading group "simd"... done (took 4.798765519 seconds)
loading group "random"... done (took 9.621753679 seconds)
loading group "problem"... done (took 1.980913286 seconds)
loading group "array"... done (took 22.541032165 seconds)
loading group "misc"... done (took 1.423430802 seconds)
loading group "sort"... done (took 3.587112103 seconds)
loading group "collection"... done (took 19.456772916 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.515873073 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137515689 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132026096 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147724116 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203983565 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144165554 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158883503 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.116285437 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.987351294 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.190032404 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.1574379 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.505552968 seconds)
done (took 5.141767915 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.27446218 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094510293 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103279838 seconds)
  done (took 0.873025926 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077275321 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145730754 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094284794 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078403958 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094761221 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080362484 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094939774 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076864315 seconds)
  done (took 1.340395365 seconds)
done (took 3.251813687 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.717913078 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278902471 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204522468 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465574521 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.181792824 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.239258399 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.669431231 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.356211439 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253663745 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099346932 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144703791 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388229477 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136589809 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665911625 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089786186 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123959315 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178485743 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.45306796 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08299968 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10955852 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116315037 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140747632 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128082859 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091386845 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184175209 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083986426 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194854897 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109326233 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080041009 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288771114 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200808308 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687363559 seconds)
  done (took 10.859913861 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110439405 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135078613 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.0975654 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138476066 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137412855 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100930642 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085507872 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097952613 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124092445 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179793166 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.118611015 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138736244 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097474561 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084195163 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11768609 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246754953 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122538315 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106515391 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102750101 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089706851 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139774278 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115006699 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095389494 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.111410915 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168352059 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222684491 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113796121 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128994508 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.0957381 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112515693 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143769386 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143311986 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096910804 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081170746 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172508897 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126612014 seconds)
  done (took 5.192817606 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188123047 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121613154 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167466061 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163404383 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139257334 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159819609 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111998263 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.228870489 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.105475614 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164699475 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142030094 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11567587 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080022595 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098361467 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.126333352 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079027978 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.647542112 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161799692 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115815626 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115226018 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105941795 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099391299 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.347831736 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10213332 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095761608 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081536913 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081323942 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158047772 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083124061 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.132460039 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121775081 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085152568 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13527197 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209824119 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125787737 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116770593 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097327244 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078520788 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.199141949 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090933048 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097657079 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106536633 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13791 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137819461 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099218825 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082585575 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.209813709 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099554266 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116219035 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.972561732 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182109007 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092973665 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098607042 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.332945846 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101972432 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101140036 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079295631 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.267415772 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18570665 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101044449 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083096797 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099117388 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083459656 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386722017 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101192611 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.744301354 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085503283 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108753627 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084786481 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099136593 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10711294 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090515322 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118776058 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082088301 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101208319 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080800214 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098477854 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084481447 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112880549 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104495195 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082606702 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167210092 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081748736 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117787352 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128749629 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087270206 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097442367 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117184564 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.123501953 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104670298 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083062308 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136921175 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100313686 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.094432488 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103340493 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145375168 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099232159 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.162517348 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095696789 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078352318 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128273535 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097063654 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100416882 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116041167 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113890831 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10022926 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08584551 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097965537 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078957341 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166689143 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082565845 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099292926 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082962293 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114011832 seconds)
  done (took 22.743871412 seconds)
done (took 39.474048375 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.33063893 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102026305 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102491553 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102543442 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085519401 seconds)
  done (took 1.472919359 seconds)
done (took 2.19934779 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.282596166 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172021935 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094780433 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167746641 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076918749 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192295293 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160000938 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094374275 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201136231 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076997838 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.180297876 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077030299 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093459536 seconds)
  done (took 2.617231592 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095277376 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115072382 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082238646 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111626109 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076593392 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110775963 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092416812 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117447374 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109706686 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084941694 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0926515 seconds)
  done (took 1.806341065 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093550018 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114486104 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082487637 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11046714 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076342742 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110227978 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092762551 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115641629 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111180478 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085696342 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093760463 seconds)
  done (took 1.804747972 seconds)
done (took 6.944021236 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.0915206 seconds)
  done (took 0.806949007 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.008666554 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.092520083 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11256738 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.151541723 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316578472 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.196953154 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.567603172 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.129083689 seconds)
  done (took 15.485608799 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.114433999 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.113480886 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104387594 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083341618 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104730754 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084438352 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099512993 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099566902 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086184512 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.10090728 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082807964 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102293191 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097890782 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085853084 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102639292 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08348324 seconds)
  done (took 2.326970368 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120082744 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118191362 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105953592 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108404948 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087343828 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104273311 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106214497 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089926951 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102209305 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102326338 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090374008 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105619138 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103775815 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081368017 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10728578 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10674307 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085213021 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106324607 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10679178 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090960531 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106075874 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09690051 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086456378 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106514233 seconds)
  done (took 3.252356876 seconds)
done (took 22.591580157 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160880356 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10809904 seconds)
  done (took 0.992915549 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094337101 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113180686 seconds)
  done (took 0.934950051 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096966208 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095702035 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122873628 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109838051 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080562167 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095208976 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120940548 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080483494 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096311458 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080562894 seconds)
  done (took 1.710286929 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083384016 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109584406 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101272042 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094743187 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104609173 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095404807 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087006483 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098977579 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109923186 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076922935 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102693977 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114408402 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086168325 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117538426 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104575047 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084244656 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101743344 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09910688 seconds)
  done (took 2.508073636 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079280747 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097132269 seconds)
  done (took 0.908961045 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081269236 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093880246 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08178638 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09627076 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094166975 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076428067 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094523182 seconds)
  done (took 1.349914725 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.471836201 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118871759 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.270830582 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084847515 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121399688 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.321311202 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098492749 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084771275 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103264467 seconds)
  done (took 2.446817209 seconds)
done (took 11.581040237 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093002142 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117515873 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11194049 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.468512364 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107394528 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097332182 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148898129 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.247159243 seconds)
done (took 2.129766056 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.15011428 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325304786 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113857052 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067931701 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095679016 seconds)
  done (took 1.341210807 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080108538 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099910391 seconds)
  done (took 0.916537025 seconds)
done (took 3.152528221 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080346082 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097585924 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.077874092 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097819679 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.078566274 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095283478 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.111555175 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098346539 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080535629 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097541208 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.079935607 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.098170206 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097163795 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079222802 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095525836 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078197408 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.099598963 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081821214 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096675997 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078890799 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096776887 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082349433 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.09708284 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079223393 seconds)
  done (took 2.927930483 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10073708 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099142914 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102974251 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086116889 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101554097 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086619515 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103657052 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098855251 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086441468 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101119235 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08545668 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.103408469 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101327748 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085344176 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100357333 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10212743 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085321689 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098410189 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08250888 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100877203 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103162701 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080581228 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102094285 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085491544 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100631618 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101298707 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082462617 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098053073 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085759731 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100499158 seconds)
  done (took 3.593738563 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084978858 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094499313 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078929535 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102310361 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077176184 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097484012 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077617153 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096144552 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080118387 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098110039 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081328412 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097526891 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.08004232 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099108773 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080540668 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100198763 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10805122 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077947289 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095643488 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078131205 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099294677 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077991091 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09526124 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07767921 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095262976 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077872688 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095529699 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077998097 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099515318 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079756846 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102464624 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083542715 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097958578 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086689456 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101214008 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.080901669 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101487997 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079736192 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098889446 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080411222 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.098448854 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.080240247 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.097411673 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086970561 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.098082142 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100873766 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080885154 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099448596 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080933744 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100442217 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080249327 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097877916 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081839063 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099307659 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084206442 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097506613 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081418197 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.097390123 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081960856 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.097144896 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080327205 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.09721172 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.082636603 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09799665 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113860896 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087698614 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097863002 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079031342 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097146928 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080679145 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097443741 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093595287 seconds)
  done (took 7.248572921 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083454081 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106459796 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081172397 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098155005 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076510197 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096513644 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098881762 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079334642 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097429449 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085141492 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09568409 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080970405 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097143982 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091041127 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096596733 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097021126 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084743713 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093544508 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079014797 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101348365 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081482155 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100968752 seconds)
  done (took 2.753263102 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210428683 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105681402 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142243392 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107600437 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083941808 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107635523 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101882964 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086656886 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103003557 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083928025 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100618558 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10291941 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0846536 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100733519 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084856005 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102147538 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102562304 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085625184 seconds)
  done (took 2.647154293 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093806518 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099401726 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103837139 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09864036 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099129531 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08377011 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105329228 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107364182 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082945506 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099306317 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090566067 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101558154 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101037854 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081309779 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101355858 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081467002 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101502904 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08125412 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108462132 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105214146 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088241383 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107922489 seconds)
  done (took 2.87655941 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097346666 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100930999 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117943703 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084255059 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094846759 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079515535 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106598604 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081529798 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.1067032 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100776367 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081431283 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097764994 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088511277 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098135959 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104333182 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081612893 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102297407 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081805922 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101639496 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077350045 seconds)
  done (took 2.639495858 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104054292 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100391983 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100012542 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093460351 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101341745 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083357139 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109812597 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101449777 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083348326 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124557378 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100358683 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083031694 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109292388 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106520773 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082387685 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109734213 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110623481 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110183972 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082705023 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100804586 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.235934575 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08376644 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110248485 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100266415 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083402927 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101318309 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083270066 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107559266 seconds)
  done (took 3.659729223 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082029294 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099736276 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079407182 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096710229 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079859084 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097230753 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079097064 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097344357 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081934356 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096808147 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081514017 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098638376 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081302817 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098501178 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081306053 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098274742 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083429604 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096829936 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079118586 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096347856 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081639613 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098868996 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081085212 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09632162 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078381786 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09827428 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078885793 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095867436 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08174999 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096645798 seconds)
  done (took 3.431116663 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091377069 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106875712 seconds)
  done (took 0.955229993 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079075947 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115537298 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078650131 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10261889 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086018811 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100413523 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108265041 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08788166 seconds)
  done (took 1.516036794 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096928271 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110895982 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08347092 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11211847 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109086941 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096107314 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160080473 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100668277 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087789844 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098161424 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.096066932 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.09861239 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104691778 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081099111 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106259847 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088078366 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097196256 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088817093 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10182947 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080707345 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100448527 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110974106 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085155085 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097501237 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084789042 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111182807 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109803636 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084234953 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103060577 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092548251 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.105297907 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.076023671 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.099217642 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101246089 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079657902 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109032064 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095520987 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.1033971 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108870933 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083338778 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11131301 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.077549828 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.105138395 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.1059755 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092539726 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101577531 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08413967 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095528405 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080301922 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.10251889 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.077592575 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099832934 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077300487 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106901307 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103981493 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096337891 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.098804043 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084401263 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.102820753 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085727265 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.105445047 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103096147 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085148694 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099829465 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090159039 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.104379175 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088908493 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095767443 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.076456321 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097516311 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107876251 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105412215 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.107913932 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101039067 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083851284 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097954122 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0852713 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101727964 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089187085 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108119444 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100943219 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09002833 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107629466 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082509863 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.103000223 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108694034 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.081986339 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102906212 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079452693 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114800428 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099029534 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080328148 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098807688 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.09203314 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.103750777 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.083365728 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098242032 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092900905 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095191591 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083390782 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101486628 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101231735 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091481617 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106932569 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106979036 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089714868 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106913463 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082024514 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103735366 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079211998 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101533403 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085121218 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107165748 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07724494 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102662721 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.101638511 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083957687 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107614769 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081606126 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100169563 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108839498 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.089611186 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099160246 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07917751 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103645972 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083565767 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103778307 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090115628 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09887116 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095238646 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.07793215 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104766156 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082406236 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104857496 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08895646 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104461497 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094094666 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081190654 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105674975 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090538228 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10087065 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082963909 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10396187 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10115394 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08330153 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105853655 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085996795 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100894815 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087928824 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102727065 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078296969 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105372346 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103847605 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081399654 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103962838 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088063078 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102957429 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08375567 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100039223 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107445024 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084385214 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099964501 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082783432 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099814073 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091957373 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103778854 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078544837 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096873092 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109226941 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080571531 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10078517 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082086862 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103738586 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083165911 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099130151 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082154917 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101748995 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114158281 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088318659 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102385811 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088430958 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111444808 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101054128 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084882491 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100636782 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084800408 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102236587 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090080134 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106758266 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106885541 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084770994 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097417648 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088495549 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109132279 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082520178 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099824225 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100328461 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087244111 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108159242 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086619987 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102793827 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081039814 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102057317 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105578728 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085915918 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100277111 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081787304 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106134503 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082758456 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108648217 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102142182 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09141978 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104365951 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078903897 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105400141 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098710463 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089349385 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097275784 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080617865 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.09961104 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084754982 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100619747 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086628308 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095818696 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090498744 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10946876 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101420648 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082318273 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101019292 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091567998 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.1029307 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086281363 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104821131 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105984014 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096005944 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100070825 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085636367 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109551745 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.083569524 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095588828 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107763091 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081039986 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100074763 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082777551 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09912413 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086486832 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109963763 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105916218 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076963969 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105062708 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080924962 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100024581 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07938969 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.10740756 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087031424 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103237681 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110397901 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084140981 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102462096 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086962127 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.10103286 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084077123 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10298302 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104905873 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084332648 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103822175 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082351677 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10369636 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082373346 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099570564 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085009537 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101656616 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083134343 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106387258 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103101857 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083618751 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104225783 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08433466 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10217876 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08330936 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100583061 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086095441 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.1021976 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101061613 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085633822 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097382489 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091166203 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.10115589 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09139302 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101575105 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079702469 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107753285 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103823467 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089091418 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102761942 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085782017 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102893932 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082625812 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105454476 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110409203 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081486583 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111400512 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089056348 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102468002 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.1047743 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08315914 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103356383 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08219183 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103452525 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084670464 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102166303 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082883312 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106640566 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085763578 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102326082 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103845685 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084774504 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.101949445 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084909396 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096378677 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082283937 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101448602 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083477636 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109476385 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102036857 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087248602 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101076488 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084823534 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100578851 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080108179 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110448471 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112457321 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084418323 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110242194 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083036624 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.10402253 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110935059 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078361407 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100649278 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08289717 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09967056 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09150011 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102884946 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092069479 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101512475 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082718328 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098918708 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102751282 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083213719 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096737692 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081430545 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105484251 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08638435 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100857152 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085278094 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104510662 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085773918 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109333041 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100739565 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085455865 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102704739 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081558023 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100208554 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082259486 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104324464 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08430622 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.10005456 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080488996 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102102474 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.111011676 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084180599 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101838084 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085805467 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109002624 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084618445 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105166502 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087242919 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096885732 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105006654 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083695492 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101038826 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082455767 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105904861 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086548528 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103760962 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109584762 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083956714 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102436418 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084567506 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100119037 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082653961 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102765662 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084169848 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102041557 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085141557 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111009847 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099818882 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085365317 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101594294 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083842417 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10721302 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085484364 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103870104 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109486837 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087631653 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.104367369 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089933027 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105993286 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087118217 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104332668 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103984595 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089805972 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101654826 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091566053 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102555412 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085150525 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104341516 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100405033 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083696947 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102182832 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082829507 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106734761 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084983933 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101667504 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082588872 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.101470759 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085098379 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106502747 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109484816 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085806167 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105677606 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079254633 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100149142 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084815712 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100448646 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085141422 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105473237 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107548627 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085841821 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102992968 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083352204 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109514799 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089868799 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107830051 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100911668 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.08849285 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104618553 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087380141 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10360091 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08385886 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104861628 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107399481 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085795718 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.10199164 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092476427 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106866451 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086170606 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104322488 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.0847688 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104588456 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098508155 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085406869 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106392979 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091258071 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105801072 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084701158 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112126932 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103270812 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084112026 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107073359 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083823664 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.10995482 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079280101 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103877006 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085142033 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105294829 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097464627 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083810029 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101021135 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087071909 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102727165 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080458436 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113109453 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09111458 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104916837 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101865425 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083313621 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098450056 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080356964 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10142006 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086178391 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104728642 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092775628 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101824316 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083412117 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100268036 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103929851 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087911525 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105999497 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081824942 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098900837 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083367275 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105787356 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091150513 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102323467 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.084661438 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107146885 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10484007 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082881261 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108044317 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081058585 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106438356 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095397823 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104631971 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103430335 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089958032 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111966228 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085084645 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098008589 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085261118 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105510508 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10307415 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085817553 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.1045444 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097965517 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107316778 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083945204 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102475718 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106323834 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084049517 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110028919 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085650835 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105425324 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089667039 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.10570217 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113323533 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088153897 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10900456 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086554302 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.105942224 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083781442 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104920099 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101332531 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083318644 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104298432 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086102317 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108917975 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112161607 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083468221 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113405362 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092552753 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108153463 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081385282 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103225692 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083959829 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099513486 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086806434 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102189355 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102242959 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083075151 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.1024975 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085342741 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10955434 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086497381 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105600472 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.084798874 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098476655 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.08652215 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.107988115 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105583777 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081870623 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105336164 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086424303 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.109837973 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093470834 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.108114276 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089188466 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.109115375 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107375427 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08094674 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.114387529 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087096146 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.110136387 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08704002 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107588618 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087608265 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107630528 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109527357 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0863712 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106781539 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.0967691 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107492147 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082201474 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101698998 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109242324 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.08259247 seconds)
  done (took 57.97681726 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148627384 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081054414 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099435085 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080630574 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114059298 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100139045 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080230649 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101122725 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081651953 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102760987 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080570309 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09954548 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109289854 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107043718 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114234372 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105253232 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080118661 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10176759 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079446532 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100686955 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109575792 seconds)
  done (took 2.88816636 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106214618 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117917162 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116445496 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120226892 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090358767 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117150129 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114179529 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097298339 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120179191 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111959741 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120005387 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097014277 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.111500878 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111473794 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111596606 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094536778 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119691917 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109564888 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.098106682 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115210827 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113963419 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116569828 seconds)
  done (took 3.240001808 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085088052 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10303327 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085688349 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098538527 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084317101 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098797516 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088660278 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10104533 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.0874602 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102877991 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082344214 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.1029363 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08562726 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.098713836 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102485233 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082960931 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.155121129 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108396043 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084279807 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106090729 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.079646507 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107084328 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.079773295 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.099668376 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102587669 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089031925 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104758699 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082851239 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104494393 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084000579 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103526879 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082105962 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106029178 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.085399309 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.103007173 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.082574219 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103958889 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104286637 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079973719 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101686961 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085335638 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.09920932 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084912288 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104921914 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083003459 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101678509 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08628804 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104847908 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.079599648 seconds)
  done (took 5.472517579 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106196935 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162744699 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087458513 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143291123 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121620224 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114207711 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088886738 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143925948 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102425994 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084277905 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124638916 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120724222 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104079568 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090789251 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110898684 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104149732 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08630436 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103261556 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089850774 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103851669 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109341599 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091660542 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120557531 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11888288 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108816219 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083743103 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104019138 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.08965808 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117519749 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11003369 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110090197 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092772089 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121604306 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106935155 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084182477 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107185208 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122359503 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085465716 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108486377 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.082961043 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.107035277 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10995142 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091063722 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123669102 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.1052311 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.090171944 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10575144 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100914129 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098716653 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.108107406 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11402034 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121204904 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089946765 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105828021 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110201725 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102092085 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104591461 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101955218 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088897567 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118428098 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.08341824 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109000489 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120102593 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106650013 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093600316 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120310866 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109531726 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089731228 seconds)
  done (took 8.161277347 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09452048 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112272741 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122131305 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121935478 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093497215 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112813365 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112848904 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092426253 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112372809 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118703868 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111993533 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.136153844 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087368714 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11580807 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112542803 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093504962 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112258288 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111685897 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092586701 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112999334 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113546581 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121085786 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091771092 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121756517 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142511874 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106740302 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092897259 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112339515 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121696203 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111839771 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10585065 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.111912947 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112281241 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122630776 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125766766 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092607719 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103987289 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092310746 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.112257183 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112377532 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08682746 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123345312 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112053785 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106211146 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093037637 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11260359 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122987352 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125407852 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09596995 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118093953 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112150345 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122718711 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092469074 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113960048 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121470898 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149624238 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12168902 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121522128 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093053866 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.122175141 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121960935 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131138223 seconds)
  done (took 7.758485684 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109423706 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116752245 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119436454 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100785083 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083101584 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110003817 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083149482 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.107481856 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099689363 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.120610183 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122646036 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114543218 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097750297 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123625837 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115120788 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118849399 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094706852 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.114317206 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119057166 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090134457 seconds)
  done (took 2.99044819 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094494612 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124828349 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086092291 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112561021 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109396056 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092641059 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108049036 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108591006 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086959371 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108543448 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098051187 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118023597 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106608854 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093360048 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117162576 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111313807 seconds)
  done (took 2.509998961 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097805463 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11818788 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121296973 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08539528 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105517059 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082123587 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107115851 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101165798 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082669989 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122552474 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085548823 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.1095214 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105348876 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084414172 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103377905 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088803015 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102357997 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085844059 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110606112 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.127548317 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098245969 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10996312 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.090772759 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.112897326 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.110721379 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095529302 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111324187 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.086893045 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.110786429 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106377974 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086437911 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114407968 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082360053 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104868342 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103432842 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083913467 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106111917 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085988252 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10852272 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086189308 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104203563 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104425383 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086543876 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106331428 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082114979 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10729804 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084129321 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.116925548 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108800752 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.09117263 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.11134936 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091970603 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111913103 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121788531 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093681758 seconds)
  done (took 6.378626027 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100893915 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109132706 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081870214 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103572329 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08935295 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108645938 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109213715 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088580366 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107094961 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083238746 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106818582 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089947664 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109042045 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110562756 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088696386 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109953191 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080879679 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107224457 seconds)
  done (took 2.625102207 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092569151 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106047246 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094448316 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106167227 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085672562 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109102871 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08141689 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105003137 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083720345 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.107150214 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106062686 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088190744 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104628375 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088172253 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106397822 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08544148 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109660913 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08457121 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106476469 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10198933 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089531799 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104496156 seconds)
  done (took 2.985637884 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119261632 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.12583081 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093122707 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230149323 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104624624 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133305123 seconds)
  done (took 1.644041754 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110056392 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122110274 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106738915 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108335658 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116325885 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087013188 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109524759 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108585137 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118753053 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103354309 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109120378 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120005486 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118469502 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09878721 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116051661 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114881607 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088362919 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109073405 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106578728 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129919267 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088962191 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120531231 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113377646 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092811751 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114093152 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124395376 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124144367 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104099932 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112264717 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118362204 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115652766 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089155612 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118758308 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123805959 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089971055 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120619765 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108168541 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128961968 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095108058 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117867227 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109639996 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096249313 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12062576 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114899312 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11835746 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088331849 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11590163 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109162473 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088165671 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136088272 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11539397 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118657327 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115464057 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098821303 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120421759 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136042364 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124645118 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118939268 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115387817 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103276853 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118787883 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116602453 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119409258 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12494405 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09563162 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118088019 seconds)
  done (took 8.224670406 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10465189 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126355079 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108847031 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103697779 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097888854 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108755631 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107805109 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090066234 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108714242 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088265967 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153806341 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109886903 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11989957 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118692192 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087818269 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109746652 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109331391 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119086469 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087770261 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13741333 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10894445 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119202956 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099051315 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119380761 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125130535 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116617911 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088233357 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109102968 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109418066 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088376795 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115928598 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109378987 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118870942 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087414141 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11983453 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10867845 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089002046 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115693188 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108919464 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094268919 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120526264 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129748586 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110633864 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088679931 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125643511 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10999534 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10890198 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087969433 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108788615 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088069514 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124576487 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124425387 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125785031 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119709125 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089364701 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110276507 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109912845 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090225307 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109544478 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116198683 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118384699 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089161141 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138269594 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108828381 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10892744 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099529979 seconds)
  done (took 8.079046088 seconds)
done (took 155.920136164 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098836784 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137413217 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097101603 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168845517 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107131748 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120334496 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138864377 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098246122 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107125943 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086852259 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107178466 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088233327 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171885174 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085584622 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107103694 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108486546 seconds)
  done (took 2.67251242 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201819693 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255180808 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103723789 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10680132 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089857708 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111287036 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084190618 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113864668 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110408653 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086843836 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10985371 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087449975 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106477613 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087011144 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111727602 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088235813 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106079745 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08892895 seconds)
  done (took 2.900458909 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114210167 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153921499 seconds)
  done (took 1.123314737 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119921822 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181295298 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297165104 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156929864 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119541119 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127687964 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157692786 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131491544 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198477356 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123274822 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123366158 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097753167 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141252718 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116439899 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095614015 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118692699 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142872226 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.094715984 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115909175 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116933261 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118153729 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106870405 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095635657 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114562291 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183937518 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12015272 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086267865 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106681129 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.096816728 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116665475 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113044749 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.104167594 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119938333 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156561712 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124170872 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.158322552 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119597977 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11285931 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095508337 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.112404452 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118940268 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098269416 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.12604112 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118620463 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088830297 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119567491 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08615207 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.106844694 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114644001 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.099441775 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116599618 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.093762886 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.17830872 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099594299 seconds)
  done (took 7.555721841 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.798207827 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.169898695 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09071829 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.896814166 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139208486 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103933019 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.789186632 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.1092023 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25837199 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760796098 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131996829 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09851525 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239758603 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.26269575 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.910499746 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316059033 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.671526733 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127715388 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152214419 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156473146 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116811354 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115328105 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130341527 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431437231 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116417696 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090864471 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117582512 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120351616 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163046654 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125266148 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092649354 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200825722 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249184658 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185789601 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116278099 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10956705 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090439585 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170457142 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271650937 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222399616 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18332285 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086586921 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11250114 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121517465 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10765172 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110345134 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164596914 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.197710845 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.175113695 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114304664 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099383306 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12050369 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119901096 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167205949 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122239889 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.296517934 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.327472087 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112171757 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118660695 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105426634 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267927201 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12470977 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206657432 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136217754 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216962162 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089029572 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801209515 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170776744 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111369941 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117586944 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096533503 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116767438 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119152541 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167269012 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393357334 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102205571 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114739809 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088617023 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.239167996 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126491852 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090142836 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163603822 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116954339 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118073119 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101819445 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123429921 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171414672 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.253447122 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100237282 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119207266 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115513891 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.100679261 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116369273 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212320138 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223765226 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163947455 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230277983 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100232956 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18903873 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171067382 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121395164 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.175022304 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116959601 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104845001 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122496689 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220075472 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147188303 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124055099 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094561328 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118441796 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150054855 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128297908 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098378634 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.171867775 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483583412 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170946805 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108334934 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106121911 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120242157 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163666454 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118555129 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258487238 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098376575 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192265474 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097231947 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109641772 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095856809 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.189120893 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100000649 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121593101 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122190404 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096355954 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.260673951 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.199942496 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124212257 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247706032 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186665689 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095805337 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197677825 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096370797 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190537443 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098231557 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120581305 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115717165 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773353666 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123327084 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117721479 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093871552 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189947533 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112230571 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123660257 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106218123 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108856897 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754826825 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127443369 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.123422348 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124892157 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097150743 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118937008 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116897114 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094266257 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162178375 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235590956 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121762554 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118282624 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103908104 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182804958 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094343096 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125213861 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12577075 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104191405 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119220409 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116084579 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104434641 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194567447 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165594652 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226013409 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577213755 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112396 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.127073703 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234160767 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090219181 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292102049 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118968801 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.207003721 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189055824 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100486255 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.3220142 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.188463727 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188667014 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10699422 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.196275059 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088068189 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117177381 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169068008 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112416863 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096547446 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162443443 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126018177 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123202508 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.976959826 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090692449 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225989948 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109143209 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171320555 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117003345 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120758301 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.273600387 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113697339 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12947465 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.168594794 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115924823 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104526537 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.727147438 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126006845 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100033303 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119912192 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.22651243 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166176953 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118461067 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097298995 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121936877 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.165834714 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233951885 seconds)
  done (took 44.194951349 seconds)
done (took 59.2989786 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276607894 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216804338 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260717028 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170947998 seconds)
  done (took 1.879977412 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170547581 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150107745 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120581612 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108203376 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149727861 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08628353 seconds)
  done (took 1.667854486 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.330652587 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.293451692 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.216884927 seconds)
  done (took 1.726800209 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251373632 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.270245659 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.333263158 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.419045088 seconds)
  done (took 2.257386954 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.200272285 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131246767 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.087707747 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.129411847 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.175876077 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.244050563 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141955961 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.165937258 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.123462135 seconds)
  done (took 2.32529912 seconds)
done (took 10.741692913 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", Float32, false)...
    done (took 0.207446778 seconds)
    (2/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091211649 seconds)
    (3/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.251469505 seconds)
    (4/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.265184024 seconds)
    (5/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.123277204 seconds)
    (6/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.188302923 seconds)
    (7/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.237589329 seconds)
    (8/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.205964897 seconds)
    (9/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.119427675 seconds)
    (10/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.23210899 seconds)
    (11/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.161485934 seconds)
    (12/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.184073723 seconds)
    (13/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.227805961 seconds)
    (14/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.125781534 seconds)
    (15/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.06863065 seconds)
    (16/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138258905 seconds)
    (17/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.174166025 seconds)
    (18/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.103008077 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.205800276 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094657203 seconds)
    (21/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.150147915 seconds)
    (22/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.134686478 seconds)
    (23/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095110771 seconds)
    (24/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.225279205 seconds)
    (25/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112028812 seconds)
    (26/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.101919812 seconds)
    (27/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.128773878 seconds)
    (28/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.222330262 seconds)
    (29/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.191561707 seconds)
    (30/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.123333666 seconds)
    (31/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067735461 seconds)
    (32/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166187092 seconds)
    (33/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.15342761 seconds)
    (34/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.095526848 seconds)
    (35/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125327455 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 0.225808097 seconds)
    (37/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.199411343 seconds)
    (38/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.096370513 seconds)
    (39/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.17542856 seconds)
    (40/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.123973326 seconds)
    (41/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.099117272 seconds)
    (42/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.195970109 seconds)
    (43/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116992578 seconds)
    (44/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09709969 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.135564161 seconds)
    (46/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088479105 seconds)
    (47/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116657086 seconds)
    (48/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.167734855 seconds)
    (49/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.0994588 seconds)
    (50/286) benchmarking ("sort", Float32, true)...
    done (took 0.234108983 seconds)
    (51/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.106590227 seconds)
    (52/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.077893057 seconds)
    (53/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.117642962 seconds)
    (54/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.161810777 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116977222 seconds)
    (56/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.131391204 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117345041 seconds)
    (58/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125727637 seconds)
    (59/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095038497 seconds)
    (60/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.202534152 seconds)
    (61/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.09510757 seconds)
    (62/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.191077054 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112172658 seconds)
    (64/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114210818 seconds)
    (65/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11723617 seconds)
    (66/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066433651 seconds)
    (67/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.182988344 seconds)
    (68/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.079695766 seconds)
    (69/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.146276495 seconds)
    (70/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.122590815 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.150561144 seconds)
    (72/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.191472171 seconds)
    (73/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.121005158 seconds)
    (74/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094273286 seconds)
    (75/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.184599903 seconds)
    (76/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.174913301 seconds)
    (77/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093885067 seconds)
    (78/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.189504184 seconds)
    (79/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.127901762 seconds)
    (80/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125774972 seconds)
    (81/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163534522 seconds)
    (82/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095632552 seconds)
    (83/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.181986396 seconds)
    (84/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.175569842 seconds)
    (85/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102611314 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137486542 seconds)
    (87/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06727292 seconds)
    (88/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.12072286 seconds)
    (89/286) benchmarking ("sort", Int64, false)...
    done (took 0.086929183 seconds)
    (90/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.184277206 seconds)
    (91/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.185218804 seconds)
    (92/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.125449314 seconds)
    (93/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112559691 seconds)
    (94/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117777427 seconds)
    (95/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.248978502 seconds)
    (96/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099906486 seconds)
    (97/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.159292226 seconds)
    (98/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.094118073 seconds)
    (99/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.122717848 seconds)
    (100/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115931675 seconds)
    (101/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.135529672 seconds)
    (102/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.107568738 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.111292072 seconds)
    (104/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.1161005 seconds)
    (105/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067326589 seconds)
    (106/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090150389 seconds)
    (107/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.096997022 seconds)
    (108/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119406441 seconds)
    (109/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088507709 seconds)
    (110/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.13723077 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087181924 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 0.18118732 seconds)
    (113/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.140661934 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119089305 seconds)
    (115/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.148075419 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.13461328 seconds)
    (117/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113657513 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093854378 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109498317 seconds)
    (120/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095100852 seconds)
    (121/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066313564 seconds)
    (122/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136337383 seconds)
    (123/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124300312 seconds)
    (124/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.111861048 seconds)
    (125/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.10054231 seconds)
    (126/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095845526 seconds)
    (127/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.116357991 seconds)
    (128/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.090383527 seconds)
    (129/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.10972969 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.08712206 seconds)
    (131/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.137360129 seconds)
    (132/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.11119358 seconds)
    (133/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086890248 seconds)
    (134/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.092017203 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.112908386 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110827819 seconds)
    (137/286) benchmarking ("sort", Float64, true)...
    done (took 0.235332847 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095288546 seconds)
    (139/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.091658046 seconds)
    (140/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067745598 seconds)
    (141/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.154720918 seconds)
    (142/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086872908 seconds)
    (143/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.17448633 seconds)
    (144/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078770443 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110427078 seconds)
    (146/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067933887 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120695792 seconds)
    (148/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096352328 seconds)
    (149/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.138905765 seconds)
    (150/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.145546106 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.14116453 seconds)
    (152/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.089856733 seconds)
    (153/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079458305 seconds)
    (154/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.095596834 seconds)
    (155/286) benchmarking ("sort", Int8, false)...
    done (took 0.212852863 seconds)
    (156/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.07632054 seconds)
    (157/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.186140526 seconds)
    (158/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.098860962 seconds)
    (159/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.111260849 seconds)
    (160/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.187881447 seconds)
    (161/286) benchmarking ("sort", BigInt, false)...
    done (took 0.222900275 seconds)
    (162/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088537187 seconds)
    (163/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.202067709 seconds)
    (164/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.091766353 seconds)
    (165/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.123964933 seconds)
    (166/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.090785378 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094472562 seconds)
    (168/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.090650402 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.087281047 seconds)
    (170/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.121385181 seconds)
    (171/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.150836616 seconds)
    (172/286) benchmarking ("sort", Float64, false)...
    done (took 0.173170919 seconds)
    (173/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126696189 seconds)
    (174/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.088515865 seconds)
    (175/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.121342091 seconds)
    (176/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067701884 seconds)
    (177/286) benchmarking ("sort", Bool, true)...
    done (took 0.225228523 seconds)
    (178/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110201333 seconds)
    (179/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.088668551 seconds)
    (180/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.194330189 seconds)
    (181/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068094201 seconds)
    (182/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.109902223 seconds)
    (183/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.15167347 seconds)
    (184/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.091185294 seconds)
    (185/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068372706 seconds)
    (186/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067949777 seconds)
    (187/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.102681374 seconds)
    (188/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097133808 seconds)
    (189/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118911374 seconds)
    (190/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.077851008 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.120329562 seconds)
    (192/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08682657 seconds)
    (193/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.093531403 seconds)
    (194/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.15817403 seconds)
    (195/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116197548 seconds)
    (196/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.186460907 seconds)
    (197/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.07659176 seconds)
    (198/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.068680385 seconds)
    (199/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.111472455 seconds)
    (200/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.128058768 seconds)
    (201/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117710636 seconds)
    (202/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091472363 seconds)
    (203/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109550533 seconds)
    (204/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088006283 seconds)
    (205/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.091224053 seconds)
    (206/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.06825945 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110187508 seconds)
    (208/286) benchmarking ("sort", BigInt, true)...
    done (took 0.235384981 seconds)
    (209/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.07162582 seconds)
    (210/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.068384564 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.111019626 seconds)
    (212/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105862645 seconds)
    (213/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.322810208 seconds)
    (214/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069184824 seconds)
    (215/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067029739 seconds)
    (216/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.116558903 seconds)
    (217/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068822204 seconds)
    (218/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.093223975 seconds)
    (219/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.130774355 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.121339757 seconds)
    (221/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.088117641 seconds)
    (222/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116173948 seconds)
    (223/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.068329579 seconds)
    (224/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090565418 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087849457 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.110069274 seconds)
    (227/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087564939 seconds)
    (228/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067522845 seconds)
    (229/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.091308657 seconds)
    (230/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.089622466 seconds)
    (231/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090943013 seconds)
    (232/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093794952 seconds)
    (233/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.111198314 seconds)
    (234/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096330482 seconds)
    (235/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091403078 seconds)
    (236/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.232926056 seconds)
    (237/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096603537 seconds)
    (238/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122627187 seconds)
    (239/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068471027 seconds)
    (240/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.082679158 seconds)
    (241/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.112784838 seconds)
    (242/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066685355 seconds)
    (243/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.091726156 seconds)
    (244/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067460916 seconds)
    (245/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095838709 seconds)
    (246/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.113109257 seconds)
    (247/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.111228223 seconds)
    (248/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.141327402 seconds)
    (249/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139838902 seconds)
    (250/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093974725 seconds)
    (251/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.093141521 seconds)
    (252/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068105766 seconds)
    (253/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066912311 seconds)
    (254/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126709149 seconds)
    (255/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067057836 seconds)
    (256/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135536447 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119478611 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087428436 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109354117 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086459857 seconds)
    (261/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114355593 seconds)
    (262/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.157606406 seconds)
    (263/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114162712 seconds)
    (264/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119406917 seconds)
    (265/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068603437 seconds)
    (266/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090455862 seconds)
    (267/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.115120844 seconds)
    (268/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093456042 seconds)
    (269/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.138230399 seconds)
    (270/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.110587734 seconds)
    (271/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.089165888 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.111098308 seconds)
    (273/286) benchmarking ("sort", Int8, true)...
    done (took 0.224644738 seconds)
    (274/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068294182 seconds)
    (275/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.17465143 seconds)
    (276/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.068067945 seconds)
    (277/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138904264 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093864969 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110782049 seconds)
    (280/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093997929 seconds)
    (281/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.090701278 seconds)
    (282/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150241806 seconds)
    (283/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.091772152 seconds)
    (284/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067967282 seconds)
    (285/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.068070926 seconds)
    (286/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.113892415 seconds)
  done (took 36.285333065 seconds)
done (took 37.173286594 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100180074 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148106637 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.097203372 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137428589 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124521841 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092755805 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118447074 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098151173 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123908251 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126526277 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099344184 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093416129 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098849122 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121375657 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097897255 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139076912 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123683176 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094455567 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120422458 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087062088 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119011057 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087020712 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111971055 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070756914 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121795947 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.096040456 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116067299 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.097063566 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.111206956 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.086653844 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.117401693 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117862847 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086677881 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124818634 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094225848 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118718166 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097904689 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121398568 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.089868717 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111097603 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.09460705 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.110358983 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093531479 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.119043256 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.092674188 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.116401675 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11910808 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100503239 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139549045 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092221554 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.120880411 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121100812 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096505241 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118064684 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092517933 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119656156 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09237271 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139426236 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.095959701 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116250856 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119235585 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095749703 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116533748 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096251886 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119397747 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.097899161 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.122001436 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.092026936 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.120859892 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116133836 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086901374 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.11938788 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090806451 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111355339 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096473437 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121695745 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087642266 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117055018 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.095167574 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115804497 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.087130638 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112995081 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.089660325 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118166315 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090073511 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.093812229 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.092424393 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117343528 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.087129423 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.119662371 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.093922427 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.117923813 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090118758 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122904709 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.087344936 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.116252929 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087952452 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.112443123 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090217169 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.115530378 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110574207 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090353155 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120413157 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090406372 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117232209 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.100118117 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110224753 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.094091612 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.11078073 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.087123994 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126726934 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097905377 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.112314806 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092381079 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110272905 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.095017447 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111195272 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.087802752 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111240376 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110901444 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093731324 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110498088 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090703224 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117764068 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102070265 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.110757082 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.091723504 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113541912 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087938076 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.116590213 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.087750873 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.111353926 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.090403096 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.101547513 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090363959 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.110521133 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.096043584 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113653801 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097510765 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113504847 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097952932 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116819952 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094846881 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116591344 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.087694065 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.098221367 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093603771 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114645565 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.090065624 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111461681 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.090127181 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.110697476 seconds)
done (took 17.008804032 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087929333 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184653774 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151871478 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141901444 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108173838 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112714826 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122047276 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120042522 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114519645 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142706152 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111428053 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131518152 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147540718 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087626519 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111883779 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092333857 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112542422 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103334912 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146072406 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133422632 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.1651307 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086982204 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14835258 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135819582 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.096924892 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.129079538 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112638329 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092450394 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115221525 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.114111295 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131836854 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091461347 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112289617 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134441444 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105715364 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120044741 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08848228 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120158521 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088566433 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111473937 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141542811 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.109892091 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117023306 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.094329495 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115918449 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.090379121 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115300916 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120861922 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099589271 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115790545 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.102378161 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157121822 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.11643277 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122039056 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088236954 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122875028 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.098423035 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.114620574 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.08895467 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.115397357 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.088176252 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.115463388 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126546215 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.11891587 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.116953878 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123064191 seconds)
  done (took 8.639275198 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106145956 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139727601 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105654158 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131250595 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112736362 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089443736 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11252541 seconds)
  done (took 1.741844727 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08953396 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134157359 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111942518 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135956394 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133245977 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112744331 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124050553 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089160031 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132825593 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090170884 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135110196 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150070086 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09064472 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121941124 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13833507 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088958952 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137762375 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089163944 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116610924 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113140544 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116540083 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135408959 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090794248 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113520671 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103780476 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113743183 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162687183 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095108019 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115403831 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093185966 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112137777 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.127311867 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.128634991 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124885817 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089807128 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130737531 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.103463378 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11242472 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.101272571 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.119179596 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.12810386 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091253877 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114678691 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08783721 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118813422 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100619268 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117547732 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.108816518 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117012576 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109121521 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.115109188 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.102764442 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114639807 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118213799 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090807926 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120297708 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.100312831 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114543421 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.10930919 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115937154 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106478668 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.130687175 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127962685 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.107148466 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117077504 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.102886369 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.1288395 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092301507 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115940418 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116888536 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.106713808 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112313705 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.091621401 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.124333506 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091180047 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.138737857 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137424833 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092118091 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125071288 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.090258443 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114602439 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090412429 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137829906 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093617288 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114938856 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09233505 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117815964 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.087518362 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114045366 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092829279 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112510851 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090972241 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117579117 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114697028 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092786185 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131187692 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091100597 seconds)
  done (took 11.832427047 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091307531 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115639876 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093393373 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115582531 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091353659 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116727995 seconds)
  done (took 1.589312122 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117373512 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118874617 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.106651406 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121787376 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156924991 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105827288 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130833357 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12389543 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108566673 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128400443 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129471467 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106433754 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136638901 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121297464 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104911365 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121395844 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.105095325 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126885384 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128027617 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097796322 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137752227 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122431896 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096348403 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132671971 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094365229 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122713161 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128116292 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103743449 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127633343 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.098011428 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122109062 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118640339 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097676237 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.12461094 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130737077 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096633111 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121341766 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.094166122 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127084121 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118130114 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105920038 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122640631 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.102781351 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.120073777 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124848347 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.096539504 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120093494 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125671005 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104721723 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119775415 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095685805 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123413668 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120617785 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095410404 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124440969 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098726409 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120321413 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130824525 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.097256944 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122562133 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093628763 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.12050686 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125225918 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.093929073 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.13081697 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120216386 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097329376 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12289994 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09742942 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122185573 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119640172 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094494273 seconds)
  done (took 9.286867601 seconds)
done (took 34.03435188 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.684851842 seconds)
  done (took 1.645545451 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.832732583 seconds)
  done (took 1.795680833 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.877699232 seconds)
  done (took 17.869175985 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.477916113 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.564034488 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.992656074 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173651945 seconds)
  done (took 3.1709962 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.955398591 seconds)
  done (took 1.938912474 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.282421507 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235669722 seconds)
  done (took 1.486386669 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.774149296 seconds)
  done (took 1.753031691 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.431739381 seconds)
  done (took 2.400899611 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.320839603 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183472125 seconds)
  done (took 1.483757621 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.552928954 seconds)
  done (took 1.529633682 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.043536041 seconds)
  done (took 11.025200621 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268064326 seconds)
  done (took 1.25817819 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304505547 seconds)
  done (took 1.284172389 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.525507805 seconds)
  done (took 4.506833055 seconds)
done (took 54.121599294 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098680165 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12767742 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102838308 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125253837 seconds)
  done (took 1.429292554 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102746765 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121772651 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101249485 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121138346 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126979259 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096613931 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124770174 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101727853 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122062796 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098434001 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122156897 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.094866407 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.124599703 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123758726 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093817321 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125072217 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100088816 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122362185 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125136179 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096807712 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118715618 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098679022 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125880817 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094529927 seconds)
  done (took 3.667912782 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10189031 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118976626 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097608803 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119293197 seconds)
  done (took 1.42529671 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101450428 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132251793 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.10680455 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12597888 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.107424227 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.131453317 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117407861 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.093006942 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119170367 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101143756 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.11612886 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.116051182 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133498907 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.12562133 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103109886 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115095023 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091363567 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132058576 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101301388 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127735288 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119236101 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.1011871 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.11610887 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110224227 seconds)
  done (took 3.727973083 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171103955 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128681013 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13947332 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095817246 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162341966 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141705224 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088944513 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141443061 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089111361 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131860336 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.093847442 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160990383 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130508572 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088914698 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115238115 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.089056721 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130495756 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129781664 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091727093 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129080945 seconds)
  done (took 3.441854445 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099647152 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118225933 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088212375 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118509252 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100103405 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122302043 seconds)
  done (took 1.634685424 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092154724 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115468881 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091141409 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114752598 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094757407 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115430801 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088810781 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115485376 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090522578 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114667112 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090284106 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113473118 seconds)
  done (took 2.224915847 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.505125845 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120627878 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120497348 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089757296 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122501224 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090576737 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130185218 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093789247 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142511833 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089798182 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116900099 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.095370278 seconds)
  done (took 2.704495424 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238770882 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126342625 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277420851 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.346789291 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153922819 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165981824 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.30567898 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164650699 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.194154056 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15162612 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200347781 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225170986 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151421231 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19338792 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139027549 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119158166 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218248302 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226729864 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15447567 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239092936 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180954089 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168900582 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181375235 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150519157 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139797517 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163044416 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095229817 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131286943 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236371385 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181220771 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191820367 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188828259 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120611106 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232444012 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232524746 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196610042 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280434174 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135710885 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.142109243 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167447142 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257515319 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139069848 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210289564 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156489583 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133374523 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197050502 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161304486 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174435068 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146784911 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141702624 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224863777 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217980291 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.188678444 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13996207 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322467704 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152034797 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.159418138 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190509916 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253910238 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200496165 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19225443 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122133967 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18893048 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190666793 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211813831 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153936514 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.178230263 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149636511 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184478712 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191718049 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167522625 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205845853 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182975982 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138906132 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170598018 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17359584 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170797146 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26129686 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186933959 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123290982 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170560759 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149758853 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106189204 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196463762 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126227562 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216852033 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144891196 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165170244 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211984434 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162214749 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162505907 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195107515 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212454494 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12204803 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112519066 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154863981 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155837265 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173834718 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113185628 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159186958 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157964072 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131732063 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170863498 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125527329 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18672104 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091271036 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169204657 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213370369 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101507237 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163345604 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153346929 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151450126 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179953323 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198634939 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142373994 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135356045 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209722781 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182107154 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143216113 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179575434 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226084851 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.1180784 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151158804 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229616368 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219668038 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142509708 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201198543 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148434606 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137101176 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133053083 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184906988 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157519475 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16411544 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106984741 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.211021739 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203593061 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126466514 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112658482 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225540444 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134338246 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106507782 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156755028 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148955677 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138092703 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.117122001 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14699375 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176173154 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206395033 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153869883 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166010058 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120928558 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235262597 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142092262 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152900174 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124332473 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121943216 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190028612 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225275048 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104905485 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233820866 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171236346 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200310608 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170166755 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136248678 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180279766 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131523035 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093592084 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222687328 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167864945 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162838761 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195927335 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19741086 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.203115255 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18586492 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169309044 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175380771 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167616297 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155586247 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139091992 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134894163 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159500153 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125684132 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.141116063 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.10621303 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151479917 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144269166 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134954365 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198743774 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172077015 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217848215 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161392314 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150644419 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182957891 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102029864 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205149337 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177669401 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147152725 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197586783 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193632792 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189377339 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144134771 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230034677 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094917792 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126669059 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143244069 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16932914 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106414823 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13756921 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164567106 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183495547 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176777016 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173100735 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234376505 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173555749 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192881652 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.12394209 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170340879 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181407697 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178604666 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180673941 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11606127 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151191245 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179136077 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150320053 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260413603 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168407909 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175404076 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228832612 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.125444635 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132891144 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152994976 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180396513 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155635097 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173133844 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148380809 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138830107 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156110351 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104447542 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161291353 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206425311 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163995249 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182331202 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15082738 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189518519 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128647388 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163788418 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162019622 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164341863 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083276673 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172040937 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19588622 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144123491 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164060001 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183587578 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132883907 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307389971 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229936197 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192353604 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138736308 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156420643 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135269019 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164098104 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167182249 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178947072 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159954865 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216239841 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159271989 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109429612 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139467814 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149351054 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153290248 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.105986549 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149173725 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177073435 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141013693 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183119824 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157555714 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160719641 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172437603 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152472214 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145383264 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1232555 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245386771 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185008983 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242569385 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150830195 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.174612661 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207963391 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127494612 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105727379 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136305295 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180678045 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13843671 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194482061 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188787049 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227534588 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18281878 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179591084 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141125013 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121439049 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158142401 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170133059 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204439045 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147930524 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.149637976 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200562286 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138845957 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103889169 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167644718 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313733499 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119980514 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217228996 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080580143 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.284102038 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127051636 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106619293 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163294706 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232538054 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136917774 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15382794 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169129572 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16461836 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16505411 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150621797 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218772849 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213918661 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228263313 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182612874 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106227815 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159537599 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170757908 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214872344 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157465434 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111607001 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233441939 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194766481 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.192505016 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144725682 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169824894 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169353639 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16149175 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188636934 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137124919 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207914002 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136525632 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219694601 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1541053 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111347059 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202272593 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188854919 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142083977 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183979829 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183298143 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136990454 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105347176 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160295924 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204491787 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149663047 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100339551 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176661267 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127458758 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196340146 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265624734 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134101277 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154401752 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120692195 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136674069 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157039034 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16058809 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138863551 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139845152 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223005879 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.10786367 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214631351 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20490796 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171036542 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168380404 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148317888 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.688632426 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133491868 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194132061 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148924217 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183533916 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150803867 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17301622 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161085323 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171908252 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196766304 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160568102 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23302892 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22038109 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179399877 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105346147 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159271191 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156986876 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14471954 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155930884 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169571812 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162948656 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.14777334 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.17998112 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166359819 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135105177 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112339903 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229097432 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149639703 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18377859 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181791616 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110724778 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201767861 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191430127 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135510954 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.176724179 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20510861 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143088407 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150901492 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135818009 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.152447563 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237769848 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126331751 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19051715 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215258248 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160960444 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168733259 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146841331 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195573683 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159166433 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188418076 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146366145 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157972136 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158607017 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137703115 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10331617 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157289618 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165164591 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152075777 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161567115 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142080359 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218173968 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097104352 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146491671 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285552277 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171065051 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246856744 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137025489 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108857972 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161178509 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150062819 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177218039 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180589857 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136587094 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136608868 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135675492 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130658711 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138751097 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129922783 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221561665 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133005742 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238295021 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138333007 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.250899109 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140532531 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155499739 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088194445 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133561853 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15196055 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147531808 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153207324 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193861924 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26726821 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147294133 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106620884 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150787718 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128173272 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108148462 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167037871 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164622424 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209121514 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116603907 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109767054 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158196127 seconds)
  done (took 82.257320702 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177287887 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133538214 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147562966 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202795805 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178173926 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271520692 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210929648 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256057177 seconds)
  done (took 2.66097698 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094262202 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146709128 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158451269 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133400173 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091991792 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120544565 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.338678155 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134670129 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092427043 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.147811103 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.1457549 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.118919446 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.526581265 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.118873681 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119885496 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083475382 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.117404588 seconds)
  done (took 3.765938689 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.250824578 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.489563221 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.034600528 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.212444525 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159899563 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.120209233 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.695990518 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.116130493 seconds)
  done (took 12.160533885 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115555963 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136988983 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123969301 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153751967 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141389377 seconds)
  done (took 1.761321898 seconds)
done (took 123.839084675 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098786748 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127787184 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098907392 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131349868 seconds)
  done (took 1.530405575 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095148046 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071141986 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10147888 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075397154 seconds)
  done (took 1.426652409 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.19060009 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.169598157 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.38821649 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073004159 seconds)
  done (took 1.577092296 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.116197642 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133131525 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104834431 seconds)
  done (took 1.450227971 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106321831 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129951864 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104921653 seconds)
  done (took 1.433086039 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106380751 seconds)
  done (took 1.197117182 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108534105 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.13827163 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108944543 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136981941 seconds)
  done (took 1.582980025 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099422617 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127601472 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109555047 seconds)
  done (took 1.427031192 seconds)
done (took 13.069573694 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104012981 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.424997873 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.385411611 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1387627 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722721245 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380955456 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.04691384 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146665699 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166768941 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094401741 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139268614 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672313299 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.037419263 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378976267 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.996156367 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377111496 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677214192 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122769163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091874747 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122325792 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.031404195 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092810258 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123379649 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092968643 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704025511 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.397661529 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124061446 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.34358205 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120828102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126124026 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384001373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123092846 seconds)
  done (took 16.969848145 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095668551 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17406617 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098312742 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12374089 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123564265 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095615218 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124443839 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094659683 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180034897 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123910415 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111904676 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121794372 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098113505 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123542761 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.145791849 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093167139 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126070923 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093338981 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122066186 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094497518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141128807 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120417638 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095007864 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12123763 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094423488 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136090779 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095317568 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122093485 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093770153 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127679729 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126929328 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096056196 seconds)
  done (took 4.823290453 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142361007 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18344934 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128796251 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128535144 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168588594 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124329295 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199967881 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118777264 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183309221 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123034326 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140349454 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093447018 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156872417 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095616904 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143209112 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121282146 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097463014 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122102842 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093386218 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123636397 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112163323 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121528283 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122015607 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093848472 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12270116 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108560437 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12369218 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093410331 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121990926 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125939652 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10047532 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123357267 seconds)
  done (took 5.154419806 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098397885 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12668692 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109616584 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139442479 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09611986 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125723455 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097975725 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125774662 seconds)
  done (took 2.013739519 seconds)
done (took 30.054475447 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111640614 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127059575 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107509743 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136335143 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102779788 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133159302 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091911494 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134239006 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.105614766 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.130752063 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137449799 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092586288 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123053952 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092392578 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136407318 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098868487 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133097641 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103744905 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135062301 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132123862 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095528551 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133351916 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103764816 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132619052 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105262252 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133489125 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.109484343 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.129301095 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122801787 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095903994 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124779509 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104954508 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124161307 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10738858 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12672907 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09805831 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123401123 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095123178 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133779949 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.104821059 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.129309124 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132674017 seconds)
  done (took 6.019212603 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108252366 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.14016856 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104994725 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081382061 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11713033 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080733034 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137244997 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079370334 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110169215 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109323232 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074441369 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107030541 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079586234 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073548797 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.106481853 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076330347 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108788274 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076564509 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077540481 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106494217 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081004508 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07286134 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109233206 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079416768 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075423959 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110218566 seconds)
  done (took 3.585751111 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101574905 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134705584 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114053262 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184572665 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160934657 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100905384 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132421558 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.110928866 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.138837069 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12024007 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097155217 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150127151 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110421485 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130356784 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092891659 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138003224 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.106709165 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.12384523 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128989317 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113295655 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138543112 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.104290234 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142093725 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.104083461 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.122090513 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094722314 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.126703146 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135715038 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098977079 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131749766 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098681314 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125056467 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.095021611 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.134162914 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12523204 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095070819 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141804765 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104333199 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131647883 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093324958 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130927656 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.093957912 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.143081237 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160824157 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093330275 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.1306194 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.096391788 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133448757 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.092761264 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141746749 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131581501 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093136731 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124839254 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.093658389 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121495577 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108521179 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124453593 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09644381 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131497074 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098902237 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136008825 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.096384148 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139678457 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121796203 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101976497 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120982994 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093590698 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120936836 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.115967496 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123616116 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162645793 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094691671 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123478559 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102312048 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130746006 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099979217 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.123614326 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108751272 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132583637 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.096624236 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.132416424 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125656277 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096940901 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140102771 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096108834 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124025536 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094372506 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.130476755 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.095952348 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125359005 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10828422 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.123626172 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.0968282 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141707876 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122408975 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095589012 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130144223 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.098603348 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.122618503 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106686832 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.128246964 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093449204 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.133635395 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122445955 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097324851 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.132383292 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.098784144 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.122176037 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.097968337 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.130371404 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.092840549 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124322101 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096182542 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125550614 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10258722 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130259111 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128060024 seconds)
  done (took 14.895928045 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230354783 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215713282 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.198428791 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.295391777 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134937054 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115369398 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212462289 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15698172 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.093523434 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161342426 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171281005 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183099217 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170379461 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.182525265 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169376023 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.123826673 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112751087 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166693348 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214992804 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.293493303 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142788431 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102471326 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163293841 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.16072888 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137290588 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.104097744 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.143370638 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.10577844 seconds)
  done (took 5.778745742 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109178977 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156467483 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098581075 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145717923 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14973379 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093879492 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129117547 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095495432 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136677307 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137756523 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09361691 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129307555 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101305735 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134670604 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.093964517 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.133660471 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133649785 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095716557 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127073462 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098143807 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135156469 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.103084491 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12831209 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.09268689 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134242438 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.092779307 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.117101096 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143429736 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.093666503 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.145889031 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.091793558 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132859056 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136502681 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095594071 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122973186 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.097030807 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125738715 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.097089782 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125672161 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092951729 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123889397 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078605301 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122189172 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108168782 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130470038 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.081550898 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130842141 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.099715099 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126177589 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.092910242 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.127502191 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.096906949 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.127708822 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.10305281 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127849417 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.094911401 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.12858176 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.086655307 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.131935282 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.096413671 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115058299 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.092753894 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129494426 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.08998867 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.132783207 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.099041817 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124164743 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.096557107 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.128867659 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129956696 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.097600881 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130783273 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093003759 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12713414 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.097216242 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129612462 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.098509165 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123532434 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.094503416 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125058062 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076501894 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124209257 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075692935 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.097115235 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.122577091 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.092963577 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.127062202 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130752927 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110778647 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.126325524 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103107984 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.125384132 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.093868246 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.128496597 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.084403771 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.127888649 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.110228939 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143448445 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125098801 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.092763674 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.139923272 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.097066563 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12485483 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077030735 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.132741684 seconds)
  done (took 13.09243501 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130875112 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154544179 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095824397 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142181001 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158481119 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157997743 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102178106 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130928176 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096082684 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142723336 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.095586513 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133246446 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095396739 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138645366 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157987747 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105567452 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126973158 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10998691 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128639666 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170801411 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.11377999 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144209876 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111217134 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124979893 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.099801325 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141809666 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160775869 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.109368841 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137423465 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.114245855 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.139061081 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160222459 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113965086 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129059608 seconds)
  done (took 5.505179992 seconds)
done (took 49.972569584 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.195018892 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.417079252 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.193959203 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.109085717 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.265805774 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.199006517 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.209028178 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.196669656 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.236868145 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.196208961 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.467197335 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.784819565 seconds)
done (took 58.591782056 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.296012404 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.354347586 seconds)
    (2/2) benchmarking "String"...
    done (took 1.484616682 seconds)
  done (took 3.958965062 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.738353106 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.140677141 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.452423256 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.193514363 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.194729146 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.488893213 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.934853383 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.581834887 seconds)
  done (took 28.106114614 seconds)
done (took 42.222231656 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.200482511 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.269248605 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.222388785 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.189887589 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.306710077 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.241088864 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.492168315 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.20921439 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.221914587 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.175442505 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.225164209 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.194174097 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.200505473 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.51050704 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.201894483 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.194624571 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.209999418 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.725993936 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.601758257 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.198648379 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.236283182 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.200304519 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.216484025 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.214434147 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.257701605 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.198403468 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.203243727 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.207861117 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.770972947 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.198344998 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.210970055 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.695207966 seconds)
  done (took 190.523674977 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.196637269 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.216743777 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.330314331 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.24090075 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.681708082 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.39721773 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.338813444 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.75955026 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.216428581 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.229544134 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.549232282 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.197410903 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.598528306 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.207371369 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.226450243 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.26270238 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.504614945 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.577362163 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.235932489 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.332497187 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.22511041 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.432359356 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.35695651 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.462379389 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.234521792 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.230578436 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.204868964 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.209932406 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.390494589 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.429993487 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.211545055 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.251945774 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.831987858 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051102231 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.19852514 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.211643393 seconds)
  done (took 150.356194945 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.1985819 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.197698572 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19807856 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.231667621 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.198289057 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.76823787 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.76924657 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.705746948 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.475745503 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.625111855 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.461618997 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.197979066 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29392024 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.213276251 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.198698 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.199330744 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.213986076 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.241972029 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202297795 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199155776 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.770496177 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.211413594 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.215459912 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.37577265 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.214813062 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231657359 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.590779327 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200090209 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23203676 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.533204599 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.249831579 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200213791 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.591380351 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.548961382 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315148844 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201496027 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233752845 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.199468638 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.482116298 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200622476 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.2008779 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.203075632 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.895741812 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.203878572 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.770940511 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200493314 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.145283329 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.199726272 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201133028 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.233639814 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.92741446 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.220123404 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200271378 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.203716094 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.202326083 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201345068 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.234420466 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.226229787 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.298249118 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.219276963 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.205425747 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235207234 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.201072855 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.41431342 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200365939 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.645741451 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.274321446 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.313231715 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.762537757 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198110917 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298385451 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319140468 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197581724 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198054193 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19929059 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.199628493 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.308405392 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.197342418 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.608416708 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.373889323 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.214057678 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.56741251 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.297537348 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.198946363 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.608893376 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.201506848 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.197427132 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.938305225 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.197339858 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293995522 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.197116474 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.198153077 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197606135 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.604167982 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.753889247 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.449886209 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.200291655 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.344253978 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.199319217 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.197097118 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.621381983 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.197542269 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.742891732 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.878471898 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.202384386 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309952144 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.372332684 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.214473063 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.198129009 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.570292749 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.200856232 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.257071114 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.198562449 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.596507846 seconds)
  done (took 364.875655466 seconds)
done (took 706.879471905 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.794275791 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.791321358 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.896279407 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.778892707 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.746182016 seconds)
  done (took 10.130848099 seconds)
done (took 11.256721655 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.38378649 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.382735769 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258594605 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.385010762 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230125049 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.400866311 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.362796385 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.22070162 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.299195485 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.280154608 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.297176907 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251254439 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232952788 seconds)
  done (took 18.109618677 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.524831687 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.562080598 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263182604 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.519236668 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243220309 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.514409142 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.400549181 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.415693641 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418209712 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233835041 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213706171 seconds)
  done (took 16.435545758 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.523283446 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.515637482 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267169694 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.548457178 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242962215 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.521534323 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413544499 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.418196485 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.417220863 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.234037667 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213415826 seconds)
  done (took 16.441297707 seconds)
done (took 52.112985785 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.209424733 seconds)
  done (took 2.335352195 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.245275176 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.40704169 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.225540861 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.215129692 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.211239145 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.21544138 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.216002717 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.211166549 seconds)
  done (took 11.073763094 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.207975871 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.21172526 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.210212841 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.208016826 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.210414031 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.207638357 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.207717444 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.206994457 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.210533728 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.209956195 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.207450241 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.209685681 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.207312191 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.210723431 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.209990728 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.208416189 seconds)
  done (took 20.472594258 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.210757035 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.208629788 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.207901401 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.208210833 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.208639221 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.208934693 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.209412749 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.208228884 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.207846538 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.208053543 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.209513583 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.209406554 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.209672048 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209067768 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.208617696 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.209004258 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.208958514 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.208597558 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.213439947 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.208979922 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.209713581 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.209267864 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.209493668 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.209907412 seconds)
  done (took 30.150244735 seconds)
done (took 65.160015157 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.837050818 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.91617651 seconds)
  done (took 6.881716937 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.211579175 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.212376539 seconds)
  done (took 3.554083876 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.211745266 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.211414583 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.21329211 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.213012127 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.211551414 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.212176859 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.212071897 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.212331175 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.211671242 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.211481977 seconds)
  done (took 13.250259121 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.212135824 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.212794363 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.209467735 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.213239202 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.21173742 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.210304297 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.212144867 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.212100217 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.2121596 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.210794482 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.212497871 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.20948921 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.211326035 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.20955905 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.212039109 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.209172321 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.210066255 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.210935617 seconds)
  done (took 22.93256504 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.212827166 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.212291438 seconds)
  done (took 3.553493866 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.210543348 seconds)
    (2/7) benchmarking "second"...
    done (took 1.209881851 seconds)
    (3/7) benchmarking "month"...
    done (took 1.209112534 seconds)
    (4/7) benchmarking "year"...
    done (took 1.210560587 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.208285676 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.209226123 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.208833009 seconds)
  done (took 9.595979698 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.212656237 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.39534712 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.501227105 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.817217909 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.212176626 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.215156015 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.035014685 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.215865791 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.21728076 seconds)
  done (took 13.951339118 seconds)
done (took 74.850383188 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.219026067 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.220511789 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.45810431 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.227654768 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.222471728 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.547630728 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.214199382 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.33577457 seconds)
done (took 37.576756842 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.20466534 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.188426947 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.985018479 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.201347722 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.247275355 seconds)
  done (took 18.751509705 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.234070762 seconds)
    (2/2) benchmarking "read"...
    done (took 1.54452916 seconds)
  done (took 4.907659314 seconds)
done (took 30.994574392 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211520825 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.212920734 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.209073509 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.212714375 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.209146425 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.209223243 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.21040445 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.212389696 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.212070466 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.212931737 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.212723972 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.211975757 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212871873 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.209222889 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210246661 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209766842 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.211593894 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212650143 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.209446905 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210139507 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209912911 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212107828 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.209472258 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.210334638 seconds)
  done (took 30.194919718 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.212897327 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.212553127 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.212070541 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.212650153 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.210448393 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.213144281 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.213387487 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.210633724 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.212630889 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.213635601 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208776076 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.210075308 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.211882612 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.210805521 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212582717 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.210670744 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.21237592 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211646164 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213193214 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.210369135 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.212804094 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211160812 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.21055243 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213137076 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.210736921 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211183097 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.213438235 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.210057014 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213132937 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.210613953 seconds)
  done (took 37.483689697 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.218836088 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.220316803 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.213872137 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.214452622 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.212205082 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.212451469 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.212685469 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.213347561 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.213415139 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.213095871 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.21344847 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.214303206 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.213214498 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.213243845 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.213078243 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.212889638 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.213344251 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.214436523 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.213557774 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.213790413 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.212856958 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.213241694 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.212967862 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.21250937 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.212667274 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.212964295 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.213928668 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.214486922 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.212045901 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.211951762 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.211983151 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.212363616 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.212097247 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.211863723 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.212365127 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.211383705 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.217359241 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.21999677 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.2128584 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.213028709 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.213941865 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.213725147 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.21278272 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.213258877 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.213926457 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.212701523 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.213084933 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.213513537 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.213275104 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.213459683 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.213862624 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.213303472 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.212876956 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.212907252 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.213304853 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.213656795 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.213776987 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.214406471 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.214200807 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.2141457 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.214752515 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.213331361 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.21450622 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.214802051 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.214221138 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.213995392 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.21398961 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.213670958 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.214609147 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.214502928 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.214459917 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.215020703 seconds)
  done (took 88.518826436 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.215442941 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.21304545 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.212789811 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.212401954 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212919125 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.213772365 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.212567364 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21477053 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21224395 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.214514786 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214035985 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.212539834 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212842508 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.215960278 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214853557 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.213135581 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.215080315 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213057712 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.216293098 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.216949307 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215201139 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.21310404 seconds)
  done (took 27.840084319 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21661351 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217435131 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.213134608 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.216714141 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213401704 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.21593919 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.216595266 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.21748634 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216436644 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213303398 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213174771 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215561238 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.213011222 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213926467 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214805806 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.214762119 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217085172 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.214681744 seconds)
  done (took 23.007338981 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.214654271 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.214362635 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.216569031 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.214808919 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.212834705 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.216419772 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212650162 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.217084869 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.21754594 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.213766347 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.216276361 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216716939 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.215327166 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213111243 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215977087 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.213507795 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.216295692 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213999527 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216081185 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21377376 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.215340451 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215995195 seconds)
  done (took 27.866449661 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216359785 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.216240215 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.213050141 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.213278512 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.213597133 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.217252888 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.216466265 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.213295039 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.216898965 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.215543217 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213747411 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.215768375 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.215485897 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.2156172 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.213620505 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21339584 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.215759979 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.21532276 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216263049 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.213911768 seconds)
  done (took 25.433697209 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.218654356 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.217232011 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.217215843 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218209965 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217846602 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.216563413 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217619066 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.217340846 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.217473396 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.218943006 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.216621138 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.215837676 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217044913 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.218070334 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.217382097 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217262418 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.217674009 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.219920651 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.217376568 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217476333 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.217601204 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217232129 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216985012 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.217650093 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.218580306 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.217903445 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.21795715 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.217180247 seconds)
  done (took 35.22665147 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216376137 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.215397152 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.213336836 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.21440318 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.214940978 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.212086768 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.213318812 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.213572863 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.215732517 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213591614 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.215907952 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.216625443 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.215974379 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.216686117 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.215344478 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.215983707 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215965378 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.214561403 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214301433 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213513644 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.215879131 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217317134 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.215734392 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.213143204 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213145469 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.216816588 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214031812 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.214555269 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216511821 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.214859011 seconds)
  done (took 37.582824571 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.235046744 seconds)
    (2/2) benchmarking "in"...
    done (took 1.234832687 seconds)
  done (took 3.60156425 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.213384078 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2156141 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.215522742 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.215548702 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.214260636 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.216563763 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.216375649 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213640981 seconds)
  done (took 10.853267447 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.217441223 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.216893015 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.217130717 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.218298824 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.216828557 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.215884 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.223760056 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.234912763 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.217498383 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.217871834 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.224035965 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.225108609 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.219315136 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.217742796 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.21769546 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.220085603 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.217600572 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.217913641 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.21891897 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.219191787 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.218678731 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.220038 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.219522487 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.214773173 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.219462668 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.227650085 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.2412181 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.21870581 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.217796632 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.22211867 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.218956526 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.215618389 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.218281334 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.219657364 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.218055042 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.2192221 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.228218167 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235267128 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.223942059 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236311346 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.218176184 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.215508134 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.218628472 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.218998589 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.221698556 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.220417837 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.218599466 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.215246795 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.217139673 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.221148247 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.221670296 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217616214 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.217224455 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.221549451 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.218510937 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.224911735 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.235973074 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.221445864 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.224966797 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.228035918 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.248513117 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.239113869 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.220178562 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.218608294 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.227062126 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.239248576 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225593523 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.233554911 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.21665548 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.218296922 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.224605705 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246839806 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.240214855 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.219258258 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.220187486 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.21983643 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220079868 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.219782274 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22603757 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.239057937 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.220186633 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.220222794 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.230339964 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240649959 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.221537096 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.220673106 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.221384437 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.219530534 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.22081302 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230337876 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.237659454 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.219970375 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.218972074 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.221034989 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.220847523 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.221666489 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.219706147 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.221003285 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.218434289 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.220855715 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.222112017 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.225325391 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.229015544 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.220629078 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.220976338 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.226928343 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.238175255 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.221007825 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.22561722 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.22217605 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.220775531 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.222099968 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.226036737 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.21859202 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22415057 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.228232803 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.222270942 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.222797737 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.222186317 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.222602682 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228810793 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.24317772 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.221289241 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.221954393 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.225551832 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.231310822 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22284328 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.223769795 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.222653634 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.219582068 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.219066002 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.223685245 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.222829811 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.22249477 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.22414845 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223228476 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.220328791 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.222353587 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.223246499 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.223697076 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.224255868 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.224050791 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.226336563 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.227255516 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.223245579 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.224667162 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.228932359 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.240056593 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.223681458 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.223604485 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.22082587 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.223332925 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.225326028 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.224097334 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.223748062 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.225228506 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.22300709 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.224771789 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.225467797 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.224011142 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.224359883 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.22356561 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228305059 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.22464691 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.228840345 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.224837868 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.221281947 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.225957341 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.225423025 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.224036225 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.225208835 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.224069251 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.227415642 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.231301854 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.226130485 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.225532398 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.226994051 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226135848 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.22648639 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226734801 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.228429698 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.232785475 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.22633488 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.232269737 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.244562382 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.22667533 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.225948925 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.226311829 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.225825911 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226759396 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.229006827 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.232829896 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237468963 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247563515 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.227377517 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.229375924 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.22721819 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.230689447 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.230245647 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.227930858 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.227365797 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227454545 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.226217809 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.226952526 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.227842368 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.227453098 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.225731746 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.2262076 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.226100518 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.227372798 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227462711 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.227753597 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.228268676 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.225485198 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.22707861 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.228632986 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.227730348 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.225469405 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.226678636 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.226708268 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.227344957 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.228303582 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.233949973 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.22484588 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229379653 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228534371 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.227251081 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.227556097 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.229193001 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.229567244 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.227869905 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234975077 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.245205233 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.229211327 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235089205 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.244902284 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.22825512 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.231380295 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.229228503 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.227001373 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.231198324 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.235849483 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.229044992 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.229483296 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.229119124 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229938896 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229930879 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.235029694 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.244546601 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.229003257 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.230859521 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.230604173 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.22708254 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.23034703 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.231213434 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.23086044 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232342725 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230525301 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.231039356 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.231372764 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.231531799 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.232086094 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.231768178 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.233651844 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.237438251 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.236597396 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.23038998 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.233814335 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.231021103 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.233313982 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.231238128 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.231633511 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.232582214 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.241916709 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.253727607 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.237373476 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.250201927 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.23241426 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236849178 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.250242858 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.23493496 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232861976 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.233058818 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.231594681 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.232121616 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.229693777 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.23278672 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.232257136 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233272818 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.232721354 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.235441168 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.233756077 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.23299094 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.23318188 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.232985814 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.233592014 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.232546172 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.234488037 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.235466865 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23447375 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.232673283 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.234682759 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240945941 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250973865 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.233874384 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.233041118 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.232575671 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.233782437 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.234618222 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.233957324 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.236650032 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.241378796 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.23616548 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.240471958 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.235943415 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242133512 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.23471409 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.23659499 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.241438098 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.232735753 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.233672785 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.235095802 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.235647247 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242054334 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.252948016 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.235972686 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.239944445 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235937616 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.236636424 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.235671336 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.235951429 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235998875 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.236666645 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244168326 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.252752416 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.239210504 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236772282 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.23310916 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.236421857 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.235674077 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.234001384 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239175497 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.236132481 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.237066884 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.236653141 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.236317426 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.236537841 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.237111592 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.237972143 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.234972195 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.236685202 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243918753 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.25551438 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241638009 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.237622789 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.243386865 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255851226 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243978698 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.254748541 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.237679754 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.23833846 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.238702249 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.239153645 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.238197964 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.23859371 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.238016679 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.238392267 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.240762914 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.238271749 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.239710338 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.238455863 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.239174884 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.23727048 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247014834 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258504864 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.239730688 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242590279 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.236307765 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.238903596 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.243046812 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.240228719 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.237524893 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.241195438 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246585909 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244800718 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.239438792 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.240211355 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240007229 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239380969 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.239797942 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.24032577 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.239991763 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.240055101 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.239946253 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.240412818 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242224094 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.2395675 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.239553367 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240699342 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.240393629 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.249527174 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.258465343 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.239961867 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24065116 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.240664179 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.241427716 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.241034363 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.240193527 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241675195 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240868111 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.241626718 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246935359 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.245351873 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.243062482 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.24132212 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.241975658 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.240418597 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.243384213 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241862434 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.241960834 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241735698 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.242816188 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.242732402 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.243057585 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.239752497 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.242840876 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.241550146 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241699351 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243300464 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.248356603 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242103569 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.239264926 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.242197211 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242839956 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.241093142 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.243386946 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.250519036 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263182344 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.25019079 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.248122251 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.246398712 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.243761646 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24423032 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.24904255 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.242237054 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.242741273 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.243458013 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.243767939 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.242911068 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.245376534 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.236056119 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.240035551 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.252921619 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.234740937 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244824689 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.2530913 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236989546 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.237618911 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.229680477 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.226780069 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.22521398 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.226860965 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.226557291 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.234477584 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.245771304 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230822701 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.221590286 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.219341671 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.221075973 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.224826652 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.219859909 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.220935436 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.217824308 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.221096518 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.220743206 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.220233688 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.217202716 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.219379423 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.219350115 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.223771375 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.226148108 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.218569627 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.221789003 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.220947667 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.221992007 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.221682598 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.22187221 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.218425551 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.218376542 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.220772136 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.222316547 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.220444855 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.223628626 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.22061093 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.221575656 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.221533798 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.222605494 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.224409153 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.230413712 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.228026969 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.219444703 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.221491685 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.222397184 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.225440302 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.223049996 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.223578475 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.222571802 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.222992216 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.223340139 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.223823547 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.22374169 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.224491284 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.236912784 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.239533556 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.223386654 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.223185452 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.225361846 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.222605525 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.220864119 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.22347414 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.224568788 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.226429037 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.229678594 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.223835798 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.229962843 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239783367 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.224363639 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.227134958 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.226522548 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.22862638 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.225655571 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.222971961 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.219455912 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.222467107 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.2321343 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.220743771 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.227640463 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244761295 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.236494085 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.219605198 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.219953699 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.219569912 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.219626504 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.220565542 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.219967071 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.22034849 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.220595997 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.221167987 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.221138423 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.224489657 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.220527684 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.220107547 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.221099702 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.220878514 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.22146436 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.218445613 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.221464334 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.220578615 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.221485926 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.221779143 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.221671436 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.220451823 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.233501835 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.244448623 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.221000083 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.221322502 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.218305251 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.223619693 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.223087765 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.229289964 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.226216748 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.221534685 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.22145658 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.221894161 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.222366528 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.219610201 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.221450951 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.221325638 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.221721027 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.219591367 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.231954928 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246162843 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.22684211 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.220993202 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.223651436 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.222694287 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.223568761 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.222714569 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.22229285 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.225037085 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.22446954 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.226045671 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.222446237 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.222220168 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.225243981 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.229007677 seconds)
  done (took 734.246732132 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.217407909 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.217975012 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.217509902 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.217045485 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.217926961 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.218065198 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.218164994 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.218084445 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.2176467 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2184333 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.217920981 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218673429 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.21797914 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.218871673 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216986815 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.2177684 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217747179 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.216646512 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.218464799 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.218914975 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.218808144 seconds)
  done (took 26.717149892 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.22033758 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.218339732 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.219496297 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.222340911 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218370861 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.221871062 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.218870501 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22219078 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.221199142 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21961577 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22213045 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220902257 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.220235211 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.219576624 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219110701 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222961502 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.222820548 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21916406 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.221648855 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.219813328 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222534256 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.219435095 seconds)
  done (took 27.99034026 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.223190681 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.223178882 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.223093744 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.220187969 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.222699788 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.219669279 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.223177524 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.222733822 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.2229495 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.223110743 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.221736616 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.223629728 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.228924175 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.226485826 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.224714159 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.223079478 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.367292999 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.224939812 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.22406031 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.22283913 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.220887234 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.2272126 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.238302207 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.219953989 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.221620071 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.223487683 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.222966095 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.223881426 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.224444771 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.223324127 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.226154077 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.222761117 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.222832155 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.225237456 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.222669228 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.224856992 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.226656059 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.22364586 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.222609989 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.224125282 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.233147749 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.24231637 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.226015029 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.229364029 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.243006784 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.225406014 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.227307182 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.231313803 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.221740323 seconds)
  done (took 61.318101548 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.224950899 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.224363337 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.222422999 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.225281865 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.225071845 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.224350391 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.22475907 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.224521037 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.221596852 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.222336342 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.225233849 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.223580042 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.222407468 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.225219862 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.226046865 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.22227344 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.222905195 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.223225104 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.222541899 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.223010965 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.22304321 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.225899501 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.225914793 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.223982737 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.226563838 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.222842962 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.223273316 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.225528744 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.223988246 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.224285032 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.225941889 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.22550038 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.226249619 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.223007049 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.223182254 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.226626819 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.226624089 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.223303093 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.226833502 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.224254432 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.226391345 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.227585077 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.22640272 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.22592411 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.224667494 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.224573741 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.22402184 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.224434151 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.225081211 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.226994912 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.227206608 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.225155613 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.228095479 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.224973187 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.227708607 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.228392014 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.224700035 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.22566161 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.228275511 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.226055185 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.225707451 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.227922666 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.225890903 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.228241269 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.228325109 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.226589531 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.226052711 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.228635317 seconds)
  done (took 84.453656961 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.227910051 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.229267936 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.227838773 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.228983519 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.228812682 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.228433312 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.228329662 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.229586342 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.229036592 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.22912353 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228709628 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.229103388 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.229205896 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.228817381 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.2301203 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.229559184 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.228832818 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229243856 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.229788461 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229501341 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.229382662 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.230406222 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.229560089 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.228668154 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.229383988 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.230447897 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.228847443 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.229546687 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229243081 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.229314625 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.230821512 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.229086158 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.230557846 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.230153648 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.230334455 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.230608163 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.231020861 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231099365 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.230823023 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.230157175 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.230758053 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230223821 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.231459735 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.231660771 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231033107 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.23160858 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.231139256 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.231549507 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.231180355 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.231855743 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.230786568 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231562893 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231537727 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.230314458 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.231212091 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.23203686 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231834197 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232521007 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230807155 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.231402044 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23158368 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.232419295 seconds)
  done (took 77.415066518 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231947221 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232024259 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.230321548 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.229111571 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232154403 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230398811 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232690785 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.232347333 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232155411 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.232743433 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232634277 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229575406 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22864017 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232814711 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230686259 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229931638 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231244938 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230649967 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233169787 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230876307 seconds)
  done (took 25.772540737 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.22975719 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.232957907 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.231176718 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.230347366 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.232650482 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.230482153 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.233292734 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233555011 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230912001 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231953323 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.233810306 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.234696269 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231515454 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.230321658 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.233504458 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.231709144 seconds)
  done (took 20.859572265 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.230617336 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.233743624 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.233453136 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.232610535 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.231271385 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.230655614 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.233608501 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.230536242 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.231017534 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.234699268 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.234057397 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.233792122 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.234020505 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.233840904 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.231452347 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.234330127 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.231390446 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.23176387 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.234761389 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.234932434 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.232102533 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.232620024 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.234456772 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.234299477 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.232290625 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.232644946 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.23168172 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.232400584 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.232602768 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.234985756 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.23241855 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.233019963 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.233451018 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.23349293 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.235462582 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.232929173 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.235523989 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.235943482 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.235657579 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.235457449 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.236891557 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.232491653 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.236083771 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.236312146 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.234221388 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.234633338 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.232243339 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.232519427 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.232851366 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.232632976 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.235506664 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.23628881 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.235258151 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.236192997 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.236693676 seconds)
  done (took 68.999830145 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236037386 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.236463272 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.233708171 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.236615356 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.235493923 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.234240002 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.235542701 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.235816193 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233133751 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.236955238 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.235317466 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.237282353 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235764944 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.236478532 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.234073375 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237095623 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.233294999 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.235613898 seconds)
  done (took 23.388484443 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.234998627 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.235136866 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.237394508 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.234008009 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.234463576 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.237626202 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235351382 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.237808097 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237053417 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.234581034 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235118024 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.237420672 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237127027 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.236746905 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.235269334 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235532131 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.237859144 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238505857 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.234132862 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235159509 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.239223372 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237984522 seconds)
  done (took 28.349645699 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.237249395 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.237020034 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.236411128 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.252394237 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.252265111 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.256798468 seconds)
  done (took 8.623046412 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242119697 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236153743 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.234751206 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237895239 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236641707 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234210017 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234536587 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234692339 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237164404 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234611577 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234376764 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236855129 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237565045 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234483448 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23734933 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237830747 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234627495 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234432204 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236166607 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237188218 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235485125 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236148611 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235284895 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235358255 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235965825 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235738846 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238586653 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236041316 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235852099 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238213201 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238698939 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236202344 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238644655 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236478825 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239324101 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23920893 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236653377 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240044465 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238213715 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236538877 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.239543439 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238737236 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240369545 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23734374 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23919412 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23649274 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236425006 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23731992 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237304204 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238950152 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239936647 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.237047647 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240631703 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239948653 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239817603 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240163225 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237443185 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237500062 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240489452 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237804331 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236601933 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241354588 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237188825 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238016862 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240711774 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237161145 seconds)
  done (took 82.841673841 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236475512 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.238487424 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238078801 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238574911 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237977492 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237627223 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237809031 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.238352993 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237960084 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23701721 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240718775 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238326664 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237977186 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23884847 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2386096 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238592018 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239050253 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23887363 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238740172 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241944141 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23907445 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238393617 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23841355 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239257071 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23951612 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241748896 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238282335 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239479067 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238804179 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239037884 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239188192 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239254493 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240216601 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.239112724 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238895491 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240985318 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239124188 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239798198 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241098861 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243208881 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240300653 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243261468 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239750758 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24005684 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.241509912 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240543893 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241908336 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241704621 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241675763 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.24130851 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241057978 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24169456 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241095766 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241516472 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241678788 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24116327 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241335769 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242046997 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241337877 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243549611 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24018444 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.242262265 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244128555 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.242641041 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.242310279 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241755886 seconds)
  done (took 82.999583034 seconds)
done (took 1702.715938951 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.405542243 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.3596029 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.242257404 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.239584355 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.24323326 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.249690898 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.263762634 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.243319343 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.242937713 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.243263012 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.24210106 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.428679379 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.241926296 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.243049411 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.243422622 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.336336782 seconds)
  done (took 41.630094231 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.266616589 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.252889543 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.356070652 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.273324765 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.272602428 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.42341688 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.306774331 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.25737156 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.408645007 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.295709513 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.687193363 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.274624619 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.252652119 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.276975847 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.268202075 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.422210937 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.483505005 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.691839433 seconds)
  done (took 28.628994308 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.66235841 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.252015865 seconds)
  done (took 9.07824021 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.270390495 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.253199242 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.253202413 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.252169945 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.244458622 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.259600187 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.251002802 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.247013849 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.570821387 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.372524349 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.259341615 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.261807352 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.271632578 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.252539025 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.250383528 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.288351198 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.402118106 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.2507988 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.249271853 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.257965598 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.251892061 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.358038797 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.29088035 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.251429923 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.368427544 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.570917068 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.256171604 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.255590371 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.37902864 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.24896686 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.245151963 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.246167203 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.247997176 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.106089856 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.714140324 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.254068364 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.28428635 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.253372733 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.242186346 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.402392823 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.246410867 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.24969095 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.236278727 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.707458689 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.373127941 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.352510652 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.392499747 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.265620132 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.244867454 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.303590925 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.243829 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.244795145 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.285673249 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.00178143 seconds)
  done (took 106.267585112 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.29156177 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.628700523 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.402723554 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.25955857 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.842135454 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.913584741 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.258291322 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.500205138 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.28073307 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.236451091 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.524754103 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.717282204 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.257250233 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.259529263 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.28678159 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.320616269 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.23808325 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.975784875 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.253228093 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.241401135 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.718080394 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.244277885 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.256494267 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.392015057 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.274457622 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.669852499 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.49812271 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.700738886 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.254731388 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.236333876 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.679799406 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.257390635 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.300222012 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.2396596 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.48756024 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.576008892 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.575810224 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.258890563 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.283240002 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.242099751 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.262554553 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.665709543 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.577333685 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.257131994 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.257459402 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.664701784 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.248474002 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.235764637 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.228234949 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.423120908 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.104267983 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.230633363 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.505988168 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.231350426 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.516395547 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.294393596 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.293318127 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.690642253 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.247989991 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.318041358 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.28010594 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.228863359 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.232924301 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.232677778 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.232663053 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.555102442 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.59839454 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.230116381 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.553600529 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.682737165 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.251151021 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.727966976 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.022327024 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.256831558 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.273577405 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.227254724 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.792204595 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.703643236 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.277136526 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.227782303 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.542433529 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.248099419 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.497128077 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.242930141 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.233639574 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.736754837 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.238088172 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.235055336 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.239200701 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.234080966 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.882862915 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.229669077 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.483322386 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.303272137 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.228541766 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.228592894 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.251158056 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.229435376 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.244456252 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.234286285 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.733203767 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.252639134 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.329626145 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.243856099 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.23548751 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.250495306 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.230107399 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.230235751 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.442025508 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.699905284 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.256062481 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.22988332 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.230583536 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.239796727 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.368479877 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.235469231 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.518072009 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.252303472 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.236706672 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.235760391 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.904146743 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.294997912 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.230341355 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.232033448 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.108040914 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.432517712 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.246434806 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.230151217 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.231746096 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.253779935 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.410312124 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.254181796 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.284577516 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.233068074 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.908173957 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.272648964 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.239216234 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.776950254 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.235247763 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.040469733 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.258119064 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.232847974 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.513283157 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.492341694 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.520186939 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.233423269 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.246182989 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.903026 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.263442281 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.367335856 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.249775553 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.293897559 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.427771323 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.344219359 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.232851728 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.835184377 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.233055147 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.44205434 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.232217049 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.536203628 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.702677745 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.25387895 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.239370606 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911790207 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.948285208 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.885772937 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.232098015 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.498954651 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.19000479 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.711343355 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.232885263 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.232265588 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.676910429 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.23561544 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.239174337 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.233033227 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.234128476 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.369154112 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.405145205 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.847018873 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.237754614 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.663962151 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.28821323 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.235380489 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.259165717 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.238624723 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.579059727 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.324149885 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.235775823 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.243849938 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.234931102 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.238048163 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.687327329 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.056977038 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.239781075 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.384085609 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.839739431 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.256305779 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.234342532 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.874599116 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.548606653 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.727799162 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.289908749 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.523873972 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.255769293 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.271451555 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.798538944 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.323869032 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.689080219 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.259443189 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.239391606 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.811719004 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.257298325 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.325403513 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.236202867 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.235809531 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.751942326 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.256491007 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.240830836 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.410038662 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.258622524 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.502815829 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.236238605 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.23611037 seconds)
  done (took 1087.051206469 seconds)
done (took 1273.815239066 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.236051084 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.241985855 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.224308344 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.241314331 seconds)
  done (took 26.100092869 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.2477128 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.243647123 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.244598615 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.242005974 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.245506545 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.242501646 seconds)
  done (took 8.623386663 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.270441803 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.243043058 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.2429577 seconds)
  done (took 18.912064471 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.433247338 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.459288007 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.549599791 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.267730759 seconds)
  done (took 9.868020654 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.245042619 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.244531202 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.24385264 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.246106523 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.247824876 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.248809476 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.246579736 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.246798428 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.248401832 seconds)
  done (took 12.375272943 seconds)
done (took 77.034736417 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", Float32, false)...
    done (took 5.234231422 seconds)
    (2/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.324185427 seconds)
    (3/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.589366531 seconds)
    (4/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.973844693 seconds)
    (5/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.269529548 seconds)
    (6/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.572108104 seconds)
    (7/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.237096145 seconds)
    (8/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.223126223 seconds)
    (9/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.29949647 seconds)
    (10/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.223409376 seconds)
    (11/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.227211098 seconds)
    (12/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.244659071 seconds)
    (13/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.082971841 seconds)
    (14/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.507143086 seconds)
    (15/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.241342531 seconds)
    (16/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.276733031 seconds)
    (17/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.97832321 seconds)
    (18/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.286547441 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.639920266 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.287319082 seconds)
    (21/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.604253152 seconds)
    (22/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.295330329 seconds)
    (23/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.26665242 seconds)
    (24/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.792005698 seconds)
    (25/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.325819107 seconds)
    (26/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.337268515 seconds)
    (27/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.375516454 seconds)
    (28/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.221074185 seconds)
    (29/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.442749981 seconds)
    (30/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.330380669 seconds)
    (31/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.232860994 seconds)
    (32/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.227410949 seconds)
    (33/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.463469281 seconds)
    (34/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.370848967 seconds)
    (35/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.355089861 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 6.246881313 seconds)
    (37/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.339722577 seconds)
    (38/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.258683994 seconds)
    (39/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.584992887 seconds)
    (40/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.390612372 seconds)
    (41/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.250394736 seconds)
    (42/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.418165931 seconds)
    (43/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.067229662 seconds)
    (44/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.357257109 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.631943751 seconds)
    (46/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.389227037 seconds)
    (47/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.964438322 seconds)
    (48/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.34579888 seconds)
    (49/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.250361996 seconds)
    (50/286) benchmarking ("sort", Float32, true)...
    done (took 6.240800824 seconds)
    (51/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.224383006 seconds)
    (52/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.819466863 seconds)
    (53/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.048974207 seconds)
    (54/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.265278666 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.354020591 seconds)
    (56/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.810939364 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.527717308 seconds)
    (58/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.544293163 seconds)
    (59/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.275074762 seconds)
    (60/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.002977836 seconds)
    (61/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.289522281 seconds)
    (62/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.357850945 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.300480317 seconds)
    (64/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.242514422 seconds)
    (65/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.27611984 seconds)
    (66/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.397424708 seconds)
    (67/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.081170115 seconds)
    (68/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.229665025 seconds)
    (69/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.261294454 seconds)
    (70/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.618656324 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.868973676 seconds)
    (72/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.732974889 seconds)
    (73/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.297380836 seconds)
    (74/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.271888859 seconds)
    (75/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.34444508 seconds)
    (76/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.225004744 seconds)
    (77/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.577644106 seconds)
    (78/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.721443048 seconds)
    (79/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.615586556 seconds)
    (80/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.371132619 seconds)
    (81/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.242945382 seconds)
    (82/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.276038799 seconds)
    (83/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.228445481 seconds)
    (84/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.502845212 seconds)
    (85/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.382521983 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.267542721 seconds)
    (87/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.22660952 seconds)
    (88/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.303736771 seconds)
    (89/286) benchmarking ("sort", Int64, false)...
    done (took 5.424937755 seconds)
    (90/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.068817404 seconds)
    (91/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.687291864 seconds)
    (92/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.25914953 seconds)
    (93/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.268074471 seconds)
    (94/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.270142232 seconds)
    (95/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.910598345 seconds)
    (96/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.290422825 seconds)
    (97/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.584311869 seconds)
    (98/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.351219683 seconds)
    (99/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.244827631 seconds)
    (100/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.35002966 seconds)
    (101/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.23506483 seconds)
    (102/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.750633852 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.489429011 seconds)
    (104/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.27053374 seconds)
    (105/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.631410595 seconds)
    (106/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.245580067 seconds)
    (107/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.270204704 seconds)
    (108/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.268099516 seconds)
    (109/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.349855461 seconds)
    (110/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.48346661 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.596415097 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 1.775957653 seconds)
    (113/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.102106139 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.290219175 seconds)
    (115/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.232317022 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.527263531 seconds)
    (117/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.370062275 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.963020212 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.655884067 seconds)
    (120/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.540661719 seconds)
    (121/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.440897866 seconds)
    (122/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.350508027 seconds)
    (123/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.940617801 seconds)
    (124/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.639284633 seconds)
    (125/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.005985368 seconds)
    (126/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.356983412 seconds)
    (127/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.690577684 seconds)
    (128/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.392867364 seconds)
    (129/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.593653309 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.596744949 seconds)
    (131/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.286089524 seconds)
    (132/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.255060461 seconds)
    (133/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.072356301 seconds)
    (134/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.269458217 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.086235805 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.982863138 seconds)
    (137/286) benchmarking ("sort", Float64, true)...
    done (took 6.260356143 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.279027108 seconds)
    (139/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.476641814 seconds)
    (140/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.228353708 seconds)
    (141/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.976797069 seconds)
    (142/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.330120766 seconds)
    (143/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.238919598 seconds)
    (144/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.305013236 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.669412524 seconds)
    (146/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.255054605 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.276435968 seconds)
    (148/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.334457883 seconds)
    (149/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.159169024 seconds)
    (150/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.019023168 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.269030488 seconds)
    (152/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.411176808 seconds)
    (153/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.622109286 seconds)
    (154/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.365821973 seconds)
    (155/286) benchmarking ("sort", Int8, false)...
    done (took 4.334540263 seconds)
    (156/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.631031336 seconds)
    (157/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.279222246 seconds)
    (158/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.270724134 seconds)
    (159/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.254785343 seconds)
    (160/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.236875999 seconds)
    (161/286) benchmarking ("sort", BigInt, false)...
    done (took 6.255798158 seconds)
    (162/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.270392797 seconds)
    (163/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.28921585 seconds)
    (164/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.252472259 seconds)
    (165/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.030147989 seconds)
    (166/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.236531794 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.299926013 seconds)
    (168/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.229708117 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.890582334 seconds)
    (170/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.297749659 seconds)
    (171/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.199104577 seconds)
    (172/286) benchmarking ("sort", Float64, false)...
    done (took 5.54310235 seconds)
    (173/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.540422454 seconds)
    (174/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.261771412 seconds)
    (175/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.378477432 seconds)
    (176/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.630203085 seconds)
    (177/286) benchmarking ("sort", Bool, true)...
    done (took 5.327591281 seconds)
    (178/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.329956544 seconds)
    (179/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.259646395 seconds)
    (180/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.734577588 seconds)
    (181/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.237882973 seconds)
    (182/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.333165198 seconds)
    (183/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.231876332 seconds)
    (184/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.745529435 seconds)
    (185/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.236945546 seconds)
    (186/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.047068821 seconds)
    (187/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.236309828 seconds)
    (188/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.88292853 seconds)
    (189/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.482746716 seconds)
    (190/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.508592331 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.834680658 seconds)
    (192/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.678098741 seconds)
    (193/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.231029402 seconds)
    (194/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.936050075 seconds)
    (195/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.287361177 seconds)
    (196/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.231305579 seconds)
    (197/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.61632053 seconds)
    (198/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.441411544 seconds)
    (199/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.977085815 seconds)
    (200/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.596094505 seconds)
    (201/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.279431678 seconds)
    (202/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.314844641 seconds)
    (203/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.291280882 seconds)
    (204/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.962114138 seconds)
    (205/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.720894862 seconds)
    (206/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.833867205 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.878619342 seconds)
    (208/286) benchmarking ("sort", BigInt, true)...
    done (took 6.250487275 seconds)
    (209/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.241284714 seconds)
    (210/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.609451244 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.15634605 seconds)
    (212/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.549619439 seconds)
    (213/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.239453635 seconds)
    (214/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.738348758 seconds)
    (215/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.328313419 seconds)
    (216/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.518064408 seconds)
    (217/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.275455942 seconds)
    (218/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.252535853 seconds)
    (219/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.519907165 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.147018054 seconds)
    (221/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.461250302 seconds)
    (222/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.392785435 seconds)
    (223/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.850067973 seconds)
    (224/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.757096644 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.156119957 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.155384954 seconds)
    (227/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.461059814 seconds)
    (228/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.453655352 seconds)
    (229/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.465855693 seconds)
    (230/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.392976948 seconds)
    (231/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.956359757 seconds)
    (232/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.299515063 seconds)
    (233/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.337578174 seconds)
    (234/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.636751271 seconds)
    (235/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.233753959 seconds)
    (236/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.259222028 seconds)
    (237/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.268888058 seconds)
    (238/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.374461205 seconds)
    (239/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.234161616 seconds)
    (240/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.254817016 seconds)
    (241/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.285589749 seconds)
    (242/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.492323959 seconds)
    (243/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.241269412 seconds)
    (244/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.256298878 seconds)
    (245/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.270350382 seconds)
    (246/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.274894953 seconds)
    (247/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.25860741 seconds)
    (248/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.276131235 seconds)
    (249/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.69177739 seconds)
    (250/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.346059605 seconds)
    (251/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.239341916 seconds)
    (252/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.061536554 seconds)
    (253/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.046905677 seconds)
    (254/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.957823962 seconds)
    (255/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.267496821 seconds)
    (256/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.261044217 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.349179295 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.798466802 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.343607595 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.384776832 seconds)
    (261/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.273233523 seconds)
    (262/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.346790075 seconds)
    (263/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.319058715 seconds)
    (264/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.063177879 seconds)
    (265/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.236419241 seconds)
    (266/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.278150027 seconds)
    (267/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.351956391 seconds)
    (268/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.304424732 seconds)
    (269/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.511628323 seconds)
    (270/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.25502497 seconds)
    (271/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.263027377 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.095521958 seconds)
    (273/286) benchmarking ("sort", Int8, true)...
    done (took 6.262423465 seconds)
    (274/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.260924919 seconds)
    (275/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.188809178 seconds)
    (276/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.237033488 seconds)
    (277/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.115275242 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.301649001 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.869791548 seconds)
    (280/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.281588031 seconds)
    (281/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.436538417 seconds)
    (282/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.452053392 seconds)
    (283/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.244274186 seconds)
    (284/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.244865531 seconds)
    (285/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.259044634 seconds)
    (286/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.358452572 seconds)
  done (took 910.315557333 seconds)
done (took 911.473821501 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.289054654 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.283486909 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.266840664 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.288605174 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.378830328 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.293588283 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.277895891 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.270735936 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.315317955 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.317345978 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.266989325 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.292154963 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.26852212 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.267794176 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.266950633 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.282030465 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.270066378 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.274660954 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.284279452 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.276426319 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.284281392 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.267036521 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.318408346 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.293542572 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.274094198 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.272811177 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.271828854 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.289046881 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.380687118 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.272471267 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.271867675 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.28063039 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.271121561 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.273108639 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.264732089 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.288230584 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.28035301 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.278696417 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.272849477 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.30142438 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.649920051 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.290626748 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.271664486 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.270763164 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.270064179 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.274143809 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.271383025 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.27707885 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.284221385 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.285336117 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.652339871 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.305993055 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.27328222 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.271285822 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.281474808 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.270880155 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.272740136 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.289448747 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.290186081 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.289357792 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.257582559 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.283224467 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.272221682 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.287454186 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.27771188 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.696888099 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.288824893 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.276518934 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.649347833 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.299085552 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.698900299 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.300726579 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.273267891 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.285794923 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.302148443 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.27274825 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.272428944 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.27083301 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.279047841 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.270400379 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.281741033 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.286371615 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.276570381 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.272822186 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.28696087 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.297820391 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.282913852 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.271790909 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.281379713 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.292215795 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.280228271 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.283839738 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.276839928 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.269294411 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.283652879 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.276219196 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.275652343 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.275882402 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.277950488 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.285051919 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.654512675 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314992328 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.27160296 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.270631557 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.27328381 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.287693515 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.654867414 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.296489919 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.296777948 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.322375162 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.276697546 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.264481435 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.283594514 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.291920728 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.282814504 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.277704723 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.270174647 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.264173496 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.673166467 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.311499894 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.27712492 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.273211732 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.292237791 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.277560622 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.272926634 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.27994706 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.283368017 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.289794821 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.395249291 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.285140304 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.306452612 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.273951147 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.279115771 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.300364494 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.293211611 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.306779359 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.277980943 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.293626172 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.291847851 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.271889092 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.286627607 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.286789135 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.276574108 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.282065022 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.27157267 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.301649909 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.289705106 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.290082271 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.297531221 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.3974907 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.273996201 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.271781794 seconds)
done (took 215.57854225 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.336126916 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.273061794 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.357613965 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.274805267 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.374041888 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.380675185 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.271451573 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.271713856 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.270162053 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.651658138 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.271904595 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.272624031 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.271335755 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.271802978 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.357024615 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.273957637 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.27218299 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.614100351 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.27431566 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.343770024 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.274724711 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.272671359 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.274986375 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.659303293 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.27567379 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.270154732 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.344104538 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.274324105 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.621266302 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.268127099 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.273947179 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.622931866 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.363928076 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.292277993 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.285101658 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.282944243 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.376311572 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.296799437 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.357147693 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.357437152 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.359774115 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.314043493 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.268240815 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.276839645 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.282353754 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.277286587 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.273823845 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.303122371 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.273090697 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.275329352 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.616757824 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.285672866 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.274504639 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.274244697 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.274221626 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.306401329 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.274258771 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.277253041 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.367159239 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.277990024 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.339755316 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.66046666 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.655840854 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.277270291 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.275170776 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.275737671 seconds)
  done (took 144.530404864 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.342152197 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.35090718 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.384616398 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.299283619 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.326904761 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.389789917 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.299971562 seconds)
  done (took 10.581636582 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.282651429 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.278670144 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.328072432 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.327576233 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.278389698 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.455901912 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.278961627 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.290058889 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.27584265 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.33094439 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.280298752 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.27929047 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.285262259 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.278334358 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.32659108 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.290230768 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.393463214 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.280842733 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.281400815 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.429532634 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.277096869 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.286192668 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.330858589 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.289761951 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.280884958 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.284188007 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.100361311 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.279755437 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.277606719 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.279120218 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.277954653 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.35431198 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.279727746 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.277887586 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.27704802 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395646416 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.281142526 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.279395159 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.280413753 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.278255455 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.279978759 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.280590903 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.280265611 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.278602177 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.280505744 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.303655501 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.280275023 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.281208505 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.282011898 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.282406064 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.332389985 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.281386093 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.279207858 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.27808773 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.336123624 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.288618745 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.281482524 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.27923985 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.282493121 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.278538256 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.432461997 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.327914338 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.282531422 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.329519195 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.281855899 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.282540318 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.282272863 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.283034728 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.336159573 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.28292913 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.329143218 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.279216632 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.467009422 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.305441304 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.284829619 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.28421829 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.284137405 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.282253485 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.275522758 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.287014386 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.280066355 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.282764187 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.289261087 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.280178012 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.280512239 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.448955344 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.390147504 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.280673703 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.29539211 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.288986636 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.280699387 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.336419699 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.283616673 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.280934391 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.335227894 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.397837387 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.336980507 seconds)
  done (took 148.426776161 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.287724096 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.291251091 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.286335758 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.306542197 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.300698718 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.284016283 seconds)
  done (took 8.949563582 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.287210552 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.285243722 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.285569762 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.285385502 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.284634814 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.285457939 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.284403267 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.28614299 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.287722383 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.28531297 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.286432246 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.286780717 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.286723275 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.285842694 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.286547316 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.28493189 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.286497415 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.283331633 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.286496444 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.286166441 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.380129856 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.287493201 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.286139247 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.287143991 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.290062034 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.286645447 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.295536103 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.287230745 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.286553908 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.294533155 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.304957101 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.287162899 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.287378343 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.292662439 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.291671747 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.287157725 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.290322634 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.289600019 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.284380457 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.289356338 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.290333423 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.287913021 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.287554545 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.289010602 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.288867154 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.292773831 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.293084821 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.296094799 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.288700786 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.289501542 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.289853125 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.288872822 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.288938251 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.289762596 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.291222932 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.308379478 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.292353185 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.289155887 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.288225598 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.28892629 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.289244564 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.28985289 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.289510484 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.292870887 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.295740117 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.290143864 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.289127478 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.294371336 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.28892246 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.288852146 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.29105959 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.286368025 seconds)
  done (took 95.104674463 seconds)
done (took 408.776523049 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.604682701 seconds)
  done (took 7.804319248 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.313236022 seconds)
  done (took 7.515354277 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.140756619 seconds)
  done (took 21.348827016 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.316237056 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.408012621 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.299261289 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.293273602 seconds)
  done (took 26.517085342 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.493071577 seconds)
  done (took 7.693097006 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.282473825 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.298841697 seconds)
  done (took 13.783371941 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.740312719 seconds)
  done (took 7.940034667 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.511819095 seconds)
  done (took 7.720165249 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.307284413 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.324340771 seconds)
  done (took 14.086627667 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.267201758 seconds)
  done (took 7.468334374 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.026100554 seconds)
  done (took 11.229637481 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.298961822 seconds)
  done (took 7.502685176 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.298655206 seconds)
  done (took 7.50055701 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.046910472 seconds)
  done (took 9.24781388 seconds)
done (took 158.556140415 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.284940022 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.293462047 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.285521859 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.292940097 seconds)
  done (took 26.357792647 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.32622434 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.326807379 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.329016253 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.336889306 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.330048094 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.327472218 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.318971201 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.318986499 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.337516962 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.329599249 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.328857179 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.329175168 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.32882951 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.319733044 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.329200037 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.328781349 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.338269496 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.329042902 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.320352338 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.330481551 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.295950941 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.338323606 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.33093339 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.296471678 seconds)
  done (took 33.029365096 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.814054375 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.365979013 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.446955436 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.346246574 seconds)
  done (took 7.177013951 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.346780641 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.348097337 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.358565541 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.398268098 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.435713409 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.357131808 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.321452247 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.316754524 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.303659573 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.348421689 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.426008202 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.364139382 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.451461262 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.295152137 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.484298111 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.29629887 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.29500139 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.347694136 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.399885481 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.412612062 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.295840698 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.347469192 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.351036072 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.3650382 seconds)
  done (took 33.871755457 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.295995848 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.31400145 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.295213629 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.294198474 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.304643465 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.295264783 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.295311038 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.296483293 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.295588827 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.301639695 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.294744454 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.308791954 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.295257448 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.295848057 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.301734353 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.297240243 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.30231809 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.295539949 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.29651993 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.303263336 seconds)
  done (took 27.184679241 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.290094029 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.143993622 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.642500583 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.545273195 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.290439403 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.297718509 seconds)
  done (took 27.415816413 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.364611197 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.51470125 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.297106937 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.639895903 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.739518058 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.320251165 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.299121662 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.531142987 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.841924846 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.830994126 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.359749922 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.370546255 seconds)
  done (took 19.317415004 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.291197792 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.299545437 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.299471739 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.329901088 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.350323105 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.32399086 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.304708181 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.291617508 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.35792075 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.376320629 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.32420749 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.352170201 seconds)
  done (took 37.110146665 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379486136 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337197464 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.195447111 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329971585 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.011563092 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50479912 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.304643543 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.000302352 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.314689372 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567870946 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297197324 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38307393 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.549770388 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29441648 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.303257928 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.245244958 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536180866 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755798527 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296192989 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.175503933 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326445294 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.303436555 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.258622364 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.523356259 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531654849 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.272798686 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.554884762 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.070943095 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570585879 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.315275895 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305668289 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.296253483 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569882523 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934024426 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415741211 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499057207 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322801203 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.841694873 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.290463532 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.207442644 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312628452 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.305540851 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306488962 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295547906 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.22999719 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297713515 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002231281 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.321839667 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.007900747 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.295534996 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545756805 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399739952 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.301526872 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.866672772 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364651527 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.302592805 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.301350813 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388354026 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8823195 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.41197213 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317009025 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.23872909 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.300872216 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.180120883 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903687025 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.319679334 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.302037362 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.301680582 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.232666854 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.188466437 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.321840406 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445364584 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.323788632 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.948637648 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971602587 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.335351117 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.235589217 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823032335 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.310509592 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.240131868 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.524735309 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.076467561 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233880176 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.243896752 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.232545747 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967496016 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3073115 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.663293795 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.31935599 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.006853538 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.522468291 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342637818 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321597667 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.521849431 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.181912937 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300832942 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.29997039 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4368919 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323042506 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.989714835 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251918134 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.304900153 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554854617 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.510577369 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315299651 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.261424038 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78049475 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325981696 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.339900213 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.310272327 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.512759245 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.88523077 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.341056474 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.425340452 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325327305 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.077100552 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005483393 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303314918 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.327562251 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.315011418 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.575462217 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.026725467 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.186016873 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368686357 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305951021 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.300308052 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.214567816 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.159053253 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.206959251 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.492279217 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328121572 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.318964285 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.3037087 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247924216 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.308826317 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310657856 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.087531581 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.52549677 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.308438254 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585694386 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236738924 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450567149 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.313095155 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.526486369 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.470033384 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.331874392 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562344267 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317183738 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.323048294 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.321482615 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322858418 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402920571 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32548924 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.317265895 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.565604109 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.307700414 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.307902563 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.212946669 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.091104458 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305303979 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.309968089 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315251099 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868804607 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298993097 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.309017284 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.19310374 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.319240447 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373131518 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.311218432 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.510709642 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.510329214 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325908208 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.31085401 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.30338085 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.53558106 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314509531 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.209056945 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393068852 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.760917906 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.882557613 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341955864 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.238951699 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.018069301 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.99903539 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307434437 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.49349684 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.306481683 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510754085 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344628125 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.309916546 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.886319941 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331650486 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.207884908 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.319413943 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.318625147 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.311960642 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307417726 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.462898922 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.471016884 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328855506 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.324265264 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450396532 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.321596439 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.240774005 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.823256782 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.312861137 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.307519077 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.084530609 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342044993 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.227729524 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101791985 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584658486 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.307610636 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566499683 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.3102647 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.348522067 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.314871126 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317752592 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323651273 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.317976864 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339942259 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.320173859 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.21312818 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.753549297 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87341829 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01309703 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846579351 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.628113562 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.335370985 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.213534079 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.027626817 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267913268 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.964797142 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.540995648 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.042130294 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27919894 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77504849 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.506638174 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075769864 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569139364 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545249209 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.601397075 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.340584576 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570518684 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.528694415 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343590992 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.30984452 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.260052974 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.828951078 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852498503 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333227377 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395675336 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013393572 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329320272 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.110673428 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.33520462 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.963447871 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.702441596 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.880473392 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.69635145 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.324611534 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.320158314 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106050549 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.332696547 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.836852071 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921298527 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.336801567 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.788236149 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272687678 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.518652516 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.348783155 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.309295 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.813148613 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.319139245 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.574443975 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564044736 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25544891 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.314070823 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835747889 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.181980298 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.31751713 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3139354 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019715867 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325398095 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597778379 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.32172645 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.497157743 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340872411 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.247583907 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246745646 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.005467416 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.322866218 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287339027 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777098596 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.321620739 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31721391 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344824882 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167458104 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.568750556 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.327248922 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.87767981 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.555641826 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313839048 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337800689 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.317370883 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313965082 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.295938218 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.625311217 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.550250417 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334416948 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.537711833 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.229422647 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.222480878 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.388368426 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.525823526 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.207343376 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.315502139 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576567582 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.050543091 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.329369173 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003310359 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364692372 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.325002342 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.334289131 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.332008051 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342760463 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403569727 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.522884158 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.351557874 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.326332822 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.708384179 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353111844 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325543353 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.329736523 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409970684 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.4856796 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.508155559 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.095935172 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883986499 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051525101 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.917375242 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593004332 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.32737654 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317615244 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249622279 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464593722 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.842603052 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590212506 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445948726 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.324865486 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347990042 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317287926 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.326767881 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537196461 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592402033 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.187656215 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328666424 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.984448266 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.476215606 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328151962 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.530215734 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794111886 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86858338 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44504096 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.320077564 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.024596153 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611426785 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.409986663 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318947901 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909127583 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.322648001 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.984416984 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.333802423 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319207356 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490875469 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571182719 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981860501 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.354264035 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.479963272 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.092301994 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.25365466 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.581864186 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.770954961 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.536713148 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915249135 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.023852411 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589965833 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389716541 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.52848669 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.450831329 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467532292 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.327141447 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.228416433 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320871181 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164110797 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.029847523 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.330860423 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895976171 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604052686 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.323243926 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.331197717 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354036843 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.330605204 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.543573598 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002929689 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.545815406 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.332165936 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.330265601 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.891250143 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900033405 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60017944 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265186561 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.325771182 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558022053 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.582713774 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346932425 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.774288519 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.032914852 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854902304 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.294501866 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344372452 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333308572 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.022311017 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897477267 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.539671329 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820543915 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.988810126 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321988801 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603762915 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.327066389 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33631616 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606257844 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.325808687 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.323379439 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557984663 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.918548738 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100255958 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.333301405 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.309663404 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.268187549 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.548812327 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325329621 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260571922 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323350624 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.730715831 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.350265539 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454247518 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335109369 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.335051518 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331042308 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.06408153 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608467867 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.330354352 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.306632635 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.314045194 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348237444 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438846388 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875065877 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352082865 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.998354792 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.675596468 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.57987564 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.325577247 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.313899327 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.32780905 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325448817 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.041977481 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.293817021 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335860824 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861741143 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.330191854 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.343988219 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.32904567 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.541564083 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.536855351 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.339547921 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544587368 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364157603 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348187407 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.227284184 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.092490638 seconds)
  done (took 1642.783538547 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.369218105 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.346588209 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.342526059 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.437179104 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.350010251 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.345971723 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.372074352 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.348883262 seconds)
  done (took 52.15099724 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.337665904 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.488945952 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.36486927 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.331518331 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.342671159 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.326121717 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.783671542 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.36323006 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.335788591 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.336565789 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.327619502 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.329932885 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.971046247 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.338788332 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.339072013 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.323653795 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.343274047 seconds)
  done (took 65.229989685 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.344394946 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.677854994 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.970147474 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.330013445 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.348904112 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.329534767 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.824444472 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.343522252 seconds)
  done (took 58.410220778 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.345267464 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.34531025 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.3454692 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.345251464 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.344968619 seconds)
  done (took 7.967389347 seconds)
done (took 2039.210157259 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.333002084 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.334963922 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.331903143 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.334932321 seconds)
  done (took 6.575208702 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.309222283 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.031804095 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.312102853 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.332736463 seconds)
  done (took 18.227483883 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.340604332 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.341136233 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.004830637 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.938902343 seconds)
  done (took 5.186959035 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.077414317 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.089930184 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.074845133 seconds)
  done (took 7.48172105 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.326784852 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.336249601 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.336675759 seconds)
  done (took 20.239474718 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.619703767 seconds)
  done (took 2.860634461 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.476223757 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.52344061 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.643825848 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.650183313 seconds)
  done (took 7.533888523 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.727003864 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.705342688 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.512994491 seconds)
  done (took 6.185246081 seconds)
done (took 88.212875546 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.060752275 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.568610798 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.531731655 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.033154859 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.552244749 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.533077404 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.549952428 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.003599753 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.592245206 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.543999149 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.037642394 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.550503762 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.494879097 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.574248528 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.493488929 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.571872369 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.553568543 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.097625762 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.721164837 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.918344898 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.541275277 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.672389809 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.866056528 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.738191255 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.564929718 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.489780078 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.267624704 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.32945173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.896578385 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.330679455 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.493334694 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.0913695 seconds)
  done (took 191.508128099 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.328947212 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.336311975 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.337366682 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.368879348 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.329725891 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.355850675 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.354300392 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.337179571 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.354004289 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.364002643 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.343424552 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.329765096 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.331558663 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.345687831 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.329795938 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.346740135 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.3474277 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.35181525 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.339041335 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.337894518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.339061345 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.339115329 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.330736311 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.3534228 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.344914469 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.332146903 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.33114349 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.354356119 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.331859523 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.346849303 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.339498718 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.338896858 seconds)
  done (took 204.194756673 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.336833339 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.33858213 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.340163368 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.338167481 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.331479504 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.355483368 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.331392117 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.331000829 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.351243302 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.344756225 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.330739798 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.345900215 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.332059796 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.332063196 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.348660012 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.337555926 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.331220665 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.336971122 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.340099376 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.34276545 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.335309645 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.331265456 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.331369318 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.332521853 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.359354037 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.332531735 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.335319955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.333073618 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.339523165 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.332386114 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.342463072 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.339420299 seconds)
  done (took 204.066696236 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.52774692 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.340197779 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.340463719 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.274527201 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.341097175 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.340159691 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.335235146 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.56838893 seconds)
  done (took 14.313358759 seconds)
done (took 615.324154583 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.604801289 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.318368975 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.539369287 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.360604319 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.098966608 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.378710223 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.360982381 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.52789789 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.245493627 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.531585061 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.635182394 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.375359155 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.778882905 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.359698839 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.611751458 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.460257885 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.200962218 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.31832441 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.671467526 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.866630015 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.620512646 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.803418196 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.547043107 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.261035557 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.803680516 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.810638285 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.055999963 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.197077825 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.38409119 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.676608619 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.943697858 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.287104201 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.418541374 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.419181881 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.475594373 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.456283647 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.280763467 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.417313277 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.569493874 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.576792786 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.857248622 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.067240269 seconds)
  done (took 91.421974392 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.325438533 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.326648089 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.326178941 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.326489663 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.326010668 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.326598534 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.325435604 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.326238256 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.326740259 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.327001479 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.326996738 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.328319351 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.326781837 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.329149538 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.328112667 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.327735905 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.327686734 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.328957441 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.326409761 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.326853557 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.328414603 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.326472772 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.327985631 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.327287398 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.327415155 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.328238045 seconds)
  done (took 35.756508779 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.345709185 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.588306483 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.750390223 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.359961351 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.346113003 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.348797906 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.422719666 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.355659074 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.348052209 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.348344177 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.498361019 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.356157883 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.380975714 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.776245966 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.357421784 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.346173259 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.346261747 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.34592199 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.598414894 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.36374832 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.441064777 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.354746697 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.421944836 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.363497941 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.366393601 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.347182972 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.351358248 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.930024727 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.365682069 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.499508581 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.11223351 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.427953595 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.875333077 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.778166418 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.122584453 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.357299166 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.348664356 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.50441799 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.352286263 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.34788356 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.422434723 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.356229276 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.7600251 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.022124495 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.365512635 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.347980362 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.948967532 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.520988573 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.583645496 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.364369826 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.784931471 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.359278067 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.350404033 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.351147623 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.583784957 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.362854561 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.348092238 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.953152234 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.379853783 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.424587758 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.358064665 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.349121836 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.605957379 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.358011318 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.593556609 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.35973315 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.357812342 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.368591637 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.762496815 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.36156081 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.039909459 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.374170121 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.350124481 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.502509749 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.597305007 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.990973018 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.370317033 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.610528827 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.880802427 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.44126125 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.360079739 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.921417591 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.445598006 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.362881999 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.351931699 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.353100083 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.351235533 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.397952919 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.423934195 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.985292076 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.053178946 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.977384412 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.4461466 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.371782099 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.351237901 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.955153774 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.373578246 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.351074364 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.757655485 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.042151386 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.369073444 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.35836112 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.042795549 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.370594421 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.428425965 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.364339718 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.772198703 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.360608942 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.400040751 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.353134781 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.35978048 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.373957006 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.42905212 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.363529754 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.352383861 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.012311166 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.527667458 seconds)
  done (took 178.600686907 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.346253194 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.345703469 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.353276051 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.346201137 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.34756959 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.354962725 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.34679839 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.346842771 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.353576462 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.347882089 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.347295563 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.348012102 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.348608095 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.357532996 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.357726995 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.353566839 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.961604819 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.348199356 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.355278372 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.346873606 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.136517625 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.356256261 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.356415124 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.347187972 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.348529983 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.349219368 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.354432651 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.352048831 seconds)
  done (took 152.474276408 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.355226972 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.906945969 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.381271728 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.48081441 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.38310306 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.353233675 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.480086161 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.418608986 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.375488029 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.352094575 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.353322398 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.647770117 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.359402274 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.854701275 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.539322032 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.506823481 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.854741764 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.37316465 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.353096782 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.353423141 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.484012818 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.366044314 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.647620795 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.903666443 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.374385079 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.902905041 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.340470457 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.35665101 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.355042418 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.905900673 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.371197495 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.650120518 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.431113266 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.422687127 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.929171228 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.881159886 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.872996136 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.500135388 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.363472112 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.354890503 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.354311097 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.340243592 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.91220908 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.382812986 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.358368623 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.902543416 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.382941026 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.357832048 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.362627202 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.355544589 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.414919849 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.438327677 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.676926276 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.926958408 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.456515168 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.377368707 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.485117153 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.726563383 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.361066317 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.858090235 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.34125706 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.919478137 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.384112337 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.342943261 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.357262418 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.362602263 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.504194847 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.48866714 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.864215048 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.384930695 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.858532558 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.521068219 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.364287528 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.356133191 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.359462891 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.918505049 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.884499288 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.519939976 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.488459489 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.545978506 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.351484065 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.358078978 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.343243301 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.434137691 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.357713633 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.920209788 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.888423161 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.380475584 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.359544603 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.360218114 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.360759395 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.529455759 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.942897523 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.459577238 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.855330032 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.684659201 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.668867187 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.370407694 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.417230838 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.382519957 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.663211867 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.371420561 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.415674797 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.798344908 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.662664194 seconds)
  done (took 161.893814671 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.590335941 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.530057137 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.448396127 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.510667394 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.95367802 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.929162422 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.57737015 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.502764069 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.466950564 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.613358429 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.472814272 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.44990019 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.568640661 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.436146605 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.071498501 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.443342708 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.46854251 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.508201885 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.514747701 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.356551657 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.033035126 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.644682323 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.544462522 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.176677918 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.479106925 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.116111494 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.919394091 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.88167649 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.526244791 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.615759161 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.898803661 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.459395414 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.328746562 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.056873323 seconds)
  done (took 65.361904807 seconds)
done (took 686.755491726 seconds)
SAVING RESULT...
DONE!
