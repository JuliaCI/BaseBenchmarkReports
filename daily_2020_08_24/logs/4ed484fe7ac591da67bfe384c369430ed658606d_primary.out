cset: moving following pidspec: 25435
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.629265455 seconds)
loading group "shootout"... done (took 1.209638838 seconds)
loading group "string"... done (took 0.414173804 seconds)
loading group "linalg"... done (took 7.947870246 seconds)
loading group "parallel"... done (took 0.155363988 seconds)
loading group "find"... done (took 1.302307917 seconds)
loading group "tuple"... done (took 2.003831549 seconds)
loading group "union"... done (took 12.637220187 seconds)
loading group "dates"... done (took 1.351060954 seconds)
loading group "micro"... done (took 0.201938792 seconds)
loading group "simd"... done (took 4.401484818 seconds)
loading group "io"... done (took 1.018738615 seconds)
loading group "random"... done (took 8.780672508 seconds)
loading group "problem"... done (took 1.576248384 seconds)
loading group "array"... done (took 19.653252876 seconds)
loading group "misc"... done (took 1.584224759 seconds)
loading group "scalar"... done (took 39.820140732 seconds)
loading group "sort"... done (took 3.072579579 seconds)
loading group "sparse"... done (took 11.920631122 seconds)
loading group "collection"... done (took 16.588825375 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.52334017 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129923818 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133394655 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123219448 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149250713 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.125391548 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131146448 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087795704 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.941369909 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148072515 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116299224 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428424783 seconds)
done (took 5.554390916 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.168736734 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08824011 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080512096 seconds)
  done (took 1.459242925 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065711139 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.136702152 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067044718 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067047972 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067309641 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067322026 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06698534 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066853842 seconds)
  done (took 1.830721442 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072160417 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067966877 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065434613 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067306466 seconds)
  done (took 1.566689631 seconds)
done (took 6.39628621 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.240920344 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.102100556 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.286571445 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.394435264 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.466168883 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.092758823 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073514972 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069282729 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.128437176 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327617052 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104449451 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.184644878 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089559542 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.175455631 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.002106024 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.120265697 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084423535 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.123572398 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092098614 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13512981 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.39741842 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076917841 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.07293718 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.069364009 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.067042498 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.642001314 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.666872182 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133891255 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083496918 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.100180263 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.114610828 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.645457141 seconds)
  done (took 10.690651188 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.092630357 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09035331 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066721044 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122346479 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.091794125 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068003708 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072977639 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065619217 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087407515 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.123349063 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08895356 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09747561 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064312827 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067342668 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.073466252 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.19554694 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078832319 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079581318 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066244562 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078990341 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109082592 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076790109 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07741615 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077053665 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127555068 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.166666067 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097521926 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096154295 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.064205317 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078674383 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113173585 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123965732 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065308022 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063998125 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.118994719 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093011671 seconds)
  done (took 4.671222886 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.973613688 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.092231576 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.104115511 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.630500492 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064521163 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.151549125 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.240187701 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072856947 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.401063658 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.114280877 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.147449603 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.111109014 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.146319053 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.114300654 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06755994 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.221522223 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.115543208 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.522224314 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068392614 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.067428455 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066040863 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.068948075 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068660957 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063440225 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069295199 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095654962 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.088142963 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.188442758 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.93257913 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.241998788 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06570261 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.156944074 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083342166 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.371947072 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068240897 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.081855452 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.414592323 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.12254599 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063605142 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163594781 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.114643704 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.062838702 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.116578796 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077168307 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.066914254 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.067259596 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.06648771 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069844476 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.076649464 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098915677 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065637363 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.063310331 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162206891 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064270363 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065644839 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066975116 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149361316 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065045874 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.141992611 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064082688 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068127488 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.101321821 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067990038 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.089484553 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.098568691 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.349760552 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.063207311 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068206392 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.245231805 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075188446 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064276887 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069235829 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069123102 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.065759111 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066055011 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071898917 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067761021 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066521905 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106891408 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065071674 seconds)
    (80/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067762704 seconds)
    (81/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064672697 seconds)
    (82/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.07004115 seconds)
    (83/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.095815553 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062731906 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062938759 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.479673609 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.095960112 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064088027 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.075037744 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.102956456 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065055103 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.069509194 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.065131048 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.0652661 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065220231 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066052843 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069310884 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.207160379 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062311942 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069259264 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113098089 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.064224734 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069251443 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064878201 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071477017 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069675766 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069475 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066852955 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069063619 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068078629 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064916053 seconds)
    (112/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.111718565 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064836256 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065556884 seconds)
  done (took 22.168826524 seconds)
done (took 39.792661905 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.257297807 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080889792 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081189455 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081256155 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081268447 seconds)
  done (took 1.973868306 seconds)
done (took 3.352481779 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.107126544 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.06277979 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.097344043 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.097910156 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.061994259 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.062199007 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.097411151 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.06365834 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.098304969 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.09934185 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.101463893 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.100421861 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.063698043 seconds)
  done (took 2.504357925 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067973213 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.078847343 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082495175 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061406444 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071196606 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081422348 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061859848 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080377468 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.087008892 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.086591888 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080865125 seconds)
  done (took 2.214498046 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067397825 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079668239 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082914731 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062292411 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072748721 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080808288 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061831923 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080862068 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084349166 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080707532 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081327285 seconds)
  done (took 2.201406982 seconds)
done (took 8.287940937 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.065836159 seconds)
  done (took 1.416147734 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.523568276 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.538030805 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066802919 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.085531595 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.188255023 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.095938994 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.220856718 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.071778297 seconds)
  done (took 8.324931496 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095042263 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070305518 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.067429517 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.067954545 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.067272723 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066379922 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065717449 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.069145917 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067427796 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069266108 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06677177 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.066873198 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067038428 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.06887357 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067810291 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068108969 seconds)
  done (took 2.562061567 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096370903 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09614087 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070826698 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072307 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069600244 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069428633 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071838006 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071281124 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.068049912 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.069806689 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071178897 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07027773 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070185913 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060926354 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.071459322 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072329331 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067811629 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071238695 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07209635 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072994167 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071723597 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061345502 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069745537 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070628183 seconds)
  done (took 3.209589512 seconds)
done (took 16.875071875 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113719658 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073866649 seconds)
  done (took 1.546481967 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.0676739 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069019753 seconds)
  done (took 1.512127194 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.074720405 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060033654 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.080767174 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070265248 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.060025232 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.05986543 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078139485 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059893379 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059548321 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.060230601 seconds)
  done (took 2.040030187 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.062288178 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.068490299 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066531982 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068588586 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066450426 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061200315 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063675077 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061151272 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068272738 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059854999 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064913587 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080681829 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064234576 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081960668 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064004402 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06548729 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066711855 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063865864 seconds)
  done (took 2.577326612 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.059872505 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060543493 seconds)
  done (took 1.506016198 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063660225 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060189568 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063520596 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063311659 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060314324 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059788289 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060327128 seconds)
  done (took 1.807960539 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.409447228 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120546348 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.344562625 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.067428545 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.075710629 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249376124 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.061786478 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066117923 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.066259311 seconds)
  done (took 2.882852354 seconds)
done (took 15.254766864 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07944505 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.082047402 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.090131251 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41510436 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089266725 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064672843 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.110516576 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.173942347 seconds)
done (took 2.499512706 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21078872 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.320421399 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.788584956 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.066335713 seconds)
  done (took 3.559672567 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.45151595 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.078200354 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075982153 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064944946 seconds)
  done (took 2.067308468 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.063503202 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069911616 seconds)
  done (took 1.522427274 seconds)
done (took 8.752467956 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06243443 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090153585 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061532116 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.061969389 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061195288 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.061847898 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06175937 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.061080056 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061576622 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.061519168 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.061383875 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06110842 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.061326864 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061384292 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061792111 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062060766 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061952208 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061624892 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061651573 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.061671879 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062151117 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061282425 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061621603 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061868079 seconds)
  done (took 2.926659869 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.07809634 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064963191 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065520179 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.064632476 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065729496 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065420772 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064986162 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063592003 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.06521893 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063519293 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065435269 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065249414 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063122589 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065642093 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063448517 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065338243 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065134015 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064352192 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063469557 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065584152 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06492014 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063350324 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065373236 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064929807 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.065454314 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065430029 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063621152 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063708753 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065166473 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066179901 seconds)
  done (took 3.360426704 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064056138 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.058590713 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059266892 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067119406 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058572206 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058967916 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.059489071 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058151916 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058413883 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059851737 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060248753 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059322831 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060336782 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059317601 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059521962 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060019775 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063633366 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077786891 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059320845 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059241533 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063832794 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059328665 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059338607 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058992778 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.060711558 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059394486 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059539037 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060231834 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059134393 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060190086 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.059366079 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063017179 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.073389066 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.059708158 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068998277 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063983641 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059565479 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063265622 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061324892 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059319941 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058969278 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059076654 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.05955561 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.059287155 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068880505 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060027046 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06032159 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.059979508 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059631924 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059453582 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059308822 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.061859613 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064611018 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060878778 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.058888439 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060876467 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059051164 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06028135 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059594607 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059319762 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.05935034 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062679124 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061391826 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060332626 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07756873 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.060209875 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.067851201 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.058663987 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.058944074 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06168555 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.06008247 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075580061 seconds)
  done (took 5.829917355 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.0862754 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085941251 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063229599 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062995132 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058808503 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059074026 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066580481 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058698094 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063963106 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079831429 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060424472 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06497082 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064323099 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064207982 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060263249 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064415856 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068616013 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060240883 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060066826 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064043062 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060378007 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067736129 seconds)
  done (took 2.864077205 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.139095045 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064583998 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102989021 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075082478 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06700179 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074284868 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064482883 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064636983 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064464119 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06486733 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064907759 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064619896 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0672709 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065476921 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065282648 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064880834 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06509447 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065323381 seconds)
  done (took 2.712592249 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075482094 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065035609 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087904791 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065090699 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065906355 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065667991 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069859774 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070634311 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065288246 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065503707 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070294177 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065423089 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064937499 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065267651 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065137944 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065337688 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064691907 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065689703 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070458904 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069398796 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069412554 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069717598 seconds)
  done (took 2.913141562 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073702285 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063138988 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078810242 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066696676 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060431183 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060077045 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.065507837 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064406893 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.065605307 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063826385 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064751367 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059158437 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065370937 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063596722 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065276443 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064089766 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062758966 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06353329 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063357757 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058598154 seconds)
  done (took 2.699907211 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084770292 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062859565 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061451812 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080265235 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062009912 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061313149 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079669885 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061184572 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.062039896 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082523766 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062001253 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061471848 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080206393 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080595551 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061755714 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079901652 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079826852 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080297111 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061251253 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061788295 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082071878 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061516128 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08024907 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063232167 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062240855 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.062078788 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062610466 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080534962 seconds)
  done (took 3.370408394 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062701224 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061125107 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.061910587 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062297074 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062055455 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061919808 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062558979 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063005048 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062946639 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06421098 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062880028 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062670738 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062840779 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063004868 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062923761 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062798409 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062879164 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063110441 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062414198 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061715893 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.061525678 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061815651 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.061164215 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061502455 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061877109 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.061750172 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06178661 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061524049 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06157041 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06182183 seconds)
  done (took 3.283993035 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072404084 seconds)
    (2/2) benchmarking "in"...
    done (took 0.070886278 seconds)
  done (took 1.557191969 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.060983976 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074782386 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.058468533 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069494221 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067910735 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062179509 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067763027 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067165202 seconds)
  done (took 1.938540319 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.065842921 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.08867675 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060594951 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06128391 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.063984133 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.117957827 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.07634184 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072043667 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074233655 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063550505 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062028033 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.072619679 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.061834438 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071946033 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061577957 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068090246 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066456364 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07155593 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072510634 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.059760559 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072474249 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060987554 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059110827 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061284862 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060178898 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066280962 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07488464 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073224846 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069332671 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058797942 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080013921 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060250381 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062019724 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069198237 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.06552541 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060552393 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.096061497 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060056153 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064913634 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058718239 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070877929 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078466128 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07268008 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.076154766 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061395471 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062592865 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058737244 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061500616 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062258197 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068328105 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059456278 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067002144 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060111068 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061790591 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070450172 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.060317511 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065591735 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068572843 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071405811 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071128473 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068639606 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073761442 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067486735 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068000981 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060200921 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077291415 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.061125876 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071197987 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073198044 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060511859 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072353242 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059168029 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058125382 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.05915321 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091152081 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061263539 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060628506 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059373795 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.059624335 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060641761 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068164296 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064944895 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065862475 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062782124 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073888115 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067170485 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058699544 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.06669059 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.076440604 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061986915 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058940224 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.074629868 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.061811553 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058651151 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.0756301 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068067405 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060712485 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.05993016 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062111455 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072318202 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.061082957 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058234796 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067606905 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060691401 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.062306465 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.064111942 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06629568 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058717341 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067889116 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064567997 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060516177 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057556704 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062721654 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059915403 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057818126 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067868195 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058772552 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073164498 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064968988 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.071866081 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072646462 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068896194 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073990413 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058868343 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057518598 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.076008253 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.198292471 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061386897 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076595052 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059400407 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069499462 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058647863 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061959767 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.070127558 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.05984637 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06340341 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060937337 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.06700063 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.062372173 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062755352 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06465149 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068638902 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073020938 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.061584154 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068927081 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.060542973 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076132439 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070373994 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065056619 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06542769 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.061628581 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072626874 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066740366 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070019262 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06031255 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.061183707 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061108384 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070275898 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07001884 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062608377 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.06966408 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063787633 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.061166676 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.060377568 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.06103717 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06248104 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063867381 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060450288 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066087855 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067801461 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.073006514 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067086397 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067609752 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058286298 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058805355 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.064350163 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058657631 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.063475095 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067893775 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073555437 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071347567 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078310785 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059172088 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068062587 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060847842 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075231559 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07130048 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059940282 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064312326 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057979631 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06159533 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068260275 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070110144 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.072315926 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072784162 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063749839 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064385474 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060384489 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074481651 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.06095618 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068312976 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.069543458 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065421449 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060430142 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062431815 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06870242 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064611645 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060029647 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074046765 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065769613 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.0617893 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072033448 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.059357555 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.069471508 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059005922 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062128745 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063849776 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061325414 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06776113 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073920658 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05821323 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.060301234 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07411828 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.061109171 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061027158 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066523745 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.073939561 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06334649 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066577652 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069487973 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068186815 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063539729 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068417955 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060218663 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.068074747 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.064735156 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072094906 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.05929944 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076041384 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057751418 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.074304837 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060411762 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.07092166 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060808313 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068179967 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.060835348 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.07515718 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.060777608 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.060523833 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070639932 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057384806 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067692183 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058382938 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063310985 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064795517 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.067481921 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061122577 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067814452 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.194833318 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067614207 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063564084 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067481107 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.068040571 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063625947 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059484725 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066999388 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070843257 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068279654 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.062194455 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062815727 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060669801 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.0678722 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.0612255 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060757815 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067057307 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063668184 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06496616 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061451647 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061529399 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061724952 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067557786 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068943071 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077385366 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068420877 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066319929 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068372602 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059378326 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073870819 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059722132 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066461593 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058181176 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066638933 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068316394 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.060015738 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078157884 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060891924 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066635217 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071484363 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067048614 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06293568 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076634211 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063362271 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066897975 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066572192 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062987336 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066269418 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061092356 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066576821 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067588963 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.06913872 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059986397 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066164339 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068266805 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062235848 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.069906055 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062099386 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068406481 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062836871 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059285198 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064456213 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071886894 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064725924 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065394561 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061109139 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059557422 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060751226 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068157136 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064390642 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068922672 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075268773 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058849372 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.060262675 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058915327 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062853613 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076761959 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068253942 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066304166 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063243646 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061218844 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.061007078 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060851431 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.059653707 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063078724 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058259627 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.059257072 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069026197 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.060830581 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064044632 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059537779 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060649458 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068083881 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064946272 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.059681418 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065452991 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.05931396 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064124872 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.058573231 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060679074 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063436932 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.058985772 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063871925 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070238045 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.078734515 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066758678 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068987534 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061456591 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068089766 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07534576 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.069036621 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061755451 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069564619 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059838074 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078653065 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069839896 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068718206 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070246785 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.061565764 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076821105 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063225263 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068795171 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073351255 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059925767 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066345059 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.058445314 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073768814 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063176022 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.058520296 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066805419 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065844614 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064333058 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.208629351 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060225161 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067393755 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065033974 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063227031 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061970333 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061055177 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067590378 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074126036 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060545334 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064636391 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066862551 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066928725 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065010047 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072879834 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068643933 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061452841 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061453099 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063103612 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06015124 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071992653 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060203476 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063873015 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063666861 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059248443 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06581334 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074935767 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06845674 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068889742 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059296992 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058812736 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.076115241 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062970405 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063887931 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067146861 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068362624 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071604515 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067868691 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075798251 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060639425 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065072899 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071640623 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060630188 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.059127897 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062768902 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062148193 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068361115 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069886363 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067845482 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062343496 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066426004 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072894981 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062135927 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064357469 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065011566 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059763507 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069014517 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066403913 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067124954 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.0604615 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059306225 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062744761 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068928439 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067294324 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069143464 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061382357 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.0684864 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074240251 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067580649 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064774498 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060329132 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064484442 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06886049 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.066473273 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059950382 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064882965 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064116779 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.068333495 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06948967 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064153399 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060092704 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077251893 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068538113 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.069257662 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.062380779 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062641554 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06081724 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060181126 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071564819 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058667087 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.060921194 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063820171 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061151628 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.076017916 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067064897 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074667915 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060376966 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063331729 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058934681 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06866975 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063091386 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059368674 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068856095 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058692379 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074269848 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.070361613 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.065504062 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058783399 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063882511 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.066669441 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07344544 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070944425 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06746249 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.063100382 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068429831 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060833666 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070048276 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.059111327 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.058279415 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068815939 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066732693 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072081888 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058682605 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.068665136 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060805753 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066381127 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066492026 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.060948962 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06072224 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060894431 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067634433 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.198608307 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068587134 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064081491 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076075458 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061009597 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070013449 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068280585 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.070229511 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072322461 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071844185 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.067644834 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06051338 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066439076 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.067803974 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.061178761 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064015719 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063711426 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080701518 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061340733 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061857829 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073870123 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067320556 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.05955413 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067580024 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064001476 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.069950195 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061001799 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.069285516 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064693985 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061319341 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063752925 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063821221 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058480435 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058497573 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059030048 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069557875 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065163384 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061035862 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080379673 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062644898 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069270591 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071951782 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066951014 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062708534 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059473868 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061959232 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072801192 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075102737 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063741782 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068668339 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062335356 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069781635 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058618649 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066945923 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067137484 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084014625 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058961512 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059273657 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072760827 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073658364 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063000713 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06848883 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067760373 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06049864 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080374022 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068264542 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060817368 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.06972757 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061769732 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.058529109 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058326702 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062205866 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072387408 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059669939 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.061969842 seconds)
  done (took 41.172122389 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098244381 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060571581 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.05930779 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059709393 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072978814 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061613151 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06101122 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061221211 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061384395 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063257779 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060538915 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060335584 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072717102 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075154237 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071175524 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064357466 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059854662 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061641308 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060192639 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061383667 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071492469 seconds)
  done (took 2.8813363 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.067245531 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.074769124 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072872217 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077590607 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069081013 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065468011 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072614505 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065434823 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07354106 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070687353 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073724018 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065810653 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069570463 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069147872 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069703169 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064031668 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071337995 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067417225 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.063666616 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070991724 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06427715 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071362493 seconds)
  done (took 3.012524905 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06108252 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059790966 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067156237 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058823686 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058723142 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063184931 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059957633 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063634649 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.06411256 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064726227 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068534153 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060968527 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059238274 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.063941032 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.058441711 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059663493 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.101640533 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059821135 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059724352 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058316625 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.061886946 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067394839 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059364976 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059344286 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065348828 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062129608 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058974273 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061827546 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.05943626 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.062493149 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060097433 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058454631 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067774794 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067903222 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062579604 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063425916 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060453362 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059377758 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058501775 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058396059 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066377076 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.05998708 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058737541 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060075286 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066901121 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058551713 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058197769 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068040576 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059625102 seconds)
  done (took 4.54668534 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.072301001 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11220877 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066538195 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091768291 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.074322433 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067739088 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06620521 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092041691 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060934233 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060781783 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.073755469 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074188119 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062472936 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063834298 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064819986 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062087561 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063012053 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061049964 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065051901 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061795914 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065446883 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065753461 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072627812 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.0730962 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063242108 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060973043 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061336071 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063557347 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.072559523 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.065995906 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063963773 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064142808 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076398552 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.064410449 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061460333 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061584015 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07360304 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062083849 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062314663 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.059968071 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061606407 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063769256 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066289542 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074020565 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062196675 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06662091 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062482135 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06001131 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.072913855 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06242358 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.066507674 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074070127 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063632789 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064109305 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065331551 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.075311113 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064308026 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062525862 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.064230568 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07474834 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061658909 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06488929 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075691409 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062313117 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065984398 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074250924 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066703099 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063166027 seconds)
  done (took 6.220293163 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070055179 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091446899 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070817708 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071460426 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070204936 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070116363 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070322217 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069776156 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07014493 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070804486 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069945412 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109094751 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065438266 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074943476 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069947282 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069829537 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069794914 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069599422 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069466636 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069718105 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069499158 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070471365 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069788534 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070010085 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07293441 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065676421 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069253605 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069579891 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07044968 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070014488 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072992401 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070211921 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070094303 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070309493 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.072251087 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069635048 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059832161 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069572859 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070047488 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069830474 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065787375 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07044913 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069686772 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066013856 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070312722 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069520436 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070575672 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073934328 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080287509 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071288233 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069992734 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070393814 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069814406 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070080389 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070554004 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.07847321 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070923907 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070655131 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070216214 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071061657 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070953947 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078058752 seconds)
  done (took 5.94188866 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075677401 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067498558 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079663345 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059141078 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059061597 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070705396 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058819878 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058822572 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069357892 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067051747 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068822828 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068644252 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071009213 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068753941 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068739893 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07092677 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068483491 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068748862 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066784512 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068601822 seconds)
  done (took 2.868133875 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072327785 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077315084 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064966524 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069247407 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064694207 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068208179 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063622817 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064842303 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065533901 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064922559 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070140478 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07021491 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065344025 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069014381 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069829411 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068512295 seconds)
  done (took 2.588280262 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.065909217 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066987947 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.067446987 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061077737 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064176401 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059522452 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060575868 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058674882 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059275632 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073725 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060712153 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071618805 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060287371 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.05979058 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060029987 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065605976 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059729665 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060247414 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060351799 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065614508 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067063303 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061677745 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063914454 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060505219 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06512209 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067075109 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061835264 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063631075 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060272933 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060598321 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066106604 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066767693 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059948537 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060669079 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059043235 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059791015 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060119111 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06038432 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065680858 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060626005 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058783726 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064860346 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060198803 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061032945 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.0595676 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060509143 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059474445 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065606081 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060616922 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065157036 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060078436 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06213777 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060610965 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.066998992 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062501368 seconds)
  done (took 4.94125917 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074838142 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064492854 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058967364 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059373965 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063968524 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066540511 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06586828 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065712405 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066915907 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060043106 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066100178 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065431869 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065847304 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065897162 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066148513 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065834162 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059109673 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064216769 seconds)
  done (took 2.680013107 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070559966 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064660866 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.069075588 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063908669 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063543487 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063449045 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059033041 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059517564 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059668407 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063518835 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063691083 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063374938 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060145633 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064556272 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065315114 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065075014 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064059172 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059252081 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064289537 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059501617 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063254056 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059685863 seconds)
  done (took 2.896522772 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.087149773 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082672431 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.122785228 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077541707 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085544316 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.069700915 seconds)
  done (took 2.032964681 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090059397 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101507751 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064276748 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064300885 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073937669 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067408316 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067234115 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067235444 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073700567 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072146105 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067428741 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073994095 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073748438 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069593579 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074144839 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076932128 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067755477 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067671168 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063705308 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076516494 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067395679 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073466959 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067708537 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067576414 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067697892 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069420147 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076434366 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072352841 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067639597 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073739322 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080391595 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067689977 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074019686 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074532174 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064108469 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074114028 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068441589 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077470151 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074170827 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070077784 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065587564 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076457056 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075881971 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071726955 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078754633 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069151357 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071116135 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069353521 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069493899 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081287718 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07623962 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071121319 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074951927 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078474849 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077109364 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079649512 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072728284 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071198075 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076128134 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07309557 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069546219 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073998579 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069711074 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07181541 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076911407 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069491782 seconds)
  done (took 6.305828251 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096981041 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066132743 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069850983 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074548231 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071393971 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069284942 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069182017 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069217029 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069509059 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066338394 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10465246 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069701605 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071653897 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072009428 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069746639 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069503821 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069358145 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071643875 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066369632 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081209811 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069133834 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071599149 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071308198 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071135291 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073787701 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077950629 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068997682 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067809157 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067224066 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067111941 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069328123 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067751924 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069187536 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064571059 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069079785 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067432828 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067260429 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06905648 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067394837 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073802017 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069624277 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077011643 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067323313 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067179502 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071957909 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067200498 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068334386 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065983034 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069163266 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06626901 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073382669 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071825922 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072061095 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070088666 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067659132 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067572795 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067659138 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067363398 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067733517 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077085216 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069555849 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067525857 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079412005 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06850013 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069595681 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07066788 seconds)
  done (took 6.210121821 seconds)
done (took 129.1448771 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207462841 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182293019 seconds)
  done (took 1.887435947 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07168279 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09536798 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073296625 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131670767 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069408759 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102858935 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102284871 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.073567808 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069132875 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068531562 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068969695 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071684175 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134454062 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069299329 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068873453 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072072113 seconds)
  done (took 2.859738265 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104264204 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.179877235 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109884103 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067071611 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104222891 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074041669 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067095666 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077347932 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070454466 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.07011943 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073954732 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072077307 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069874809 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072255721 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070659035 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074132373 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069834741 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074027368 seconds)
  done (took 3.020954365 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.09193722 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.083935887 seconds)
  done (took 1.700745137 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153244739 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10369188 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142182732 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.319761259 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.132871442 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.127920717 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130538256 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126409595 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.107894296 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122870839 seconds)
  done (took 2.987029276 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100867275 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176962203 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.306690058 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117618899 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073206652 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100029434 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119881957 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078841852 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077996267 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077518627 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077887607 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074841963 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095913473 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074369954 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07434598 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076849254 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.099156119 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073701389 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073016267 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073450777 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098100818 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067229561 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074230714 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073122283 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07539276 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075605293 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069020046 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06710091 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073884055 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073520542 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075889347 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097132761 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07572656 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.100018869 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071666539 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.101102289 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072743488 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071546892 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073232122 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07187167 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075065285 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074928082 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075973558 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074904904 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069171459 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.072306131 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069030584 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067139096 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076486322 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068294439 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076517742 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076247408 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.100047546 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068391182 seconds)
  done (took 6.170881096 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106686863 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105100405 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067972811 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111257151 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102921621 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067640019 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103230175 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097357959 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107218719 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067713852 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066863516 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067354213 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075312927 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.077764887 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11387174 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106561965 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069993219 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067761792 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105541557 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105803685 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06616886 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09857063 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097330349 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104960421 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.065760924 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067175799 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065983888 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066661288 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072735526 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074007826 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066253202 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074904064 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.07974549 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074421028 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065651489 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065943124 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065952495 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.074408564 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075120736 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075087587 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073298088 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065297316 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06609102 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066620933 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06726957 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06582422 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073343268 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.074350497 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.073463997 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066103914 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066719001 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.065887234 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066516922 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07401294 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.072806818 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075073125 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07441951 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06633737 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065829651 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068079069 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075841181 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075024247 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074531602 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067256382 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074884695 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065802596 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075803867 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078866685 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066032862 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066720906 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066376037 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066576133 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067018918 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073016547 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.072854347 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066742426 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065811947 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065736661 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075264382 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073528704 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065966925 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072949858 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065205703 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066389201 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066113956 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067119379 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072614341 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074576911 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066646906 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065624831 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065965512 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066338906 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065405925 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.072173836 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074113963 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07411984 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073228099 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066790635 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.074197739 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073565239 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066840619 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.073836977 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066730593 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066710394 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067307849 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073775053 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.073227599 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.075284524 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066432163 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06671172 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.073713021 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.207191875 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067604543 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074568385 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076639107 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074644301 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066841911 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077015592 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066972767 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075844183 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067192487 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076532107 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069397222 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073805138 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066760219 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066086435 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067408298 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.074393401 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067190009 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066987751 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067332503 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066924215 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074452175 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077321171 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067535146 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074042634 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.0741967 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067698578 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073977253 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066725717 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075226475 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066578066 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066858155 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065897685 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076112881 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067002449 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066723037 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066692098 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076819984 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066388746 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076121452 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07313361 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0660856 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078005746 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076493737 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073267025 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075989246 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067284851 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066481154 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06582448 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066543928 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072940859 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074324188 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066624203 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066181781 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.072980832 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075393768 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065843698 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07369752 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0733051 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073673044 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066329657 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066344846 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076011538 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075496903 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07454935 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073751699 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074318809 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066526496 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07333614 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07363024 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066144652 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079541227 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066315733 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077544738 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07404063 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072993582 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074227174 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075629941 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075869406 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076256115 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078456217 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066204789 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066260548 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073770348 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066113234 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066374349 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07343959 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066806402 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066899155 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078314316 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066505051 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07590265 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065849555 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074517148 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065641106 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066644767 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078309697 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06702302 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066959043 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073986271 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066404961 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073528031 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076252642 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073824935 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065918084 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066760163 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074149655 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.074408894 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066432155 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065813913 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066754087 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.073109221 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.072515231 seconds)
  done (took 17.973347924 seconds)
done (took 38.129844314 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.203545657 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156440608 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.189187063 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.112243305 seconds)
  done (took 2.284954289 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.095599977 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.095980431 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.075992513 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063330254 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.081358309 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06363597 seconds)
  done (took 2.041982977 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274938968 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.191346309 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172980615 seconds)
  done (took 2.198988445 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215859251 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.194098289 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473617698 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.291406083 seconds)
  done (took 2.836031903 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.131697295 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.078676444 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061767472 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.072355308 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.109629824 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.143101053 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.087625556 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.111761872 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.072956586 seconds)
  done (took 2.492899261 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.130071365 seconds)
done (took 13.561455522 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102649394 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.123602185 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071742346 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.067550344 seconds)
    (5/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.252015765 seconds)
    (6/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.255717927 seconds)
    (7/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.191699252 seconds)
    (8/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.231732105 seconds)
    (9/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.194537593 seconds)
    (10/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07420099 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074231186 seconds)
    (12/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.164339837 seconds)
    (13/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.074502628 seconds)
    (14/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072196757 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071485359 seconds)
    (16/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.217961339 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.15155016 seconds)
    (18/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104379417 seconds)
    (19/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.073897328 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072779603 seconds)
    (21/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.164673998 seconds)
    (22/309) benchmarking ("sort", BigInt, false)...
    done (took 0.253154597 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.171539804 seconds)
    (24/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.33533258 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.085436432 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074313802 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06290322 seconds)
    (28/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.198627594 seconds)
    (29/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072197134 seconds)
    (30/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.181775422 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.079202485 seconds)
    (32/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.188122507 seconds)
    (33/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.071258562 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07155477 seconds)
    (35/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.134994634 seconds)
    (36/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062179554 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.062374043 seconds)
    (38/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.198982398 seconds)
    (39/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073935715 seconds)
    (40/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.159666823 seconds)
    (41/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.169554263 seconds)
    (42/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06771435 seconds)
    (43/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.076911754 seconds)
    (44/309) benchmarking ("sort", Bool, false)...
    done (took 0.147698941 seconds)
    (45/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.1853156 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166204314 seconds)
    (47/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.070727791 seconds)
    (48/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.063872452 seconds)
    (49/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.062960064 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 0.064670371 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.132518113 seconds)
    (52/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.124501751 seconds)
    (53/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06795899 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075761736 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.147277902 seconds)
    (56/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062360724 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088207564 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063277335 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072339044 seconds)
    (60/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.14041188 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.082762033 seconds)
    (62/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.193894551 seconds)
    (63/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.173923011 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.083686577 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061627525 seconds)
    (66/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.061998896 seconds)
    (67/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078492803 seconds)
    (68/309) benchmarking ("sort", Float64, false)...
    done (took 0.131517999 seconds)
    (69/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.075064265 seconds)
    (70/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066569996 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087507275 seconds)
    (72/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.165121744 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074497401 seconds)
    (74/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.209937655 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.074030476 seconds)
    (76/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.144462457 seconds)
    (77/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.062910803 seconds)
    (78/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067740234 seconds)
    (79/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.062562427 seconds)
    (80/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.080575057 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063015632 seconds)
    (82/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073928256 seconds)
    (83/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.206832333 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.062590476 seconds)
    (85/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.084524861 seconds)
    (86/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.287991893 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.092755749 seconds)
    (88/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.183164361 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.089313552 seconds)
    (90/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066766118 seconds)
    (91/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071969893 seconds)
    (92/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.065505115 seconds)
    (93/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064686514 seconds)
    (94/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.063040237 seconds)
    (95/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.143625092 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.078833122 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.189500102 seconds)
    (98/309) benchmarking ("sort", Int8, false)...
    done (took 0.169137192 seconds)
    (99/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.186804371 seconds)
    (100/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072078014 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.140787006 seconds)
    (102/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078294876 seconds)
    (103/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.147161033 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071025141 seconds)
    (105/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.062591637 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.197944518 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120218052 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087563948 seconds)
    (109/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.070322911 seconds)
    (110/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073323861 seconds)
    (111/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15577765 seconds)
    (112/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072967661 seconds)
    (113/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.214588295 seconds)
    (114/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070723001 seconds)
    (115/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.064848995 seconds)
    (116/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.064772084 seconds)
    (117/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076467957 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085522462 seconds)
    (119/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.141917298 seconds)
    (120/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076149186 seconds)
    (121/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.215235711 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089437203 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087278857 seconds)
    (124/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.166982511 seconds)
    (125/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.073902464 seconds)
    (126/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.069589005 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075020764 seconds)
    (128/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065964275 seconds)
    (129/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071740969 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.062069604 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089870249 seconds)
    (132/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.163670356 seconds)
    (133/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.222999829 seconds)
    (134/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.187979731 seconds)
    (135/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071934898 seconds)
    (136/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.0626477 seconds)
    (137/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064804996 seconds)
    (138/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074219169 seconds)
    (139/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065595009 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168015337 seconds)
    (141/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.062661263 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070568118 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.091051426 seconds)
    (144/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071590134 seconds)
    (145/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063552666 seconds)
    (146/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.074880323 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.064616181 seconds)
    (148/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.145311843 seconds)
    (149/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.155333001 seconds)
    (150/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.062575637 seconds)
    (151/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.073824458 seconds)
    (152/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072982414 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.063880615 seconds)
    (154/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065926294 seconds)
    (155/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078554194 seconds)
    (156/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075701668 seconds)
    (157/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.070303185 seconds)
    (158/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.067395685 seconds)
    (159/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.061994763 seconds)
    (160/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.139379865 seconds)
    (161/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073896145 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.063837634 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.064289896 seconds)
    (164/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.062352185 seconds)
    (165/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070897196 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.199681178 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070898312 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.082904364 seconds)
    (169/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.070369537 seconds)
    (170/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.186267111 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070233668 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121462899 seconds)
    (173/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.170064328 seconds)
    (174/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092103287 seconds)
    (175/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061809808 seconds)
    (176/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.079457318 seconds)
    (177/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.063584859 seconds)
    (178/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088642972 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063387385 seconds)
    (180/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.062899326 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.061885857 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.144314659 seconds)
    (183/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065790699 seconds)
    (184/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087369256 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127531928 seconds)
    (186/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063397541 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.062837888 seconds)
    (188/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063769211 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.197398378 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.307393345 seconds)
    (191/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066269848 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177392777 seconds)
    (193/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.064634977 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071325969 seconds)
    (195/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06498212 seconds)
    (196/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067252304 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093100695 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122870044 seconds)
    (199/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066629661 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084074656 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149356535 seconds)
    (202/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.064381722 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087094695 seconds)
    (204/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064525552 seconds)
    (205/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.063062366 seconds)
    (206/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.075548605 seconds)
    (207/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.063527785 seconds)
    (208/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066461063 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.062744256 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086772138 seconds)
    (211/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064006553 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118781369 seconds)
    (213/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064518081 seconds)
    (214/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072829841 seconds)
    (215/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091389845 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.06368273 seconds)
    (217/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.063777639 seconds)
    (218/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.064861079 seconds)
    (219/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.064796448 seconds)
    (220/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.063263219 seconds)
    (221/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.064358577 seconds)
    (222/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070616952 seconds)
    (223/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06235934 seconds)
    (224/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064609705 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.063586396 seconds)
    (226/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.063225724 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063662327 seconds)
    (228/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070407391 seconds)
    (229/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.065138025 seconds)
    (230/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.063025959 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065207083 seconds)
    (232/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070774315 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.11914684 seconds)
    (234/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.062290369 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086608699 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.063607714 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175529024 seconds)
    (238/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.064322165 seconds)
    (239/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.062561741 seconds)
    (240/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074585064 seconds)
    (241/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074588695 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148627871 seconds)
    (243/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.074730076 seconds)
    (244/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.167944174 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.141453996 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.1408231 seconds)
    (247/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.062169034 seconds)
    (248/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.064496985 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11185892 seconds)
    (250/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063749963 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063118977 seconds)
    (252/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070952044 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.133834043 seconds)
    (254/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065529402 seconds)
    (255/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066198174 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.1220321 seconds)
    (257/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.063453434 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140542375 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.063056846 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134990254 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.1351958 seconds)
    (262/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06510871 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.063722438 seconds)
    (264/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.067312681 seconds)
    (265/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.062007314 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123820967 seconds)
    (267/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.062951521 seconds)
    (268/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.062576428 seconds)
    (269/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.209062286 seconds)
    (270/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.065626545 seconds)
    (271/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070710671 seconds)
    (272/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063167647 seconds)
    (273/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.065475144 seconds)
    (274/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.062676772 seconds)
    (275/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.062298085 seconds)
    (276/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.063148376 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07040116 seconds)
    (278/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.064709892 seconds)
    (279/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.06302265 seconds)
    (280/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.070281474 seconds)
    (281/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.06343058 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.087330266 seconds)
    (283/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.064625441 seconds)
    (284/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.170372043 seconds)
    (285/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.062318762 seconds)
    (286/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071362341 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063390963 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.065340828 seconds)
    (289/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.063930601 seconds)
    (290/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.063603924 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070717536 seconds)
    (292/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.062255728 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074299618 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.077420414 seconds)
    (295/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071010309 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06332319 seconds)
    (297/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.063847847 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.070754649 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.062940802 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.063109766 seconds)
    (301/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.062482838 seconds)
    (302/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.063637146 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107423498 seconds)
    (304/309) benchmarking ("sort", Float32, false)...
    done (took 0.132361836 seconds)
    (305/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069765008 seconds)
    (306/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.062465836 seconds)
    (307/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.077503681 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16307585 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.062606778 seconds)
  done (took 32.435956134 seconds)
done (took 34.011964388 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085947764 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089444652 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071928414 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.084024796 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08032152 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094459096 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072228851 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076976733 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079417371 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078128468 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077157902 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070434313 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073032279 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073313212 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070837102 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086473709 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078413653 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072063078 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072485172 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062588369 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072255579 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063737611 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062260353 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070402104 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074941986 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070081112 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072497384 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072800267 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063432762 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063979294 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068617242 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072124328 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.063324354 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.075564486 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071064508 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071753844 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075494655 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076084809 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062418344 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063781624 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074109524 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063811367 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071579724 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069611318 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068141959 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070502771 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072238338 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075415731 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086597195 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067703348 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074231609 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075810744 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075438205 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069330202 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06910569 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072659587 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070011692 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086328039 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072530654 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06766301 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073461682 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072930778 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070166783 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072025327 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072023166 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075034062 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075279892 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070457871 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074342873 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070898008 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062852304 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071786557 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06852632 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063058285 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074791302 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076817196 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062129367 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.06768268 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071366331 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071929804 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06272696 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067145265 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062226297 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.068240796 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067408918 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069802358 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068448505 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071008582 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062890572 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07206923 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070846538 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071395209 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062519017 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075673835 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063105412 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069887189 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.063479179 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06337087 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062331851 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068502225 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06277177 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067232603 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07143527 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061763195 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.068005745 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076587641 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063211518 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070856501 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062018622 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062929817 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074441372 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074367198 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064117345 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067384415 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062345722 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068781962 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062092208 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062727043 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063358178 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063520383 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067497493 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06345449 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067136234 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068764174 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075891866 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062832704 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067604397 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067140302 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062995529 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069943534 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063448396 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063485978 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062380351 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076706395 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067345317 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063595138 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.069142272 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067210526 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071582088 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06195936 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072772135 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068748751 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.205737796 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070744009 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062619806 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074726956 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068095667 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067840389 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062741735 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063556598 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.062700295 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063488037 seconds)
done (took 12.470008145 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064856706 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.093047598 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072201507 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080565403 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076067854 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.064681947 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068511286 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.081299368 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066480535 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.083352942 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086491692 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084405235 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.091126261 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062723 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064240393 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.0645837 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062584337 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.070938796 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.079293129 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085799505 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.093469678 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063498297 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073135689 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.079454297 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074795896 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.082866797 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064965825 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064367184 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.066400712 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.079547309 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087848987 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.063438461 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064759441 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.078447351 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.0778056 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.070955053 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.064929903 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.067912462 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064873948 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063747785 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065529187 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.078562362 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068164275 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.06964359 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.064585268 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064479431 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064425776 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.069129841 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.075305433 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067811969 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.071496468 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.07617232 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065537888 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064182084 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062434387 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068070662 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063643512 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06454353 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063901197 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063978876 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064061304 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.066603827 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064843245 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.064276281 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.067640731 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.0665014 seconds)
  done (took 6.323179037 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082165342 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092566134 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.080392155 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081143265 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064135432 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.064442328 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064607639 seconds)
  done (took 2.198973619 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.064680107 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077218943 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080771888 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081395221 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.072938679 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.082236304 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.064940288 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.094780946 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063763397 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.076569381 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.110365732 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081681551 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067350719 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075449641 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06402858 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.074121372 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.064464582 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071908471 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072693864 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080537547 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068404243 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092024242 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078705443 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065231155 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.084647118 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.068505428 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063502055 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.064293219 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065707811 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065407431 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065379122 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103264128 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068423644 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07826173 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06557254 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.06353769 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070348003 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067522189 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067224928 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071159773 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069857921 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065627945 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.063274385 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065537459 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067185483 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.068322541 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062550678 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065574372 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065118472 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.076025954 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.063121496 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068331196 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067993194 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069246525 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070523399 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068636613 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072403423 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065571661 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.076398331 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.072072273 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065502988 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.072762635 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104822217 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.069889104 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07224496 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.068350603 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068390868 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.06994059 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065134881 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.066019928 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065441794 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072652576 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063617448 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.066330257 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068087104 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065770622 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.067996185 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.081360477 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.081150219 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077057129 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065963665 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065657601 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06876124 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.081019593 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069327157 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06593466 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067440161 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06324488 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068940487 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065479397 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070998214 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065501744 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.072598609 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.066793237 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067777516 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072812403 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064202311 seconds)
  done (took 8.569801685 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067256609 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066621939 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066167903 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065514531 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065271827 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065875057 seconds)
  done (took 2.10028095 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089202508 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065685543 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078788779 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.064992283 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.100108101 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072016059 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.074851592 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073307381 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.07781093 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077635091 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072168069 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.074813219 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071696542 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.067220562 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.071831511 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.065774786 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.071871799 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068326537 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076848376 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066479968 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078226946 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066361197 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066789082 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076585983 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067934716 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.065303656 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065230089 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077004269 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076822637 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.073767264 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.06638935 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067841293 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072720263 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.075121824 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072243818 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072642986 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06474727 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070765563 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067313953 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.067933015 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074180011 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067037892 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067427516 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070613127 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07330466 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072857059 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070505647 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068500409 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.072011274 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070417222 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070415268 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065768903 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067708246 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070564175 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073005577 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072973519 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070447673 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.071624396 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.066239816 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072578418 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06501293 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067737251 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073124677 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067635485 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.069146632 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070822318 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072711594 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.06628333 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066517963 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065159622 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070471301 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065008219 seconds)
  done (took 6.787282397 seconds)
done (took 27.630532206 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.991143367 seconds)
  done (took 2.639595872 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.564202933 seconds)
  done (took 2.251993242 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.709672224 seconds)
  done (took 8.397715463 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.288591583 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.332247657 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.7250721 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130033831 seconds)
  done (took 3.196906673 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708598219 seconds)
  done (took 2.401615141 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.231399601 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223431007 seconds)
  done (took 2.147990397 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.346817625 seconds)
  done (took 2.034869445 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.141074657 seconds)
  done (took 2.825997004 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.225141802 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.15738431 seconds)
  done (took 2.075344544 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.464986546 seconds)
  done (took 2.151672286 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.413926694 seconds)
  done (took 6.104170098 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231941945 seconds)
  done (took 1.962542782 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23565839 seconds)
  done (took 1.929889396 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.737862295 seconds)
  done (took 3.426624464 seconds)
done (took 45.233596369 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08087036 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083586797 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083336578 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078762113 seconds)
  done (took 1.986375026 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072031841 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.067084114 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.070901704 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071183002 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069186247 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070530546 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.06999864 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.066707773 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.068759221 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067149756 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.065597512 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.066731505 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.0699678 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067222489 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.069480098 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.070665611 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067258193 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.066409726 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070195466 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067318146 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.069596102 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.066840067 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065405073 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066946486 seconds)
  done (took 3.326116413 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075419035 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070170278 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072611842 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068830753 seconds)
  done (took 1.978478341 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.073174316 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.082534144 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.084580826 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.090493682 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073089773 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.072571648 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080217846 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081246712 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.062812371 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084040567 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.066026069 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.063977821 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064518373 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084178987 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.08010225 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060427056 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.061786229 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.072714941 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.071908729 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.074462001 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065576662 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.062760737 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.072238038 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.072453783 seconds)
  done (took 3.449695663 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077234489 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.063126327 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076412634 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089475828 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09240835 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063268347 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077334662 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091320533 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125180702 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062905889 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069281646 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063058438 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104138609 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063213288 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078557104 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10542427 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107698864 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.066663139 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095897531 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063295611 seconds)
  done (took 3.333980463 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075255527 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066624827 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.068026181 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.063356655 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075152219 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07109802 seconds)
  done (took 2.117508699 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066259544 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065102624 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065170018 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064696026 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070223479 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.065555123 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063968739 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065692283 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06770498 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064842335 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064800745 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.063841527 seconds)
  done (took 2.480163428 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.160602846 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066671138 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068329047 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064146236 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070087267 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064177038 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079461321 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066391569 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.084579069 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.064354458 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06432417 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066718976 seconds)
  done (took 2.612191358 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098042635 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128065038 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094339475 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071334351 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182362468 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091766322 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.088949051 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.121044135 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090462591 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.06685103 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088515617 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133788353 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09592701 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.09538329 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079124802 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129860887 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107884521 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087120427 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111078427 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081168455 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.068619445 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130184714 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.068374229 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090407772 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099139703 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.095093964 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10953455 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132076103 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082409669 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.087729384 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078891297 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.072764075 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103873732 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.083827407 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.095517988 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091403654 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096307545 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082918411 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085133077 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123480146 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151619229 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098511844 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097613578 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132993174 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077737758 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.11267278 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080432932 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096112877 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101993243 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090504386 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073566876 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09199633 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.103193373 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099674425 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.079677497 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082628415 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115207074 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.096151128 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093712651 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079208293 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106008914 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.085353364 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108086316 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263384875 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140142946 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10152922 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137894141 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128422928 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096956519 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.091124529 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.093378928 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076670176 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109446362 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095913076 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133293914 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107006902 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098633131 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.095780998 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081058182 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105035013 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121861127 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091778666 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092157891 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145933698 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107761056 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089745391 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089439775 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.144848618 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071599069 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147894447 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090062713 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123714873 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097289029 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139761486 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095900668 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.086669587 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105459614 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100778508 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087527877 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100960607 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084276861 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11113526 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090792112 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098540994 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079593377 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092135884 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085131147 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.095725316 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073468439 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102589112 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113408686 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112190964 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07331097 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106051318 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085160196 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076123435 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090220372 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13634059 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081887319 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074070114 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148989661 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.090844404 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.116280875 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109643064 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.08292768 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270418554 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135492215 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090577891 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087324596 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07614238 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1554791 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074723965 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119328357 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081412367 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102265936 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105391299 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129472157 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137398254 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09384915 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077753227 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09294959 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.105111382 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088389121 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083934293 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076115406 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.107076282 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13137531 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.103563315 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081508391 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.0918212 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.067928459 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115311777 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07453068 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081159041 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094161644 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.085497193 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.087741641 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140010717 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.085502509 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106880452 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097778346 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066161865 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090445035 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151680727 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081591407 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.109593351 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122595966 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084442714 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.066799356 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.093944932 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072409239 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107156308 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.091521393 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106789451 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07699814 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105632303 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067022368 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072987671 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127128814 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099443503 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090488173 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.130749726 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104855431 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.087458292 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102044716 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.095747305 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094232253 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100764265 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.112807966 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255414976 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.073011456 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131200472 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089487771 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076866954 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085587384 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078653344 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.07746418 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099386274 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114641983 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088502807 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101475161 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102751628 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089285051 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.109694715 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088238266 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078644127 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131502711 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075825314 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07426815 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087415833 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.104793167 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087545754 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.132575684 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079369608 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134205895 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095020302 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081078135 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113357498 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.067281374 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069426933 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.07959184 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090329885 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114000716 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078184872 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077104345 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124039738 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132392188 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099299364 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100763421 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.066864636 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089056014 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135455222 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.116166297 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080302077 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108900587 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083638744 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128155207 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094854819 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119784589 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103750157 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10839698 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089728659 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.082376043 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.072736148 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088332502 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109400084 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087274509 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080525666 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.066157769 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073543683 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091823362 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088113542 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110018822 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086412808 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135175358 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073173416 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099456311 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104996542 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254163572 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090505493 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097538292 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.091848083 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091149408 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093739528 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096217622 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073098152 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133475865 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10608129 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078895709 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09065694 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093507255 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107677284 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107457375 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118025294 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095496027 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106215127 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124307532 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09874763 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081752627 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084067393 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.091350954 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.084599723 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080521222 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.101944569 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110495554 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099047452 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107783786 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.095334895 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.091420226 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105457767 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091702662 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087277077 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.127544978 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152061411 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.100964528 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103789109 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084060252 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105808095 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103561456 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112551409 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.110081234 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107129008 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.06970453 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.073953538 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.070077998 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105756879 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07809222 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115725553 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076219357 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106871022 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096399762 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08074947 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.065871362 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101081216 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089991114 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.082023827 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129217084 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.114975356 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.072961734 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087542632 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106416665 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084572727 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13621984 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.100988206 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101138891 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071976996 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090784483 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073413979 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.266620069 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102376161 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077411098 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.075655663 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.069114139 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106081139 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083440968 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117791593 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087533285 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101108609 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120342925 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130244692 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086018017 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099873794 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12462197 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114274343 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.082051662 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112224891 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134339471 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.118650872 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.079717719 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.08303642 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104547076 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105333116 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100734575 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075097522 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079127632 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107909759 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111694842 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.067573255 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083443941 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069169393 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.085815365 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11084466 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093843864 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080774777 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124853302 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07527152 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107030439 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093930872 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120335706 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12086469 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14363569 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09732036 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087322164 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075885137 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13190603 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.06986408 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124330845 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111948009 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086213535 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.069847219 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083560878 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.099149675 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.623440181 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106425842 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075321682 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133904245 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08654466 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114976427 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084672142 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.117019258 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088252162 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102502379 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089522886 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278530043 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082736975 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109860814 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.180835567 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109161544 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.106138394 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073210248 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.084658688 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.072740631 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.078955482 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.079898291 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087631351 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106862268 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08371902 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104487966 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.079271185 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.105769031 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089728887 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088144971 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.098485518 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08170473 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13675995 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087838103 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120012679 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107305119 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07893541 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073886661 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.086145615 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100924272 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079064129 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094150592 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078477993 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.075124457 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151655629 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100077852 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087212673 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102402644 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091705401 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.08541937 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095454469 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116205157 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110154408 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072255641 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.087088321 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104265262 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078214375 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074328164 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0952068 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.068472906 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086699868 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096825259 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096169164 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089074568 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.100761534 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07880413 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086583263 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110563325 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084545732 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076372155 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075845162 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074880673 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.078639639 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103892681 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107358399 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113165007 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107954298 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09338721 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092438692 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.078932177 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.23165272 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080493461 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.24633557 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.105367989 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075637589 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.135065474 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088012532 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087901329 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095334314 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101631121 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152408659 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07425983 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109075721 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090828813 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117869892 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087143674 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106188566 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09665765 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090620833 seconds)
  done (took 50.459161478 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.092085603 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.144114604 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.156685082 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.07999601 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.093227887 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.117848931 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2075496 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191028822 seconds)
  done (took 2.88810144 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066104602 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.079874824 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100501498 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081677361 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064498837 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.065264237 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.197444233 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079904477 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.064518662 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104841827 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.073843267 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066130538 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.364958686 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064854563 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065812155 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.072632571 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064633216 seconds)
  done (took 3.465913889 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.356966279 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.596399329 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.324926993 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072202953 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.947879861 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086299601 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.27197178 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.134090734 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.079511848 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.558747078 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367671384 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129880689 seconds)
  done (took 18.727119085 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073608743 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071965969 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.077103453 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.076154461 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071636501 seconds)
  done (took 2.16406096 seconds)
done (took 100.683922148 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080290145 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.167538429 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065713858 seconds)
  done (took 2.062324613 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.080804167 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.079158993 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.07951525 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.077396043 seconds)
  done (took 2.118108827 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071742308 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.074039765 seconds)
  done (took 1.93835521 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.24402023 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.161180021 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089658979 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08085066 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077629098 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07847376 seconds)
  done (took 2.042584713 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.06972234 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.070142965 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069804831 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070684872 seconds)
  done (took 2.073551806 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065446387 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.064293471 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.066989157 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069629749 seconds)
  done (took 2.060776303 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.081525894 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082565644 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076369872 seconds)
  done (took 2.039702894 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100374598 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09311225 seconds)
  done (took 1.991418737 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.077542476 seconds)
  done (took 1.876887014 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.087324479 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.092133393 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.150806973 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110014306 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.149090298 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.132405284 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075568681 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076949206 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071917135 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070757611 seconds)
  done (took 2.816713779 seconds)
done (took 23.382193817 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076196341 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.360234086 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357618176 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084037545 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66862562 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354797682 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.965894722 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088517648 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.096468941 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065910846 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082505682 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646972956 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.958860302 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321281254 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.944846482 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321710765 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646475697 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066180349 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065078117 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065892842 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.95137785 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065093722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065538763 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065752713 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64639433 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370551203 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066818774 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321345801 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065439754 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068113058 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354224915 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067623221 seconds)
  done (took 16.120911834 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.06802111 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118676274 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07033406 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082218659 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068654349 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067316494 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.06912611 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06670986 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.106977212 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0661724 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08242001 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065318874 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070414615 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068234925 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085942426 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066685316 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067849132 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067348443 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066661301 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067546731 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084376126 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066011427 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067373596 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069455659 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067600619 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079318171 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067688997 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066351082 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066628361 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069265702 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069855341 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068065647 seconds)
  done (took 4.148875835 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120385863 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124264787 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071559175 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105794531 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117443417 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067868924 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149060225 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088589824 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1118229 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066713989 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082887938 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065968612 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101481945 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068387928 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086729362 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06687649 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068185724 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067132415 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066923445 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067392471 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085560941 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066528497 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067094458 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067421111 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067625102 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08260642 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06763313 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066606532 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066424753 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069135815 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070880494 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067801042 seconds)
  done (took 4.428246095 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.067762868 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.069881017 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.077485851 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.078656583 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.064273841 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.066251572 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068179643 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.064804303 seconds)
  done (took 2.375196359 seconds)
done (took 28.880580669 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07600608 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065845908 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.068888921 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085231016 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071081139 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.068544196 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.063272203 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07171796 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.068695913 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.068773616 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.070149287 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064494748 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.06761982 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063224662 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.069772057 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064547507 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.070995305 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068379859 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069569651 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.0703138 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066741785 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069823786 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072481167 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069574802 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069418733 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.069717838 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073725767 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069497869 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065413634 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067138089 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.066288619 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.074685805 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071557369 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.071763566 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064533804 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064434533 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068345707 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066548158 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071399675 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073447325 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.065850664 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073246949 seconds)
  done (took 4.694141848 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.082683313 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088635533 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.079653563 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080699821 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098576219 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08092212 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084248946 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076774669 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.07545323 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.082980166 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.071100655 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079210738 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076878998 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.069621126 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074870451 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07219538 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.077368023 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.071529878 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076107675 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.076141548 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084552065 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.069551542 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077194244 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077653065 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.071840984 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077900277 seconds)
  done (took 3.863026452 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071235837 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084585612 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089563914 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14632571 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110178701 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082074255 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081749859 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096531566 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099299087 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068206437 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071598468 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092581627 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094762807 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074202049 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107611447 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084285821 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.076338433 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067240957 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072721854 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09839169 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086924441 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083772976 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096817621 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084801575 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.064989683 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.067658747 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071993361 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079697038 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073009037 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077761128 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070282319 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069183462 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.065914551 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076368963 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069609306 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064119391 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.085903251 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077496721 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078683562 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.104098332 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074357051 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066698126 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093806774 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128674437 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064808546 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068350531 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.068895276 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077746467 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066483517 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093310273 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080316 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064998291 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.065770631 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066561733 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066443732 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081084009 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066736903 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066969367 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077022496 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071033562 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084585956 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069561426 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085320713 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065223658 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075433875 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066294453 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066983623 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063724008 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098378237 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072133778 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115079756 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066230722 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063286324 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076812191 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076079014 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071996504 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.065252364 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083289488 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076170368 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.068947587 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077328178 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.068157196 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069033777 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099029868 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065439569 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06423144 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06323075 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.06792537 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068462575 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06595757 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078852311 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.065078112 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068789998 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.079704596 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065446108 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.066131619 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.067733803 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.066771827 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.064293872 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077606368 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069155363 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.066739708 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076781523 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066121763 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068530584 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079095776 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072412011 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064478244 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.066400305 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.067611163 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066463753 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069458696 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.068796702 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066811637 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.071108461 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072569321 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071083569 seconds)
  done (took 10.763369097 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.15982333 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.14978471 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067591126 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14301739 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073427914 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.070568591 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144494376 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.085537814 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.065855426 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067013464 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065152382 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.093841295 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.089762337 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.100571735 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.070514158 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066311902 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088546793 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.097895792 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146863518 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14180743 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08842176 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073017018 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068188895 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067803716 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.066994401 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074050474 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.081529503 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073734977 seconds)
  done (took 4.440538262 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.074330687 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.091192803 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070013918 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.076997098 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08495849 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066190352 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067546783 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067937998 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079402984 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074121693 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.065719526 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070446405 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069220103 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.067956744 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066566858 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071989149 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.072997038 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06505534 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069029992 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070726947 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076013297 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091064609 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070158111 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065500084 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.0682242 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065531246 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073997775 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.076866804 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065903315 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.080823599 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062552526 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.069837189 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080358685 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06696935 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065418965 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066583161 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065590234 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065605833 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066329873 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064032978 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063798509 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070747836 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.064377446 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073572244 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079467139 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073051746 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067204195 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.068209885 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.067687921 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062706341 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068586045 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.06862342 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.068147927 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073363396 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069786043 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067652968 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06694767 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.090973251 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.072120765 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.065200242 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064928049 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066609293 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.067201476 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07486488 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08183813 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.066983465 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06431835 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066101022 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071113523 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079603255 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.065448858 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070619187 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062756621 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066189228 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068394015 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068271371 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067107507 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063966977 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06562399 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065793995 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.066015009 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065578561 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.0652405 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.068296779 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063336764 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064096686 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066120755 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067164456 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073706218 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06518692 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069068757 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067041372 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.064690389 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.068361471 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.071145442 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068478232 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080000447 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075964084 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066158462 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.0640276 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.07897205 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.068271012 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.064924227 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071867371 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.069879517 seconds)
  done (took 9.191406358 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088910036 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067687057 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084607972 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091133293 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.076138619 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071167188 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076946436 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067248122 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082202048 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065232733 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074682846 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064362452 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076601428 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074584599 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067086862 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075805615 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068869589 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085603531 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080621249 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064535082 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073949638 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.077427978 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.078576844 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082522902 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082077393 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082991284 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.07787974 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068425314 seconds)
  done (took 3.993690325 seconds)
done (took 38.746959186 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.888843149 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.050828291 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.873619394 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.048921798 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.944035064 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.899008812 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.029213085 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.873497297 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.062162586 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.926222698 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.191291195 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.268180029 seconds)
done (took 66.92510054 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.953665388 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.03561344 seconds)
    (2/2) benchmarking "String"...
    done (took 2.101721575 seconds)
  done (took 5.946427084 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.090061495 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.485267358 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.142707362 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.870362938 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.878673634 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.327002309 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.669320248 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.319665817 seconds)
  done (took 31.501752662 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.004070868 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.099174707 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.557369618 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.586456036 seconds)
  done (took 16.097662162 seconds)
done (took 65.490267825 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.917384344 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.872439188 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.88387349 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.904133433 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.871198387 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.872599855 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.870536727 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.872461971 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.925956647 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.941138267 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.873163345 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.879576631 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.873681532 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.905993142 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.404879566 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.919776555 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.883064116 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.881387637 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.897350055 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.901615439 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.87639342 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.885429132 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.328884327 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.028940322 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.479704835 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.398858701 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.049590337 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.273121714 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.887394331 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 7.059691269 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.952599689 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.33708648 seconds)
  done (took 207.717633087 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.873071407 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.723539735 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.780960872 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.923685774 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.011464131 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.051001665 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.968578481 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.244689673 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.880899947 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.90007419 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.014883829 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.879049105 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.048408385 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.830265236 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.910995601 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.964573402 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.037732411 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.058118589 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.917863353 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.021239981 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.901536456 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.074341978 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 4.027803308 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.997761747 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.912084471 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.907196008 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.893072585 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.904712766 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.063562813 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.999899885 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.881087126 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.891183724 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.059927799 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.746962176 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.878345556 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.900401431 seconds)
  done (took 172.891047413 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.068052242 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.882821595 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.877392665 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.931354779 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.996317547 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.879715453 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.550767553 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.885780531 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.53566723 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.880465737 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.87873631 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.875287641 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.875907565 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.876928571 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.888550358 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.973400546 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.8804345 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.890125438 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.877682396 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.900737685 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.879161343 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.87537766 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.875952575 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.876021403 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.877277302 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.876315125 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.876809107 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.437931217 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.125850376 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.879611245 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.877672548 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.410844187 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.893090996 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.994939234 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.885995697 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.968701054 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.93264753 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.003630809 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.882022943 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.094098725 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.973176487 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.878837258 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.87893658 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.943261113 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.890561014 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.883495007 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.880785775 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.884473535 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.943464694 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.134705616 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.877545491 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.998822352 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.365333437 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.878541671 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.877174284 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.879785983 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.48224739 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.882193261 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.878840298 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.884477898 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.885607649 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.88174501 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.87860578 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.264413107 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.950663394 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.0515429 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.242472733 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.879612635 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.209033756 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.06682138 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.879590464 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.878117722 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.878537406 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.880017361 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.878986411 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.880366671 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.997562398 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.888488303 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.015231451 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.967749648 seconds)
    (80/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.006047672 seconds)
    (81/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.878024764 seconds)
    (82/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.889629252 seconds)
    (83/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.714784854 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.882008882 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.946252327 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.916654659 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.720232151 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.882230322 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.25027642 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.664267107 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.879313849 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.879360779 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.890333005 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.879063429 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.878653115 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.880172986 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.960407799 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.87958945 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.879277087 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.004512914 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.613129616 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.221899981 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.884447158 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.879183228 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.887965122 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.961017094 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.999244232 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.885223094 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.947135607 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.885577326 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.881312376 seconds)
    (112/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.987176204 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.879904651 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.879796366 seconds)
  done (took 412.999613306 seconds)
done (took 797.542743934 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.463804363 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.435433889 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.528546242 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.452888158 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.422754457 seconds)
  done (took 14.118044185 seconds)
done (took 15.933836563 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.893146695 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.883279317 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.935494005 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.962083831 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.894940947 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.896626899 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.957747278 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.898294784 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.928924008 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.931735431 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.961268686 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.960666976 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.902482991 seconds)
  done (took 26.821316179 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.889534193 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.028826328 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.105365552 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.920331868 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.888798367 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.111257992 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.94393793 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.025143869 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.027233967 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.118052396 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.127179421 seconds)
  done (took 24.002118573 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.886293426 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.029349394 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.117640939 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.926215565 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.887522024 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.123193285 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.951956964 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.036872904 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.037935695 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.115670012 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.124585835 seconds)
  done (took 24.059024754 seconds)
done (took 76.696895233 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.883812007 seconds)
  done (took 3.698061748 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.900214239 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.045734388 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.882582027 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.881457819 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.883303612 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.883354575 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.881421685 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.882369665 seconds)
  done (took 17.055609964 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.880897152 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.881842133 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.881527898 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.880991953 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.880971803 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.881623788 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.881729994 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.882425809 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.881189259 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.881640118 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.88361167 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.881989043 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.881719894 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.882113885 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.881637857 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.884688317 seconds)
  done (took 31.927813781 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.883426019 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.883234546 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.882279337 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.880606395 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.882203981 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.881298118 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.882201603 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.881512738 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.881616929 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.88246293 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.883308464 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.881602606 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.88242454 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.883275685 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.883653716 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.883259888 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.88329816 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.884602957 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.888128761 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.883802392 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.884217292 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.883958178 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.884019633 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.882389355 seconds)
  done (took 47.009042229 seconds)
done (took 101.51628032 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.587911695 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.628263256 seconds)
  done (took 10.033598558 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.884406948 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.883960959 seconds)
  done (took 5.591638065 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.884010277 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.886408358 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.884733733 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.883347018 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.884179317 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.883902392 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.882527026 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.884047581 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.884116326 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.883310352 seconds)
  done (took 20.658272709 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.882535151 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.885257431 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.884199895 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.88376106 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.884839433 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.883968564 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.885324268 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.884195433 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.883977779 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.883526085 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.884285391 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.883685734 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.884435871 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.88545479 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.885249683 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.885230465 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.884538054 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.886393073 seconds)
  done (took 35.738531327 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.883832071 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.883040299 seconds)
  done (took 5.582638682 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.885229757 seconds)
    (2/7) benchmarking "second"...
    done (took 1.883073766 seconds)
    (3/7) benchmarking "month"...
    done (took 1.88329419 seconds)
    (4/7) benchmarking "year"...
    done (took 1.884315735 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.884102933 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.885930291 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.88427903 seconds)
  done (took 15.006569508 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.885656562 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.025609373 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.077452385 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.68099984 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.884995435 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.889790628 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.185880428 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.890325452 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.890958117 seconds)
  done (took 21.22816577 seconds)
done (took 115.656840601 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.653784709 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.885715398 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.110638452 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.945988037 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.910234672 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.223935762 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.910801818 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.537677093 seconds)
done (took 42.998018379 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.946868607 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.882123038 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.913977642 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.915571358 seconds)
  done (took 22.530380268 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.885076015 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.3337159 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.910635564 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.773039839 seconds)
  done (took 22.950459493 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.264027743 seconds)
    (2/2) benchmarking "read"...
    done (took 2.235203248 seconds)
  done (took 6.320007946 seconds)
done (took 60.568126863 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.885082715 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.883955805 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.88350321 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.884713032 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.883633567 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.884191503 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.88506018 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.884375001 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.88353325 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.884104319 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.885857522 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.884585188 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.885830433 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.884377439 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.885125209 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.886403905 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.883513992 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.884614771 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.885499382 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.885394653 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.88510426 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.885560295 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.885599365 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.885956771 seconds)
  done (took 47.053595882 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.885618717 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.886662874 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.886799355 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.886447074 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.886532363 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.88645064 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.885770627 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.886301228 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.886059841 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.885573972 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.885336102 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.885580388 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.885525206 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.885948232 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.886195538 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.886270704 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.885883711 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.886125383 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.884994226 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.886618212 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.886651312 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.886405625 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.886690435 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.886565357 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.886653854 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.88684245 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.887926023 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.887966612 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.887556259 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.887309525 seconds)
  done (took 58.410155717 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.887477893 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.887154209 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.887937072 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.886486428 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.887205075 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.887224801 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.888212311 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.888630845 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.887870376 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.888667994 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.887484616 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.887816451 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.888905414 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.887730403 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.888287141 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.88791019 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.887772841 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.888070867 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.888792692 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.887645348 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.888091823 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.88806975 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.888712566 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.889010566 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.887621732 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.889668919 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.888841073 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.888895246 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.889525387 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.888752146 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.890402075 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.888333329 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.889582642 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.889727968 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.889537079 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.889615144 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.890531165 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.889183223 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.889079951 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.891368116 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.889253489 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.890612905 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.890022686 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.889508233 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.890123699 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.890755994 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.890251048 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.89045789 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.890352948 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.89004056 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.8908482 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.890386934 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.890450709 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.890934014 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.890624583 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.890304191 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.890852087 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.889949075 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.890711678 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.89087982 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.892052952 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.889960683 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.89079388 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.890865789 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.890915471 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.890970876 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.890690342 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.891007041 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.890462124 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.889700064 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.891735901 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.89146168 seconds)
  done (took 137.860707351 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.89124622 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.891701621 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.891204863 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.891028126 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.891833035 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.891234921 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.891450602 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.891571133 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.892105214 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.891656402 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.89234439 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.892749029 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.894003247 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.892339472 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.892248581 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.891364603 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.892679477 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.892932907 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.891088951 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.892828311 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.89170284 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.892231642 seconds)
  done (took 43.447648319 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.891547839 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.892920171 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.891945844 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.892271316 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.891990401 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.893295486 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.892969381 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.893663483 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.893238848 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.892884268 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.892114396 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.893471812 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.894035691 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.893164645 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.893806355 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.893570021 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.893325931 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.893069084 seconds)
  done (took 35.898500107 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.894591822 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.893314783 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.893364271 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.894985011 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.893548832 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.893866963 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.892960728 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.89453522 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.893715533 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.894191991 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.895258194 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.893507214 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.894086441 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.894838152 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.894311998 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.894805504 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.89401819 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.894422785 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.894630632 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.895079882 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.894754328 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.893599094 seconds)
  done (took 43.497930048 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.894862873 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.894687166 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.894435551 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.894877808 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.895440691 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.895656052 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.894677151 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.895578884 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.895660075 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.896291644 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.89502226 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.895420138 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.894579965 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.896185502 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.895915273 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.8957503 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.894779199 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.896478148 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.894868276 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.895030444 seconds)
  done (took 39.733443788 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.896948653 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.898610211 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.897159175 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.897252519 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.898541724 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.898027784 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.896850164 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.898222426 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.900026935 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.898270732 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.898314846 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.897928358 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.899641436 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.898240313 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.89802089 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.897957542 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.89830028 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.899553532 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.898233208 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.897909884 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.898637753 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.897779203 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.898221992 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.900118939 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.899478 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.898483678 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.899539827 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.898844993 seconds)
  done (took 54.984702806 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.897862008 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.897117324 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.896877635 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.897094153 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.897735811 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.897847336 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.896884964 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.89881924 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.897501933 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.89857851 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.898014063 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.897922697 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.89770102 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.897606959 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.897671922 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.897526109 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.897674749 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.89735528 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.897994499 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.89819381 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.898485047 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.897332544 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.898368305 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.898892144 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.899054871 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.898713136 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.898801552 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.898478763 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.89879062 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.898386792 seconds)
  done (took 58.769617984 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.919163641 seconds)
    (2/2) benchmarking "in"...
    done (took 1.917986716 seconds)
  done (took 5.666361299 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.89751421 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.898987935 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.900349061 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.898221761 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.899284748 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.898748528 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.898571712 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.900390768 seconds)
  done (took 17.021525001 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.899649198 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.90208912 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.900941337 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.899687616 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.901303035 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.908894042 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.901261838 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.900473502 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.901909255 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.902313619 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.904801234 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.904402083 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.908291966 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.903839839 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.90038634 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.900536003 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.901526564 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.903574318 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.901733065 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.901168788 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.903857844 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.902026704 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.901901097 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.902891621 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.901664299 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.904813638 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.911326887 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.90225304 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.903193223 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.901089806 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.910200233 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.902174284 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.901813369 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.903825441 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.903308799 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.901576695 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.909364202 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.903865999 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.903097318 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.901390897 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.904497433 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.90386424 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.905035985 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.91069557 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.903489369 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.903569575 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.902431432 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.903594444 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.903219406 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.906150225 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.909367741 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.903521081 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.902367978 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.902368211 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.90545585 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.903561126 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.904898386 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.905159464 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.909247327 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.911185669 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.907022078 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.922896272 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.910770478 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.903959578 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.904112911 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.912247011 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.927880401 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.905416581 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.905610372 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.904850898 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.912773563 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.903806569 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.905059319 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.904696509 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.917328319 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.91335239 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.905493006 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.905154802 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.904419755 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.905885475 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.906186466 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.905800341 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.906778531 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.906327276 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.914145218 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.926459403 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.906764939 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.906986249 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.906163349 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.906321241 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.910911706 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.907980593 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.905859893 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.906100099 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.906464472 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.907871092 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.90719588 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.906446567 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.906031908 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.914489408 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.906370417 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.904613916 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.908487373 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.914906397 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.905086187 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.906972721 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.907695707 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.906847803 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.915547078 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.907278381 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.906307051 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.905374925 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.906313332 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.910671483 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.906654994 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.909975647 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.91501836 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.91484882 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.90815655 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.91126893 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.910720596 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.910481879 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.915823515 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.928026375 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.906421186 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.910901584 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.911460786 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.91825206 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.910952269 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.907688336 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.910158602 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.906134816 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.907713702 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.908287792 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.907020897 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.907902039 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.907264123 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.910629754 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.90727843 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.907963737 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.909819348 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.908300693 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.909774124 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.909406238 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.91196003 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.909948569 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.910288843 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.915476557 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.910628606 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.909641272 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.908377003 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.910625568 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.910233233 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.90945438 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.908252153 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.908202721 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.909522307 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.909688833 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.911484891 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.90991468 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.907652786 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.910085019 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.912196785 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.909524055 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.910623874 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.910070732 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.910537913 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.911418534 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.911058945 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.909917284 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.912021518 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.910890089 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.913490258 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.908862705 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.910036134 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.910793538 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.909410532 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.910227978 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.9142978 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.920250284 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.914686287 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.918898669 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.909982412 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.918760281 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.910823229 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.912210663 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.911424082 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.912078405 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.911877318 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.90965421 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.909864201 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.913754509 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.931905376 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.919246409 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.912476132 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.912032961 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.915429943 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.915120132 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.916184199 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.910817882 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.9122385 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.913446877 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.912794892 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.912955589 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.910559517 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.914832538 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.910935038 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.911055446 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.915045833 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.911985402 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.911457829 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.912698271 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.911883921 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.91466766 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.910957879 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.911500003 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.911913107 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.910790815 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.920534151 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.91530771 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.911410447 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.913511271 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.913771528 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.914487009 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.912486282 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.915206288 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.916697717 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.913215082 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.91460942 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.921903906 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.913156283 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.913327669 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.913604412 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.913434272 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.914205547 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.912522967 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.916202344 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.919354092 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.91587243 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.912881951 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.918849097 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.912735384 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.915398755 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.914527224 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.915020653 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.915860096 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.914999769 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.914835084 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.913246061 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.922787581 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.912732655 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.914930648 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.912277836 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.916209117 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.914668977 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.916380009 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.915232126 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.917099072 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.922256652 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.920143192 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.916304195 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.917524197 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.916769278 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.914664154 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.917232528 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.915689745 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.927544137 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.923305413 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.91359112 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.914161158 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.916305373 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.918322714 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.914324485 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.915573422 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.923112944 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.91539972 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.91776984 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.918374767 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.916809242 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.916385914 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.92309839 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.916254448 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.918415947 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.91702096 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.916818645 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.915914082 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.915742928 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.918384427 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.916791757 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.917725245 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.91964089 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.916862502 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.916292148 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.915525187 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.927304023 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.91546356 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.918045163 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.92405278 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.916588613 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.91647663 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.917479144 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.916328324 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.91815361 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.918423594 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.91687436 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.917667408 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.917570237 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.920530613 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.92626106 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.920665215 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.924839681 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.918965817 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.927832726 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.919262935 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.916414717 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.917868863 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.920716404 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.925497424 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.916430356 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.916836347 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.926436546 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.920673104 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.918644355 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.923153164 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.917803186 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.918998164 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.918328864 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.918860343 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.923265745 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.920804849 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.917200272 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.918059046 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.918433493 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.918441971 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.922140153 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.921141501 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.920690399 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.920140941 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.919891845 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.920027207 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.919799011 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.919126302 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.92003202 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.919427964 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.918008947 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.929081205 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.920593249 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.919337874 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.924040118 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.918348576 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.929619465 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.920754585 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.920171967 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.919767429 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.918475204 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.922556903 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.918381679 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.920623673 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.919173555 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.918474641 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.920790703 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.931462481 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.928053501 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.923947923 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.921709344 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.921175123 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.919715961 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.928914819 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.941319716 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.921541751 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.925294935 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.923555536 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.928320148 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.922149968 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.925835511 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.92377555 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.928516564 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.921872867 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.920025437 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.924384615 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.933942189 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.921981321 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.92009666 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.920554263 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.923363926 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.923712858 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.920183287 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.922601471 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.924709329 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.922554042 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.935170682 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.921664529 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.922723514 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.922696975 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.919138609 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.923041625 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.920370725 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.923322463 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.92307924 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.924246613 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.923896084 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.923250691 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.924811011 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.921533395 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.925102998 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.930682481 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.922934388 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.922021598 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.92322611 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.923294944 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.923365278 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.924705572 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.92280372 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.925279806 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.92113633 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.923056365 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.926052413 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.930548139 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.92332153 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.923335315 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.921590784 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.92595536 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.924022818 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.924248633 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.924410606 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.932652302 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.927964647 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.933779946 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.93175655 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.924227084 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.925134315 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.929724392 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.932100448 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.92449207 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.92317089 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.924977644 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.92656709 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.925581134 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.92529056 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.925791022 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.927317516 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.928959652 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.9251039 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.924801656 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.925889094 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.92406351 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.92670154 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.926966846 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.929366051 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.923460097 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.924818013 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.92559909 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.925881233 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.926843343 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.926338236 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.925956735 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.924106184 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.927006768 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.927006982 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.928380567 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.923990338 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.925198244 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.9260189 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.924316722 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.924847125 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.925184614 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.924501158 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.92538977 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.927863315 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.932492942 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.924810767 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.926310579 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.926772772 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.930369714 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.927271501 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.925729931 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.927061273 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.924361572 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.934334135 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.925476683 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.928991659 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.925645008 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.926281975 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.931805564 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.928042402 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.930118238 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.927112255 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.928148501 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.926458125 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.930602579 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.935707118 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.932464077 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.929744415 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.932853822 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.931539917 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.929552637 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.925765321 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.927376266 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.92663613 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.928727467 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.930889523 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.928517036 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.930229095 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.928657425 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.930166306 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.928982033 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.929652247 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.926660935 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.926191001 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.930937879 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.937138076 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.937801819 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.927186839 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.928680413 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.929162524 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.931977915 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.939163112 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.928453267 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.929321509 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.928843491 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.929296863 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.928914228 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.933979501 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.936037122 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.931842857 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.929623376 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.932455016 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.945538344 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.930721426 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.937453604 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.958773012 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.929869571 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.930138747 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.929157838 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.929103201 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.929762219 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.931860875 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.930747685 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.936601032 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.931171536 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.928884289 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.938090316 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.930187454 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.928621645 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.930717564 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.930727676 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.935282844 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.929746604 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.937173752 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.931632787 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.930117069 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.931578423 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.933212318 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.929326183 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.930453571 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.930269286 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.933180987 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.929918599 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.931855815 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.939540273 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.931870065 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.930849538 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.943193959 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.940930071 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.931324076 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.929957553 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.931800651 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.935975565 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.932810631 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.929599372 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.933829214 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.937944391 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.934758386 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.936761411 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.931499094 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.931296862 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.932081214 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.931973059 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.932734192 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.943719446 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.941982481 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.931002248 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.931263882 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.937942992 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.929912786 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.939565793 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.938595546 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.934081413 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.933383509 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.933049427 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.931395381 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.930714288 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.93199184 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.935757039 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.940161666 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.933424695 seconds)
  done (took 1145.522566247 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.933426696 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.932299031 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.93229261 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.932083397 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.932416237 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.932860633 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.932998978 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.932044066 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.93236711 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.932062651 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.933884705 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.932325412 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.931162887 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.933194152 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.932241764 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.932930202 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.93355932 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.932124108 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.932202351 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.932876819 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.933210741 seconds)
  done (took 42.447671645 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.932484342 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.932189616 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.934119389 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.93252627 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.934023937 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.933810954 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.932912818 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.933498636 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.93357991 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.935378516 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.933241752 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.933630147 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.933322793 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.933996224 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.933749815 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.934170257 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.933752078 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.933641285 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.934788555 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.934981449 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.934366729 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.934317572 seconds)
  done (took 44.40592386 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.935251015 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.936208612 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.938181417 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.934711549 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.934343563 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.936924248 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.934665619 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.937442776 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.935496795 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.937312949 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.943287774 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.944101278 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.935138767 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.939329483 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.936160802 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.936804014 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.082366676 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.937628035 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.936500202 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.9356086 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.936566815 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.942199476 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.935740971 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.935318212 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.93606812 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.936927413 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.935047412 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.935499995 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.936507552 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.937130142 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.941573824 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.93619292 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.936497973 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.939808657 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.936381797 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.937863797 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.94154369 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.937788326 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.936836132 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.936994648 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.945583227 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.957725759 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.935992584 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.938236773 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.945486417 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.936890736 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.936667771 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.940088942 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.94446185 seconds)
  done (took 96.983984072 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.93637974 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.936265344 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.936292039 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.937113216 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.938595392 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.937535536 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.936485951 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.937601677 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.937137118 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.937791771 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.938523982 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.93845231 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.938882843 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.940021552 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.938228764 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.937197217 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.937225153 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.938795341 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.938282756 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.938530381 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.937503911 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.938498576 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.938578279 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.939343033 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.938439371 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.938443711 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.938906695 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.936832438 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.937418957 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.939159396 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.938284352 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.938959146 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.93893506 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.938033084 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.937926459 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.938294243 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.938183294 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.938772869 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.938408534 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.938962916 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.939821647 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.939158788 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.938078726 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.939086467 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.939076302 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.940774449 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.940015728 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.940608476 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.939186553 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.939887954 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.941361722 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.940191465 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.940190229 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.939397468 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.940980969 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.941837455 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.941356787 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.940200508 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.940295092 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.939227318 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.940290119 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.940249465 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.9394075 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.940543341 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.939736201 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.94105058 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.939857299 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.941048175 seconds)
  done (took 133.715024669 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.942594144 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.943418879 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.943551044 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.942781865 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.942980493 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.942909887 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.942717566 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.943434385 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.94334911 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.943257667 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.943617462 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.940778624 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.942604912 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.941028393 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.942521307 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.942432339 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.945588361 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.94367516 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.943629143 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.942857181 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.943347612 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.944955944 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.943975876 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.943528397 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.943963631 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.942974716 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.944477451 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.944423267 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.94416915 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.944194608 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.943441386 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.944453413 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.94537884 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.943406947 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.944640621 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.943845189 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.945296059 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.943921157 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.944576606 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.946100347 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.944391142 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.944032368 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.944191845 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.945818002 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.944619745 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.944808262 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.945126726 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.944833794 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.944866743 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.945313652 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.944228967 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.945342011 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.945198373 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.945361138 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.945337474 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.94393785 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.945653868 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.945706872 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.944771912 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.946579596 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.945506525 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.943107953 seconds)
  done (took 122.405959173 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.944264772 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.943537677 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.943111233 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.943462773 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.943693744 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.944335573 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.944174194 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.944110438 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.944445452 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.94425938 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.944081192 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.943595141 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.945353715 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.944639522 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.944320946 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.94560683 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.944371318 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.944761375 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.944208029 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.944519485 seconds)
  done (took 40.759886275 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.945100379 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.944407076 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.944860305 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.945115568 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.945272359 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.94611392 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.945741194 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.945624998 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.945625296 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.946243532 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.946813315 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.946073715 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.946868547 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.947371007 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.94565736 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.946177304 seconds)
  done (took 33.00887447 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.945402255 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.945827288 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.947952693 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.948136406 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.946355248 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.946575891 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.946398337 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.947033889 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.94586425 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.947910208 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.946471742 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.94575057 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.946673814 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.94785142 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.94684605 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.94683859 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.946283417 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.947265711 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.946850514 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.948247122 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.947233355 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.946889703 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.947129996 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.947272999 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.9482707 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.948803709 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.946977347 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.947800291 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.948914409 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.948007656 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.948186417 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.947507155 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.946737862 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.946548709 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.949433145 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.947440204 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.946838535 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.948085282 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.947158638 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.947316112 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.948089227 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.947877035 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.947635125 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.948731402 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.947929955 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.948228418 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.948969839 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.948184753 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.948880949 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.948980411 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.947845724 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.950173222 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.948382524 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.948679328 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.947838473 seconds)
  done (took 108.993418557 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.949163835 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.948420773 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.949047337 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.947861762 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.947879781 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.948243999 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.948033952 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.948295089 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.94805741 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.948947503 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.949683017 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.947682274 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.947972642 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.949657077 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.94958291 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.948974448 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.948449423 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.94858391 seconds)
  done (took 36.95312267 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.950091309 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.950075725 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.948293581 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.949466018 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.949444631 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.948917718 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.950645023 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.950323014 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.949188267 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.949210674 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.949283427 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.949826077 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.950351112 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.949771961 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.949900949 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.950358151 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.950752348 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.950645652 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.949975376 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.950197949 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.950736672 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.949855548 seconds)
  done (took 44.777383635 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.951868492 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.952450844 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.965257978 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.974649321 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.971910562 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.987837378 seconds)
  done (took 13.685129001 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.95216705 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.950506776 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.95064325 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.951536816 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.950982054 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.950934976 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.951005359 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.952164493 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.950955689 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.951394728 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.951315875 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.95264063 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.951869279 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.951946519 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.952093724 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.951604431 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.952100314 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.952138615 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.95032419 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.951315011 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.951295197 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.951263535 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.951936076 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.951986272 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.951861081 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.951019556 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.951940003 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.953324459 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.951571136 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.952725776 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.952827982 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.95248287 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.953061503 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.952768413 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.953320424 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.95282686 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.952869076 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.953106648 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.951509836 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.95317831 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.952098849 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.952286275 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.953048897 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.954040666 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.953761112 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.953545278 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.954556077 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.953650267 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.953920126 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.953499225 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.954148444 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.953390375 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.953982585 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.953346534 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.953543676 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.954651598 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.954792606 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.953911282 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.954887231 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.954620913 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.954094096 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.954665137 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.954330803 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.955080409 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.953861989 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.954520922 seconds)
  done (took 130.761043573 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.955376746 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.955431583 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.954823766 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.955538534 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.954981054 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.954895018 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.955326112 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.954584074 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.954403396 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.954270615 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.955569887 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.954714827 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.955762979 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.954990146 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.955189337 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.95480509 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.956389582 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.955871295 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.954900394 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.955337982 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.954821482 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.955576609 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.955922514 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.956022662 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.955959066 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.956465931 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.955850996 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.957170452 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.955999236 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.957038523 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.956676415 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.955653409 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.956614059 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.956033669 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.957063265 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.956416343 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.956359818 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.958222034 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.956619565 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.957836755 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.956990893 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.958228484 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.958705256 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.956400396 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.957037109 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.955884885 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.95763655 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.95719239 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.957316389 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.956110427 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.957939743 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.957754995 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.95788519 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.957609125 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.958017623 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.957750114 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.957405805 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.958804366 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.958236889 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.956860324 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.95758174 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.960104594 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.957745466 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.957922049 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.959085477 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.956797482 seconds)
  done (took 131.016256637 seconds)
done (took 2669.606578127 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.008401893 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.975882727 seconds)
  done (took 15.871664951 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.123152697 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.075737074 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.962470696 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.999343115 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.963498011 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.983278358 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.981892137 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.962175854 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.962621136 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.961930689 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.96218002 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.148618875 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.014695455 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.963131393 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.962654704 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.054848616 seconds)
  done (took 53.979512503 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.967017751 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.967076392 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.978064287 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.968398572 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.966681641 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.979819156 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.997317847 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.972045331 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.003778482 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.980090329 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.038731279 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.979719831 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.967481631 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.02027219 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.982739462 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.982207194 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.067752002 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.049199212 seconds)
  done (took 37.757598227 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.046278262 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.979106386 seconds)
  done (took 10.921955987 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.966486591 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.991620038 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.985264576 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.983488902 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.962970013 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.966748851 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.994131777 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.980781649 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.987411092 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.98522925 seconds)
  done (took 71.721964202 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.97056268 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.967727719 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.967988858 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.964096921 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.962491674 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.969215404 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.965325893 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.966006983 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.656799863 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 2.006026738 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.976777745 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.973464786 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.966497701 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.967832739 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.962402799 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.991284062 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.085839519 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.961557781 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.961636183 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.97164906 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.965939129 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.024877181 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.981216278 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.966208391 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.997923492 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.659607203 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.97634471 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.971517701 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.076532578 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.961693336 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.966170434 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.152420045 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.970627817 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.429405457 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.239361266 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.971570644 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.978391494 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.974772438 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.963616717 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.086980557 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.967642391 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.972907728 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.922808432 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.212469918 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.058192425 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.012796858 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.320564625 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.972288106 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.967962969 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.001142549 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.972171453 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.967943621 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.983408192 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.486824969 seconds)
  done (took 138.2427607 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.964067565 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.310078803 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.131055541 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.965535562 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.249390619 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.172543818 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.965586946 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.009878744 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.967457125 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.196400888 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.219455974 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.069375678 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.967590252 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.96488111 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.96817174 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.963652444 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.103672989 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.035080565 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.967782187 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.96339222 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.992366675 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.206008962 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.085478347 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.967383737 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.992278408 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.174931887 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.087450253 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.068077349 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.729875387 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.965398674 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.027120142 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.967863296 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.965431853 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.965737568 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.118680332 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.058146145 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.046744101 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.968256485 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.966350776 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.964552311 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.6203972 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.163354746 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.06022194 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.086056333 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.216275321 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.169878535 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.745757046 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.967025167 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.705159043 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.12656804 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.193264401 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.197611216 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.086113455 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.969602208 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.23634681 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.965855616 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.967049349 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.213542134 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.194426124 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.065396639 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.970407222 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.966029632 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.966483575 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.202991359 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.969124242 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.06087646 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.969774525 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.968141111 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.061530352 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.064528818 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.202802962 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.17687022 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.995137552 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.289948662 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.477671625 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.212718964 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.032146127 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.216200517 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.971799284 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.967855143 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.044414363 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.795708983 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.22071083 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.208365626 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.209857507 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.001630488 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.688562258 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.967446731 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.192807101 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.188386182 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.217652091 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.213463375 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.206987155 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.293839153 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.968138381 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.967036202 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.236237102 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.082313493 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.971961292 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.308853202 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.197532705 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.524364994 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.995520201 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.273109233 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.098768465 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.971632962 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.593131288 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.967954566 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.191342527 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.009087284 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.971588406 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.971783136 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.185298254 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.945066906 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.970885645 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.60004383 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.029031253 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.974833987 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.200909761 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.972134644 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.230031463 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.973699622 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.199005001 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.437807193 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.000764282 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.142885864 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.217539401 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.973904969 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.212404053 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.207971897 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.084375821 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.190289922 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.593055081 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.969874806 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.255437487 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.973953446 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.970909236 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.139149277 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.973704448 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.112077241 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.974563258 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.250626906 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.992935815 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.201654591 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.973836679 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.227175408 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.002934797 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.01975133 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.974672848 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.096094386 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.973857531 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.796766893 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.127225567 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.975646053 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.972851591 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.531246897 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.973118793 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.119822238 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.194293671 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.993350632 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.04253026 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.633982419 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.970832229 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.052844235 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.993787977 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.35695138 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.972052264 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.223816244 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.974656489 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.972654541 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.97153733 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.20289438 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.154974457 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.976811845 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.972406744 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.875128501 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.972929495 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.973504117 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.152649493 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.314672089 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.972680193 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.173737806 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.977109853 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.101337796 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.977286621 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.038939499 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.304783348 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.97417404 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.973320842 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.973742207 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.972804069 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.973910771 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.179750714 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.998749509 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.488969525 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.109254188 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.240678396 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.282904624 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.213200998 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.016405579 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.97775067 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.226714977 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.976810603 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.03483122 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.976337353 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.992245989 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.202537831 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.977392748 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.2344905 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.24379918 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.947844566 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.020617865 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.977294038 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.976113055 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.976038206 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.11333531 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.05642595 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.977023523 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.976836028 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.089762452 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.096051366 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.182629476 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.977151733 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.053502929 seconds)
  done (took 924.899605029 seconds)
done (took 1255.283964257 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.974735474 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.976461622 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.978872768 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.979349007 seconds)
  done (took 29.813895033 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.977235583 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.976449729 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.978659113 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.976807757 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.978241725 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.977194146 seconds)
  done (took 13.769652185 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.043529782 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.975684282 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.979598466 seconds)
  done (took 21.90479788 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.053792497 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.38981271 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.120273868 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.413907494 seconds)
  done (took 10.883578246 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.979650763 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.97980181 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.97991745 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.980206963 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.979503178 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.980326357 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.978325523 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.978199788 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.981030037 seconds)
  done (took 19.724306234 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.013351399 seconds)
done (took 102.015999378 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.134185435 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.573570711 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.052475108 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.070874307 seconds)
    (5/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.303654851 seconds)
    (6/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.979585378 seconds)
    (7/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.184947729 seconds)
    (8/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.3064646 seconds)
    (9/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.16749484 seconds)
    (10/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.001018461 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.993520124 seconds)
    (12/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.07695834 seconds)
    (13/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.003235462 seconds)
    (14/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.055024219 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.127802922 seconds)
    (16/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.274471327 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.107199782 seconds)
    (18/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.621642342 seconds)
    (19/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.069449273 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.999122858 seconds)
    (21/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.051945162 seconds)
    (22/309) benchmarking ("sort", BigInt, false)...
    done (took 6.981189976 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.086810852 seconds)
    (24/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.019963524 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.978457318 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.716938244 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.233476475 seconds)
    (28/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.981220549 seconds)
    (29/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.08599126 seconds)
    (30/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.076194162 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.283608078 seconds)
    (32/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.297824264 seconds)
    (33/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.074215414 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.141463734 seconds)
    (35/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.980152769 seconds)
    (36/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.071328393 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.442321433 seconds)
    (38/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.283658835 seconds)
    (39/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.648417551 seconds)
    (40/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.239325962 seconds)
    (41/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.432505783 seconds)
    (42/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.058525862 seconds)
    (43/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.399479986 seconds)
    (44/309) benchmarking ("sort", Bool, false)...
    done (took 2.195007964 seconds)
    (45/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.453281622 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.232907842 seconds)
    (47/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.005922242 seconds)
    (48/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.178252231 seconds)
    (49/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.418796857 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 5.601790953 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.125010916 seconds)
    (52/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.445323664 seconds)
    (53/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.997640176 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.231255598 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.014756166 seconds)
    (56/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.145358972 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.739781734 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.148189265 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 2.001042114 seconds)
    (60/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.134425308 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.916211041 seconds)
    (62/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.358527603 seconds)
    (63/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.138882407 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.330967585 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.073346591 seconds)
    (66/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.059895259 seconds)
    (67/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.982046271 seconds)
    (68/309) benchmarking ("sort", Float64, false)...
    done (took 5.685709024 seconds)
    (69/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.114432539 seconds)
    (70/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.039169032 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.714900019 seconds)
    (72/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.989998554 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.051939272 seconds)
    (74/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.923389531 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.078651072 seconds)
    (76/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.196307814 seconds)
    (77/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.148875293 seconds)
    (78/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.05918914 seconds)
    (79/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.732056577 seconds)
    (80/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.853816636 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.338313786 seconds)
    (82/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.576338137 seconds)
    (83/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.103364969 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.296636509 seconds)
    (85/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.675587799 seconds)
    (86/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.059439979 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.982983064 seconds)
    (88/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.538363957 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.329389126 seconds)
    (90/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.840552939 seconds)
    (91/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.147785822 seconds)
    (92/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.079428756 seconds)
    (93/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.981909166 seconds)
    (94/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.170913227 seconds)
    (95/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.468882221 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.303610258 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.169131783 seconds)
    (98/309) benchmarking ("sort", Int8, false)...
    done (took 4.920928533 seconds)
    (99/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.174146066 seconds)
    (100/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.007501992 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.312248731 seconds)
    (102/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.529010817 seconds)
    (103/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.10559602 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.001896586 seconds)
    (105/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.092188755 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.199680226 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.863436941 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.950252262 seconds)
    (109/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.385585322 seconds)
    (110/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.985985676 seconds)
    (111/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.241231175 seconds)
    (112/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.994735502 seconds)
    (113/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.9811914 seconds)
    (114/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 3.93031561 seconds)
    (115/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.228093304 seconds)
    (116/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.304453423 seconds)
    (117/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.989665179 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.932738502 seconds)
    (119/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.174803951 seconds)
    (120/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.082455991 seconds)
    (121/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.753828333 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.583329155 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.866361965 seconds)
    (124/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.198644484 seconds)
    (125/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.117020273 seconds)
    (126/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.993541907 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.286127816 seconds)
    (128/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.042456999 seconds)
    (129/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.005608576 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.98643228 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.104974879 seconds)
    (132/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.082084125 seconds)
    (133/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.888470858 seconds)
    (134/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.068668161 seconds)
    (135/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.779783676 seconds)
    (136/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.459833126 seconds)
    (137/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.986227201 seconds)
    (138/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.076214317 seconds)
    (139/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.041305497 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 8.439681047 seconds)
    (141/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.286083851 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.17709571 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.96498874 seconds)
    (144/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.01414578 seconds)
    (145/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.274153378 seconds)
    (146/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.637457662 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.991927835 seconds)
    (148/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.118445283 seconds)
    (149/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.088464725 seconds)
    (150/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.28725254 seconds)
    (151/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.99137555 seconds)
    (152/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.096552024 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.016718587 seconds)
    (154/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.13572706 seconds)
    (155/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.777663157 seconds)
    (156/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.250890817 seconds)
    (157/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.063574881 seconds)
    (158/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.137236593 seconds)
    (159/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.508048498 seconds)
    (160/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.98659116 seconds)
    (161/309) benchmarking ("perf_countequals", "Bool")...
    done (took 4.21155286 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.006353965 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.989978749 seconds)
    (164/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 3.888237101 seconds)
    (165/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.015696835 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.391752024 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.095549508 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.322504453 seconds)
    (169/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.99126487 seconds)
    (170/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.167280625 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.200990964 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.122294414 seconds)
    (173/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.131676096 seconds)
    (174/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.01814962 seconds)
    (175/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.002051302 seconds)
    (176/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.781855212 seconds)
    (177/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.31373884 seconds)
    (178/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.865196725 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.343856995 seconds)
    (180/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.684498023 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.085395523 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.011922509 seconds)
    (183/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.125874709 seconds)
    (184/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.998791099 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.08906398 seconds)
    (186/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.145281127 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.309521376 seconds)
    (188/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.255099833 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.3893856 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.988068651 seconds)
    (191/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.813350829 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.07419039 seconds)
    (193/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.316123023 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.241531385 seconds)
    (195/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.989239868 seconds)
    (196/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.004172236 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 3.627014828 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.988443479 seconds)
    (199/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.368085918 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.891427682 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.995509488 seconds)
    (202/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.095923093 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.142269666 seconds)
    (204/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.185966488 seconds)
    (205/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.265082968 seconds)
    (206/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.469345265 seconds)
    (207/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.13073287 seconds)
    (208/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.048501547 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.124281908 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.907812404 seconds)
    (211/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.998806755 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.062618554 seconds)
    (213/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.320622962 seconds)
    (214/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.808939798 seconds)
    (215/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.084714667 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.161883785 seconds)
    (217/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.993984296 seconds)
    (218/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.126240024 seconds)
    (219/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.08201076 seconds)
    (220/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.304460984 seconds)
    (221/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.784117106 seconds)
    (222/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.259772801 seconds)
    (223/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.071819038 seconds)
    (224/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.486036476 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.389435011 seconds)
    (226/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.312312431 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.281939174 seconds)
    (228/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.063184121 seconds)
    (229/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.386846719 seconds)
    (230/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.741609862 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.991285801 seconds)
    (232/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.230385113 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.882734211 seconds)
    (234/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.23757945 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.047795654 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.799814639 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.092603522 seconds)
    (238/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.069940981 seconds)
    (239/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.094037359 seconds)
    (240/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.71094715 seconds)
    (241/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.301204779 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.990037583 seconds)
    (243/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.470985263 seconds)
    (244/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.000451696 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.122690334 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.990635825 seconds)
    (247/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.135193807 seconds)
    (248/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.235779623 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.126705951 seconds)
    (250/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.276792814 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.387815462 seconds)
    (252/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.016899557 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.116358287 seconds)
    (254/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.991403079 seconds)
    (255/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.374863853 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.123950039 seconds)
    (257/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.816134045 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.090621984 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.403626989 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.994261092 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.992771401 seconds)
    (262/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.37896233 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.343541306 seconds)
    (264/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.124862934 seconds)
    (265/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.125136623 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.11500119 seconds)
    (267/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.265060652 seconds)
    (268/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.301911521 seconds)
    (269/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.330288239 seconds)
    (270/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.998419476 seconds)
    (271/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.038029131 seconds)
    (272/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.08030791 seconds)
    (273/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.997057067 seconds)
    (274/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.402065216 seconds)
    (275/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.4672087 seconds)
    (276/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.311775912 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.014863428 seconds)
    (278/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.301257136 seconds)
    (279/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.39183703 seconds)
    (280/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.996170548 seconds)
    (281/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.62653037 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.645758245 seconds)
    (283/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.235871501 seconds)
    (284/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.149257217 seconds)
    (285/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.201043517 seconds)
    (286/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.015763565 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.251344396 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.654989933 seconds)
    (289/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.124317064 seconds)
    (290/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 8.956004434 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.133597896 seconds)
    (292/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.195552943 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.894541144 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.393883059 seconds)
    (295/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.019477365 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.390344144 seconds)
    (297/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.397121435 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.026348959 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.30044888 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.332600111 seconds)
    (301/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.393319871 seconds)
    (302/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.095710373 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.120350655 seconds)
    (304/309) benchmarking ("sort", Float32, false)...
    done (took 5.654584209 seconds)
    (305/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.019304749 seconds)
    (306/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.089797095 seconds)
    (307/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.50299751 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.994944196 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.208195399 seconds)
  done (took 1049.708111027 seconds)
done (took 1051.682984085 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.022474333 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.016772247 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.99857058 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.019604139 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.112063957 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.0420302 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.012075574 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.002235843 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.049998487 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.048868498 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.997698307 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.039528583 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.999835747 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.000779578 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.999124523 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.015840459 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.303585911 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.03087041 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.018754835 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.011847771 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.017817982 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.997738214 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.049171399 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.040115043 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.004421844 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.003645876 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.002543614 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.019384934 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.112563518 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.003113799 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.005724888 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.012753477 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.304067313 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.027311556 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.997611995 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.020299964 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.013535889 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.013117172 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.004401648 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.033296561 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.449557034 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.006946922 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.000657842 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.001548141 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.000629974 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.008761233 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.002097159 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.010453319 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.019278636 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.019742659 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.446139736 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.023834417 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.005893686 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.003543845 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.016123431 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.003753928 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.005996965 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.019615647 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.025138047 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.018922451 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.292856352 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.038313881 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.007245408 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.021466569 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.012540878 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.482463262 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.007923109 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.010823508 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.450430614 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.017921919 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.483008203 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.020457803 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.005478272 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.019153723 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.037455929 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.306964343 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.029974052 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.002302171 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.013986662 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.001676353 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.015628644 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.01961846 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.008734119 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.004444997 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.020470944 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.048755481 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.01764067 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.004308521 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.016938107 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.024475079 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.01401036 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.017681209 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.0084827 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.003089546 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.019376612 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.008940608 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.00731912 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.006932532 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.010235915 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.018141613 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.449695266 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.028082846 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.002481609 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.000423749 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.005634568 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.020528775 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.449567578 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.011610802 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.027708433 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.055140238 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.007390643 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.294386985 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.037537604 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.024259992 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.018739545 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.008677212 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.004914258 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.295299549 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.478240084 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.027839741 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.006749246 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.004371271 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.024426607 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.008467003 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.003199259 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.309466006 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.038541043 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.022623071 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.130393353 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.019992139 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.039268855 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.005893361 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.010683109 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.052256402 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.024369684 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.038885353 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.009934759 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.024786621 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.024084937 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.004326289 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.018572558 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.020400552 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.006709335 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.014786825 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.004107512 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.052549004 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.022683975 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.02314524 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.029299364 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.129799961 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.005317257 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.297451337 seconds)
done (took 314.680012666 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.083273157 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 7.004969783 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.12231292 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.004850429 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.095560337 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.08106358 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.003813345 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.004308727 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.00564538 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.504144449 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.00529157 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.012021085 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 7.004599803 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.005810783 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.07839674 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.006051161 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.005026149 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.452732532 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.007883154 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.09100046 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 7.006056157 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.005557469 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.006336559 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.529895229 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.00519202 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 7.00552247 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.088482567 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.005353202 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.511637301 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 7.005223492 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 7.006164818 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.47755571 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.08878278 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.03180371 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.013953652 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.010181632 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.102562403 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.016504662 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.075939996 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.077129244 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.137268038 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.042196914 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 7.005455942 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 7.008411027 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.010343878 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.010255387 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.007223808 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.039934558 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.007463833 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.012110818 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.451584147 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.014768993 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.012222543 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.008019303 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.008323095 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.037435772 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.008123912 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.010525409 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.094359532 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.009664001 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.09217313 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.570529722 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.519234458 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.008342334 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 7.006794031 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.008580639 seconds)
  done (took 194.723138771 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.073462644 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.079592708 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.072416462 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.012637017 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.056640647 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.076996696 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.012240909 seconds)
  done (took 16.317918537 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.015926448 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.008754865 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.058495333 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.059521812 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.009880017 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.19896479 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.02196792 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.012428764 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.035512928 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.008949022 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.660177943 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.057252244 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.013167844 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 7.009502775 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.020817863 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.06384627 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.011770476 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.011831998 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.118853907 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.157994874 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.014042873 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.016011364 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.035264266 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.021540178 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 2.010448245 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.011455157 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.011504333 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.017709023 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.011785662 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.010000678 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.009637148 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.063271339 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.010276684 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 7.01089903 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.009611508 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.011159025 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.011024084 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.009653078 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.009175479 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.010570737 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.009690118 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.010195775 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.011969167 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.009434085 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.009221865 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.034089048 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.010701219 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.010076432 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.010080676 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.010046532 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.03738778 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.010376021 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.010763858 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.015128939 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.059340443 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.018226618 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.013908033 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.010696052 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.011468411 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 2.011001758 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.011950975 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.160179191 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.0605978 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.010215713 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.060837052 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.16226865 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.01107392 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.010959544 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.011717223 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.100499751 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.010918097 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.061976246 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 2.011578824 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.127557015 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.011638156 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.198375178 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.035022453 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.015933655 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.015900357 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 7.012066689 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.020065042 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.012331053 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.014712239 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.021136157 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.016586758 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.012672599 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.01235757 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.012222883 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.020588032 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.011822255 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.066684698 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.012743822 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 2.014930531 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.147401719 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.013433169 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.122410612 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.042166402 seconds)
  done (took 219.807965847 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.022092862 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.022363396 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.015826483 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.029137626 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.014423185 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.013676921 seconds)
  done (took 14.057257914 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.016395208 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.017897145 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.013530839 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.013571262 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.014263425 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.015882662 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.01378897 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.016478479 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.020907236 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.013469195 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.015209208 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.016814038 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.017037184 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.015102809 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.013490563 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.01468791 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.014523251 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.013459275 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.013944412 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.015516685 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.221499707 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.018485589 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.017273219 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.019546782 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.023364741 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.014846694 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.027167852 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.015362574 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.013574798 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.024191595 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.021401462 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.016751359 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.020526064 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.022499201 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.019176953 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.020299212 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.019675301 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.016400697 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.014829877 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.017251156 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.018709887 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.017790435 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.01538977 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.018457655 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.019334921 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.026148474 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.023332012 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.030657104 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.016203791 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.018902145 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.018862185 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.016242042 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.017774459 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.017381826 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.023829124 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.025069266 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.023429308 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.016493698 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.017675023 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.021366891 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.020816631 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.020822418 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.019687005 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.023199729 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.023835813 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.019166639 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.021377979 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.023621274 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.018453151 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.016547999 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.018010079 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.01752278 seconds)
  done (took 148.478336363 seconds)
done (took 595.334023422 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.299822447 seconds)
  done (took 9.242731509 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.180774063 seconds)
  done (took 9.210179997 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.759985697 seconds)
  done (took 10.70756539 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.036043061 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.038754467 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.025386858 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.024503336 seconds)
  done (took 30.080474477 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.227997614 seconds)
  done (took 9.173973946 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.028563163 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.015465019 seconds)
  done (took 16.057114281 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.035500649 seconds)
  done (took 8.981176664 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.365202401 seconds)
  done (took 9.330025133 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.036174341 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.052061004 seconds)
  done (took 16.053385656 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.019362396 seconds)
  done (took 8.964079821 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.549148778 seconds)
  done (took 10.574034109 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.025627559 seconds)
  done (took 9.015550411 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.105258572 seconds)
  done (took 9.050336601 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.04054221 seconds)
  done (took 8.986781542 seconds)
done (took 167.372439549 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.025286991 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.018647112 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.017715543 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.018045881 seconds)
  done (took 30.024128547 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.052911275 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.052293244 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.063138861 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.052362792 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.044195999 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.04411442 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.053715949 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.054993968 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.044372734 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.051599881 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.054783403 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.051113389 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.05209255 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.06300957 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.065281373 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.052085484 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.053757364 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.055699702 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.045683414 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.063789889 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.052654239 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.054269904 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.021244737 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.02117662 seconds)
  done (took 51.166282661 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.20804709 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.085677396 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.174476348 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.068147006 seconds)
  done (took 10.48225983 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.021567336 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.085431124 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.07006521 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.069939399 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.070196558 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.122888165 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.073024507 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.159423287 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.148029965 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.151931866 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.030320399 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.043302279 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.047176915 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.068733325 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.126447407 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.023152537 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.024883028 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.138285308 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.08560297 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.246643099 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.023952182 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.077484883 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.075667668 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.077038713 seconds)
  done (took 52.008601193 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.026281108 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.033115588 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.031983679 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.023555301 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.025182353 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.026264863 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.030861201 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.026801928 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.047178788 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.027377816 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.024636219 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.025857101 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.032063304 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.02589983 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.025387292 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.040029302 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.039785306 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.02652748 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.028767986 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.032165829 seconds)
  done (took 42.549190715 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.024126667 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.869865579 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.368067064 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.276439082 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.024451181 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.023625824 seconds)
  done (took 32.536344617 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.038549435 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.03167378 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.025786413 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.0823851 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.163666324 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.032571109 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.025236247 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.037093558 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.071981174 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.092330734 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.048968665 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.054267837 seconds)
  done (took 26.654999755 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.026069225 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.027524084 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.028434944 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.039744659 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.038254822 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.035692814 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.033447239 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.025336079 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.040231591 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.045331454 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.033836001 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.038499519 seconds)
  done (took 46.368026963 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.731797794 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101165078 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.025172661 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.899834579 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.468001071 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.570229468 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.919677915 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.741807315 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.495103442 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.951899906 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.228010346 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 7.027732422 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.11252915 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.027304524 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.297080003 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.347399681 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209155832 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.269243419 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.480498316 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.063652781 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.229999816 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.232781815 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.306797103 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.026154575 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02871417 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.035382825 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.416247464 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.755497997 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.061486952 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.100456673 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.275709953 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.982074611 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082318411 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 7.029972276 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.039252168 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029249983 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032596701 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.297598207 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.03288299 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15837688 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102449771 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270198442 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031715793 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.446758577 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.735205264 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.281356907 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.131316711 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.02892178 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031888779 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.028574297 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.954567379 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110034142 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.030111053 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033005246 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.729393188 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.027551307 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101938327 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.029501675 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231592395 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.8365611 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718946547 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.030084725 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032046323 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.582385509 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.074827026 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.140713966 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.717855535 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407062408 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.446675102 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.126829934 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.030539693 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.031499556 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.114316604 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.001390862 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.712995638 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067808345 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.165554603 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.046850373 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.669629708 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322804354 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.413266634 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.579655121 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.949644713 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.291814973 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.517259903 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.021922426 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244635518 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.914097137 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.957457668 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.232930185 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058417875 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033855301 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.299011176 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.763269498 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.145251371 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.041878134 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.47598868 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043209541 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.03771339 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03198551 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.244191158 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.112447592 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.066487915 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.149201596 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04805114 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.111783355 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.957084093 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.044655617 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.034074426 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.111366455 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.033197784 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.018997247 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.083416132 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.425208624 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.076746831 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.972285126 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035321768 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.078919457 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074478682 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.990460309 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267167939 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.327044243 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.671591417 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.050317015 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.170419503 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.359883604 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247790592 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.036185962 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.24714922 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.566442506 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.40156128 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.068540361 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315632758 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.089199916 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315071811 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.457615061 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110038895 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.772899379 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.835670489 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.249128596 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047805206 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 7.035985742 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.037024427 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037697352 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.968879482 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.723320914 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.361522838 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.189411613 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.249511525 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.484661033 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.02196109 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.035102058 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.347956916 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.172050206 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.045365189 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.682878084 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.191482206 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.807237077 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.061410651 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.122299757 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.156938046 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.999885763 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048293592 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108851171 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050851244 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.048208663 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.358155497 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385236475 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.034853061 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.035858641 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.984777092 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.043366731 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.036873197 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.568180669 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005675742 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.038337497 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.048258018 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.909741109 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109017917 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.038050433 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040478858 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.573683829 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.556942728 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.041888119 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.640954854 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.045619677 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112783953 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304765534 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.350132894 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15353893 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.736631608 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.404068641 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.136305161 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.737827181 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.964467185 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.035665803 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.97528216 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037456807 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.040722422 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041326408 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.226122033 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.315562842 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329813234 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.478407161 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.097691449 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24218589 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.708342631 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.994151282 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.03918631 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043421859 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.040150857 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.037986138 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.549762013 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.277715759 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.083367405 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065619076 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.044515766 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167266067 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.050864159 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.965146666 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.041608018 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039581853 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.442750503 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.071403884 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.986819772 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.310552141 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.881865948 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158303571 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086288063 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.049803155 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044012327 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.710376387 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.08231424 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.965494176 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426587845 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081463532 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.709495238 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.527782922 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.597051568 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328152359 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.358734412 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.360225324 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.109252483 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.253689997 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.120890249 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09449337 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12929529 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.97585012 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.964494417 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.686315969 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358490138 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.30891823 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048824292 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256219072 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702660378 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270356666 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069448228 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.432434177 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354756812 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.012604388 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055729102 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.494148453 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152011817 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125560015 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.044570467 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.990532451 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.359707204 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072820246 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.741748622 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054435735 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.392054932 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.43479893 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.115879088 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.367416355 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258739078 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.042629205 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.379311404 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.183853603 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.086229125 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.045698542 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.033876393 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.25623729 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.622254956 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.915384975 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047376585 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.132288663 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.33923461 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.941948361 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 2.044108536 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.125566269 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305856784 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.041635548 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.345382072 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.382097421 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.139415646 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101801983 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268394183 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.51397327 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347631577 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.596921174 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.531439832 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.046531655 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.968796535 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.743168841 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.245060159 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.043207157 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.01114745 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.232965287 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271314026 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.727176958 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259643679 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.283577949 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.052322901 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.310891893 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112138604 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.139915277 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.315048433 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.442288128 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.280632005 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.270205086 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.584674172 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.260995579 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.480036288 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.201072368 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.046671149 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247822817 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258169359 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.259021262 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.38643511 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203816025 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.755987787 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.049254859 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.253391922 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335152783 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102154291 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.376434123 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.204295004 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.127368792 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052469931 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107348693 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.048968317 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052752476 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.370154311 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.561204722 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.059499817 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122853611 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.100105524 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.555422503 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.048935602 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.051482748 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312408082 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389628521 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375349901 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.025320824 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.045011572 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.053686918 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171519331 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.970718199 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050983282 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31554158 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.048549108 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.139009554 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.194424026 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062786789 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.317986534 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.423127809 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.516286077 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.012281231 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051546317 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.255766992 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.328549151 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.160044205 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.160380863 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.316183169 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.362281649 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.070413871 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.369138579 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276549959 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048889332 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.248562291 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.049116181 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173557829 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.241249671 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318636049 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.613557453 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.780018207 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.312812208 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.896339148 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.049181402 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.789960751 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312738791 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315750891 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.096032457 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1103244 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051860515 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436252313 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.773806926 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17951067 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.905105374 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.974913056 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.078285657 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.267109593 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.288470345 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.756042875 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.050019989 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319622004 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343115499 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320923401 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.095743173 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.916782915 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262941851 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049615775 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.056197171 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.323814384 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.255223358 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.28670198 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051508719 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.04945878 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.854475902 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.975178763 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.050679996 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102519214 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.27513298 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070241724 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.563703419 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.751005283 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317018259 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088413336 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051947171 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.324648518 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.549372563 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.601192618 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055421597 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.240974191 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.071203072 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.353684382 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.051698092 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.449918631 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.357200824 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.051045179 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.135155109 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.300412812 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.308314594 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.983595343 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059612532 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264566257 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.922715026 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.051147723 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.03479221 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44836516 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28663872 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.787038311 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.607179412 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.052771012 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.054073081 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.45231719 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087304925 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.457870768 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.077631588 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066911006 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.572562226 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.750446479 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.337494124 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.291413559 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.144037584 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.656259617 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.053615218 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.051468311 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.053138115 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.970678946 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.234183603 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.241156052 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.321999589 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078640814 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450020155 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088785282 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.376082026 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15833954 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.139893159 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093169293 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.571622368 seconds)
  done (took 1717.675820357 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.083433727 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.094750455 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.10454268 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.069399624 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.115745322 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.152087171 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.13223648 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.155021527 seconds)
  done (took 58.885470831 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.053940404 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.069164353 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.060112507 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.054155201 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.058232966 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.05453636 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.209137137 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.063264946 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.057580311 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.057422617 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.055521529 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.053351191 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.321731252 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.072773747 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.055498298 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.052604397 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.057555781 seconds)
  done (took 77.414786909 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.056717054 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.268753382 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.110435774 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.054909357 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.990602168 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.057569883 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.094432424 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.113411622 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.060393069 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.257669575 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.356898029 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.104621562 seconds)
  done (took 92.508028403 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.060920923 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.055381388 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.055697596 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.055332791 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.057079092 seconds)
  done (took 12.26922004 seconds)
done (took 2252.560917185 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.295717627 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.111373956 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.156055028 seconds)
  done (took 6.247725124 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.201069481 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.247264449 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.360150361 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.120618563 seconds)
  done (took 10.915213521 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.313916858 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.44064133 seconds)
  done (took 6.735667387 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.416263876 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.074313436 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.427623756 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.056398166 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.058054009 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.058780277 seconds)
  done (took 23.157706786 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.055813177 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.055702562 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.05525312 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.056243761 seconds)
  done (took 10.204094272 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.055428697 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.768969381 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.055086974 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.06609421 seconds)
  done (took 21.926050811 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.202785576 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.17009013 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.198792377 seconds)
  done (took 8.55178417 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.275304312 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.894492029 seconds)
  done (took 7.150888008 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.202831638 seconds)
  done (took 4.184563037 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.083772617 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.327970055 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.543232933 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.562460493 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.690593191 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.796565445 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.368438493 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.296718236 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.456367273 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.476265246 seconds)
  done (took 26.584318744 seconds)
done (took 141.854295474 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.410839854 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.076747235 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.262685954 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.423938164 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.286292307 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.262577708 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.25722539 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.41547128 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.102794194 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.089485797 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.426497993 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.290100202 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.201855121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.074939316 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.210973771 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.076760026 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.285477182 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.431537546 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.108401541 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.342088076 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.264941747 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.07196806 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.267443727 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.086516381 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.281813277 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.209868776 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.615933003 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.069449568 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.25545436 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.62815349 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.212781561 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.486813855 seconds)
  done (took 174.470691111 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.057927819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.076970326 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.060121361 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.06015229 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.309343764 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.059166277 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.060601345 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.060428412 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.320222201 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.30807959 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.059397526 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.304629858 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.060919341 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.0600581 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.063085867 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.059851871 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.45718452 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.060393685 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.060417972 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.059899043 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.063717222 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.153281188 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.06055153 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.166182488 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.431506479 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.061850309 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.060097503 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.061644143 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.061683197 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.060857195 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.060932289 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.062417413 seconds)
  done (took 213.908574049 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.061929092 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.060575279 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.061316875 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.06205675 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.060015692 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.063793936 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.061568168 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.060496383 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.826169227 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.813491274 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.061337279 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.062674378 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.062986183 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.061329792 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.06671928 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.061737278 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.0673201 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.067414763 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.061779316 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.066610156 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.062711876 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.803104054 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.061049251 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.825172083 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.060760378 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.06229468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.062261504 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.062306561 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.065971121 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.066005794 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.066807181 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.063635443 seconds)
  done (took 227.019440436 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.302805828 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.062253754 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.063177509 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.087027466 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.062966599 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.062520843 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.06133881 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.310414817 seconds)
  done (took 21.007468944 seconds)
done (took 638.404432177 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.428674607 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.261017006 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.237239184 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.086126508 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.340447146 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.126829779 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.080819974 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.143533884 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.912727628 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.154034062 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.756865385 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.10447184 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.846497332 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.106336786 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.206496721 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.13783671 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.663069572 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.746689117 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.22647347 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.145345585 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.259679366 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.005293072 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.160318962 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.953341684 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.776004848 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.045189674 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.137106835 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.651671544 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.095209721 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.247093317 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.742846821 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.381187099 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.097228563 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.083623209 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.135626057 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.11435459 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.332001985 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.093984167 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.211274063 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.790510623 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.159712071 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.811420461 seconds)
  done (took 110.984187608 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.077397643 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.070035709 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.070867647 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.070818656 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.079686459 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.069630308 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.071953916 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.072137578 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.070761248 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.0712893 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.070220578 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.079818202 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.070941593 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.081312435 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.07183438 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.070463872 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.07096129 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.081515485 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.071324862 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.071788433 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.072886322 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.072589 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.068497078 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.07110092 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.07334475 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.071092212 seconds)
  done (took 55.896427679 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.067356182 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.221461115 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.306027343 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.087915052 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.068212836 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.071816901 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.085011085 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.071983643 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.0707612 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.070046821 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.157580575 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.073055829 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.085807825 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.307119369 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.084388613 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.067241431 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.067594364 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.068356609 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.229353493 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.081987202 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.088309596 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.072345486 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.087129937 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.081168899 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.07103627 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.069200451 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.071883015 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.505821212 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.078463334 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.161939609 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.111100657 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.092985342 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.458549227 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.314672435 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.123255158 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.078888261 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.069211293 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.167581904 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.076048887 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.071253591 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.087307013 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.07651386 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.31067848 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.584999772 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.08319589 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.069021198 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.516216826 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.176185778 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.111319814 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.081099572 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.315993465 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.086012536 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.070743265 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.071175038 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.106359591 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.081498386 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.070539536 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.381494914 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.083333197 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.087736414 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.074737557 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.070323019 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.236592274 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.078512775 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.226691866 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.080120515 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.078183299 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.072691565 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.315525673 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.086260652 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.601797147 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.084431625 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.070943428 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.164241232 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.22890408 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.543759842 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.083251668 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.239299455 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.474977924 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.094280526 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.080029501 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.495852007 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.098984857 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.080082344 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.073786697 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.073232918 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.071375685 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.115947616 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.088169207 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.522496413 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.597976004 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.398586801 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.098131696 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.083144663 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.072749329 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.383398397 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.079837549 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.071947322 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.305449595 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.610751732 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.086704161 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.079515472 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.580976424 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.089010207 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.090779986 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.08054629 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.320869551 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.090356536 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.11984238 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.073649486 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.083307914 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.077964759 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.094187952 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.082692804 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.075437565 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.572148727 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.180300964 seconds)
  done (took 255.725660457 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.076372486 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.072974196 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.073282594 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.073299023 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.072373913 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.074943462 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.073809833 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.073042477 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.073688292 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.073551244 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.072987322 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.073473951 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.07543342 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.078138556 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.577464035 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.078675703 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.569233359 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.075556468 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.076088663 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.078301589 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.677281935 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.083233851 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.074320279 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.077182339 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.076947842 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.075328318 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.077995987 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.121942239 seconds)
  done (took 173.759850437 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.076968923 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.259390746 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.097548902 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.106125755 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.084248985 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.077478103 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.2169094 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.100548259 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.083293827 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.077433703 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.076459711 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.137361459 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.089590149 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.175203385 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.112512448 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.18357118 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.184831496 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.085388186 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.077067652 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.077820885 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.10635728 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.088659004 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.137719048 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.204389637 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.095817066 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.190976832 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.1008613 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.077766125 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.078238828 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.191278248 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.0992231 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.138841328 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.107636994 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.096147059 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.197103807 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.198053637 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.186486878 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.184941699 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.088455071 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.079918919 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.078527011 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.080669589 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.192784228 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.09904328 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.08052007 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.196033638 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.09796113 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.080786206 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.079190359 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.083009772 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.092231223 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.096323775 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.14298153 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.209119508 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.115599412 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.10425577 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.179477901 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.217296587 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.081616805 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.178425337 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.088752795 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.192888318 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.101198199 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.080509364 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.08134055 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.083127748 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.109424173 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.187914082 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.186320564 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.089310068 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.179436357 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.115804247 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.088415394 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.081487412 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.081589949 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.194733976 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.200149497 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.117372629 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.117910978 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.111936464 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.090618255 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.081197883 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.08234398 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.097307411 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.085908353 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.194883272 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.20195114 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.088338551 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.080840434 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.08156959 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.08133682 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.105838392 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.203425744 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.118485257 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.189105259 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.148110755 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.155852935 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.095649576 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.095627446 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.086663507 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.144924202 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.097838498 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.094252138 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.396329642 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.141942277 seconds)
  done (took 225.248354529 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.462914281 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.128449323 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.138984984 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.420171604 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.471692675 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 4.088759345 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.129823882 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.133760759 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.171197293 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.353827995 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.205561092 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.14981647 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.115775384 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.105064119 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.126291808 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.166692026 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.135739529 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.470501935 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.347104214 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.61053283 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.119268198 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.416207463 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.483809847 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.727757255 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.181469055 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.547828441 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.732745652 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.295251989 seconds)
  done (took 69.449050906 seconds)
done (took 893.05383269 seconds)
SAVING RESULT...
DONE!
