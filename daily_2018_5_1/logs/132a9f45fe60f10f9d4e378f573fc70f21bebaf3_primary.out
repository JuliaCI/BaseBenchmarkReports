cset: moving following pidspec: 18248
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.425418509 seconds)
loading group "string"... done (took 0.508194991 seconds)
loading group "linalg"... done (took 8.768446733 seconds)
loading group "parallel"... done (took 0.173558994 seconds)
loading group "find"... done (took 1.230995981 seconds)
loading group "tuple"... done (took 1.992881455 seconds)
loading group "dates"... done (took 1.459903281 seconds)
loading group "micro"... done (took 0.204067795 seconds)
loading group "io"... done (took 0.537740548 seconds)
loading group "scalar"... done (took 50.389111404 seconds)
loading group "sparse"... done (took 13.388199499 seconds)
loading group "broadcast"... done (took 1.254062734 seconds)
loading group "union"... done (took 9.136027101 seconds)
loading group "simd"... done (took 3.168286609 seconds)
loading group "random"... done (took 11.231135576 seconds)
loading group "problem"... done (took 2.176997137 seconds)
loading group "array"... done (took 24.452620391 seconds)
loading group "misc"... done (took 1.094454636 seconds)
loading group "sort"... done (took 3.676698058 seconds)
loading group "collection"... done (took 18.969302392 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.595515527 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126438554 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.199424292 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.338379808 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.226857198 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165525662 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141897696 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.241403337 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.573921039 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202712934 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138547793 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.500491098 seconds)
done (took 6.173860686 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.248701844 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.241074423 seconds)
    (2/2) benchmarking "String"...
    done (took 0.161479318 seconds)
  done (took 1.075558727 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075275408 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.15442425 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.106155057 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092225306 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090579939 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106511293 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092511407 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107476008 seconds)
  done (took 1.426282529 seconds)
done (took 3.501579583 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.494227856 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.852690729 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.50649875 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.14072509 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.305990983 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.290091706 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.270836271 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.196713876 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.089411349 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087243061 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171636993 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.40748345 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.384738103 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.967280764 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092134519 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094683641 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.12991228 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.761379155 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.07942513 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108347948 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.500415443 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.179427272 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098700971 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.121246078 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184750187 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131274407 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159092623 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100319584 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664241369 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.130857889 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.177129735 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096039903 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.15642439 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.183856311 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193734378 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10875567 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680043821 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.19800921 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.087305936 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097892818 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.66833466 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.114500482 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.181242524 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102131523 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.085948687 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.178379988 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.0908291 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076713967 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.109957074 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085214967 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.160817436 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.45378954 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104084258 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.169200089 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09160308 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.68059265 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.0948006 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.270758758 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122473007 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.091434031 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.088999387 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086453577 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154368254 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092689222 seconds)
  done (took 19.744755949 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.144381681 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.161877717 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07675651 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154597167 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120710167 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079042396 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100055855 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077687595 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106958499 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.19259586 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136596219 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.149613391 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091779106 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089143498 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.126515109 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24677074 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106874631 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120313553 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088061221 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088951372 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137956465 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095567189 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090222397 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105219302 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168040663 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201405392 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107254264 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121471736 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089820164 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094938168 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14060302 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142563805 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090327285 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087486681 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187909417 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.104570654 seconds)
  done (took 5.113059399 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195382437 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120318771 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.201980104 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.158251071 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144130947 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165322931 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122464748 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.268577567 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.20524913 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177038401 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111070303 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11975363 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078808689 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080283987 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077969483 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.463748472 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147646312 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.163511796 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.127278463 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103556665 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082086805 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.381295032 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084105198 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.093967332 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082010441 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06312064 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.191104562 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081366136 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.131003587 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085004631 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105766788 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116006833 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.21052238 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122734892 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.11901249 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099924331 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078831734 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.228571876 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086998825 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078376933 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.13583722 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132512161 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112710613 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.094229866 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086729645 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.224477718 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078796898 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117463638 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.091026363 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.190404919 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.150079685 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094866048 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.271107555 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118340986 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078957129 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076703194 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.830888866 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.110374783 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079030202 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094519653 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081488664 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08467694 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095032176 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.462728688 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081307083 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.275823943 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080310551 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.153448888 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.079804202 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096303351 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.134368713 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083981207 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102300194 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102452638 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080089706 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097944976 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07961767 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078867417 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101345901 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116514232 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102863843 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081174732 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147487898 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114549523 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084533058 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09964424 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128176609 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083562929 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096815037 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113648554 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094440494 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079511426 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.162559693 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083798391 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112722089 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096579015 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.1409928 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080291569 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.25561992 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095932765 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126177331 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098827613 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112169681 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082403145 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114535655 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079201429 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100266777 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077796161 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078742035 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15952869 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080459866 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079204007 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07902709 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108632431 seconds)
  done (took 27.846718339 seconds)
done (took 53.376798363 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.430269399 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080635689 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079307855 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.09743115 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080613034 seconds)
  done (took 1.517555933 seconds)
done (took 2.242400571 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.314260756 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.187181341 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101917594 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.18473436 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084812088 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.189866926 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1780496 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092309904 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200659768 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082074967 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.181394378 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082422954 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101237629 seconds)
  done (took 2.730748444 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101708538 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108187712 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102577155 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118463782 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08311129 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100544921 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119837274 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113548373 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102532428 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113556528 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088070626 seconds)
  done (took 1.875502678 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098468309 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104190123 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098479612 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117461074 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086349722 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098803363 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117092922 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109439514 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100083599 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112755657 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086477487 seconds)
  done (took 1.857459815 seconds)
done (took 7.187801402 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.067751368 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.322799003 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.162852007 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.204942807 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.343824876 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.232713176 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.555965339 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.1504213 seconds)
  done (took 13.911120386 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.161758358 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.109618234 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08925363 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.091757333 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.091922514 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.109227551 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08998197 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088384641 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.109130219 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.092514227 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089959071 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.10807506 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090136365 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088615078 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090720628 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.108180749 seconds)
  done (took 2.393949136 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141623087 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138397954 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096318741 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098097037 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.11021087 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.096994141 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099764575 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.11294188 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092398074 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093326216 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101793073 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.112518036 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095362267 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.091075403 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.112257758 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116155814 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092109685 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.111515895 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.114726164 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.111881229 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.098863744 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094819473 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.110664301 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097645255 seconds)
  done (took 3.346416011 seconds)
done (took 20.380295162 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.145934972 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098743066 seconds)
  done (took 0.972630935 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.137701754 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.152547171 seconds)
  done (took 1.020948047 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108898939 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088909948 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134312463 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101519356 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.088797311 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.105969615 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114953449 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.105206236 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.089612283 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090614893 seconds)
  done (took 1.762943626 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094068626 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094621255 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.119709595 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.132780739 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.096679258 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.108091892 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094073477 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091505768 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111113781 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089364876 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094202733 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122664494 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094955042 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123171839 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093689455 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094926633 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113081499 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09403999 seconds)
  done (took 2.599449216 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.088808853 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092697908 seconds)
  done (took 0.920081201 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092411866 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090099026 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09008723 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107485469 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089070649 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089035943 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.104141093 seconds)
  done (took 1.400788546 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.483545454 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.260990363 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.353541388 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10603207 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.142335677 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.345758192 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.143806717 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102470325 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.219179274 seconds)
  done (took 2.930079856 seconds)
done (took 12.341471414 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089131148 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.217668403 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.618044775 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112181988 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.087904967 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158225126 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.280004697 seconds)
done (took 2.30914648 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337785894 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141527098 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081434698 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089624104 seconds)
  done (took 1.388204369 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08061306 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097475264 seconds)
  done (took 0.923430768 seconds)
done (took 3.057048104 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089747501 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.118390068 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.104336619 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.087072217 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087471226 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.086121815 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.105929299 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.086895433 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086324173 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086257751 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.106057508 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.08682513 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.085776125 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103138555 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087236345 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08695414 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086142491 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.102792746 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087324848 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086446469 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.101994631 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088194791 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087142495 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.085438024 seconds)
  done (took 2.998784418 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.104496898 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090095195 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10617406 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090754081 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.091784969 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106466331 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091941659 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.088910009 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.106747839 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089354125 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091901292 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.089753875 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.104869087 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.091969964 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088492859 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.108105791 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092567052 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088632178 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104196633 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093318229 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091035408 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10531056 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.092915253 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091834742 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.107798253 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091672229 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089968828 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106655976 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091133288 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092508874 seconds)
  done (took 3.629152597 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.095604325 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.084559592 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086210201 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113870098 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086433844 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08727043 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.099967541 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086460271 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089206664 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086951762 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.106628601 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087845867 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085217779 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.105116074 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.089448146 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09014876 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.0956774 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.103217594 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085919029 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.087900284 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.107429401 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086030398 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088117685 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087460516 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.104433827 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086216643 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087377431 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.103269369 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089239881 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087558711 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.090236643 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.105870753 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089480015 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.09609288 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.106335671 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.087866715 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093162047 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.10049766 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.088801898 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085145214 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084307156 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.104196682 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085751315 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094218142 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.105069556 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.088627543 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084651826 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.087649649 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.103947203 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091171826 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084201887 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.101063559 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090765467 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089576656 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.090068847 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.103471523 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089573696 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085139092 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.105089739 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088464697 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085582838 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085170876 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.109058266 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088904014 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.101827541 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.111846357 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085296034 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089541734 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.105715544 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.093896518 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090925694 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.113390425 seconds)
  done (took 7.494739525 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100392965 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096340828 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088222967 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105943842 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0897251 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08842072 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109384274 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08878055 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089454042 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.110717085 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089085581 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088588494 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090075964 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107736291 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089537061 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090379964 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11081618 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089000413 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089595472 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106164395 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089908887 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094921386 seconds)
  done (took 2.857446208 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.232117818 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095755815 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137466368 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117920464 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.104624342 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118823363 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094090346 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095222309 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108251729 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099024216 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097443848 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108833937 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106813823 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097753241 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116235558 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098600327 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10809244 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100408418 seconds)
  done (took 2.795042652 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10175349 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090407304 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.129534811 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091413153 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09051568 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089914358 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112619528 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109973307 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.107774124 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092972973 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098230826 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092409151 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10787481 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091228951 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090017388 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10717148 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.090905476 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091427729 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113447601 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096551168 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094834724 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11417825 seconds)
  done (took 2.964501196 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103094042 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091546521 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124953126 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094586908 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09022873 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089863238 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.112748618 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090411523 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.095735176 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.1092827 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092085563 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089587841 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.122021381 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090726435 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.095131644 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107371303 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.090989251 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090315891 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106900424 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091060028 seconds)
  done (took 2.736720013 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.166264852 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120863496 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107487571 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11409288 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122731909 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107728603 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112859113 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124291143 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106836989 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132428196 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106835816 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10578327 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13064223 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11134703 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105691911 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130816346 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114152914 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130653091 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106272511 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10484348 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133405002 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106085341 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131241743 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105885337 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105960233 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123216273 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10651219 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109179995 seconds)
  done (took 4.047001086 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089649144 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088728096 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088795793 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.105859784 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.088924784 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.088623833 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088911161 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.10677327 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089398276 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089403911 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.105418317 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090428105 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088884803 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.087960236 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.1070709 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.0889092 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089292996 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.104627593 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090060859 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090328657 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089227254 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106953385 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089387117 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089119333 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08906593 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.106933461 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090248436 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089595182 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106115008 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090102423 seconds)
  done (took 3.580122273 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10236648 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099202229 seconds)
  done (took 0.968092627 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.097216954 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103215571 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088554453 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108176129 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097366296 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08985618 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116053892 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097409016 seconds)
  done (took 1.565016213 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.138106042 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.157831117 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094064556 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.101296453 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.158621258 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.149551546 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131852147 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093834446 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106083385 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084238821 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.132491274 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.101562123 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09046416 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086797546 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109097262 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097608352 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.090010254 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.117960142 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097768659 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.091451164 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112167487 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095995544 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092197756 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.11998207 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08582887 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092323848 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111807699 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103122186 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086573224 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109497346 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088747835 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090071039 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.111785234 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095652561 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.091585293 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.15949075 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098044375 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085699478 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109411729 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095480913 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121964102 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.109305106 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092269991 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.086967687 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110663875 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.094561743 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.094111381 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.109521349 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084543589 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085199773 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.10830619 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087089063 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090039878 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108632332 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091513942 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096682533 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.109530158 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087460531 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087201061 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084905876 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.106261661 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086586751 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092555555 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.112108361 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091338736 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091004593 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107442829 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090912006 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092466443 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.109057538 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090621648 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10409484 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110731179 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095398561 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094910539 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.110000792 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089433564 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095536343 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106858091 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091293687 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.094810323 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.138616577 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092936258 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087319288 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105281528 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097658579 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.092473872 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.092389226 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102670031 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09943528 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.092648012 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.109670638 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084490316 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088198666 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104189789 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.093686948 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084319579 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11018371 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090630368 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.095266786 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113160524 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09048872 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091812074 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112592772 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097531294 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089673863 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.152705652 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088260298 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085373857 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.112385603 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095529719 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084630663 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108717947 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089841013 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08835243 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085531656 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114252284 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090356096 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09158355 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.112341638 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093452879 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091404546 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.110480987 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091295789 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087064541 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.111254569 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098916018 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09236551 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.110354264 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.091744649 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.091298909 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089171721 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.114104908 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088471184 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095586842 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107312727 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090550451 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.091340198 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.114584248 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09216987 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086062528 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.108189544 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093296679 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08966406 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.112150851 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.0935969 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086329595 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101350911 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092223269 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086947088 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.090868791 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118005252 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087564677 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.092726618 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10532372 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099401696 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087382933 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.114358821 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093482644 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096330839 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114720651 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084182371 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0885088 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.110773984 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093617533 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088447251 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.090679701 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.109831517 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097235876 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083360685 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.112999278 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08426432 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087763088 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.114869807 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094415626 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.093958688 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103854071 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130162776 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102378981 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113770564 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091059532 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.089693617 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.093886663 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.11253726 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09442063 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09558203 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.114479276 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088230432 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088944833 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11428894 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087511645 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093983157 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107908553 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092987931 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083876283 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.11017593 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084489707 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.094922504 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092386517 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.113658863 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.096314792 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09247292 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108049493 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099976859 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086577627 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.113709789 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084957893 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096107217 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.119898507 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.097997354 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095578627 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.109059739 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090118538 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092009415 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098726238 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11287094 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091542647 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.092249858 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.103742604 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086091868 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.097093926 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.112145409 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088683773 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.091659356 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110933581 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094065913 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.088928655 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083417813 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.11480232 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094662407 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086810664 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111442488 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088629512 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088553635 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117801098 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085683422 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088084876 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112230189 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097593005 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092420708 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109358901 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.094702428 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096877161 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.111822978 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094469293 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090894906 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09877336 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107592032 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091385813 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086793142 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.111953619 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085783203 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.093006617 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110139721 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089432592 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088177756 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112224799 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096941437 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.096228402 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107385154 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.096371111 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.097045576 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.095746273 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108129294 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.097889506 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087146629 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104389736 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088694613 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084128957 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.11187595 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088470646 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.095678413 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.108031822 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091548177 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.095356184 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111453753 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089987292 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.096238131 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119123929 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086741781 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085749758 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106628217 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091558947 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.097046148 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087304451 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.11149772 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094535863 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09539993 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113757312 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089792868 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09208131 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.115847265 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089974862 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.097318724 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.114699527 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098848777 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087039538 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.094540798 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.107899828 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095119888 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084570976 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110110456 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091136019 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091661713 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.107322529 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091056643 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087431796 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104073436 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088902526 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.097687399 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.108283937 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.097184796 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.099225451 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108562939 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090512028 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087236114 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.11512084 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092062402 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098420882 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.092477574 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103727008 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085453472 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.095315146 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110071093 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097221601 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087243488 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.112531837 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098435751 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.095293466 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.091141045 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.119158226 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100322058 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.09579864 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11744643 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086693406 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088917032 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114791036 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092262638 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.095039326 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.111873065 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087470262 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094663782 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.115616212 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093450871 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.090297796 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083905154 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.112169438 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.097771269 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.093328219 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.114307059 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.093819812 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093473812 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105664735 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09692224 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.096436778 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.110159436 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099417653 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092390495 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.095157366 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10794445 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.097446377 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.092941127 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.105496946 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086009138 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089423077 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.117267365 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087451417 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096054602 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.096407633 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.109874867 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091390324 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.095335496 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106980963 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09499663 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095993071 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108872163 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10451221 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.093479428 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108879447 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.097881045 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.097531007 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103215338 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091013466 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090913305 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097346812 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109702132 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.097887093 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091789949 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116621823 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.094366497 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.095970145 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.116707144 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099554605 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086005052 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.117343706 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096418605 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.093839475 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087775318 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109761124 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087063884 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090470527 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.117595036 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090538608 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099560635 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.116545008 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090926077 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089479161 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.11669945 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090808299 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098032044 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107300239 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095357985 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085575852 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111995954 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091417085 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.097587902 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087810304 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.106271539 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09773067 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.096235217 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114962723 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09644385 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.097762851 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.105121121 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087951963 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.094816935 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107270027 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102766494 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094435476 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089497223 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110861703 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.094964816 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.093498216 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117480556 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088312313 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089287336 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.111474421 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094962945 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090437121 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.1060766 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097134321 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.089817441 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.1129628 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092226256 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086730561 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110192257 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100668239 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091132531 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087048606 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.10911585 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098994242 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090775573 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.108313877 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0873081 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098243678 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.11367955 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099489526 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089417723 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.111539925 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091177048 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.094466245 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.117535519 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092244463 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091830853 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109146607 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098241639 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097108122 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088838502 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.109063688 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101759498 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096355907 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112031497 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095400389 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.091550634 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117013369 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099976938 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.094568416 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105097886 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088016573 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090046151 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085450471 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.114852986 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098078157 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090811146 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.108825722 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097471457 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096356242 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.113445092 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.094806589 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087461414 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117265521 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.09042037 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095201282 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086502216 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.106355954 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095352556 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097613181 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110290247 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093312168 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.093464853 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.114215984 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088149278 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090637834 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114440836 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098187626 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.097766574 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091299677 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.110977834 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.096364783 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102204406 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.114335016 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092650628 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100340524 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.119343703 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09452876 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092126489 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114729561 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100470313 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.094742472 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.118491031 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091541622 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.09244906 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.118204806 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100025384 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102118702 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109965741 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088176564 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.097481536 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090325582 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.106538077 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097775847 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09898476 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.119139458 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093803186 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089748586 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120549662 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0992279 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092989493 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.111068294 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092537573 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.096856031 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109215771 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.096720459 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090327254 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.118711504 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100678271 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099252342 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.101430167 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.107192868 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099791034 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093764043 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.120956541 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095188534 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087457489 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.1070153 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097041469 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.099894426 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.098568661 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.116984592 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.097442853 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.096782215 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.113217547 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094326052 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091405639 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.11934951 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.098566271 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.094169934 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.113329323 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093527225 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094420425 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094702739 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.118644301 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.099890831 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093356253 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122507636 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100732655 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09191908 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.110137358 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094493069 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.095075333 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113160771 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098419778 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090440787 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106521772 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099794424 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.100425119 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092670859 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120498526 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10076579 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092875314 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115470401 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101728717 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.097921185 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.114042652 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095359418 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.09611534 seconds)
  done (took 60.088454288 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.141741304 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101526214 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114916957 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096724264 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112593591 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117887436 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096887737 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097581832 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116040896 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106241237 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096305011 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115237323 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11218995 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116256186 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132927431 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104702809 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114522271 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097980724 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096343059 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095819146 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129477348 seconds)
  done (took 3.134372774 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11341942 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.108783905 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127454712 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110229977 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101837555 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128306652 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107671899 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127047672 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110791365 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103899307 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130328163 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10649414 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.1230693 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105857379 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1046697 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12374535 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110354269 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102648027 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127787956 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108012373 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122982525 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109159403 seconds)
  done (took 3.333220366 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.125470831 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.098777166 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093239242 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.115845753 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099764232 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.095636422 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.116803226 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.09835829 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103910056 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090855266 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107164993 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.091920138 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.094076854 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115015695 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.090601787 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096859097 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.121451519 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10025345 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101334491 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.094967956 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107157329 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097172866 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.096898927 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.104821992 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.102399704 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101089338 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096138105 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.119689848 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088701535 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.098871066 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.115339611 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091075635 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08751935 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086792746 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.107306065 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.099473215 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.098097673 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.115094721 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.09847181 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087556655 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.095913263 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.119915426 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088634847 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.096240899 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.115840219 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091249707 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.099838034 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095903426 seconds)
  done (took 5.678807733 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.125092804 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160770218 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100517551 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.134147474 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132843622 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106480212 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.098357019 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.134715817 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099559556 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.120784758 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.112175163 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.108943557 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124726915 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10393587 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101290139 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122619087 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103403992 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098596598 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125669855 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100504557 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.123966012 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.103930929 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10992875 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.128655112 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.339439495 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099859705 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119191706 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.103698046 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109224882 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125671641 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10492801 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103389495 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.130250814 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10266739 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.118665171 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.102999317 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.110808367 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.120820485 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.102074344 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098023885 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.12048206 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.104569547 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.101060168 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.131385783 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102010206 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.101095753 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121453736 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099666235 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.10794617 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122473942 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107366815 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.109593852 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.121643106 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.101217086 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101878024 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.130248412 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.100481404 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.118818937 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.103792941 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.109641656 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.11817013 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106617932 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109458523 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120522294 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.105232267 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.108936474 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.123258543 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102795534 seconds)
  done (took 8.844472272 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130486361 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103285097 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131010278 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111797975 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10252934 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125180106 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104642335 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.102235092 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125107831 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10841038 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122194283 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.194501628 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.121036518 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109015744 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103605223 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124140948 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104723729 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102148702 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12425551 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104214928 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.102761437 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132813606 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104465808 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130796331 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114788377 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100721799 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125076067 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105291779 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112298715 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125785511 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1147913 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.123526008 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105946257 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111622728 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135028406 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103991099 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098312334 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124020767 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106413249 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102490845 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.120461446 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113005417 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.123506013 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10283145 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103875423 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124595521 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113164762 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.115508221 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.129231731 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109094594 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.102837925 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134090757 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104516797 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.123844357 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11243561 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.117659364 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133885927 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111265112 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12432113 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112916625 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11183325 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.141459364 seconds)
  done (took 8.054653799 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098773814 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097876338 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097227372 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.117768069 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099788214 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097447204 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0968579 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118409231 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098416236 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097082472 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118376741 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099376658 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097274855 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097417154 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118500878 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098414711 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096762428 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116627217 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099262423 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09944671 seconds)
  done (took 2.895945943 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108235677 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114042553 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120202009 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106798251 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100043873 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126242881 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102378466 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100222876 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09913035 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121626224 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108884243 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127842246 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100943197 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106031986 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127932304 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106415597 seconds)
  done (took 2.613970159 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118216063 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116018247 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.184437615 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102815013 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121294518 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107432182 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100494843 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101677725 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.12063535 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106609379 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.102636949 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126374421 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101661139 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100100293 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.121218603 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103375644 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098363926 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.124106942 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102185762 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.160340885 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.125391694 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10174112 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.100734293 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.125349089 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101634844 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.103924026 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.128577694 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100275013 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100850793 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.12136514 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10239046 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.107307608 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.120474243 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104983653 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100442032 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.121506662 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.100184549 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100681726 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123555767 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102600507 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10151867 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.101026215 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.121276015 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103703342 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.097453943 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.123123078 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099289969 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105457607 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.122209885 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103698806 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100198452 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128699151 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105548399 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.10886371 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.128681312 seconds)
  done (took 7.004214005 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11199066 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101055034 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132482954 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099377533 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101508975 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.101233717 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.122200639 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102766467 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100801994 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120527486 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103321483 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102776505 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121311652 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103247449 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101955991 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121609269 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.098859951 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.100725163 seconds)
  done (took 2.784607424 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105683142 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102714451 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104584412 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122047304 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10148615 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099297189 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120983392 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.099954429 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098639922 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100138404 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122701798 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101574515 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098855708 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.121441069 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101338155 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099494116 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.12344424 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100400165 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100524613 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098026311 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121631993 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099809572 seconds)
  done (took 3.189851106 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111218469 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.180749783 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106893748 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.18954173 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.096658134 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.094729313 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128669662 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.097873166 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.1111107 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.11872812 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096889378 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095029569 seconds)
  done (took 2.274373383 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12637086 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135601613 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121665882 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102643971 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108167349 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126256754 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105403814 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105146806 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13370811 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116085778 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126597938 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113835335 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113228614 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134484632 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10921597 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13093952 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105356009 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105242028 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12181086 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120672275 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104448904 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133670807 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104971539 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104433304 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126687683 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112838264 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134446185 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117716497 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105345705 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134625748 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109761028 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105023614 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13561023 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115569951 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124152032 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114111541 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104423911 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141116787 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110320213 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134780166 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102461857 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108766106 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13316247 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111440172 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132975113 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106580483 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110729627 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125969992 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10724476 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125751673 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131873378 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114230378 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130105761 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112895289 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112672414 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146166497 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117553331 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13539453 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109313068 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137173688 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113500682 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109111196 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135130317 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116549846 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131193748 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113786575 seconds)
  done (took 8.719148151 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139033638 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101406611 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126900494 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116885075 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135770475 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107306099 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108817708 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126966745 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106880063 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102925068 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168926777 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106564918 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11209758 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135328728 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105813408 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126212111 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106625275 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114481579 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123226314 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126411723 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126487802 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11556676 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112961347 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135099068 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117867864 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130254667 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106797918 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106235692 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127480484 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107633699 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111523876 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127676477 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113595214 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102214047 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135813472 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106059412 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105827656 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13510198 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106829515 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130748545 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115934981 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11985767 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12798916 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106470592 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138373092 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10718761 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106144271 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12344968 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107683772 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103866201 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138264595 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117077448 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139110796 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115358454 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105993365 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128322478 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107266381 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105779093 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127201088 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111402366 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134808091 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107633102 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12547658 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12688697 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106627556 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113555159 seconds)
  done (took 8.683224029 seconds)
done (took 163.682932848 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.145810275 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.185408722 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.141172715 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175078004 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092776547 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.126165039 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.145726839 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.143441431 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091325493 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.113906261 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092602977 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.093864559 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.179910077 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09327475 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091746314 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.093322464 seconds)
  done (took 2.854013506 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.190506089 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.302785005 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106838422 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118039223 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098596394 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096538659 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117325363 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099738634 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097017746 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.124533697 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.097711655 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092794532 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.124345689 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.093843813 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096575094 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096928644 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.125902406 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098001564 seconds)
  done (took 3.040567126 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117385283 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.139229556 seconds)
  done (took 1.120085806 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.127308913 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.210093384 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276947761 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.166399894 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.1179069 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136830576 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.145831672 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131980076 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.185481022 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131156794 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110877408 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094408737 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144740242 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102668647 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.135286174 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09647656 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125261851 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.132365717 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112247187 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098745339 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139734007 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101134415 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102015772 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.132252537 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.175632713 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131163393 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101678295 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100270487 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121551679 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113246908 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103868204 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13617716 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109403703 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175224885 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100009375 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.172128395 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102949717 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121189254 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110911785 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097301774 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12379565 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100902742 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131003638 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096490099 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101208558 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.125172718 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.101697191 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.09998295 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.125704359 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.105703903 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.104381946 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.126306132 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.17080411 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.105363717 seconds)
  done (took 7.710453776 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.859829261 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.138358309 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098985786 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.003352243 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147891267 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1123189 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.823301649 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142997335 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254306011 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.854723754 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114881807 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111191542 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.254785044 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255408192 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.257313593 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.374996712 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.693322042 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.13463304 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128019425 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161969381 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106870661 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146190174 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118878814 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.517221586 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.10013135 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098553491 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127586498 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111527772 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173419261 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099450842 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123880212 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172981169 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.289678427 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206976263 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120256653 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09858367 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099476348 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18128157 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271126777 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213442433 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.190255351 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096272079 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096780573 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128272934 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117885153 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094743688 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175893718 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188860974 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188256928 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103199972 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.13217696 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110052586 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105600459 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.17364385 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096067794 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.37426782 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359506936 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098707874 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10665829 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136420847 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268515751 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.0994477 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228175846 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148547916 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210578874 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098211593 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.863663076 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.181189609 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097993816 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127841815 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105442882 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10370637 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128925707 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164630111 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.500935615 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110676319 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125093453 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098054094 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22943744 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098720163 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120699821 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.154821769 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122470264 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106766782 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133760796 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111581966 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188610349 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.266524433 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118037025 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106968103 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126994489 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111658041 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.120678994 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211115041 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22160252 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.172397187 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232122763 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106705055 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178888675 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182073374 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105448095 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18634223 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105541902 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.138215898 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107022738 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217470936 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154585819 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101000654 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127096733 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108735385 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155138913 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104017214 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107334546 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.187536511 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.553156547 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.180238298 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095992479 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10351554 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130355062 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.155170892 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127934795 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26076684 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108242187 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.182742655 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106625613 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.117684741 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10842175 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178213138 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109680256 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128313861 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108830453 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108068525 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.275590273 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216786023 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132852446 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246104516 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.175462767 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127270667 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168467726 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129827589 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163522421 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131595722 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107014099 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120796882 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.85942652 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113766645 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.1059187 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126947259 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184727894 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121787719 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102881651 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098459344 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11721209 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.83759711 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103954172 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097338425 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10111047 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129194813 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107123581 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12803048 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105832877 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175454349 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24329512 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111921481 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12849405 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100691409 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.177065253 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.100353348 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099856172 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123229619 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100789174 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108284879 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127443634 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10253894 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19223612 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.172186354 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227543952 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.632159916 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099558146 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098797619 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.260060092 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100605869 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319540642 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106126691 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.249904407 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160123995 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120257387 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357796977 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.183079164 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.183402509 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.123606463 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.165611934 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.118140865 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108744472 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.174978128 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10104531 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106273278 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.17390938 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135247309 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113221197 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.273822982 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098673444 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251021185 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.11796644 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.163139882 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122889427 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107658161 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321352006 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098418901 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140413101 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.175599587 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104206546 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099694953 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.671421911 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.121481997 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11183948 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106167082 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.248383918 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.160200419 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130778724 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108875198 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133710549 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.154742708 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23172851 seconds)
  done (took 47.278332671 seconds)
done (took 62.863463129 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.293597592 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.25367771 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.302630003 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.207226723 seconds)
  done (took 2.011851001 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.253562937 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160825312 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.226986332 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096552334 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.234992557 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.095039729 seconds)
  done (took 1.957393097 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.482860378 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.362362723 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.301136517 seconds)
  done (took 2.041614478 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251368005 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237536675 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.328211593 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.409418595 seconds)
  done (took 2.228403014 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.259258189 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.124152116 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.122321612 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.202961444 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.224954349 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.208165282 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126859909 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175760521 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128014177 seconds)
  done (took 2.511731155 seconds)
done (took 11.637099221 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.27213075 seconds)
    (2/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.151364185 seconds)
    (3/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.339263465 seconds)
    (4/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.106564895 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.186501081 seconds)
    (6/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109496911 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.135021909 seconds)
    (8/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.272376915 seconds)
    (9/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.218172774 seconds)
    (10/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.31086197 seconds)
    (11/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.252857444 seconds)
    (12/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.319459768 seconds)
    (13/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.305171467 seconds)
    (14/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.238980307 seconds)
    (15/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.265096442 seconds)
    (16/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.194106082 seconds)
    (17/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.073571669 seconds)
    (18/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.22668004 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125674632 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.232197833 seconds)
    (21/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.143169314 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.157449302 seconds)
    (23/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.157065792 seconds)
    (24/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.125604579 seconds)
    (25/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.202913003 seconds)
    (26/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.220146857 seconds)
    (27/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.149617251 seconds)
    (28/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.199040166 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.126935255 seconds)
    (30/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.264494534 seconds)
    (31/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.074809954 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.144831619 seconds)
    (33/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.0758012 seconds)
    (34/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.208837064 seconds)
    (35/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.280298253 seconds)
    (36/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.073837842 seconds)
    (37/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.125886809 seconds)
    (38/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.108615854 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108441461 seconds)
    (40/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08754713 seconds)
    (41/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.110213594 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.104868133 seconds)
    (43/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.13936985 seconds)
    (44/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.074338895 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.125966501 seconds)
    (46/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.189599954 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.074102862 seconds)
    (48/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.229264179 seconds)
    (49/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.170754418 seconds)
    (50/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.272371316 seconds)
    (51/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074096142 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.125945498 seconds)
    (53/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.169685945 seconds)
    (54/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103103414 seconds)
    (55/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.131839991 seconds)
    (56/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.0753223 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.130668078 seconds)
    (58/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.180032259 seconds)
    (59/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.244926778 seconds)
    (60/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.099016083 seconds)
    (61/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.083859875 seconds)
    (62/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.075556689 seconds)
    (63/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.076923836 seconds)
    (64/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.153840786 seconds)
    (65/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.15068341 seconds)
    (66/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.194875469 seconds)
    (67/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.075522369 seconds)
    (68/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.083465968 seconds)
    (69/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.093834702 seconds)
    (70/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075098549 seconds)
    (71/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.074520821 seconds)
    (72/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.194548859 seconds)
    (73/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.189244814 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.124871032 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.139627021 seconds)
    (76/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.074210855 seconds)
    (77/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076224954 seconds)
    (78/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.18369581 seconds)
    (79/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.134212141 seconds)
    (80/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.074354607 seconds)
    (81/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.122194382 seconds)
    (82/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.18187372 seconds)
    (83/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.196437448 seconds)
    (84/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.167880034 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118559915 seconds)
    (86/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.139138781 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10421647 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.162419946 seconds)
    (89/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11071728 seconds)
    (90/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.169318947 seconds)
    (91/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.131248284 seconds)
    (92/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077493441 seconds)
    (93/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.108146981 seconds)
    (94/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10045615 seconds)
    (95/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.123016319 seconds)
    (96/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108991806 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098759394 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.132596929 seconds)
    (99/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.078451295 seconds)
    (100/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10080646 seconds)
    (101/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.10387827 seconds)
    (102/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.195029565 seconds)
    (103/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.101044356 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110292043 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.149411549 seconds)
    (106/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.170161949 seconds)
    (107/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.075800022 seconds)
    (108/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.100593732 seconds)
    (109/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.171406073 seconds)
    (110/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.087329378 seconds)
    (111/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077226499 seconds)
    (112/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.156398909 seconds)
    (113/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.168930757 seconds)
    (114/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.07461919 seconds)
    (115/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.098345999 seconds)
    (116/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.105298799 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110056141 seconds)
    (118/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.07506322 seconds)
    (119/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.134369894 seconds)
    (120/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.077847344 seconds)
    (121/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.078101304 seconds)
    (122/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.074950139 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.131112055 seconds)
    (124/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.075846644 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.129959151 seconds)
    (126/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.075010846 seconds)
    (127/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.195130036 seconds)
    (128/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.088466076 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.101076561 seconds)
    (130/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.081986632 seconds)
    (131/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.12954936 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.101607352 seconds)
    (133/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.085662934 seconds)
    (134/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.075549724 seconds)
    (135/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.099788893 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.101894914 seconds)
    (137/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.076833283 seconds)
    (138/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.14789137 seconds)
    (139/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.10147851 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122649329 seconds)
    (141/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121841308 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.123911915 seconds)
    (143/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099606738 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.100286029 seconds)
    (145/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108012674 seconds)
    (146/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.099673927 seconds)
    (147/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078902658 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.109632608 seconds)
    (149/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.098928079 seconds)
    (150/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.102166657 seconds)
    (151/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116782156 seconds)
    (152/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.07566563 seconds)
    (153/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.078090678 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.125232948 seconds)
    (155/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109493928 seconds)
    (156/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.10775512 seconds)
    (157/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.165091538 seconds)
    (158/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100886052 seconds)
    (159/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.10074857 seconds)
    (160/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.076080728 seconds)
    (161/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.100568935 seconds)
    (162/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.145009476 seconds)
    (163/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077427695 seconds)
    (164/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.082949062 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.097153712 seconds)
    (166/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.165576996 seconds)
    (167/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105069234 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.106687511 seconds)
    (169/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.099795668 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122223557 seconds)
    (171/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.135613641 seconds)
    (172/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.121003932 seconds)
    (173/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.075731661 seconds)
    (174/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.107786406 seconds)
    (175/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.082646562 seconds)
    (176/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.106297456 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.125288756 seconds)
    (178/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078286758 seconds)
    (179/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.13634722 seconds)
    (180/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.075202713 seconds)
    (181/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108419013 seconds)
    (182/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.078069577 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121785784 seconds)
    (184/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.077664044 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.125039158 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.1019602 seconds)
    (187/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.0780121 seconds)
    (188/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.074789035 seconds)
    (189/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.075389989 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.126901386 seconds)
    (191/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.111525812 seconds)
    (192/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.075283123 seconds)
  done (took 26.009367571 seconds)
done (took 26.913368309 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.207873906 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.12618069 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108356937 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107668056 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.197280314 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116115218 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.147995804 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110393442 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118418315 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.107477181 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.123544946 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12107122 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106400714 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.200624148 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109277793 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.125321461 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099261671 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11750791 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.148789857 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.1242956 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.196693077 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102300208 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.118390418 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122306608 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.172568824 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125931517 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108710933 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.108538509 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119539474 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.135730305 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.10951961 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09873225 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.150197601 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.123110159 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100057202 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.134037333 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100136402 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083826954 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.131893502 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112001936 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.120557656 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.108270166 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.133374363 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.10080917 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.108865128 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.134135149 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100227076 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.111986365 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.123496914 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.109798062 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101906704 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.149398618 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109609793 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.099040095 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.1218698 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102375346 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.120516143 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123173568 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123004162 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101090018 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.100335448 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124773996 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111055479 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100475362 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.13152785 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100845506 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.109635745 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.133941739 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108995903 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102560129 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100034523 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.132755555 seconds)
done (took 9.678346132 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.104862243 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145293852 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.196861178 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.207373725 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127410466 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113803584 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.139057696 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.123724976 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113013285 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144041345 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.136667328 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.155894209 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.179380479 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.139986028 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115471082 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.111886841 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.136498818 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109401124 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.203875092 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124386081 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12381895 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.140440941 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126963825 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.14086566 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105245674 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12577477 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132199637 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.112915214 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.10390316 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.146206157 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.125093793 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.104307287 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.130817798 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124500697 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120970825 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.139196613 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.115948743 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112591361 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.131221221 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105338566 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113248541 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.1459112 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105280036 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.138852573 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114706809 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119544707 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.111660809 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.143708539 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106676729 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111114959 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.131531436 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132468062 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.1166413 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.145838207 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.115801532 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.117245564 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.143766654 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116960324 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.10622718 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.142192795 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105469828 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.103980538 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.13077033 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126294903 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.131714564 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119089872 seconds)
  done (took 9.429312327 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.122690039 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.132502216 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139552542 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115197697 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109353836 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123781637 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099587464 seconds)
  done (took 1.791646499 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101402137 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.181109148 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.205879043 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.204604792 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.177081696 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.215185625 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147030389 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100954088 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133571401 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.13496913 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.181335296 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.234464153 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109283343 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141242725 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.183835255 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.124936479 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.186284751 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126845314 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114669638 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207789111 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118347233 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.130823791 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.137928434 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100468779 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.202782341 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101921049 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.259130633 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118355665 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13409983 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115197853 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113949501 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203768705 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.178605925 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.140978078 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109010348 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.207189193 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.17573568 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.140324786 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.191340697 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.130563284 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.177071029 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.139860111 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116273389 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.11443537 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.141884196 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.167909209 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.14549187 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115227363 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.112991003 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.210838279 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.110609731 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.206042338 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.110928063 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.139766914 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111321359 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11638824 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.14724928 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116054325 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.210912596 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118230494 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.207354393 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.181631765 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.204102517 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.207580656 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124138174 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.206642674 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.174133434 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.139222465 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110443093 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.114906247 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.207836506 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113718373 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.140534216 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.171448978 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142505201 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.182805634 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.20953391 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11227009 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.139164898 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.105421089 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.1126833 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.12623433 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.172452721 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113011248 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.140074049 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118610915 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13766683 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117315436 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.105136183 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.149127888 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115941461 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.112218711 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.144866436 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115590053 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11615481 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.212674318 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.110117297 seconds)
  done (took 15.421585685 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.103523655 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103876742 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106445084 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129102095 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103634264 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102273981 seconds)
  done (took 1.619890634 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.139153587 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115990912 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.149571742 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117583423 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.1595786 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.211449166 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.215172665 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110085749 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.157164963 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12562455 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.212516593 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.190213696 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.213754583 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118280376 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.21871382 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117730835 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.216781281 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113486899 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.14989159 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115352682 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114581841 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.145139964 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114525535 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.203923507 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117307194 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.116771346 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.13527098 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124266301 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.121600984 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.136599445 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118594016 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116230119 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.134729434 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109592528 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.218251262 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108171193 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136879954 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12096697 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118280284 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.140928332 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.192647468 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.137521666 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122613671 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.11837074 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.13669696 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110411498 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.117842838 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.13577491 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.193552101 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.145121509 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118524176 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.115802032 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.143580142 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118746355 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.132674312 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111570303 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119710309 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.218559222 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118778031 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.134708793 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117304929 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.116988795 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.13691985 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122350824 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.116215951 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.144778005 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108904354 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116026936 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139387972 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118325483 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120044151 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.141780681 seconds)
  done (took 11.031943429 seconds)
done (took 40.238773299 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.635481282 seconds)
  done (took 2.597850963 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.904721347 seconds)
  done (took 1.870382449 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.694940122 seconds)
  done (took 18.690227983 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.515518443 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.589366733 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.021279212 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.147727379 seconds)
  done (took 3.240096828 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.051319112 seconds)
  done (took 2.035510637 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.292654144 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.264765512 seconds)
  done (took 1.529155111 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.71186102 seconds)
  done (took 1.69754828 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.511260286 seconds)
  done (took 2.48419205 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.348616339 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176155127 seconds)
  done (took 1.511585972 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.601164053 seconds)
  done (took 1.590579066 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.560456069 seconds)
  done (took 20.550724788 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245565791 seconds)
  done (took 1.23300644 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.282093162 seconds)
  done (took 1.270948331 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.582691431 seconds)
  done (took 4.572519067 seconds)
done (took 65.846697389 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113293557 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.11526649 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114459035 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.138495218 seconds)
  done (took 1.462354027 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.121383806 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.11579884 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.13912931 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143459017 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.120842221 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115511348 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.140754409 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118041602 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.114738861 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.143043072 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.115911663 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114599816 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144190209 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.114426926 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.111932884 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.143083593 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.11895578 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.115466279 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141931534 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.116881121 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.115613462 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.141757738 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.119304816 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118085164 seconds)
  done (took 3.997434357 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.111798621 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106750614 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.107774763 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.130333749 seconds)
  done (took 1.451857513 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.124104754 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.127644424 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.149921539 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12312374 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128179899 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.151228608 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114974913 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113044366 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.139937134 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.123684583 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130760071 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154155921 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127777774 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116194965 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.151069326 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110505335 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11592711 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15296192 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.121880997 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.123318383 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.141842744 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122349242 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119643767 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.149685347 seconds)
  done (took 4.125364455 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.188211731 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.127357845 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.171311046 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.1587699 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.173529203 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114284596 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.141931359 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.14676955 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.121306023 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116680659 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.144128034 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159643454 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147737469 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.11784652 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115475782 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146271799 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.127819537 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.119872926 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.187908198 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120745103 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149465031 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.128165875 seconds)
  done (took 4.119395869 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.118017802 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106613588 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102081363 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.132915671 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.117789874 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.108575757 seconds)
  done (took 1.685856032 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.105908222 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.10122864 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10044004 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126407409 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.104822393 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100150623 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099397935 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127583103 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101738925 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100661835 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126466516 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101096278 seconds)
  done (took 2.293996347 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.329635147 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106341661 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.132977062 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109912765 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111830733 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103353862 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.144945185 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.105583857 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268885045 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.100979838 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.143656698 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.196700961 seconds)
  done (took 2.855070255 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197318829 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143963302 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310202617 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360742022 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157396499 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184124779 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263317941 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186480249 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199727168 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134709348 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207145341 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156490869 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17516582 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180849504 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162848245 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158005477 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190399591 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202397385 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164456427 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234637413 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153530665 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198588556 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185951654 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173857627 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13560312 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184292377 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115723092 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123605948 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187970514 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185048505 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167262283 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173589985 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136706588 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214603502 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247332288 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167817053 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269237822 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155969187 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.16829056 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.212204798 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255534061 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137192107 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20853229 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174963851 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126436316 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210962897 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148976729 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.207130984 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129878215 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168985065 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17695714 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201663394 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197651431 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134600089 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301869322 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132133534 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164832705 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16497091 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211023539 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195731503 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200415962 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120703604 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202411913 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212906891 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235279676 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.138410107 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186995368 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122652351 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189267915 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200865665 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202852556 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181441764 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.197020621 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155519918 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166206965 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195508656 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149245096 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226448146 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19337625 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.117598195 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170453621 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13098676 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122124323 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.212080105 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119815521 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238579481 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128225884 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.339983535 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206744101 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151714866 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181832545 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154632227 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185926653 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14379232 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.127181492 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139504265 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.184407446 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15241305 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124563278 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178494202 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135070619 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.151601193 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147966171 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119108475 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19317144 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13014681 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184813045 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189598069 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129142983 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199578076 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145101477 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.159700589 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19009731 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216437956 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127212894 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154273386 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213893576 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192778722 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.134080277 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199098762 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219578963 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.148279305 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130519872 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186767929 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218828579 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140831403 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222200239 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135022433 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159419251 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136067489 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195480266 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155810778 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.17891606 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125370476 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.186683098 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188698034 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151441298 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13688399 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203418692 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130662357 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121398151 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161149583 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132077924 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.165653141 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146669902 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135085822 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17672757 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161191631 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188259916 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177952866 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131888538 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19192844 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129789859 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.188671462 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146043073 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117019026 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197111822 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219208038 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126277947 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177070554 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.184782947 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205715224 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167049848 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155174904 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178787818 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152698433 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118314948 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18579333 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165809775 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184914011 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184166322 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206254758 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187888703 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158927375 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172892976 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190340427 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.18250627 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180323779 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140544828 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193478961 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163197996 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.145074277 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121461722 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124801196 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160261611 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127033137 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132719714 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199829901 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187492669 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17713144 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190917275 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133210077 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215698873 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122114742 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183253641 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.169017986 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164649022 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.212881104 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18674869 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201012213 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137515508 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187666978 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118158871 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122507251 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.158122879 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157566596 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162430868 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133046793 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163331528 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18850038 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194988167 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143748004 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218112006 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186334084 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224018611 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119793559 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.15803047 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194420126 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163742933 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.207780275 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131218759 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.181239765 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188858758 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164637427 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187194948 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191622475 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173149539 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218509133 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.187442492 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127948418 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170765487 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15822218 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133338751 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18824773 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142627046 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15476864 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148405675 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.163479608 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136255799 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204968791 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139565168 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201337844 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156077056 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193293053 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122225417 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165023804 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172201948 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169214544 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103857666 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19158591 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189861935 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172332304 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150277594 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196731765 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126675055 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.344255614 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182378891 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198573855 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160801342 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137301092 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165861011 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187252782 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183397042 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181815909 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163949599 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199855312 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193780308 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.1390103 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156980995 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145386166 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173854875 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.135695707 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.172820075 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.158448547 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139908627 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207774184 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162164642 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168074013 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199974585 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.143042731 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.175593343 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136112708 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248402811 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161814449 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19506892 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.159142578 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191005915 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205291358 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12131913 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12256809 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.154952079 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18100488 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124883938 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198894219 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.196781915 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208104986 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169851911 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188069707 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137544579 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.151719632 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162321628 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143076 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212859803 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159741076 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133727785 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214055208 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.124731704 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156048501 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156521397 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292751634 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143570984 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195550735 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105447304 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.287639627 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127090217 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129117933 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187522777 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191328667 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.130069645 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180042352 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1967333 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136384435 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19020918 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131952383 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204772855 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210136676 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161666506 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195319196 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141123609 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185592714 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154767249 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200886524 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141605732 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.173074622 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155062761 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220267858 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177140703 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.156365756 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163839976 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194148857 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165454369 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196087902 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135729698 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208735946 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124906592 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189837704 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135880772 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15097436 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155592677 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.198840669 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129449922 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200409384 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190721828 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13024436 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124421617 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172214067 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161161883 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163669034 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.12757175 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205681793 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125626337 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201663778 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201223073 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153741836 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163955529 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168934386 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127609043 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133570763 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167412617 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127999358 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.170415572 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204586161 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127444799 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200933801 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18538167 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159100855 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180050797 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139423333 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.330088249 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.154285056 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185486444 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176622546 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220910965 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146733376 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200264747 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165145186 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174903999 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158256655 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171177543 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.217040464 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188549707 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.162866323 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156297207 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139591516 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134825441 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.159487664 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148270153 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192990331 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137736672 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.161034582 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.164429498 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169611454 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.143209284 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138443051 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224897597 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175154802 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179665826 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213023689 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133234328 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200229613 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168251587 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155327037 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159444115 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196544237 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141072361 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176347259 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.131849733 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.16268998 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208469279 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.151004681 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157269212 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196145867 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166168145 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195558218 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132066491 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201870972 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137038693 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200703004 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1252954 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149021309 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196837437 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130391289 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.153306455 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167149381 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18304062 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.161739736 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167367946 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173057069 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218847073 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121268307 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12971511 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293393166 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183591322 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192734137 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.161878493 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135000929 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141623312 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183644863 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.160185142 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195977111 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126700123 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154348287 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141559345 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.177744619 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141794329 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191651152 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169056103 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182278132 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182780385 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131470416 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281104749 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137831715 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195321597 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113736255 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.155793032 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138034925 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130512068 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167425225 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207448341 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20795692 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.189177907 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.14317811 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160956693 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124620957 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12848531 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191714044 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145504084 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193906208 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142719762 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.129721605 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139326886 seconds)
  done (took 84.37608863 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.158708435 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150200788 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.164916962 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219264578 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191007445 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286245357 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226530317 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241314659 seconds)
  done (took 2.725378585 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.116644508 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155459255 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139085179 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141573236 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.107103727 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.438728942 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.128822807 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.144229678 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.157921783 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148311371 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.131721593 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.501743804 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.144169697 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.11540474 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.142482486 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.105972146 seconds)
  done (took 3.896576133 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.012693145 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532786728 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.274103784 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.292502565 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.247532937 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.19828581 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.738838137 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.186337864 seconds)
  done (took 12.575671556 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.143387481 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.132998842 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.353928565 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.25336601 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.146610589 seconds)
  done (took 2.126001494 seconds)
done (took 128.673727315 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.119872124 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.119518108 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120298751 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.149604564 seconds)
  done (took 1.592226558 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.173159773 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.088889659 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091348729 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116543426 seconds)
  done (took 1.563713274 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.428328112 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089194836 seconds)
  done (took 1.635975386 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.144964671 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136008316 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.162916127 seconds)
  done (took 1.547871552 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.130865125 seconds)
  done (took 1.223776679 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118521425 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.112989352 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.230667684 seconds)
  done (took 1.560622707 seconds)
done (took 10.226835646 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116689043 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.924693122 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.429147204 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130231593 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.706944038 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.423322415 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.449675999 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171653184 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171159863 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134021592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128126007 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.686983147 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.461633069 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.871043937 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.418962898 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.898160935 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.690428298 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.108192178 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.141573455 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109386157 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.428907527 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.133244707 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108629338 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.10856848 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.713803462 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.416562441 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.105961462 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.909606874 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106291109 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.109967842 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.421844515 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107766062 seconds)
  done (took 20.930956397 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114384827 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.163453467 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.142081855 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109376557 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.109380227 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136299619 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119740741 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119142408 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198880292 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10737462 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.15749398 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.10756374 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112652704 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.135245037 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.132239625 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.106949381 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.13689107 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110183194 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115097386 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.136000417 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.130020623 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106909937 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.135660622 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110390905 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107028097 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.155053304 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108239188 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118515394 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.134479825 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11209381 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.111724373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.106566482 seconds)
  done (took 5.109371393 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.153889019 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172468365 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144785104 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144032895 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182163972 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.1106017 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.219430017 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145364472 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201094377 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108445867 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128589875 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.134339758 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148246309 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108251098 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.16115095 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10804952 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.110691149 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.137893459 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116808795 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109082352 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.15881898 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108092323 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108852567 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.138481324 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108775099 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129353598 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.135949933 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120963201 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106542974 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.139191914 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113770075 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108028082 seconds)
  done (took 5.427531911 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.121559965 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123963834 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.129471215 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160124844 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117523532 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.119997808 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.150382088 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118724399 seconds)
  done (took 2.148091019 seconds)
done (took 34.716415756 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132859487 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126609445 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128378501 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.152305818 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.182647013 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145197446 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.125494648 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115220689 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150461392 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.12982532 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107272426 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.114192959 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156197879 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119386152 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.215600412 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.122371111 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.218873139 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.186855179 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.1452894 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12613083 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117156103 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.22002533 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.12004488 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.114922205 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.217653054 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.110763958 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.207920498 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118086293 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.147113748 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.110548743 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.187325352 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.150027395 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117865569 seconds)
  done (took 5.933903935 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.202029629 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118262198 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.147541418 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.117355563 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118060934 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.145851848 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.205928881 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.145041129 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117249747 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.115645348 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116084407 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.219265669 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123485004 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.144279084 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120648903 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107136114 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.236256874 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119276422 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109067513 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.119677698 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.113341193 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.115885998 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.246738907 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.111862584 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116001249 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.144211787 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.12083461 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121203941 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.117390383 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.148788686 seconds)
  done (took 5.319101603 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.122964596 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.129673858 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.133595879 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.212795772 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145007069 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.156185148 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136444159 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.129400543 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.166912423 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.110571997 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.123698297 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.17342771 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125984714 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.119219376 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143177846 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.128270012 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131231087 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.138801203 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119040405 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12626735 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.159748713 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.127391454 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.133527523 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.146344991 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.10923822 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117099153 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.148872112 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125039551 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.11840496 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.12417878 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.141879863 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114478595 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.112681076 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.173558318 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113447245 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.122213224 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.166678596 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122282646 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.123185101 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.171201808 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.113443746 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.110994142 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.165229098 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.163572576 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.110691511 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.154013342 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122842853 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.123310258 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.138240555 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128551327 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.151565165 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.139037119 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.130984963 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.108689383 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.139942225 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119303457 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.109950215 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.14229796 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.125173029 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113636916 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.161980646 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119422828 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121068706 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.111389008 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.151741542 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.109372855 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.108818874 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.143750794 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.135961858 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117640537 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.175432449 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111787407 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12257162 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.151944168 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.121972845 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12248347 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.138379912 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123176321 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12151118 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.11581158 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.15177806 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114473375 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.113462381 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.156206888 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.13199313 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123778346 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.151183476 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124199899 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11389972 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.14180338 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128832401 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.11096643 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.1448105 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.124330354 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111128384 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.113828489 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.154500941 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122861823 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.107557407 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.165353847 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115443942 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.109630778 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.165510518 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.114245273 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.115210229 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.148444489 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.153194283 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.109799962 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.152052438 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125267096 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.111232908 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.146693523 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116841916 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110584336 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.127885451 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.156336656 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118198005 seconds)
  done (took 16.563938455 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.313193622 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.267427829 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.20952216 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.301781836 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.122535072 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.234829593 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.297031152 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.29991914 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.111703707 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178196706 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.16227173 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.267529 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.141579385 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140379775 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.301437574 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.353551976 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.169695547 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.148766275 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.177263791 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125829046 seconds)
  done (took 5.453079096 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.131218606 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.145630865 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.162913003 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.139384792 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.120838945 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157391207 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.111044209 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132312723 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.15212202 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.121832754 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.113876054 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.156493215 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125767353 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.126799052 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.155918573 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145058855 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.118450343 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146176935 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134331162 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116094976 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.129503762 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.136337982 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120107157 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163145425 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131099621 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.121766167 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.13914372 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.117440519 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117616334 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.148435495 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117811412 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129562352 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.146793308 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104255271 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.122921048 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125385002 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.14831958 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.114764222 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.115940109 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.143384498 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127728756 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124098435 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.148857487 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097104967 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131587952 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108858014 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.154111871 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125558821 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105713495 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.131443155 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.153437724 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126147569 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.117947316 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.16268314 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.118851378 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.126970944 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.151015839 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126866395 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.11561573 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.139132394 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111978698 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.115116333 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.119455779 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.155259592 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123956368 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.16020506 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128905414 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.111839023 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.114936197 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.145480751 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.115098088 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.12561155 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.161362775 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.12091379 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.11801356 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.152129003 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120882539 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.092948504 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.147405434 seconds)
  done (took 11.480509076 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137828534 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12309066 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.129697821 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.175623772 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125728229 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117892133 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151552643 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.131230715 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126319133 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.161361105 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126883109 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.124677042 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163471317 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.122124485 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121270256 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.156229068 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126486038 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.148378172 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.159797782 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141448006 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127272426 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.147452568 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124374797 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123378709 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.170318566 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124321548 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138399087 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.1565873 seconds)
  done (took 5.017810864 seconds)
done (took 50.877282478 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.284407591 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.453559226 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.235917424 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.230120074 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.261292765 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.23623104 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.235618986 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.241256598 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.624972612 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.205273661 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.231704203 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.23082605 seconds)
done (took 28.605393309 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.29804273 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.775975757 seconds)
    (2/2) benchmarking "String"...
    done (took 1.526667147 seconds)
  done (took 4.426211526 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.220954301 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.221418624 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.468027018 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.22151214 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.239407097 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.224459537 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.22388989 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.227043891 seconds)
  done (took 15.947224389 seconds)
done (took 26.016772451 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.271848078 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.397552895 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.463911817 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.222302755 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.253169677 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.222204113 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.241258077 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.241021489 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.222273517 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.239816165 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.633441659 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.48332814 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.223978605 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.596748093 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.224827919 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.24406156 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.238165114 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.457993657 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.224780009 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.252687752 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.201872566 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.201548921 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.250777847 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.222709396 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.229168799 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.237394355 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.276625854 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.231285766 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.402308399 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.249448504 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.254532668 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.227346196 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.278982001 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.225525495 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.2288409 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.231249098 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.403714971 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.229791535 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.208458469 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.252249448 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.411074168 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.241242232 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.224758047 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.247485867 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.243372349 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.265838003 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.212505164 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.355636784 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.24689848 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.229592262 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.237347078 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.591574732 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.228197238 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.236214117 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.239001582 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.438780061 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.238036066 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.273439767 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.247746172 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.238788278 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.238611815 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.232888929 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.24710919 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.228276223 seconds)
  done (took 145.117999695 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.225073708 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.232417144 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.232008148 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.238676662 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.227718526 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.232395882 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.227533069 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.226781462 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.229659213 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.260719216 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.226322741 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.227734064 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.230912741 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.180917192 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.235429633 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.242164448 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.228211389 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.243520069 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.236330788 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.228066355 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.247153776 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.227245357 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.228642509 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.229133645 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.264517604 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.295325835 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.253040597 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.249014887 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.238667489 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.228827568 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.273328489 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.233922473 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.838649098 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.101657075 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.245145328 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.24135107 seconds)
  done (took 81.135563251 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.227257464 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.22736578 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.2289411 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.260802415 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.23003809 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.796730871 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.802571317 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.184456986 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.313088045 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.572224275 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.447216719 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.228490691 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319807813 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.242331877 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.229562219 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.24620287 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.255890594 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.233424657 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.23066442 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.799056578 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.248419891 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.395578617 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.406237487 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.246836352 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.261797731 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.619330467 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.230871884 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.261857608 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.561677824 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.279325426 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.230687946 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.551990114 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.303360736 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.340346897 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.233102119 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.262941661 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.230280557 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.512567543 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.231686543 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.232032836 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.234393304 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.852244648 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.231963645 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.799982013 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.236149748 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.175908245 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.231647356 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.231251922 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.208355624 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.864953091 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.232724154 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.23206723 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.234305176 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.231018504 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.231867124 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.263386008 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.202030214 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.328283235 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.23272958 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.235287475 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.26656702 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.23362761 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.230893721 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.324982679 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.234866486 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.23390186 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.293447984 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.328479697 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.803426812 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.236138008 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.232428742 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327139567 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.349888825 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.234583788 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.233349759 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.233640318 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.233171583 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.343276312 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.233516904 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.920210006 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.41037438 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.251026439 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.577536737 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.334406445 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.233504426 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.233110268 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.55868233 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.238762077 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.232989069 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.928261163 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330148517 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.234291315 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.23490455 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.235463453 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.917935212 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.805817908 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.475183046 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.238764996 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.841848392 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.240187675 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.095270993 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.791261757 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.845165279 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.235503416 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.235922023 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345984843 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.412276797 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.252821928 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.234652462 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.575923147 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.235187636 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.294054301 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.239866583 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.636687325 seconds)
  done (took 376.85266259 seconds)
done (took 604.22944505 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.096865438 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.054277329 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.206478964 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.062056196 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.045392821 seconds)
  done (took 11.599598971 seconds)
done (took 12.733393504 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.428635947 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.426718076 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.297784793 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.435001503 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.271117992 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.444377943 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.426551856 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.252943376 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.354390485 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.319214656 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.351472409 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.289570941 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.26994371 seconds)
  done (took 18.700631699 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517048718 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.251171714 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.301404385 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.498010342 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.286226943 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519199366 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.570697341 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.250935996 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425087236 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.258630445 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.25852476 seconds)
  done (took 18.273166824 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.518380627 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.252099264 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.306062613 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.506826953 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.287761044 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.531400142 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.559092183 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.253449913 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.428120657 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.262258504 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.258195151 seconds)
  done (took 18.30052892 seconds)
done (took 56.410708218 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.274605169 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.337845114 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.277800226 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.260855945 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.256095919 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.257074588 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.261273369 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.256387627 seconds)
  done (took 11.318330168 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.254368023 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.254126267 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.254805183 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.255033103 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.254113792 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.253432121 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.25254046 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.254337321 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.256105268 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.256765103 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.255312678 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.254095381 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.254206558 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.255249086 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.255594434 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.254586463 seconds)
  done (took 21.212642664 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.260432218 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.254963569 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.256443172 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.256459865 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.255727497 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.257610256 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.258415071 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.255012796 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.256020436 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.255776859 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.257757487 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.254534273 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.25647063 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.255167835 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.256204546 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.258750386 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.254543811 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.25725091 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.260388722 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.254928781 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.255183309 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.258652345 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.257791817 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.256822333 seconds)
  done (took 31.300138506 seconds)
done (took 64.968037516 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.241442749 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.250478445 seconds)
  done (took 5.630614164 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.315864745 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.317141285 seconds)
  done (took 3.772954998 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.258116226 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.255785493 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.258194246 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.256681419 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.257859428 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.258580685 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.259134842 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.258442456 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.256718448 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.258408091 seconds)
  done (took 13.717059227 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.255811903 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.257785149 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.257967246 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.258323325 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.257147355 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.256268334 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.257989709 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.258403036 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.257355687 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.255737884 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.258205615 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.257564068 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.258578081 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.258221983 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.256824449 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.260234773 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.258031608 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.257943808 seconds)
  done (took 23.778534592 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.272564201 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.278173578 seconds)
  done (took 3.690823703 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.386766594 seconds)
    (2/7) benchmarking "second"...
    done (took 1.301291128 seconds)
    (3/7) benchmarking "month"...
    done (took 1.362233849 seconds)
    (4/7) benchmarking "year"...
    done (took 1.35581583 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.299666987 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.278147726 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.300013266 seconds)
  done (took 10.426538683 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.261682961 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.458314168 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.589709482 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.830600326 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.2607708 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.264482452 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.171762045 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.26429807 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.266266071 seconds)
  done (took 14.511042557 seconds)
done (took 76.66868031 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.244772624 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.32867904 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.258503699 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.262813201 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.599805768 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.262548194 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.24553816 seconds)
done (took 16.345218049 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.233744845 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.228624784 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.237299454 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.26812485 seconds)
  done (took 10.11090051 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.2563211 seconds)
    (2/2) benchmarking "read"...
    done (took 1.572876482 seconds)
  done (took 4.971556525 seconds)
done (took 16.227432732 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259740154 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.259980481 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.261125995 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.261190236 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.261299981 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.260617277 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.262395511 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.26224247 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.261113016 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.261056278 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.259183758 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.258181276 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.261665045 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261091761 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26135804 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262173305 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261249049 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.260577955 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259735858 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.26174248 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.261841314 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262842953 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.263133921 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.262297794 seconds)
  done (took 31.410662548 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.262671078 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.26473869 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.261411153 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.260764818 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.263759633 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.262306616 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.26271257 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.263820912 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.262229328 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.262141019 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.261701027 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.263905096 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.263148423 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.26210831 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262521735 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.262622695 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.263995504 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263057284 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26343115 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.263366394 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.262273652 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264813677 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.263615109 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263692071 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.263797039 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.263796408 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.265557101 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.263105907 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263427106 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.263640146 seconds)
  done (took 39.038991731 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.266645898 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.264612638 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.265246003 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.263559735 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.264158779 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.264983513 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.264415698 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.264032143 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.266023967 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.263792288 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.263445948 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.264545656 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.264651577 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.264788591 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.265118251 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.265195218 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.26580725 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.265838407 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.26501312 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.26444252 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.265513664 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.262917425 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.264137325 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.264284042 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.266119826 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.265508935 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.266228508 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.265768638 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.265952311 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.265162166 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.263800605 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.265662145 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.268342645 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.265072527 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.264952966 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.266590405 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.266732959 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.266728434 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.266189269 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.266200637 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.265638146 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.268174045 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.265528481 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.268083358 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.267055601 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.266780098 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.26560418 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.265760993 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.268439677 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.267008899 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.266780983 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.267103781 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.266732123 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.266373464 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.266631671 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.267621241 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.266808639 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.267041434 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.266825922 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.26704611 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.265820301 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.266769632 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.267546565 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.268040859 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.269194846 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.268397693 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.268683036 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.267383921 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.268129819 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.267008539 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.268523922 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.268121899 seconds)
  done (took 92.306061606 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.268737633 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.267563785 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.269747498 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.268386477 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269469474 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.266979428 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.267384239 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266394313 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269101143 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.266270497 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268946475 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.26943912 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269519256 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.269459037 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270957694 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.267835212 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.269057811 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268934251 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.269084582 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269480715 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269291456 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.269246681 seconds)
  done (took 29.060864965 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.269113816 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.270453507 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.271069582 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.270537343 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.272213847 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.270827374 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.270627029 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.270836227 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270656162 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270124094 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26926078 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27227333 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.271569069 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270581621 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270672962 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.270781 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269309231 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.271668424 seconds)
  done (took 24.023667371 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.270400378 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.269567374 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.269680818 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.270458456 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.270313901 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.269821071 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272054147 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.271640033 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.271790986 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.271400852 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.271886966 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271993825 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.271147031 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270896462 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272061865 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.273490415 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.270234927 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271583679 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272600393 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272002313 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.272029218 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273369969 seconds)
  done (took 29.121785389 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271096636 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272938448 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.271514163 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.273057131 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.272724081 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.270721607 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.273251466 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.272632252 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.273732022 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.272662338 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272208516 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.272358067 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.275152754 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.272050939 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.272684875 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272358236 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.274205237 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.273951252 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.272170049 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.271823987 seconds)
  done (took 26.605281671 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.274183528 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274555318 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273141479 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273155039 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273291361 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.274622657 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272131243 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.273065736 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273616689 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274536636 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274884151 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273283511 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273976982 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274833593 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275332663 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274538417 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275322299 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275986328 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.275855472 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273509221 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275814968 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.27617134 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274545721 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274974117 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275596395 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275907461 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275548897 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2751677 seconds)
  done (took 36.841271123 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.278511604 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.275241372 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.27404637 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.275756737 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.274795297 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.275594028 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.274906811 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.27557861 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282757466 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.274674414 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.276798979 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.276620998 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.27590512 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.275603264 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.275910424 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.275931362 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27599517 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.275723657 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.274614558 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276265303 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.277594506 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276969927 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.276971124 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277742008 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277324105 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.276458855 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276785873 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.276905409 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276163668 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.275000586 seconds)
  done (took 39.445891381 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.295978639 seconds)
    (2/2) benchmarking "in"...
    done (took 1.295513211 seconds)
  done (took 3.747454666 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.276608044 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.277180173 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.278359452 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.27630111 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.276370143 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.277429089 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.277909567 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277913873 seconds)
  done (took 11.373770088 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.269616055 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.278976131 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.277912473 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.277915908 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.275657987 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.269878353 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.278077596 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.28253016 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.270171742 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.270450627 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.271594224 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.270867787 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.275428383 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271207381 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.273466671 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275593057 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.280642509 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.279785945 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.279042068 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.27982051 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.279127992 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273605563 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276412519 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.282263389 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.272165273 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.2800747 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.278754247 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.284200708 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271065934 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.277171908 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.274647624 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.281776332 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.280173275 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.281064934 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.280367756 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.282298153 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.283879006 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279706688 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.282408077 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285796579 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.281850154 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.280335341 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.274543395 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.279810901 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.278559716 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.284557897 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.282466216 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.280284829 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.272720506 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.275163111 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.283085664 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272760901 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.283838244 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.278884928 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.280293773 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284329968 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.288875448 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.273444752 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.276237672 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.282485228 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.289666087 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.284704844 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282072495 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.287019744 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279756064 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.282613892 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285145315 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.289017667 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.284261568 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.281569813 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.28404981 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290949 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.287853787 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.287960249 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283453946 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.281938798 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.276822553 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.285776541 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.285135953 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.285477481 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.288510143 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.284087065 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.28203885 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281729163 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.278967526 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.288573612 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.283808833 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.28268399 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.276240405 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284692483 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.292385705 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.284515586 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.275967765 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.278205714 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.280146016 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.286483204 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.274244509 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.276900133 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.284557401 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.283787863 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.284420342 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278679911 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.282055574 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290694639 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285222802 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.285034855 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.291594513 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.277934257 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.289320313 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.292280104 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.284537247 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.276473765 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.280312491 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.286665976 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.277052637 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.282918084 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.289446082 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.280253497 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.290475578 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.285070289 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281962276 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.289209283 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.290215319 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.285174377 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.279229496 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.288507107 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.286840915 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.282845553 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.291384895 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.286942913 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.284384417 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.283222366 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.292261039 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.281723352 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.290356638 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.281353172 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.289297809 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.28768017 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.287407121 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.282636652 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.287484068 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.283563272 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.285410202 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.290031665 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.293532063 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.284963901 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.292597689 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.286596649 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.28697542 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.289197696 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.292661709 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.288393653 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.282943331 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.291487742 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.280725643 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.289618142 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.279527594 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.292030295 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287052348 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.286167123 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.289665979 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.278315104 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.284120866 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.291985259 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.286669567 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.287608011 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.291675381 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.28639423 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.288244266 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.279729757 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.290035106 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.279254051 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.281819561 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.292549545 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.287962386 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.290481046 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.285893755 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.29655087 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289965347 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.289699402 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.283115734 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.285600893 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.294074628 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.29069019 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.297411011 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290042063 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.288249805 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.282655625 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.28558429 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.29130678 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.283017532 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.29270418 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295785514 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.296106013 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.285752265 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.289674246 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.280846073 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.292094563 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.28950849 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.296966784 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.288547134 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.290537869 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.283194127 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293582948 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.286593305 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.293708704 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.282021144 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.293577301 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.291926311 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.292761582 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.292217111 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.28577925 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.288978678 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.293632547 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290582177 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291991333 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.284054113 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.293206903 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.282649167 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.286883843 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.29504063 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.293010439 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.29303258 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.297892966 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.288838827 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.296831741 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.29215051 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.286908973 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.293584084 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.290047592 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.291221319 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.296444472 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.294295924 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.288570611 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.298464359 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.295159851 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.286362445 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.293439853 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.299201799 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.292582471 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.286309662 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.297098378 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.294299943 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.292373433 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.292070547 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.286492667 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.297447713 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.29468122 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.302140778 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.287456342 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.296307326 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.288422298 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.297071105 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.289394924 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.295302347 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.293829365 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.296554492 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.302661649 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.294881474 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289342461 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.298597408 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.293642153 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.295566898 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288028661 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.29712008 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.296350926 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.295752322 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.293514355 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.291256143 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.297274381 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.286481396 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.297486201 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.287480945 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.303732805 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.311001829 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300047161 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.297798478 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.298144637 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.296895805 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.29603923 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.288484509 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.291482363 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.293175817 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.291872171 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.288612927 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.297994974 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289161443 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.297326725 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.293530697 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.296888454 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.297998908 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.294984197 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.288076825 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.298081662 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.294979993 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.296124534 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.288055746 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.298403314 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.292718668 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.297631992 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.297872562 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.290806895 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.304009567 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.302844446 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.293817849 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.294921163 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.292189122 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.291148173 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.293987329 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.303241615 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.290336388 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.301123142 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.290018214 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.295551775 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.293105806 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.301402119 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.30742987 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.289955124 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.299532631 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.298555291 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.288807092 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.29205561 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.299264919 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.299481441 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.310031879 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.291929599 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.301034571 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.298111551 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.297695166 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.30025087 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.297839732 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.297843322 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.297325811 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.302577343 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.302634617 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.294066738 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.301021923 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.307650066 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.299090504 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.298752674 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.291112663 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.301969252 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.307496297 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.294585869 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.296896509 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.294443716 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.299882848 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.301069897 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.30035708 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.301204694 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.299193775 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.302615898 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.305538037 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.303456712 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.300744404 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.303048094 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.310725073 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.30310202 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.313469262 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.295126204 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.304518401 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.300143881 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.295259496 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.296560493 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.297302284 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.303204044 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.293722581 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.304241217 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.300710906 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.298820235 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.300657423 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.307872341 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.294828212 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.300886898 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.309382624 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.293838407 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.306604459 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.303067063 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.294252849 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.305863917 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.303049822 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.294021948 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.298140476 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.298073121 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.306291841 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.295772449 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.306712223 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29625435 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.306104885 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.303047331 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.302380388 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.302494421 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.302207079 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.29689079 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.304724214 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.302490322 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.313171248 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.29709357 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.302499429 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.294678385 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.307044356 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.313804529 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.297365146 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.309037762 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.303325517 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.297394327 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.300855523 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.307398373 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.296881834 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.306528711 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.294223195 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.300427327 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.297776354 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.303939883 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.308181745 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.307516727 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.296775255 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.298372446 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.30413883 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.303595919 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.304184925 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.300505039 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.31068677 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.296340565 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.298452865 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.306520643 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.297472742 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.310773184 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.299214998 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.302386729 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.301506375 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.308782973 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.304945972 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.303915256 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.297891286 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.299592651 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.311228799 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.310226648 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.30125711 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.300820239 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.308586156 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.29785117 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.301506761 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.301960846 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.301195956 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.302446508 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.310117486 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.300326754 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.299173478 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.300222769 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.307057979 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.309474772 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.309455934 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.302216343 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.313376065 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.314924861 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.314543603 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.299793181 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.303942586 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.302021519 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.306703698 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.308013739 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.299455481 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.313310132 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.313977825 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.311752781 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.306335704 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.309216583 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.299876142 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.310693099 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.308352726 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.304521483 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.314002396 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.303199674 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.314407538 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.307148067 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.307892607 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.2994453 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.300157654 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.303225674 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.303219001 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.309769941 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.30688543 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.311751302 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.307572446 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.314299121 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.30944085 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.307660903 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.307891851 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.30069819 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.309699124 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.302655601 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.309847292 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.310553138 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.304076386 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.310562926 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.309514829 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.303895661 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.304218968 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.313635778 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.309181745 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.303580356 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.308114596 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.313885328 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.320521704 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.309582955 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304095156 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.306395829 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.31193687 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.310014282 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.311110646 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.305471568 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.319114705 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.32262421 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.303154576 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.306702793 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.312699014 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.319307022 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.310977248 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.310747273 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.306477075 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.309057689 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.3153148 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.312661913 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.314230101 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.319027672 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.308261485 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.312737936 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.306079012 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.307939885 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.31333935 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.323816993 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.312628242 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.306521034 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.320307136 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.323349869 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.3101487 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.324782281 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.319393081 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.311901345 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.317637554 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.305709368 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.314340416 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.31016128 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.31808372 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.313742933 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.313304835 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.314291266 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.304462578 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.315556896 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.320189056 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.322490632 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.314226718 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.303084913 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.3079496 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.314397733 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.313350113 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.314664753 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.314635857 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.313957131 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.313587273 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.308788132 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.322604326 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.325397555 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.318107007 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.314596436 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.313195655 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.312920293 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.316923004 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30980781 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.317293484 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.315609608 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.313791818 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.311175344 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.324153064 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.315860421 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.308538157 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.309741416 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.308359212 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.31756963 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.321502162 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.334675537 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.317918326 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.318406364 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.317427371 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.315324337 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.311011751 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.318786566 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.31571167 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.311551264 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.311070415 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.319024297 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.316521135 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.316093842 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.307262722 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.319761203 seconds)
  done (took 773.86789906 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.316392491 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.315943982 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315483766 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.31544387 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.317328542 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.317062466 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315786893 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.316957528 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.315831537 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.315637557 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.317101327 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.316181736 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.315260038 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.315660089 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.316106429 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.314648634 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317797764 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.316591388 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.31710186 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.316801444 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.316193716 seconds)
  done (took 28.831718131 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.317131809 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.315248233 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.318412728 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.316906787 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.316557421 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.31780596 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.317011262 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318081301 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.317533194 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317185199 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.317298398 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317564093 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.317258531 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.317616583 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31744744 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318364161 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.318434963 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.316209063 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.318190632 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.319370811 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.31857393 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.318501836 seconds)
  done (took 30.177760194 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.318864433 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.319400218 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.313345027 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.321293282 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.318946764 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.318913028 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.318945374 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.319330139 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.3188386 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.3114533 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.31233975 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.312476926 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.314675936 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.322154623 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.314922231 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.324285967 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.319362991 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.319892454 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.318070164 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.319006746 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.324459852 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.331150087 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.318129644 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.312504191 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.320878658 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.318636801 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.319315622 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.321451943 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.313071076 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.322715319 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.320769276 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.314192032 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.323489829 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.322198697 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.315164118 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.322915033 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.321127618 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.32038706 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.319136274 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.318030631 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.329880639 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.322113357 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.324795675 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.334218306 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.321067536 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.315575965 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.325121796 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.324232349 seconds)
  done (took 64.547049853 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.322389391 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.321939186 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.321395318 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.322140989 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.322288778 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.32054081 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.320664607 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.324272387 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.322828775 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.322092229 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.322910844 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.322836239 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.322035104 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.322067613 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.32195086 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.321523615 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.32193363 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.32245591 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.322178364 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.322650703 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.32165243 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.322408502 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.323210095 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.322988693 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.3227263 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.321981486 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.323955133 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.323697119 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.323025931 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.322331454 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.323570335 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.322647984 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.322575681 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.32523611 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.323894613 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.324234319 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.324527736 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.324603509 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.322783421 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.324139518 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.324646037 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.324305647 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.323890593 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.324779005 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.322588921 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.324894049 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.324491407 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.323978701 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.324929765 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.324983082 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.324239815 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.32433311 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.32339702 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.324496973 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.326542677 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.325469026 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.325244101 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.325708807 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.326073079 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.32536775 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.327183123 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.326435571 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.32673921 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.326821623 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.327231039 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.326264319 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.326707128 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.326618513 seconds)
  done (took 91.215882514 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.325931643 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.326670378 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.327341151 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.327697992 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.328471543 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.327716115 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.328741498 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.326620199 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.328282431 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.327200751 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.32809845 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.326484833 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.32751502 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.327270157 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.3270317 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.327571074 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.328054568 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.328202586 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.328761161 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.328875928 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.327385812 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.326753262 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.328594001 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.328172415 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.327562113 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.326298471 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.327186979 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.326707965 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.327496483 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.326944802 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.329163571 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.327444506 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.32846982 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.329465552 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.32905246 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.328939135 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.330033997 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.329873833 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.329471621 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.328798083 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.329188272 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.328213181 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.328546304 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.327771759 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.329742061 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.328823853 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.329253537 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.328918368 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.328243162 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.32789098 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.329736666 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.327406609 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.329357466 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.328487472 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.3281282 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.328637658 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.328275719 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.328233581 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.328790793 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.328730162 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.327705282 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.325290903 seconds)
  done (took 83.54180816 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.327291769 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.326696988 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.327467148 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.32517868 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.326718989 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.328448102 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.32558295 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.327130916 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.328541307 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.327259671 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328851083 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.327390837 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328773088 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32767463 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.326687011 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328220519 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.326233003 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.328052695 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327621844 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.327107261 seconds)
  done (took 27.744986099 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.326284466 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.326524169 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.326007912 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.3269798 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.329100551 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.328468326 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.327223549 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327557878 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327360552 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.328193743 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.328627926 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.327508159 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326421866 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.328313946 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.327391314 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.326142994 seconds)
  done (took 22.436087808 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.327026933 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.32822749 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.328052499 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.328205899 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.329320923 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.326847394 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.327143677 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.327760978 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.326360042 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.328920851 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.32816779 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.328121246 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.328206291 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.327271288 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.328221079 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.326921886 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.325711955 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.327806672 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.326588762 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.328197726 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.327912892 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.326492969 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.326994957 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.32854131 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.327172187 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.328601732 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.327508554 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.328064267 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.327940427 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.327227132 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.326975588 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.328489907 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.326928897 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.327147865 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.329859546 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.327118564 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.326863349 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.326668443 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.327739121 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.32662325 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.327293563 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.326138517 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.32812091 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.328224675 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.329254891 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.326451687 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.328129165 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.329604212 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.329592163 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.329435195 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.329333147 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.329172731 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.328264828 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.328514585 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.328127695 seconds)
  done (took 74.231174267 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.326754107 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.32933021 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.328879481 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.327920612 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.326766888 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.329374274 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.329753009 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.331378418 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.328420824 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.328394998 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.32902837 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.331034783 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.329227747 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.32936632 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.329217614 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327549665 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.328770742 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.328978713 seconds)
  done (took 25.118349125 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.33121463 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.330666919 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.330042083 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.32830213 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.328907034 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.329959159 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.330061107 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.330070309 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330713764 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.330898238 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331623197 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.331731367 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.331446374 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.331558802 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.332112849 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33109527 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.330888288 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.331990453 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.329814685 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.330472833 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.331890948 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.330316102 seconds)
  done (took 30.477071718 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.322614151 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.321126677 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.321426028 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.335283021 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.331652081 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.32223641 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.32185135 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.322714551 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.337845917 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.346224044 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.341870192 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.330119367 seconds)
  done (took 17.156501938 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330305998 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333511007 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.331724078 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332168707 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332591916 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332671138 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333816444 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331762198 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33168901 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334116198 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332908524 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332220721 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332368215 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332969452 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333147169 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332078593 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334740398 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334638594 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332480707 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333295519 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334449262 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334392987 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333648273 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334247672 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333865721 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334243097 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334239417 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33508811 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333408013 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334163706 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333353907 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333647488 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334710948 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334156917 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333067015 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335518796 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333745748 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334292381 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334654625 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334996224 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.335962317 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333461818 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334994034 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33447224 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334599154 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334112839 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335957268 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33507648 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33674437 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335338968 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336175544 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335280036 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335329766 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335488285 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334562725 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335043551 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335309004 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334889516 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335897035 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336326076 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335580139 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336557107 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336308495 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335793588 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336382165 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335737893 seconds)
  done (took 89.26208633 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334572016 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.336383392 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336389895 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336397503 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336749928 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335827008 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337106415 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33780557 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33716773 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335519736 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33802602 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337834064 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334724544 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336602645 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337274288 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336256014 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33738539 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336435545 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337269113 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338259982 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337508507 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337924531 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337168992 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337019426 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337787383 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337537261 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336303744 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337646564 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337976829 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337812963 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339224571 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338600663 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339212708 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.33857429 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33777508 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339283246 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339330939 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338653003 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338333443 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340782384 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338230889 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337249929 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338459449 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340226845 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340734228 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338126253 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338020723 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339253772 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338082872 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338650656 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340478438 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338750632 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338962439 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338849617 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338188308 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339364717 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338164314 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335731748 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338498271 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340744565 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339532523 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337946418 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340750697 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338980801 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338526047 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337713015 seconds)
  done (took 89.514555877 seconds)
done (took 1812.243434142 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.493782303 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.447596001 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.327923967 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.334160618 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.328566147 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.33020216 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.344631925 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.328955457 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.329103396 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.329354924 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.32942412 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.519205168 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.362235152 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.328111557 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.328319279 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.423989801 seconds)
  done (took 27.093620064 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.356975816 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.337835942 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.446560987 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.336891053 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.356398839 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.52205166 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.394514251 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.337264928 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.508774725 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.357527197 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.32915655 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.356325015 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.333222446 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.328540516 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.356594551 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.520566599 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.600278217 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.333534503 seconds)
  done (took 29.319944793 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.784785089 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.347024018 seconds)
  done (took 5.340300674 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.355122783 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.336060023 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.335975855 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.333898249 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.325922683 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.343252797 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.331397141 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.330124221 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.348541531 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.462413519 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.337873586 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.348266974 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.351014302 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.332858743 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.34193771 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.379889037 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.501079089 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.34510841 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.340303423 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.338959306 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.332095868 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.427761593 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.378974999 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.345717536 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.460148293 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.344669781 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.334961427 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.340076332 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.450083419 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.343558079 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.332095274 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.335523188 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.333941981 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.278561715 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.880780461 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.330784404 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.374607062 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.343554741 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.339907558 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.483636637 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.337318489 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.340456737 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.339663859 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.872416828 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.443334932 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.449286628 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.348611711 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.332913148 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.335904875 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.400899526 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.340138349 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.337015914 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.392843729 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.12102527 seconds)
  done (took 85.514400244 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.364884757 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.326158425 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.511121292 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.352847345 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.327628318 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.344150889 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.327831933 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.611818783 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.392734468 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.330159221 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.640636686 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.954793082 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.335768511 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.398822529 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.363974301 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.39071033 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.344230462 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.335699423 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.327523685 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.333877423 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.90121416 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.328797713 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.328712933 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.418952844 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.369660775 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.866789204 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.344071047 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.328776189 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.352154889 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.328412692 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.912664427 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.344078027 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.379693766 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.333133026 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.617937191 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.727275547 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.682499246 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.329801446 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.370569905 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.331585197 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.358827434 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.855045852 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.69987327 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.336376562 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.330594941 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.853340068 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.328767519 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.338311081 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.339444233 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.600093655 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.328795121 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.331796118 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.345289558 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.33006189 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.329653002 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.395390993 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.396299234 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.867032449 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329615031 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.329077093 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.346835089 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.333861645 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.335814999 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.334246077 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.336051716 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.702906216 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.645155345 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.337463105 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.701180525 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.901471527 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.330237183 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001024623 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.333109055 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.348653436 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.378094194 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331453422 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.33189268 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.864929466 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.331259795 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.332419376 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.679610325 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.334225963 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.636279565 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.354240638 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.333579954 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.926341141 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.344145732 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.382659782 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.336808721 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.333148853 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.331453262 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.337197733 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.623665919 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.381082257 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.332013729 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.333316614 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.387668294 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.333964553 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.349510612 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.336230517 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.986113791 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.339725984 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.333767313 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.354539015 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.333973868 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.334316647 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.335691738 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.332322692 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.620929272 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.336682384 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.336733184 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.335954083 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.334188818 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.344162206 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.425535585 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.339322823 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.64066413 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.332656737 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.333574127 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.341400637 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.345008452 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.355891338 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.334489488 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.340280323 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.332534938 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.635888398 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.349997791 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.349260454 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.334914604 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.332858337 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.344620029 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.333309603 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.388280837 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.336663257 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.190057852 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.344522502 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.348171235 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.332692377 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.33999802 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.33293589 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.358428798 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.332793931 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.6402755 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.624960752 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.681810053 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.336459566 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.333373691 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.162282462 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.344552828 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.519877436 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.354584379 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.33389031 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.614119099 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.618195399 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.337725321 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.333436241 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.337133598 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.614479635 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.338158853 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.668066934 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.939690603 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.338373088 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.341579239 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.172547888 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.15481836 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.339577858 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.339195822 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.630044713 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.355318173 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.333822888 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.33289714 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.333702854 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.332525419 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.338972512 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.33549648 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.335169318 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.33259736 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.624452351 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.528381356 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.34968448 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.337716291 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.860780544 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.357530813 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.334817092 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.346919899 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.335106084 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.334078021 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.394633202 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.334753693 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.338575522 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.333036273 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.341961736 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.882907282 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.331661177 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.350809524 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.527335353 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089686115 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.33876748 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.336544109 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.334416283 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.392074259 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.887490683 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.362602243 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.633248145 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.345293556 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.374039267 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.335706673 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.348273529 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.890005719 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.339588366 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.350792363 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.056896524 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.33893492 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.816483646 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.3332652 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.336215753 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.984722484 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.336525593 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.335974397 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.33824978 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.333352404 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.663970751 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.337307167 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.347528243 seconds)
  done (took 499.526731291 seconds)
done (took 648.003162193 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.334203361 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.338568144 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.315244718 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.340501932 seconds)
  done (took 10.542452264 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.353102632 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.339488805 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.350110008 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.340087355 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.353231243 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.341248605 seconds)
  done (took 9.291588694 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.334566321 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.340144125 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.339702205 seconds)
  done (took 8.229854234 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.540246559 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.359110411 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.674458496 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.338781015 seconds)
  done (took 9.127561983 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.350659575 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.349483819 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.35215633 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.350128464 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.352855599 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.352124228 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.352734524 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.350240285 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.352567804 seconds)
  done (took 13.374838106 seconds)
done (took 51.781726963 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.52180003 seconds)
    (2/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.348747304 seconds)
    (3/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.45511173 seconds)
    (4/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.372596815 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.403551905 seconds)
    (6/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.368447529 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.370135077 seconds)
    (8/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.312979981 seconds)
    (9/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.432520286 seconds)
    (10/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.341417098 seconds)
    (11/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.543873237 seconds)
    (12/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.31948638 seconds)
    (13/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.318890071 seconds)
    (14/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.525696078 seconds)
    (15/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.581242042 seconds)
    (16/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.31234786 seconds)
    (17/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.235843042 seconds)
    (18/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.313457154 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.424033781 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.439731399 seconds)
    (21/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.542254353 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.584945038 seconds)
    (23/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.315051769 seconds)
    (24/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.423060114 seconds)
    (25/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.678465087 seconds)
    (26/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.526749983 seconds)
    (27/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.411886162 seconds)
    (28/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.451540861 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.492911234 seconds)
    (30/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.312591574 seconds)
    (31/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.317585658 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.423402104 seconds)
    (33/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.324745849 seconds)
    (34/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.09137058 seconds)
    (35/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.316423184 seconds)
    (36/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.319636797 seconds)
    (37/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.352019263 seconds)
    (38/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.392023557 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.409987631 seconds)
    (40/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.344305434 seconds)
    (41/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.318944779 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.447691521 seconds)
    (43/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.503573736 seconds)
    (44/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.320535786 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.579002906 seconds)
    (46/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.351812686 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.188265885 seconds)
    (48/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.519079243 seconds)
    (49/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.318269264 seconds)
    (50/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.456837019 seconds)
    (51/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.145505679 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.449782187 seconds)
    (53/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.437885331 seconds)
    (54/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.451198722 seconds)
    (55/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.376085281 seconds)
    (56/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.136156372 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.342377794 seconds)
    (58/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.470309855 seconds)
    (59/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.367076692 seconds)
    (60/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.345623887 seconds)
    (61/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.317804052 seconds)
    (62/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.319568272 seconds)
    (63/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.433503044 seconds)
    (64/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.339824779 seconds)
    (65/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.593774553 seconds)
    (66/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.571518642 seconds)
    (67/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.341180587 seconds)
    (68/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.587727625 seconds)
    (69/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.032364014 seconds)
    (70/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.185465072 seconds)
    (71/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.604715466 seconds)
    (72/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.482026367 seconds)
    (73/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.042351172 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.437610907 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.431247808 seconds)
    (76/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.285731621 seconds)
    (77/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.320109467 seconds)
    (78/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.322042671 seconds)
    (79/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.414892587 seconds)
    (80/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.090048826 seconds)
    (81/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.448852242 seconds)
    (82/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.417732676 seconds)
    (83/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.514797371 seconds)
    (84/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.151643147 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.428567669 seconds)
    (86/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.390032789 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.452125572 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.427617919 seconds)
    (89/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.405002477 seconds)
    (90/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.317800326 seconds)
    (91/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.388023447 seconds)
    (92/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.325002614 seconds)
    (93/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.381006712 seconds)
    (94/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.347188509 seconds)
    (95/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.459492204 seconds)
    (96/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.373073529 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.455833917 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.374588 seconds)
    (99/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.3973643 seconds)
    (100/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.361024411 seconds)
    (101/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.524151783 seconds)
    (102/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.473348953 seconds)
    (103/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.351288136 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.466541539 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.41857348 seconds)
    (106/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.480691657 seconds)
    (107/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.318266323 seconds)
    (108/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.322915801 seconds)
    (109/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.456383873 seconds)
    (110/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.45637861 seconds)
    (111/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.520154087 seconds)
    (112/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.490637489 seconds)
    (113/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.156922881 seconds)
    (114/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.187616641 seconds)
    (115/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.082912859 seconds)
    (116/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.422135602 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.450457872 seconds)
    (118/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.503687321 seconds)
    (119/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.408957356 seconds)
    (120/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.318264568 seconds)
    (121/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.374193989 seconds)
    (122/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.490589368 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.382180159 seconds)
    (124/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.16633152 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.490884807 seconds)
    (126/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.127860841 seconds)
    (127/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.131834582 seconds)
    (128/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.310085363 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.470260335 seconds)
    (130/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.54325207 seconds)
    (131/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.463650794 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.580820521 seconds)
    (133/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.321293333 seconds)
    (134/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.325101026 seconds)
    (135/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.508129795 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.458911524 seconds)
    (137/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.333741566 seconds)
    (138/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.32623811 seconds)
    (139/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.327899618 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.482172447 seconds)
    (141/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.436873848 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.493073382 seconds)
    (143/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.428722778 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.489364792 seconds)
    (145/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.390935485 seconds)
    (146/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.182140279 seconds)
    (147/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.325012964 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.419511587 seconds)
    (149/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.520021335 seconds)
    (150/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.415676587 seconds)
    (151/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.429807517 seconds)
    (152/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.069200629 seconds)
    (153/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.417816486 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.495259415 seconds)
    (155/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.380607049 seconds)
    (156/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.376463119 seconds)
    (157/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.545895801 seconds)
    (158/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.457619045 seconds)
    (159/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.349266809 seconds)
    (160/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.19311175 seconds)
    (161/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.325431122 seconds)
    (162/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.327058322 seconds)
    (163/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.331025742 seconds)
    (164/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.523412497 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.410610756 seconds)
    (166/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.463123312 seconds)
    (167/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.406907159 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.382586378 seconds)
    (169/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.487174027 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.461109338 seconds)
    (171/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.369174612 seconds)
    (172/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.428510006 seconds)
    (173/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.474373939 seconds)
    (174/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.378861323 seconds)
    (175/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.458329731 seconds)
    (176/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.380072997 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.451528476 seconds)
    (178/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.351601857 seconds)
    (179/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.441254572 seconds)
    (180/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.040202088 seconds)
    (181/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.584797754 seconds)
    (182/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.420814477 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.545422851 seconds)
    (184/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.374001677 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.497868346 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.372048906 seconds)
    (187/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.323132087 seconds)
    (188/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.050260837 seconds)
    (189/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.32393126 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.477872844 seconds)
    (191/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.501090139 seconds)
    (192/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.21972983 seconds)
  done (took 341.5242701 seconds)
done (took 342.74122502 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375149523 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.448604285 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.354356896 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.354279326 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.355211797 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.34954023 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.375409074 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.35519996 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.370116488 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.36951822 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.350614235 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.364457283 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.371122937 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.365934961 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.388660131 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.355734833 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.356298951 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.36473552 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.369899424 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.374030054 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357675613 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.356656163 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.383591674 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.356594484 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364979771 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367326973 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.361247472 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.348001829 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.382493449 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.370933369 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.351601343 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.366612335 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.373639362 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.367832115 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357652174 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.365654759 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358119805 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.450583215 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.378070334 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.366651328 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.366959571 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.375002561 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.362079255 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.361830203 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.369041585 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.385135595 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364304758 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.371259428 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.361565874 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.345589414 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378681859 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.370613777 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.369359586 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.342017321 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.355009237 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.378262535 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.367294992 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377910199 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.366824422 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.35938111 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.391680778 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378293169 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.370184803 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365486076 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.364632363 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.376619956 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.369293162 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.375580356 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.367072376 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.35973791 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.359029561 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.367476953 seconds)
done (took 107.756800158 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.48386545 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.356865676 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.514641359 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.367816371 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.521558584 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.487672719 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.365080874 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.367662206 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.367646939 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.158992942 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.367099062 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.367085808 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.363531931 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.367180561 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.478819539 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.366269758 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.365449718 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.05771371 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.372756791 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.492486051 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.358321237 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.366290791 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.367663713 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.168417817 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.357981694 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.353185465 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.49569827 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.366004774 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.065603883 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.353817358 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.356698984 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.06864373 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.49485452 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.386499876 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.377266089 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.37702055 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.523690793 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.368783388 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.486501573 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.485849399 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.517121692 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.406646059 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.35518645 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.361338117 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.370931947 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.370015711 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.367218158 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.396068014 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.359532389 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.367050654 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.061148853 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.377515584 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.36848331 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.368106347 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.370554405 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.398240369 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.369379859 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.368345103 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.495602792 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.370754629 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.4851382 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.17171614 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.16206768 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.36952239 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.359050584 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.370095697 seconds)
  done (took 110.33832681 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.431257942 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.437600058 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.46923168 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.361486205 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.409536261 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.470714817 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.361781431 seconds)
  done (took 11.172750429 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.368065487 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.36907989 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.409346983 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.409289279 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.369748016 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.534129241 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.370049868 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.371695323 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.369657034 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.412424795 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.371996806 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370017066 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.378768176 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.360426335 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.409427621 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.372113298 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.479897654 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.363152047 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.37048544 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.513707527 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370049993 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.38011325 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.413190652 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.373556032 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.376356448 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.368649861 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.145441769 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.373093151 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372000981 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.372422447 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.369457148 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.430111005 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.372928598 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.362850832 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372674799 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.476957802 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.373142919 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.373159652 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.373012204 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.365277557 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.371291257 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.373008444 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.37305272 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.373363268 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.371893817 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.388155245 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.373371264 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.372927559 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.373447376 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.373988643 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.412111207 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.373434188 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.373153014 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.373146041 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.418394208 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.382929749 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.37401057 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.373957933 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.373350115 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373775601 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.516355831 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.412159882 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.3753361 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.411017981 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.374335953 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.374841873 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.374036033 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.372433702 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.454184648 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.375103393 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.411912886 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.375260725 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.547325104 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.389662089 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.37700093 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.368148148 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.368840158 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375001003 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.365113513 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.371429291 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.375595776 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.367353194 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.373656558 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.375658121 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373470514 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.524280149 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.473540342 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.376943954 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.382052877 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.372859705 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.375414842 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.418442204 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.376561371 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.375345889 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.417890575 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.484466226 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.418270836 seconds)
  done (took 141.045527991 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.37915857 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.380833856 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.371389379 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.394036878 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.367284589 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.368086631 seconds)
  done (took 9.497056538 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.370997723 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.379965575 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.378628921 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.376255602 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.378587347 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.382233522 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.378610978 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370773144 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.381147401 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.378540984 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.381518807 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.380060552 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.379034895 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.378897274 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.379268917 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.378810364 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.379189848 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.376582131 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.37774525 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378419699 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.367080467 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.379042693 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.3798122 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.371020539 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.385541511 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.378652792 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.396016888 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.379655396 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.3786461 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.373529834 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.382426996 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.381461892 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.372761971 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.374213806 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.381455011 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.371027367 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38269358 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.384167405 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.380596246 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.382272482 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.384013283 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380017257 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.381683736 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.381787675 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.37262689 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.376374696 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.384935034 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.397558207 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.379886975 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.382459252 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.382966162 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.380399522 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.382846548 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.384715806 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.374006794 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375137211 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.386572637 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.380975983 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.38292521 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.374596064 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.383158918 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.382937329 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.375010934 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.384750695 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.381522414 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.38405833 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.374916251 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.38477284 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.381499166 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.38301763 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.384169805 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.381528758 seconds)
  done (took 101.593732922 seconds)
done (took 374.874996085 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.858428111 seconds)
  done (took 4.100197602 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.449874241 seconds)
  done (took 3.692832789 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.895143604 seconds)
  done (took 22.144457097 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.461033652 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.371512779 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.389182693 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.370096172 seconds)
  done (took 10.832967755 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.759979232 seconds)
  done (took 4.000981579 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.375693891 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.375612493 seconds)
  done (took 5.994566579 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.569268673 seconds)
  done (took 3.810702885 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.746809455 seconds)
  done (took 3.996207538 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.396634194 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.396655723 seconds)
  done (took 6.042437118 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.344012321 seconds)
  done (took 3.585830943 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.319711459 seconds)
  done (took 21.560985745 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.388519979 seconds)
  done (took 3.630144929 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.402136827 seconds)
  done (took 3.642589108 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.782267873 seconds)
  done (took 6.023654536 seconds)
done (took 104.301354957 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.36587963 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.374616056 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.373581586 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.371321386 seconds)
  done (took 10.725611954 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.44573928 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.443883897 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.454386819 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.438362553 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.43666401 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.443835047 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.408807796 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.407872611 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.439609642 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.435755551 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.451542031 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.440260868 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.448916299 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.408698236 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.435034544 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.45012657 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.438522661 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.454735859 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.408337721 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.441056571 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.384679515 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.440289206 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.435085659 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.384186124 seconds)
  done (took 35.618323282 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.870262995 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.441594715 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.527163399 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.425741103 seconds)
  done (took 7.506863161 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.485852256 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.488801097 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.505428486 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.542390847 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.570962775 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.502736217 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.408241851 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.405829062 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.390845419 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.489110546 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.571679134 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.485981948 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.703890236 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.383336231 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.70523447 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.385977941 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.383982008 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.487305686 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.538841076 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.567512628 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.385996024 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.488407594 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.492686819 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.487903283 seconds)
  done (took 37.102866634 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.393953671 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.402561413 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.385816383 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.402336113 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.38755153 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.387722703 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.388465194 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.39396204 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.386724291 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.3861825 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.387807074 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.400417119 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.386780929 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.388148016 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.394032242 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.387457563 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.388685898 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.393267955 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.397665588 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.387854623 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.387133398 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.394663372 seconds)
  done (took 31.853489841 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.372633559 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.372493128 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.721621874 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.628335038 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.372347462 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.378073737 seconds)
  done (took 14.090789854 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.442906847 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.581981527 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.384265383 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.706736406 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.79462533 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.38072192 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.378310434 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.611811454 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.898089797 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.882440583 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.438383682 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.446708719 seconds)
  done (took 20.194067955 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.373600679 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.377813599 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.387767115 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.394338866 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.430729798 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.385057135 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.386056979 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.373724017 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.43630549 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.434041506 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.387340202 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.431973684 seconds)
  done (took 22.046593879 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465514862 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384389398 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393981135 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410367831 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387860254 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385162246 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.412692533 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097362374 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.393401666 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661112064 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389439053 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470463766 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.629266512 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384486493 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388649279 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.315815009 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616212783 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848066732 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393739498 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388044783 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424074687 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383815682 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404080049 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.586853908 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392195687 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387690091 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.64821204 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384901016 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651929516 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63181102 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.630601883 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392816455 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663835697 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016879483 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495269548 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.580951171 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40338466 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393476087 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.376052699 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.392002139 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393137973 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392723433 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.625713288 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393394849 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387248307 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391182192 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103496653 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.399631907 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.389048698 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389068029 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630305411 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47532686 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.392532401 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387907603 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421692299 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391718863 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.392752016 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512443253 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03379712 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387503087 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398930826 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.394467923 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3849112 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408333377 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014825591 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.400937128 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.395328639 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394076826 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390078323 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400349242 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412105789 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388695928 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.408071124 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389256074 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12584783 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403693856 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397232041 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90686138 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396157306 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.394600266 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616511775 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391674696 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390335526 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.38889465 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390160315 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088247021 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402663024 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.355300159 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434340226 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.100503444 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.59202604 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41682233 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42099478 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610504095 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.357744312 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390612435 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.392220236 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397661528 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411575991 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.100463764 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396414384 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.3970136 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63733807 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.60273669 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401612813 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.341225271 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857159008 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410213946 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.422701636 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403704136 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.591188892 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.989084875 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645651682 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399382005 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429776381 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391329784 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152153125 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410303294 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.402579787 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399792786 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671732672 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.173089319 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399627177 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466174888 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402360579 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393505848 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392725027 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417926606 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393570299 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.565400821 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399712107 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.64137365 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.40033525 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392737795 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.39721419 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410679501 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.401762152 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614931295 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40966596 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674113437 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393684535 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393420416 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392583619 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.613456542 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.394046915 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.405830396 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.7339751 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393099506 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401380616 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64367575 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433556495 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507908682 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426067447 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.410094716 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647178459 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.400974 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.401368718 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404105254 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400822643 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398075693 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.403613919 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387615475 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993793697 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378885365 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.4025959 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395985911 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.410836391 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470125767 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40472792 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592855405 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.407402899 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40277907 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.409517158 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.401596718 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62461662 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641501611 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.402319756 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578413952 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.856445898 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.993297269 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419005983 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.395695145 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.396707722 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.396948824 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399737137 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398099063 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397270334 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595183633 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652220218 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402734989 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.00178569 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404534432 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399680726 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.409743335 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63996296 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.412119437 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399066388 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.409739472 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408293206 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404775878 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.662699727 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626036686 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.413207382 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398443781 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.916354547 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406941707 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39891284 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399334147 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425283477 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40291259 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221481603 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741408954 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391213148 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648145236 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408257952 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.422141854 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.399225275 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398783267 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406865227 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.406961591 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428880484 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.596798937 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.407087141 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427129609 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040049912 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148262022 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945966911 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420536646 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.40816888 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405969565 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.116657211 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404576195 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40253054 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643354014 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117900072 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404458868 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864612401 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.404787728 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135251901 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652555213 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630589074 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415321409 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.406619179 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673347775 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61847494 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427726938 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410599781 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407752391 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.369775047 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929593558 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403704928 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601240175 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120894 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422005583 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.407550956 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.398881805 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.41787553 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785621222 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40449858 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403021998 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40432394 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407228427 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228239443 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40887255 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402786379 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02783276 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40978547 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.876006783 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408970276 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600141742 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.656032471 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.629164807 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.422119483 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.410411766 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.652335615 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650784097 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410439802 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407375854 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949258721 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.264472616 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.412031474 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404742612 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169559336 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420062 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.682575248 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.414482576 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.41545856 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417608861 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406151136 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405679159 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.406054267 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413337731 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380374764 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874395428 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.4202343 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403188385 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415932573 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410785956 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.651019941 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.422135285 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.004704131 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637785599 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402585132 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443907699 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.410641935 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40479946 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.378093325 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406425646 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.4057396 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444147429 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.631055607 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407549633 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.380456736 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.440477008 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621369556 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405917738 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408563283 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621367011 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.414482579 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.418380729 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187745333 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443529216 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410654684 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413662397 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414277847 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450851848 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480772088 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606577012 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.661648858 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.659570915 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793701952 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415895485 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415345049 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.423444021 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488287851 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411495532 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.420936311 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.413201057 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007258145 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177389213 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.022443535 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663455965 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417126821 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41973425 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408058631 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650382289 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407984015 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684988021 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407109909 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.418421912 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434894881 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409163206 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428758979 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625907972 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683874569 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410063812 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420293102 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413307256 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.40969401 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.661110422 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.626414796 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884288529 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943059805 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416276349 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415576506 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.130223664 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689967826 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410036854 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412296598 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411457703 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.430154424 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.445672779 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.426586005 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416277919 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639746667 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657381175 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054584114 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.661263367 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.599420234 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.410476614 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410190812 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.662339617 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252711837 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609648952 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02439305 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.120889507 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668343267 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48663763 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610075725 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.417185933 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648868586 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.421385648 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41533169 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41312637 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412718066 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.411552854 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.659354569 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025366564 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67112629 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.417644594 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.423164733 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446272457 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.611403715 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.64322895 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122240133 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638707919 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665050352 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.427724614 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413656638 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024947433 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671113054 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421588354 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.421099589 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625050337 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.419614001 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448439204 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.291968509 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.412872406 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943264439 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.631776263 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433735582 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415045621 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.122762148 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031879368 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.434383445 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892150334 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421196799 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430320023 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695754839 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.421649382 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415567434 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701813654 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.420690281 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417529664 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623150372 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.021746821 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158086152 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.421529651 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441699568 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.440984454 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416898481 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425599795 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420882056 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425594319 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.795331647 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422276806 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417576368 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43039399 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.415866646 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429696145 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.421573243 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416676503 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.425093087 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.386816881 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.410033732 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426592853 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543011355 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953373904 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418089379 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.031673568 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.75295606 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663184755 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416476586 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.391869158 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.423199769 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419233816 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418406127 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417532616 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.428664705 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958554357 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.425664202 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.689678674 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.431148773 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.629583133 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629011325 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.426407924 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623322227 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430376062 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446194474 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.384301204 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419539247 seconds)
  done (took 994.109436664 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.415551183 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.431438361 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.440284655 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.448467022 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.430222203 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.518551011 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.474544046 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.490682271 seconds)
  done (took 20.927761523 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.412542779 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.424619209 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.409013427 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.422658622 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.417710163 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.880848821 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.427117986 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.423339593 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.431396251 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.413367813 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.415278884 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.044401637 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.424391074 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.422980518 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.418262978 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.426776385 seconds)
  done (took 33.099240242 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.103717672 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.435173584 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.949583695 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.448013478 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.446469489 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.417641515 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.539959584 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.428577754 seconds)
  done (took 26.048184856 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.425131146 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.426261475 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.425341969 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.425102623 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.425851002 seconds)
  done (took 8.406414218 seconds)
done (took 1262.972685783 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.42562904 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.42650002 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.427004182 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.427471288 seconds)
  done (took 6.985328784 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.388982418 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.388149398 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.389410802 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.406270753 seconds)
  done (took 9.852361901 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.084539641 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.934125375 seconds)
  done (took 5.299220462 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.975223668 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.970000565 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.965096946 seconds)
  done (took 7.189106869 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.704340452 seconds)
  done (took 2.985555373 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.413009911 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.4169174 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.151346537 seconds)
  done (took 8.262251756 seconds)
done (took 41.854585955 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.411803515 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.177244148 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.566740254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.413382703 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.57539299 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.568061522 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.666599791 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.424980322 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.412889941 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.418664513 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414370716 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.578577019 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.650762109 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.17894783 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.652526448 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.178731178 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.576293824 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.421244127 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.424769625 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.41813191 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.665753145 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.414528518 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.439196976 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.421901531 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.582355881 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.559469044 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.42807582 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.177249702 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.422376588 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.413468309 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.564161361 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.415598761 seconds)
  done (took 83.917002952 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.4286366 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.423640886 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.430447896 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415410061 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.431724958 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.432102555 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.41666909 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416889049 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.415847895 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.419947814 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414994913 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.431238256 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.433496527 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.416562026 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.432872519 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.417447655 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.431918503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.415625641 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.433147261 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.432911793 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.419247182 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.416742842 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.429024026 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.418010722 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.423447219 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.43370314 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.432375164 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.417009621 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417103567 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.42576324 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.422356712 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.432203495 seconds)
  done (took 78.863558593 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.416239374 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.416340349 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.41999495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.417210918 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.421399975 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.423796733 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.418031857 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.419015501 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.440196975 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.422942725 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.42670599 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.425799767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.420095513 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.433812701 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.418928065 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.434467133 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.418317817 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.42557201 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.430146496 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.417612492 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.421543812 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.422348405 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.416973376 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.426913043 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.423746448 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.418821594 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.419828478 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.419194961 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417499048 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.434967916 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.426730137 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.421706303 seconds)
  done (took 78.824489895 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.659375025 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.434664917 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.438012529 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.426785015 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.438770943 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.436395008 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.429111493 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.665986036 seconds)
  done (took 15.214448979 seconds)
done (took 258.102794203 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.429736827 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.910246543 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.46049979 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.440333959 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.450575812 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.456881635 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.646950492 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.460818485 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.649524837 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.452113245 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.44546836 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.438055905 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.206473764 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.584927526 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.243569005 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.35612195 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.292231773 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.434745646 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.976523113 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.710535131 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.462531791 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.42896233 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.229589975 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.300806658 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.404456825 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.512832407 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.528674213 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.659335314 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.594429006 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.511939566 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.926113014 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.43778459 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.437402498 seconds)
  done (took 65.768945552 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.427856039 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.437131144 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.438129461 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.437689581 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.439694939 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.43942901 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.427698096 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.439134876 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.439318154 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.440106097 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.438280646 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.440112012 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.438777106 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.436420196 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.438738714 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.412199233 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.429996745 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.439200907 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.428656919 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.409574543 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.439882575 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.441805458 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.440159057 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.440672865 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.43939168 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.44047509 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.439524213 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.440658065 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.439356175 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.440547568 seconds)
  done (took 44.371115967 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.43906571 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.972317918 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.156961696 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.442245164 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.43384854 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.436145405 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.712517905 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.447561721 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.434743471 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.435304054 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.88614063 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.448660944 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.464706489 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.166404907 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.438910425 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.440584044 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.442898674 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.431635095 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.983465932 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.445702921 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.711599379 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.447952488 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.713841433 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.446727418 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.437467229 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.434420656 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.438287616 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.247759705 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.461177244 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.892620236 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.189684111 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.711857901 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.180786806 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.21123975 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.187873593 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.44967325 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.442566484 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.894724492 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.441873112 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.435328251 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.712069898 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.440865139 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.169142353 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.126363355 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.458622861 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.445040333 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.279617227 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.895799666 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.675361051 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.446397185 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.19894092 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.445347772 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.44608865 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.436717851 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.671010345 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.4433535 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.434728022 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.262165613 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.440292584 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.713886038 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.450139797 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.435369446 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.982239095 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.442928082 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.978213622 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.442632073 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.444728311 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.437085777 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.169770742 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.445232796 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.136285873 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.457917743 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.445219836 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.891678655 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.983935995 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.33183744 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.444445647 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.989622622 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.214158993 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.7379977 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.44522982 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.221793936 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.741463204 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.446414649 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.447736927 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.447379273 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.446443239 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.511167756 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.712616782 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.056035449 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.140866873 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.274964249 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.721305933 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.450102552 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.440508008 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.269085292 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.447682133 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.447850442 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.172229289 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.151239288 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.454873571 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.446604623 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.130682774 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.464635335 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.719411782 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.451429347 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.209420634 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.445084254 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.510602453 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.448318489 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.445000534 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.443452048 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.719441554 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.446917665 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.450128255 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.123123471 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.924573981 seconds)
  done (took 199.563328208 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.435011639 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.434870565 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.436374699 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.434414722 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.434491649 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.440980153 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.434321222 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.435739135 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.440562573 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.434827356 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.436095614 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.442438219 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.44145932 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.435419518 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.448715376 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.436341389 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.434117074 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.454414081 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.435395989 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.435575106 seconds)
  done (took 46.058762826 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.449896189 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.990916559 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.957533546 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.454861537 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.45130179 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.441794341 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.495851106 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.455703746 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.450242019 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.73772895 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.614387527 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.457818418 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.450647678 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.451611679 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.954757314 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.428507573 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.737544218 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.99765608 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.457253772 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.992529977 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.429180048 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.45328329 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.440652449 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.991327903 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.752501168 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.72649654 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.504567538 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.999412866 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.458666611 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.451603191 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.993243451 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.457414652 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.444380481 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.97952903 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.458885716 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.466189051 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.452389057 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.501065418 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.506667383 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.745608736 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.003381202 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.736017687 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.468782387 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.608825445 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.461078603 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.423119171 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.007298229 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.45996836 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.424093883 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.456026384 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.459655381 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.969017945 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.449821979 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.970599833 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.459753148 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.455142521 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.996032863 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.975145652 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.964010594 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.615798312 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.448969654 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.722155013 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.460016965 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.008343342 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.46022782 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.454317086 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.455786893 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.613973359 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.003866682 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.731617226 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.748548155 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.747527988 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.46015417 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.511372987 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.461977797 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.742349353 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.516727687 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.848857548 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.750185277 seconds)
  done (took 130.456306667 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.718510747 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.563622283 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.828884058 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.032597009 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.950475224 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.589316356 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.567617158 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.689575523 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.460934627 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.55990103 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.086335661 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.539762123 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.177982803 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.515579022 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.557219972 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.575380438 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.845391498 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.407402598 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.07431321 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.076413428 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.457903222 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.551863384 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.970458218 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.649137652 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.460645328 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.002448865 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.39420202 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.965687825 seconds)
  done (took 54.575085193 seconds)
done (took 542.081778924 seconds)
SAVING RESULT...
DONE!
