cset: moving following pidspec: 14560
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.336824977 seconds)
loading group "string"... done (took 0.505534123 seconds)
loading group "linalg"... done (took 8.093010783 seconds)
loading group "parallel"... done (took 0.174899356 seconds)
loading group "find"... done (took 1.306612934 seconds)
loading group "tuple"... done (took 1.994636185 seconds)
loading group "dates"... done (took 1.349360728 seconds)
loading group "micro"... done (took 0.247660049 seconds)
loading group "io"... done (took 0.677761282 seconds)
loading group "scalar"... done (took 41.818207371 seconds)
loading group "sparse"... done (took 12.802864324 seconds)
loading group "broadcast"... done (took 1.049276649 seconds)
loading group "union"... done (took 14.404861379 seconds)
loading group "simd"... done (took 4.896660794 seconds)
loading group "random"... done (took 9.875538359 seconds)
loading group "problem"... done (took 1.983700435 seconds)
loading group "array"... done (took 22.859967447 seconds)
loading group "misc"... done (took 1.46476102 seconds)
loading group "sort"... done (took 3.664318519 seconds)
loading group "collection"... done (took 19.796041523 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.543480179 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140185846 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.130017191 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.152575487 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200396245 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.140357197 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156970183 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09566831 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.937540216 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179206013 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142957033 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.489905462 seconds)
done (took 5.03998358 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.22079689 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081928936 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094860414 seconds)
  done (took 0.852914421 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.088928602 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144586371 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08985737 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075573096 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090732697 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074774728 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.075011192 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.089548492 seconds)
  done (took 1.317842044 seconds)
done (took 3.16437931 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.729567924 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.275360285 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203456522 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.502588717 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.176347927 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.210203833 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671008636 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.342427631 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.241553954 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101162094 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.130723157 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.398097771 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132498923 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.662215123 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.087897089 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123032271 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.169102949 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.438083903 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.091752265 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.090686363 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.113532429 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.150604828 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.109797098 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.083603984 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.178739722 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.077019745 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.186181106 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.104736816 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.076211901 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.282123228 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.198964245 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.686764448 seconds)
  done (took 10.740879294 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114640881 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135145306 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095083327 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135363158 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134627731 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079819134 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09725379 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077155019 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121038444 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17741368 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132360586 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139559555 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073884769 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.078642624 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114677794 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247413824 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104655432 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118025045 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081142022 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103786166 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13586571 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093467619 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106601086 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090181113 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165181126 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.211609445 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105824001 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120276914 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090038712 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09308149 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141871227 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.153207521 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074518177 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09277137 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175488635 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.104385858 seconds)
  done (took 5.008050703 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187425894 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.100748555 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.18579069 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.142587136 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139988779 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165912744 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094217477 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258175062 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.119240185 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178075923 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126364012 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110225778 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078047738 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.15627887 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081055457 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077166213 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.749390502 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164586455 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113181465 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114721296 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097157986 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083625639 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371224087 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08201807 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.089002196 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080485043 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086185583 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15766724 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080828314 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.204704115 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099328617 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098011454 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113283625 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204472524 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.07538611 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123677169 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133554814 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077956321 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.091388396 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176140994 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083032986 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076554168 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122096934 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131875921 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117874435 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09326227 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.076295216 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223346559 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.074629628 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.090514313 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.001062723 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.175471141 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.10261242 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073973426 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.335837083 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114647408 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07687752 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.092322858 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.266114202 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123493396 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.091660756 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.077288522 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075167711 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098837774 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07789615 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383027684 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.091215854 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.803218111 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078479982 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085535212 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094616427 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09148481 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084087859 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100992575 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.095556242 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.092778942 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078693624 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075350458 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092362497 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.076808377 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113113782 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097742961 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076861719 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156075668 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.076601849 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095956326 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124670914 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.093258324 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.075066613 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127087677 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079444515 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.091440111 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132696161 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07774877 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113330975 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.090872371 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.123010635 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.090921076 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.16492201 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.088298422 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.075946779 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121663597 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09410627 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109790426 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.104273352 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077935892 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099166954 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074224632 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.091559644 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143817759 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089716337 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077054666 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.094581902 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089309359 seconds)
  done (took 22.352290484 seconds)
done (took 38.779390987 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.350872922 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10600323 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107232696 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107058462 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106110624 seconds)
  done (took 1.531469834 seconds)
done (took 2.261905228 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.283819289 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171817695 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089772146 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167142028 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073068309 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174557299 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.174148287 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.091817341 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200274127 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07331025 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162429051 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089592861 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073427392 seconds)
  done (took 2.579581685 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092042058 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112786298 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079040527 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090584009 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089833492 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090906704 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106312047 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096900103 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106880931 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081154664 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09063719 seconds)
  done (took 1.761927405 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090648185 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110124951 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079647346 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090051133 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089574603 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090147014 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107026636 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095858875 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106990684 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082366638 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090461423 seconds)
  done (took 1.756685236 seconds)
done (took 6.818033386 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091266102 seconds)
  done (took 0.810873898 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.026257476 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.131453988 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118348257 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165152137 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.330372239 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.213558604 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.606007499 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.13101037 seconds)
  done (took 15.643433839 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.111133528 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095397429 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.093801111 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095886631 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.081012762 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.097828306 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.078796803 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093398921 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.078572275 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092582787 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.080244513 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093196566 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.081270018 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096126116 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.080887967 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079673885 seconds)
  done (took 2.217591257 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.115030319 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.113764805 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.100873819 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.086090495 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098550926 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.082218917 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101527414 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.0988181 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.081273677 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097548327 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.086836228 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100338456 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.084591474 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.096898974 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.083694122 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.103988432 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.081716258 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099899788 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.085013115 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.100240349 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100973799 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.08245192 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.099532874 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.085924929 seconds)
  done (took 3.101415512 seconds)
done (took 22.497454447 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.152442151 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082593527 seconds)
  done (took 0.965935686 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.099257904 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114613841 seconds)
  done (took 0.950435227 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.104960305 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09409036 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132505261 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096394018 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094500369 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079019419 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127779395 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.09553735 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079611732 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094449009 seconds)
  done (took 1.736070208 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082503008 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098491196 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.08767293 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115051154 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.089563071 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097177365 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084074122 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098400933 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084477865 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.09383004 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.087566813 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111727904 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.10113159 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097643855 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09904626 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.100884262 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090084009 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098683448 seconds)
  done (took 2.454792864 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079180929 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080609231 seconds)
  done (took 0.896244893 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08184171 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092483035 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082028611 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096666626 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078049584 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093370609 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077493353 seconds)
  done (took 1.340067414 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.484303417 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138790044 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.266075068 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.082044066 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118620012 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.311058606 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.093259424 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.082063416 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.099223314 seconds)
  done (took 2.467637137 seconds)
done (took 11.547834239 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.089838784 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.113533358 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11037098 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46359826 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.1136398 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.076212241 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.156085229 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.25651591 seconds)
done (took 2.121240658 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.145230412 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337211739 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.121468407 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084387516 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077669796 seconds)
  done (took 1.363230901 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076583955 seconds)
    (2/2) benchmarking "read"...
    done (took 0.079139336 seconds)
  done (took 0.899265844 seconds)
done (took 3.151469136 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07715585 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.127320155 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076046807 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.091132454 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076393147 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.073233768 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.092109179 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.076977693 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.092928613 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.076584267 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.077170455 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092066438 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074156509 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089171283 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076924811 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089090645 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074655823 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.073428059 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092003987 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073800977 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090095808 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076638128 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.073638865 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.08940935 seconds)
  done (took 2.777120973 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106563825 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09473515 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083426247 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098996384 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081491174 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100152233 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.082881666 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093015188 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.09777246 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.079613146 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096008475 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081165086 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094294508 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.081761535 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09506181 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.080975631 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.098500831 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07762758 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095367615 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.081215917 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.098344408 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077306035 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09778572 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082810039 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.097084765 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081045458 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.095219768 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.077253462 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099114469 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.0974246 seconds)
  done (took 3.449255257 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081952615 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.073062004 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090890126 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08180787 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089921123 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078825139 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.089721432 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.074912192 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.075535481 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090561806 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.075601136 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090315228 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.074118641 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.091465246 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.075973164 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.077375506 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.104277664 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.074713399 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090437137 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.074721598 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.093822222 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07386893 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076929764 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.090540458 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.075019309 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.09012378 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.074662921 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.090230921 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.075015655 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.073941924 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.093082471 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.077764478 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090023775 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.080629705 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093028991 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.183432382 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.078103546 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.090732335 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.075531279 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089458591 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.074411858 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.07427509 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090578544 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.081261703 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.093940047 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076696616 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091167909 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.075646392 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07588777 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094064701 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.073805506 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08985732 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.076945145 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.092356347 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.078667926 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09027854 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.075842927 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073831896 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.091587068 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073758424 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.089687017 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.074210162 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.092358159 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.075849319 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.089693915 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097195493 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.073872967 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.092320454 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.078629955 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.092244173 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.076830578 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.104325964 seconds)
  done (took 6.85084959 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079583703 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101497994 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077025395 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07652204 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089448747 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075470815 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.094750312 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075376567 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092358354 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093226866 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092116588 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076769577 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092858443 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0797955 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091206784 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.076841757 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100927114 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073402523 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091197899 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079368555 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091231342 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079453611 seconds)
  done (took 2.63112135 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211768206 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101093838 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138052372 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092556648 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111335285 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108131621 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.081996988 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099830901 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081896487 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10113647 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084839725 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098119128 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110469082 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085165566 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101113415 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086613764 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098127733 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086453681 seconds)
  done (took 2.633945075 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091651049 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094411978 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100508042 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094754693 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078091964 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096390115 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08378043 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11004915 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07972595 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094079969 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088771991 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097167019 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.079554924 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094447123 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079702322 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094096703 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.079807182 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094582489 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088050593 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100432775 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099738574 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088374559 seconds)
  done (took 2.764648438 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095279398 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096417605 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099089166 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098459414 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07627147 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096060467 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085126021 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094369968 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086793863 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095448978 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077629005 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095054967 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.084566331 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093974794 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.083553354 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094881538 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079581375 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093770797 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079937173 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092487472 seconds)
  done (took 2.557955875 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118255292 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108239098 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092534166 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119255655 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092711609 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109630273 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119815704 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092789667 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108698902 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107452315 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109056689 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108651021 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104363217 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116476062 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093147422 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119887299 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119571847 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102340608 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109601505 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093146896 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123217041 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109402111 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103199826 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108753723 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093565882 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109903094 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092691001 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115894277 seconds)
  done (took 3.760279619 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078304735 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077606722 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091308162 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.075365731 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091879973 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.075771386 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.074255167 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091473228 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077353895 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091403524 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.077779407 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092722932 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077354648 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.077052883 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094206948 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.07725574 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093366474 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.07446342 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076732497 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091614606 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.077190596 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094382851 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.078294904 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090935231 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07507627 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.077602087 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091591353 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07500073 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093357495 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075331408 seconds)
  done (took 3.248837354 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088756023 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10203778 seconds)
  done (took 0.954845867 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.075357652 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111354843 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075636104 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080824722 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100358571 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07767258 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.104589108 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099033758 seconds)
  done (took 1.487011365 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095576347 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113910844 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083098087 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.106450124 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096961297 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.111715255 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155296709 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085458759 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.083763405 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.093340574 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.094701413 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.093742693 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083147165 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095407894 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.083442946 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10181691 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079123411 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104845675 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086048096 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096967809 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083894609 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107032866 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080396244 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.091586742 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.079834331 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105181615 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.087601037 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.096550522 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082126436 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.104381881 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.084193642 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.071836259 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.099530914 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.082779119 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.095888108 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095150776 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107469482 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080899536 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.103493086 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083086123 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103728903 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076715159 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.100993591 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.083334419 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104961329 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083715148 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103777668 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077521337 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.091980323 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080291801 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093586101 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077931751 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.072367073 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102116221 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.082804242 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108703547 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080817488 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.096436031 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081658506 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.098003668 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.083921265 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.097125238 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080628375 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098777905 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085455793 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.098572149 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085757839 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093424566 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.072704623 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095783776 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.087562551 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117928244 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.086851109 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101381177 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084410611 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096209085 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081977773 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101143915 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085400314 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.103438618 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082669137 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102358758 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086174699 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09480826 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080853881 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10152454 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.081311887 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081794546 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.092727973 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09351879 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097452409 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078452682 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.093111824 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08718633 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.098388224 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.08228089 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.092070388 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085995474 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.072455348 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100531107 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084319565 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095704655 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.087340405 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102011218 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084532425 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.102879453 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089665918 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095060442 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.081047486 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092726221 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084754848 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098359449 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085879806 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089376964 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082488575 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.09667202 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084291368 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.103241333 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081097476 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083106957 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10333591 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.085695871 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097934481 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.075104377 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.098540117 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082772387 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104572997 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.085328968 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097873707 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077318021 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093544829 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.082376745 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099318123 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.083586335 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100971999 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082042472 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.072160161 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097040082 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083330586 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10428747 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.078920671 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.095413717 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.083364847 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.096519534 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081430251 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.101678247 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.080277986 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.09483005 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.083582292 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.097379158 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077094508 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104569215 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.081723114 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080858637 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.098935465 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087382206 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.098611946 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083658913 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098624883 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.083235768 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101098821 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.077100037 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095516884 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081226159 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.10544401 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.080728266 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093702059 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.075655053 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.08510293 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.09270564 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081792976 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.094745568 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.080501252 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100736029 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080006542 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098429925 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.079702956 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110669967 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09247843 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100972797 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08441124 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.1050775 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083075196 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.097005019 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082762225 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101436785 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083757389 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.102747335 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.083865846 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083968764 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.098795149 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.074951086 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10182574 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086155316 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.094698323 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079645542 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.094922309 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.083641711 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.103414834 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083090005 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101375142 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081489082 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.078857648 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105254455 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.081344418 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100350024 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.077442175 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10076802 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.078406032 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101671721 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084284225 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.106042761 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082625436 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094301945 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087877089 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097656177 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.085678425 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094525548 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077035283 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.077145082 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102776386 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.08145887 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.099347915 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.072836752 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10435924 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088202611 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.096914153 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.078741389 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100779033 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089096216 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.097987883 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082922544 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.081540181 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.101675557 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110223152 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.07822416 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.081362694 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.106633678 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100232128 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07322143 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.08517442 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.09828887 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.078404418 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098788833 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080471212 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100249928 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085296242 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.101134982 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.0725089 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.098297658 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081394532 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.077899112 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094756968 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.085527584 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.099747222 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.080248417 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106034038 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085235774 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10189516 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083864192 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100051433 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.08452005 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101836718 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082684656 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102141459 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.081107171 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.095296997 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08169307 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.078206467 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097291476 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.080571634 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101855251 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.079104564 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103078405 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082554032 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09699767 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084189299 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10216036 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080423003 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.097897547 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.079268278 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099446599 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080524371 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.079006435 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100184969 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077889783 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104073936 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084020157 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105296534 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.080094579 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.093216515 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.084395441 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.098281762 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.085220166 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084343117 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102189802 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07992237 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100460441 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.081627298 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10592315 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.076516075 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.107381134 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085505058 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09712428 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.082522017 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.097086932 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.080702577 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.095492432 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.081564567 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102194928 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.079134712 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083177054 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.101984909 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.081632465 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09630544 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080315038 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102033982 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.079381429 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103230806 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.073835548 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.095843618 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.079107852 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083956893 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104167853 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083412515 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.099958061 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082376374 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102789331 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081804556 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093678422 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.087439533 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10476868 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083819336 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105499408 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.078539527 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.098189007 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088997231 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.090740093 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081442785 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08008314 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.094776666 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094829377 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102367062 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.087793119 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.096609337 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.078175649 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093632202 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084500325 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099066844 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.074997896 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079486012 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100820227 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.081233322 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099832613 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084979037 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.100119344 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084783453 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104639082 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082737635 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.098534402 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084006197 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.093889286 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.077445679 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.078025075 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.09941876 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084142204 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.094767843 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.076250013 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100209225 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.080867643 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.097370492 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083953035 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.097671259 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087211991 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083641209 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.100531162 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088107255 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.092336319 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.082577488 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100740164 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083107456 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.095972335 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.083478678 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101145381 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085625882 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.105071892 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084107843 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097487035 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084131014 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098207512 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083664396 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082831777 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102667131 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.078820954 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104075187 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088914249 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098863464 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.082178186 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09769036 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.080671668 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10305824 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085165291 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.100207479 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087381962 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100840696 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.082273336 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.085808528 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10265079 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083109927 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104144301 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081537708 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104323832 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.078303007 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.106497174 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.079548592 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104926377 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.082324038 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.095521863 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083628542 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101201285 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083706253 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.084394201 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086172352 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.078390948 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.09634769 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081426333 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.100086554 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087927375 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106114955 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08235472 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101063443 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.07838508 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.094820495 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085321306 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.095202474 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.081843775 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.082256292 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104908418 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.082766914 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.098584642 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083510292 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.105772807 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086589404 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.103714765 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.078056575 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.103115694 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08621643 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.100511262 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.082324592 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.097767338 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086464542 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.103816391 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.082660944 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.079801492 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107820871 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.084955455 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103920515 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08128291 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.098813362 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.0803973 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097112058 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086452762 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10044043 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087527678 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.100606314 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084563342 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10961401 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.079718437 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.097806534 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089848185 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102468855 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088106237 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096189675 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.081269217 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085660537 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103410509 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078173202 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.097230124 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.07762361 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.100157052 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.079631202 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09683167 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090842041 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.105744321 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.083037269 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100399756 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08352462 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078552235 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097388748 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.079552207 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104283378 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.081714697 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.107674736 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.07986661 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.097217645 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079400412 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101412235 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083734181 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.083166328 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095654188 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.078178254 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.097104688 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.082876015 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.105796165 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083315216 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102405104 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08396736 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.100267859 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081631303 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108059234 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.077400541 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.083932685 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11169735 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102816623 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082001816 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086214642 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107486423 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084709804 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096773664 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086100905 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.101814794 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.080424366 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104209681 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086008079 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113485308 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084309522 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.098159597 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083340726 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.101100312 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079996135 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.106295597 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086856805 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102964105 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.085558158 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.099597283 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08730675 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082571122 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104809057 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.082638959 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.102077065 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083085408 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098964198 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08281177 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.096748613 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.086198468 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104466633 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084112476 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.106335446 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.080384992 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109088625 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.089250608 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103934878 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.077299642 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079982973 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.098709995 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080571711 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104657003 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.079200824 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10082411 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083398572 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083135939 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.099881356 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086636049 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.101159869 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086144675 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10340376 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.074780134 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100982655 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.083221486 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099439493 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.077614995 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084079932 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10450929 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.086700791 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10894784 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08055325 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.101938416 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.082106012 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099674544 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079230353 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.105982512 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083823488 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.101089064 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.080207196 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102630611 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087392196 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.083583253 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10474662 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087718572 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.101939262 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.089220091 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106765892 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077752271 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097381813 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.086901643 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100408155 seconds)
  done (took 55.073394518 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147180292 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086257066 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074951904 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095463732 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121330508 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080128642 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093649949 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080659247 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.097780309 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089900238 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094066514 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076354456 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116369864 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124683929 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119274159 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091309123 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094344702 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08087296 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093530445 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081971165 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116302455 seconds)
  done (took 2.868081729 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10412706 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114538626 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112597416 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098015234 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106353752 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.111694819 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.093211555 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113793699 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115972379 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088088163 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117112367 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113006889 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089011132 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107527507 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088533132 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110427406 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117929954 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086652858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114600802 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111677226 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091323437 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111895195 seconds)
  done (took 3.129668845 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.090087669 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.083402115 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.103211324 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.075716218 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102461815 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.07607122 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.108488732 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.078238254 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107204431 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.079431302 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.078705825 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.097851512 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085417731 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.094626048 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.079594089 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.096398728 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151437165 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.088676647 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103472177 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085729512 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.09704121 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.083125742 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.078251604 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.098057539 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.07855935 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.1127535 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.085442687 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.103821894 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.083991175 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.098033371 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.084356048 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.077424025 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.10035115 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.080284661 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.09863921 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.079747768 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102398934 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084426498 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078657767 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100324629 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.080749184 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098957718 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085102153 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.101540395 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081936023 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.097035056 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.082400269 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083439017 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.095595314 seconds)
  done (took 5.292847272 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.115098218 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.133512377 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103893835 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144463405 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120093508 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09367222 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.105570699 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142807122 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.07865006 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.103797711 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.101018877 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.117766471 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104928014 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090411929 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10818445 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083679336 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105633144 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.07940164 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109157743 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099862988 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.09042387 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.107865368 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098524763 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116645829 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109273824 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08363364 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.099966852 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.088863604 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.114718985 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110303605 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090153673 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111025944 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119430808 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.087564102 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099583237 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087452274 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120505792 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104157115 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087508041 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097698164 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086786552 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108259506 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.088453958 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121358305 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084593496 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106247501 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104615754 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.078035367 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116463578 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087493116 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114436355 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119526299 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088889108 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105617548 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089622175 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119573732 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104392814 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082369374 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107236775 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096418976 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098397945 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089152437 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117099751 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106920028 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093513968 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.117299707 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.105688996 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089690609 seconds)
  done (took 7.954573409 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113455021 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109409105 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099774025 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120141291 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110013118 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.08964288 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109435928 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089182368 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109112233 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116194007 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090199116 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155667757 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.1060657 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094681651 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110061757 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089113268 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108981663 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089460256 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110075804 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089632008 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109595307 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120407385 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089625857 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120195459 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123113448 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086630734 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110200142 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089483918 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119516816 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109428983 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123182245 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090186476 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108989864 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101324157 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121668714 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.109987825 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084152678 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109389247 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.089493411 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109501542 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086596105 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120789156 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109705624 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086780245 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110088929 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089910367 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120339437 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124095112 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094148459 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116697621 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.108892182 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101136311 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109811572 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109069222 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101267724 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128394771 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12059626 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120256562 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090945843 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120670575 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119808908 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108795551 seconds)
  done (took 7.463140339 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11384477 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116365014 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.123913729 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.076199402 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099213202 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090086193 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099844266 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.07992366 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114801224 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094843966 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117797811 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10897643 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092432723 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118054005 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10967242 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093544942 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109184292 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110235191 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095714449 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109926082 seconds)
  done (took 2.90369457 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090380217 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123244598 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083078345 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110066817 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08515907 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110110713 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.084017014 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104974848 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08243036 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105333664 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095097389 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113889056 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102389728 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089572641 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11385832 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.089585705 seconds)
  done (took 2.411405356 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095264343 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12359955 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122720858 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.082233667 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.099922394 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.078461244 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.084045272 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.097977378 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.077329433 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119201451 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.081352963 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108853404 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.084105999 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10101735 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.078229939 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107808181 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.077800347 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.100065167 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.084431982 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.12116439 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.092746408 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103330059 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085256828 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.103550625 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101484266 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088363728 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10278186 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.079903801 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100754432 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.085799782 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102211506 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.090421212 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.097615617 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.081066537 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099763214 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.079742084 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.084251189 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.105698375 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10726564 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.084703386 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.080439975 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.101643977 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084578283 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102816429 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.077237042 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105828565 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077575091 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108498893 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.080130946 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102679639 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.084450054 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.104857702 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.082729053 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114610481 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.086062789 seconds)
  done (took 6.029762419 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097199268 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106583204 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076918989 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079192758 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105552187 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.083948444 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107034459 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.084232828 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105226572 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079484659 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104700372 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086237884 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104069077 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085528226 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10518685 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085606797 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.097316155 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.083282833 seconds)
  done (took 2.514243472 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087988174 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081635478 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.109898408 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082236558 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102828426 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084540001 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098284961 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.080681658 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100325651 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.081685989 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101830458 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.084799533 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099756816 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.085147146 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081383301 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1027969 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.084357986 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100711522 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082465474 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098643042 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084918562 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101164241 seconds)
  done (took 2.855610088 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119542913 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.12224643 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.089833997 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.209098067 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.122877154 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.107586951 seconds)
  done (took 1.607634967 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107844731 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139704326 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082845074 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105837282 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094816925 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108202299 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085861823 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107311761 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118781484 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120711277 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087414168 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118784701 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099161489 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117031768 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114874795 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093677659 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107208283 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107115984 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082839567 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128251388 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087246737 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119399809 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106237532 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086776689 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107006366 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097459649 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118566453 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121890012 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08607359 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118099882 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115598962 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086500042 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119586452 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122093696 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084993236 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119299055 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10707076 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107825246 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115739844 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118675944 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084596528 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114713098 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099523051 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113940216 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119249825 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086269744 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114475173 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107749062 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087365505 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13495765 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114780572 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097925222 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114917923 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119352499 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098857712 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135312814 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120997528 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119168924 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114389706 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100743671 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118251202 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116639118 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098769643 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120788173 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114815089 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1179673 seconds)
  done (took 8.005331467 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121694988 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104800521 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086647994 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122005575 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118703929 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087780532 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107431363 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107556422 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087141178 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103825564 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152679044 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087605412 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118596952 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117949587 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087776154 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107068779 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08766214 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118369003 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08295099 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135291388 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108429584 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118455658 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098491417 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118744533 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1216589 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114414172 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087735538 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107914213 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087405065 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108419644 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093952722 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107755008 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11898611 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08423808 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118578667 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086824108 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109341594 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114041219 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087854199 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115440342 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116814498 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108079715 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107647067 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087020761 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122908082 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107805056 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086836411 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104752616 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087189555 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105237677 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122526835 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101551747 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12124105 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118838642 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107980221 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087364755 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107717769 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086744296 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107760191 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094595252 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11832394 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108277124 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13552265 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087086277 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107876669 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097959152 seconds)
  done (took 7.842720765 seconds)
done (took 149.811518612 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098545772 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136570674 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095890779 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.166331578 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.082327896 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136437759 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.116034431 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.118413594 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.082239743 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.081986853 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.103834201 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08467604 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.168937554 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08247217 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10276608 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.084896511 seconds)
  done (took 2.586846406 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.179498983 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.29098505 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099833737 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.102179892 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.08648319 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.10430453 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.081032584 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.089864248 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.105980266 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.081927475 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.104250279 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.082935405 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.103498848 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.083043815 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.103550067 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.083249917 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.08154929 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103423686 seconds)
  done (took 2.821303694 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110448534 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140970872 seconds)
  done (took 1.102728914 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117603222 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174516119 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27221667 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.151160008 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.133385644 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097419564 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15317079 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.123962921 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.202736332 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126852482 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.126660719 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.089694661 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137344348 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091773795 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111884468 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.089343346 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.138098429 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.110949027 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.091170497 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.111198711 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115574241 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103189533 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093245257 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.111040524 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18665401 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124693541 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.081532888 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.081518275 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.111862003 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111493927 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.08974333 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117839886 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.103302282 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.16795698 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.095382733 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.148449114 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.111155119 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.087979647 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112298636 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.087574102 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114066743 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.114205258 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.097614639 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.109474028 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.082014838 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.110719344 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.084425862 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.081392371 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.111852407 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.091059764 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.111273136 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109070102 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.149159594 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.091001057 seconds)
  done (took 7.199527991 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.811960099 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.150713826 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088259667 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.913451649 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13532422 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101241655 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.806650742 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133495951 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230251183 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.797673984 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126570284 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119714218 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206366204 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.247614221 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.896228378 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308183003 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.69331065 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.34355753 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.139337967 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.148992337 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093290951 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135288276 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12816542 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.404466243 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.110640138 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08806081 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114311872 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117679175 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158216446 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087231297 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112353122 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176284914 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.24130597 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206316092 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088193303 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109059821 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08639633 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.162683236 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271618594 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21753957 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.152383083 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104891474 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085740249 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.118934007 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128499882 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083741486 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16004078 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.170160408 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.19009532 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089355655 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118676492 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094914655 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118472184 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.158806356 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.08484338 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312459472 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312307275 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109940126 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095202225 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126273874 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.243319067 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108241836 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224244022 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112485875 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212820523 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.086691064 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801382543 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163190802 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109046237 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092406983 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.115664271 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09126364 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117364966 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163179468 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.387159279 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098252884 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111623106 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086228411 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.238905632 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086353267 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108304166 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158945737 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087530726 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116285006 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098923921 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119307091 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.165375721 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.218440572 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119752435 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116790022 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090280309 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120894288 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.086977612 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208770471 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219626277 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.156003383 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207881836 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118825919 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159746206 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.161095861 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116732349 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.165508891 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116157315 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100621019 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11879633 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216414319 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.138639596 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08627253 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113356861 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092402402 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.141117366 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089751081 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114960858 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.163676377 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479370948 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.161512157 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.083073208 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11247466 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094370533 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158654531 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114692641 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235890893 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116183255 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163842171 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114884868 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08284708 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.116558143 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160048705 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120000691 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09360048 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120097964 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093000398 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.246573461 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.196517723 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120767228 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219045013 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177417705 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115933998 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168785312 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116914136 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165892658 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094682891 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118133613 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087770265 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784226326 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1213315 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09354413 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114379356 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183716187 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086355043 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087207779 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107943734 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.083696014 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775883356 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089673535 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.107267759 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086988513 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115626536 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093495472 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115359638 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11732406 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15856283 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2082531 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118566871 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115803107 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.086983411 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160128059 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.111389215 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.087210622 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.110072565 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.087362198 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117790066 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.08983578 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110679431 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167891567 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.156971532 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221610577 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574479977 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110059255 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086696271 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229287569 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086643627 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285838889 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117261305 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203388732 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184763979 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084730779 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.307700892 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165632485 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18334582 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.090204182 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.168179686 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106213764 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092603856 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180780945 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087101728 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115495575 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.155869401 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099232363 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12091267 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.932965867 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086540397 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224418655 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.107174903 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165939381 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088923901 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119495704 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293591718 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086994106 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125938452 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158711026 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112714149 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.087551192 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.696868906 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.110110608 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.097405646 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115752801 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222196067 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162912789 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117617776 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093009846 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119515037 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.160223837 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205766617 seconds)
  done (took 42.706212911 seconds)
done (took 57.267435343 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277759506 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210392992 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262632204 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.165476692 seconds)
  done (took 1.872350847 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.175819642 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.1228432 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.142120892 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.103405999 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.12903576 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.10249265 seconds)
  done (took 1.656495603 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.36617521 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27293902 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238528906 seconds)
  done (took 1.762045439 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.247928772 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.266546581 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.324826078 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.417645554 seconds)
  done (took 2.237227647 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.204224427 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.122371987 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.096603054 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.137321516 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.144513193 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.205841484 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.13942582 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.150365797 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.106423753 seconds)
  done (took 2.238725953 seconds)
done (took 10.651504732 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.250883026 seconds)
    (2/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.216003676 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.146738554 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.123294185 seconds)
    (5/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.243150318 seconds)
    (6/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.149933976 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.088779168 seconds)
    (8/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094010085 seconds)
    (9/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.256759405 seconds)
    (10/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.086779927 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.096841491 seconds)
    (12/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.205034721 seconds)
    (13/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.238769007 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113646019 seconds)
    (15/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135101573 seconds)
    (16/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.130789843 seconds)
    (17/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.246155443 seconds)
    (18/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.129780415 seconds)
    (19/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.226894968 seconds)
    (20/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.111891127 seconds)
    (21/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.24677476 seconds)
    (22/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.115078587 seconds)
    (23/286) benchmarking ("sort", Int64, true)...
    done (took 0.230857452 seconds)
    (24/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082592429 seconds)
    (25/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.119182222 seconds)
    (26/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.222408364 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.092794178 seconds)
    (28/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.241715732 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.131427725 seconds)
    (30/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.096568299 seconds)
    (31/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.254273451 seconds)
    (32/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.200962307 seconds)
    (33/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.087139397 seconds)
    (34/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.130352703 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.147051389 seconds)
    (36/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.126673237 seconds)
    (37/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.198706662 seconds)
    (38/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.113904942 seconds)
    (39/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.098420689 seconds)
    (40/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.113650117 seconds)
    (41/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.089876639 seconds)
    (42/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.120692265 seconds)
    (43/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088049014 seconds)
    (44/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119307594 seconds)
    (45/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.094519978 seconds)
    (46/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.094276069 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.124489925 seconds)
    (48/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.111808159 seconds)
    (49/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.084559466 seconds)
    (50/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.112826025 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.082869545 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.080680448 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.105107947 seconds)
    (54/286) benchmarking ("sort", Int8, true)...
    done (took 0.228361838 seconds)
    (55/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.111540517 seconds)
    (56/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.108302234 seconds)
    (57/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.083217155 seconds)
    (58/286) benchmarking ("sort", Int8, false)...
    done (took 0.193141676 seconds)
    (59/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112006551 seconds)
    (60/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.09405634 seconds)
    (61/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.177273444 seconds)
    (62/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.241153368 seconds)
    (63/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.201199055 seconds)
    (64/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.090244523 seconds)
    (65/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.095719718 seconds)
    (66/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.174955308 seconds)
    (67/286) benchmarking ("sort", Float64, false)...
    done (took 0.175332965 seconds)
    (68/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.197323351 seconds)
    (69/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098639839 seconds)
    (70/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114986906 seconds)
    (71/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.196805352 seconds)
    (72/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.102287359 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 0.105674195 seconds)
    (74/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.112832673 seconds)
    (75/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.116147657 seconds)
    (76/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.152735955 seconds)
    (77/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167381679 seconds)
    (78/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.095199355 seconds)
    (79/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.081590921 seconds)
    (80/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.191755374 seconds)
    (81/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.089012131 seconds)
    (82/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.158905712 seconds)
    (83/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.131797283 seconds)
    (84/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.085783085 seconds)
    (85/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.148115582 seconds)
    (86/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.084625046 seconds)
    (87/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.199725445 seconds)
    (88/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.09765139 seconds)
    (89/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.098238035 seconds)
    (90/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.16227181 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.106794143 seconds)
    (92/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.171856932 seconds)
    (93/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069897049 seconds)
    (94/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.114799429 seconds)
    (95/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.08491335 seconds)
    (96/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.135125361 seconds)
    (97/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.11200644 seconds)
    (98/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118051903 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.08337721 seconds)
    (100/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.159370347 seconds)
    (101/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.190223906 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.106610496 seconds)
    (103/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.117594829 seconds)
    (104/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.151314489 seconds)
    (105/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.120034991 seconds)
    (106/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.159350013 seconds)
    (107/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.109639322 seconds)
    (108/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.123096145 seconds)
    (109/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175882813 seconds)
    (110/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.11046802 seconds)
    (111/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.091804819 seconds)
    (112/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.098407921 seconds)
    (113/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.115670883 seconds)
    (114/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.176763318 seconds)
    (115/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.187648654 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.185371258 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.093122184 seconds)
    (118/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.187223737 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.113721126 seconds)
    (120/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.16616278 seconds)
    (121/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148093717 seconds)
    (122/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.152465085 seconds)
    (123/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.090149876 seconds)
    (124/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.105914301 seconds)
    (125/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.08472476 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.088741637 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.114741644 seconds)
    (128/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.070941811 seconds)
    (129/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.105829316 seconds)
    (130/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.125040504 seconds)
    (131/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.094489632 seconds)
    (132/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.168650105 seconds)
    (133/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.194285021 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.115811545 seconds)
    (135/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095682447 seconds)
    (136/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.070498048 seconds)
    (137/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.096203822 seconds)
    (138/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.070849439 seconds)
    (139/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.199272958 seconds)
    (140/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.085091245 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.106310467 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.082215283 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.114439244 seconds)
    (144/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.090965204 seconds)
    (145/286) benchmarking ("sort", Float32, true)...
    done (took 0.238711069 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.118482059 seconds)
    (147/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.081527519 seconds)
    (148/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.158474013 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.093225291 seconds)
    (150/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.184429364 seconds)
    (151/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.150204166 seconds)
    (152/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.111382225 seconds)
    (153/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.084298175 seconds)
    (154/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.152799483 seconds)
    (155/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.089879264 seconds)
    (156/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.094580432 seconds)
    (157/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.071934727 seconds)
    (158/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.097112135 seconds)
    (159/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.084282449 seconds)
    (160/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.122127526 seconds)
    (161/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.070627752 seconds)
    (162/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073933567 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.106003332 seconds)
    (164/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.098612788 seconds)
    (165/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.094326649 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.083129084 seconds)
    (167/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.071245544 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111969372 seconds)
    (169/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.084172445 seconds)
    (170/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.151582138 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.094863252 seconds)
    (172/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.093649897 seconds)
    (173/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.096137039 seconds)
    (174/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.102437028 seconds)
    (175/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.090010319 seconds)
    (176/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.169325093 seconds)
    (177/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.083962045 seconds)
    (178/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.151598946 seconds)
    (179/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.071226241 seconds)
    (180/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.109174002 seconds)
    (181/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.090929256 seconds)
    (182/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.089987294 seconds)
    (183/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.097180248 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 0.230086833 seconds)
    (185/286) benchmarking ("sort", Float32, false)...
    done (took 0.179068248 seconds)
    (186/286) benchmarking ("sort", BigInt, true)...
    done (took 0.242978229 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.081475017 seconds)
    (188/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.083109616 seconds)
    (189/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.103251375 seconds)
    (190/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.152391227 seconds)
    (191/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.116827102 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.082870766 seconds)
    (193/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.096758976 seconds)
    (194/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.134993239 seconds)
    (195/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.108421339 seconds)
    (196/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.108496467 seconds)
    (197/286) benchmarking ("sort", Float64, true)...
    done (took 0.240010656 seconds)
    (198/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.116876469 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.09143995 seconds)
    (200/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.103263738 seconds)
    (201/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.0813681 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.082523839 seconds)
    (203/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.095020316 seconds)
    (204/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.081157121 seconds)
    (205/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.175817398 seconds)
    (206/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.073553892 seconds)
    (207/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.099392581 seconds)
    (208/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.082929818 seconds)
    (209/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.106063767 seconds)
    (210/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.080439542 seconds)
    (211/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.082443647 seconds)
    (212/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.105333458 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.082533427 seconds)
    (214/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.071156433 seconds)
    (215/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.108031423 seconds)
    (216/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.089453686 seconds)
    (217/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.176287483 seconds)
    (218/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.070885107 seconds)
    (219/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.108426981 seconds)
    (220/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.072289862 seconds)
    (221/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.096450472 seconds)
    (222/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.081313165 seconds)
    (223/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.16684102 seconds)
    (224/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.071196105 seconds)
    (225/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.071305703 seconds)
    (226/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.094714461 seconds)
    (227/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.085560717 seconds)
    (228/286) benchmarking ("sort", BigInt, false)...
    done (took 0.22512628 seconds)
    (229/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115086858 seconds)
    (230/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.070532631 seconds)
    (231/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.126962447 seconds)
    (232/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.07093137 seconds)
    (233/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.083195145 seconds)
    (234/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.095496375 seconds)
    (235/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.07348968 seconds)
    (236/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.094660285 seconds)
    (237/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.109374363 seconds)
    (238/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.108363245 seconds)
    (239/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.072699617 seconds)
    (240/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.211782624 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.083270312 seconds)
    (242/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.095175816 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.089411128 seconds)
    (244/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.080880781 seconds)
    (245/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.106279383 seconds)
    (246/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.095126833 seconds)
    (247/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.100747982 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.092996298 seconds)
    (249/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114148336 seconds)
    (250/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.161937018 seconds)
    (251/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.105362016 seconds)
    (252/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.084730128 seconds)
    (253/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.133731038 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.109846463 seconds)
    (255/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.104950791 seconds)
    (256/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.072760408 seconds)
    (257/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.095261363 seconds)
    (258/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.088144857 seconds)
    (259/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.086950438 seconds)
    (260/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.095964349 seconds)
    (261/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.083347416 seconds)
    (262/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.110554543 seconds)
    (263/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.083245571 seconds)
    (264/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.140563043 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.09121516 seconds)
    (266/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.112848026 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.082226338 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.081886547 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.106860222 seconds)
    (270/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.107696458 seconds)
    (271/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.094708699 seconds)
    (272/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.070694989 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.115442533 seconds)
    (274/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.083071497 seconds)
    (275/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.185433589 seconds)
    (276/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.085025046 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.107330911 seconds)
    (278/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.071803152 seconds)
    (279/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.07355388 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.106022548 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.083293405 seconds)
    (282/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.095259799 seconds)
    (283/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.074360471 seconds)
    (284/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.08507394 seconds)
    (285/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.104512847 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.083543201 seconds)
  done (took 35.678634854 seconds)
done (took 36.572939418 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097245525 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15001246 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.092844841 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136599466 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097431027 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.121686765 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.093023927 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.120405014 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.096089685 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.122588378 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095210537 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.097095025 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09419831 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118547496 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.094577358 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138976871 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.096221799 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.113983718 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.086390197 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.082924473 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.111389797 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08359881 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.108610442 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072862782 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095106789 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.114965412 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.089875277 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118721269 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.083537136 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.107470576 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.082401612 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.114467627 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.082473632 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.096938871 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.11282529 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.086897379 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119142306 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.09310353 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.108745929 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.083350155 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115531908 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085637004 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.090947376 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.114725888 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.084669342 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.10618328 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086802526 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12243336 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115902647 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112806732 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091702076 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118362379 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.092957092 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.114524086 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.082534592 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.087280906 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.106454296 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115842414 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.110137584 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088719873 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11561662 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.091604169 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.106117916 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.086695823 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110634054 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.093953073 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.094653271 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.105804957 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.093739061 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.112836663 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.082673427 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.111483755 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.081990706 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.083593158 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.116756401 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094411692 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.106345187 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.084998639 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.114914853 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.088882527 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.106079806 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086277734 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.085913206 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.109302457 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085632736 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.097563691 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.083116726 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.089754395 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.10639873 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.086660406 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.114230952 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.090214281 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109254881 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.094768926 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.083485731 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.106284577 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.083641157 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.107579613 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.085390442 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.105855925 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.083944351 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086220674 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.116434236 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.084821908 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.108270945 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.095625948 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.107407239 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.089889025 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.082657055 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.107371977 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.099561239 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.118843544 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.083483592 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113262172 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08239122 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.085935667 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.106401771 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.083971475 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.107581372 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.083085702 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.108939117 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.084405031 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085921083 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.109462577 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.096896462 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.107489609 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.082600085 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086287455 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.10725284 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.089516613 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.108689508 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.083535007 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.109777437 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081801461 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086497111 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.107262705 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.084840943 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110430977 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.087077353 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.108967235 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.087465013 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.087991642 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.108576739 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.083098143 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.106042381 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077475156 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08871885 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109537534 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.085113412 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.107856776 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.08474719 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.108142906 seconds)
done (took 15.983589467 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.08424872 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182637742 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.138297611 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.118656075 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.12960285 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.083809077 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119404868 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.140277118 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.085900218 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142110767 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.107392898 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.128254846 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147587957 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.082912272 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.084014049 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113203044 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.084656328 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.125654946 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.123009553 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.129968211 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.139713565 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.083249071 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.132700117 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.108962084 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.117431788 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.112574795 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.108323779 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.087795825 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.111467923 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099926138 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.1292746 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.087402313 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.108906861 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.106505351 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.125791664 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.092136857 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.108249361 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090748595 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.084583461 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.108223685 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.124080906 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107266711 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.113886725 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.090182202 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.087908408 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116692968 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08556221 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118009137 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094948714 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112929668 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.099740688 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132626393 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.111423646 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.101209823 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.10714695 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.095521359 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124566082 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.092576985 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.084746097 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.116352539 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.084156464 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.112350106 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.100201031 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126347846 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.088617937 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123900031 seconds)
  done (took 8.187363501 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.102764876 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139136824 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.102907253 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.127160963 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.084967749 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.109341868 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.084643221 seconds)
  done (took 1.704458108 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102984582 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110736418 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135671625 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136068707 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.10838145 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.136039428 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089355103 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.109521884 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.105306156 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.110279676 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110102142 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150770902 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.085512725 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118408253 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.112846024 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.10981356 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113098996 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.10958222 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.087555064 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136974207 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087757349 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.129282164 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.087362525 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.109540689 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103673184 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.08584546 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.159376029 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115224577 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082792006 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.08876841 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.107417392 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150104682 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102889674 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118893234 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085185412 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129707969 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.10346794 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10719668 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.101990232 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.115639695 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.102963141 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.086050628 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.110246066 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.083245797 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.114634887 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098938759 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.113195085 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.086476252 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.08837649 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134098035 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.086789335 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127944021 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.085491114 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.114434019 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.087345534 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113391499 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.095421676 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.110625459 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109793196 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083486351 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13017026 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.130916078 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102799095 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130067157 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087376864 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127865844 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104397507 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.088484806 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112462431 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.089245503 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130721133 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.082751548 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113320585 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099461426 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111584169 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112589649 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137004334 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086594313 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12192651 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.086075981 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.086154326 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.111076545 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.138642823 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0902667 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.085678962 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116584559 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088751812 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.108968639 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.084874752 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.113598603 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.084095614 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.087319865 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.114843521 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.086325503 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.114554116 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105975749 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.111892825 seconds)
  done (took 11.357672105 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.08664094 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087068693 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.113805808 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087117337 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111808183 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087074071 seconds)
  done (took 1.536465551 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11561834 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.112525789 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.09957654 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.115768267 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.126439721 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.138215022 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.111537077 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119921354 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.128546538 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.097800455 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.137877237 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112329711 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.14083502 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.090886493 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.135350087 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.089523545 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.13584145 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.091855221 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.121967141 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090896294 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.128153311 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.091462894 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116741461 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.106265797 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120273183 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.090727271 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117560584 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.097504339 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.123686511 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.095772094 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.11605696 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095896338 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.117083561 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.09531439 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.135948465 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.116639001 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090731164 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121916832 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093039955 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120029713 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.113281436 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11653546 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.097069562 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122644424 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.095278419 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.117084323 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098217632 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116777266 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.111335815 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122835876 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096878538 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.115870873 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095541395 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.12288692 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.092469547 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120238481 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097957304 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.136441781 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.091540536 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.116858972 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.08785445 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121303844 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095098343 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120721624 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.095523208 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122120742 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.092204995 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116108325 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092187034 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.11625045 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.097213274 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.11311057 seconds)
  done (took 8.940182074 seconds)
done (took 32.667168891 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.689831252 seconds)
  done (took 1.650331356 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.799643602 seconds)
  done (took 1.762256626 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.014856245 seconds)
  done (took 18.007060947 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.461627565 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.537053813 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.97049783 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.162448402 seconds)
  done (took 3.09509804 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.955958561 seconds)
  done (took 1.936262345 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.281588369 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231857281 seconds)
  done (took 1.480243136 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.755749322 seconds)
  done (took 1.734075493 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.435743518 seconds)
  done (took 2.409790644 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326304182 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.158412401 seconds)
  done (took 1.468689103 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.567526317 seconds)
  done (took 1.550630828 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.277320351 seconds)
  done (took 11.256161096 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240643916 seconds)
  done (took 1.227658596 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.29064255 seconds)
  done (took 1.270133681 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.532253073 seconds)
  done (took 4.510484308 seconds)
done (took 54.326921358 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.095723429 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.099636534 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.124116441 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.097096896 seconds)
  done (took 1.390024044 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102349566 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117378745 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101847967 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117511218 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102089398 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118416838 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.095821801 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.129075675 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.092040205 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.119223442 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.092881252 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.091289506 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.121834837 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.11978243 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.090157245 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.096128245 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125410406 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.092274049 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122810825 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.093741503 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.115964277 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.095089413 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121462339 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.091524025 seconds)
  done (took 3.552925177 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097135331 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090488364 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118929583 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089994755 seconds)
  done (took 1.384128778 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.09618656 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128089768 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.102786931 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.121312272 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.104140912 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.128123764 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.088583445 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.088256419 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.11605059 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.096312878 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.112683663 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.109821149 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128438915 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.095895448 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.12450912 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.085499743 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.113504011 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.10287162 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122096478 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.097551174 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.114551994 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.096262015 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.086459007 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130006423 seconds)
  done (took 3.578243883 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.168726483 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.124246383 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.109445821 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.117379051 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.131922158 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.137152611 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.083545919 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.137881316 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.085068364 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.125488979 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.089065115 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.15733868 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.123713411 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.084591593 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.084470973 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.109957146 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.096600792 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.122938531 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.087584788 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125008068 seconds)
  done (took 3.292456977 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.094809303 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.088978648 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.110066253 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.087769236 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121738111 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091956671 seconds)
  done (took 1.589455282 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094333692 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.086117975 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116085855 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.087749962 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.117268345 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085073986 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.110489823 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.086923319 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.086307796 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.111001136 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088122103 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.110696938 seconds)
  done (took 2.177913214 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.512221575 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114305679 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.088124178 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110316868 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096306153 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.111804514 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102058816 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.11365797 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.113684319 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.111251731 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.086177343 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.087900896 seconds)
  done (took 2.639976007 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200114614 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096422656 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257850427 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345321616 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153771836 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160243763 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272077651 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161532951 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.175702345 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138707918 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191866306 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153436541 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125183919 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172014829 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13581594 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.151032344 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169397093 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185811459 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119503593 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222189217 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129458708 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161796733 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177964859 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147999076 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136218445 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155983396 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.092143988 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126464938 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167798296 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164570446 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168717463 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119198218 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137696368 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.461056171 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201822786 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171988871 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280045721 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132408643 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.174979534 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.139018102 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244423516 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110232156 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210877344 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125432999 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128983001 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175073066 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.3206879 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.171357547 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.130573966 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139147577 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174950596 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175027338 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172061263 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109665366 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316725575 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120578087 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.139733683 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180913382 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177346117 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18554196 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162201021 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.116602941 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182157418 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178995115 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173893837 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.115204014 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160439176 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122566113 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167553591 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191169999 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170820324 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159256847 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178859081 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135160844 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159486643 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167657286 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150670529 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146144836 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153940519 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118479852 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120854357 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135751834 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12875503 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16582256 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122034493 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194222316 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131629526 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.142773719 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225547954 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128584459 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15726005 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159425571 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159269466 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14428815 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.088479654 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143875512 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149596089 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126109554 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12952401 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15533624 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13983686 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.099421489 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149990928 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.094032301 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155133158 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.125774265 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.33371002 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159529199 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.122694171 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133143131 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144819785 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.146535384 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166158142 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181200046 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105261858 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130672889 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19069595 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155445864 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131201608 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145157072 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203192323 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.126352059 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135743118 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163434289 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184986949 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138473889 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182934075 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113842098 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131740343 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.139052327 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128993607 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154399284 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.156483559 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130685929 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122845992 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215500887 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09662902 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134775616 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169410347 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099265579 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127786182 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112089871 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134219158 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.132396088 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.111570069 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134119898 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153239592 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127745651 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15255869 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148755325 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139209881 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185211075 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132408849 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.121591314 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144465217 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.091439765 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168817948 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181164829 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12824823 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19152552 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159790259 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19546844 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158063066 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129479322 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173935478 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100072692 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117364929 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160756491 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128572834 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156682979 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.17622796 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217105782 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160137868 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120884424 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146528873 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160810261 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162026053 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147314394 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107504119 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159278356 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153793562 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.093753856 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123451185 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.098108584 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137563352 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12862834 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106137627 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174329544 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16174217 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210636005 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13119733 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137766255 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179542241 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123388634 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158267373 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.372725206 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138865966 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.178168886 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179264465 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162524606 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138057144 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166615712 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.090908217 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094464144 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132649399 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16001591 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132789253 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105824769 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139207349 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178644415 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.331155495 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145599555 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225058871 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162020276 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187334822 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.092096511 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166138464 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16637215 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127922156 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.170652263 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130076205 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.119803354 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175155899 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142206022 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179804529 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158606546 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163143384 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185932417 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.147154877 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102206218 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14497909 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161724744 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109455579 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163257589 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143152519 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133948503 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315793315 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.097503175 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124571328 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171455797 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142321724 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169114307 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144141019 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160341239 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098070743 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138762641 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15522349 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11606839 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.112947505 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333850987 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177950664 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142156044 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.31810979 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169886888 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128907593 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306624589 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185437604 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.36414778 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107956794 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14069309 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15832525 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157429298 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.321369628 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175258983 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144022592 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174603079 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126850135 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.132258402 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13521794 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118299902 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149420214 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.139153014 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103404644 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150217525 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.133629419 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172017723 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111861142 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155062566 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160218738 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148594193 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.113633768 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143456076 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196458233 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156153829 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171190731 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.144354018 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.13321663 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219331716 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096318113 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126775389 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.097661729 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175211114 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130194301 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127535675 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.208837502 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19504486 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157085923 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160143338 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10924072 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.117430592 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128529345 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14465527 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220713437 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112320334 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133235417 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183805273 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.141415371 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102097274 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157946804 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284517552 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141573565 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171412281 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.084354975 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275243578 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12299483 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1032111 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158712738 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168144496 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133849175 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.145753689 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15855329 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141403256 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157258949 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10861505 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186625379 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227370111 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135866673 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166363485 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.131114215 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15651781 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320944692 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172687135 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143925244 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.104791703 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159995251 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179593101 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.181679696 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131933228 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160033151 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131321397 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156043247 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163170474 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134572871 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193574021 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128250428 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161614517 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109579318 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121738197 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154851297 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.182446032 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103208632 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168910488 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155550237 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130527047 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097119724 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148825271 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156688488 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114336761 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.124248983 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169901628 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.093473615 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158569158 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174890688 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13119477 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125010537 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144039324 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13486364 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112379927 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142638321 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135088166 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.135871318 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175264945 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128096223 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173412842 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168552753 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160805469 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317472719 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140116342 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636008088 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126997247 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179335135 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145103801 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177062148 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119111634 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16273515 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158909948 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147507863 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161176828 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119482951 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228825841 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162465523 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.15459445 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101619156 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141311823 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142072794 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.101180473 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149174849 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160038387 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139125913 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.106011954 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154801389 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141626877 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.103535908 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138080913 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180511762 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117343243 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197720294 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148473726 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137582832 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163737087 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1641884 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100123194 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156181258 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169327494 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140254603 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147173501 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.103605289 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133587176 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175153039 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09446197 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157385745 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158408478 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158441053 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13162172 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132179007 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156179186 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138594058 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132062378 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129025479 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150037204 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153481155 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105034942 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125843138 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125193327 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150549815 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148155452 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095947346 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.162858675 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18044746 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.092847698 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131921883 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280486372 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156901777 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18511355 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.112773568 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134300818 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141005809 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115192916 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151317434 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15694566 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.099714274 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130093456 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.127249496 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.136280587 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140218431 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155198913 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183973101 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32308486 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193572232 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135543483 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278774095 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10984553 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15270355 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.092879477 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128532658 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139450297 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104786494 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142226761 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18763776 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176896295 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.143330331 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.104884848 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12501087 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.094811059 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130536491 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131232691 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149090917 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156727893 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140290895 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.085026587 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142479667 seconds)
  done (took 75.856267685 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144861801 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131188985 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146303217 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200175972 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166069065 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25193008 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208700321 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234717144 seconds)
  done (took 2.559711183 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.090346874 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.141913684 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.125861994 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132544276 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.113887459 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.115208998 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.301913535 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131227224 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114414995 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.116943402 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.130097821 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.114941738 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.526849394 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.115071432 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.088255183 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.110387781 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.113876462 seconds)
  done (took 3.653697208 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.14557147 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.476364466 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.96467866 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.191998286 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.176100865 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.092846054 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.710180134 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091459426 seconds)
  done (took 11.924211231 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.12081126 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.141612655 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.133695334 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.161025887 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.118307829 seconds)
  done (took 1.763770878 seconds)
done (took 116.336315858 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.094472533 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124086298 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096145582 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.126551929 seconds)
  done (took 1.510310159 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.101776785 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.074797367 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.107248882 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.078641273 seconds)
  done (took 1.438353197 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.191117626 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.166553881 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401088148 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.075419481 seconds)
  done (took 1.590734453 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.111923648 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.128665195 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103102938 seconds)
  done (took 1.433492322 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.103467044 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.09778932 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.126867706 seconds)
  done (took 1.41479273 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.101251107 seconds)
  done (took 1.18273018 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108141732 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136929161 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109532383 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.13540728 seconds)
  done (took 1.576505266 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094695639 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096317322 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.137001451 seconds)
  done (took 1.415214447 seconds)
done (took 13.0019488 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103423873 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.514811891 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.386635237 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135121856 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.696402066 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.406814968 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.008442707 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143004293 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165687181 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089009954 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134938406 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.669846219 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.026480579 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.440466428 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.012423125 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.344491949 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696894861 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089188161 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116168804 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089431621 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018322948 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089713959 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088708447 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117099617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.669787641 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422680412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089763247 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.364343595 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089282806 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124657597 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.375949703 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116077662 seconds)
  done (took 16.912881187 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095152024 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176225218 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09974906 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119521983 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096833692 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118898132 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.093245084 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090199824 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1796073 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11782207 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.107117969 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116886996 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.092820484 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118534194 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109444427 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117193589 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090375606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11725935 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.089602622 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089083306 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13740754 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088079331 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118383666 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088843064 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116937281 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102875945 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118340836 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.089822468 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117356376 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09799551 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091638375 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118004746 seconds)
  done (took 4.605284328 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141972251 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185983798 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129061151 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124317588 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.171082926 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.091587084 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197983012 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144717987 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182442612 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089051942 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134757958 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.089739917 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152168525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.089744991 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138347776 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.0892343 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117837948 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089842414 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116200579 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090754392 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108197983 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117171008 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089004449 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117766727 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089589534 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133532921 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089748769 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118341889 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089654382 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125795141 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092544882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117620082 seconds)
  done (took 4.948848967 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.093506146 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.095245521 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133954077 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.105506941 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118916102 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.092257918 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.121543637 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.091370745 seconds)
  done (took 1.943071408 seconds)
done (took 29.496398929 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.107287943 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.095640026 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132084534 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.101983293 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127811325 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101886786 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.116850457 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100817883 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.130736221 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.098665022 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134434131 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.088109294 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.090586295 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116795891 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.102904695 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122833008 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.103012299 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.128384954 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.10338708 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131929186 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.090815696 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.129594371 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10029334 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131345174 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10418494 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131699997 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.106713253 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.124245143 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.090872171 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.091276813 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.131735137 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.109867115 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.120253951 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105169674 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123596507 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.094568458 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.119961623 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093895499 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131146506 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10150056 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124492257 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101958412 seconds)
  done (took 5.780842676 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.115335086 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.148012052 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.1111603 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.113586258 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091330492 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.112075503 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115109087 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082819959 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112883306 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113692617 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.106653963 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080181269 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.110279475 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076241068 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079564138 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.107694259 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083014884 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.106300067 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080759725 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080422892 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.112663678 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076243695 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082653394 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.110366682 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078002063 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.113121392 seconds)
  done (took 3.702655149 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.096772232 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.104518668 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138886787 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.172171309 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.124963027 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.127143571 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098486398 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136872446 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.105457769 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117021682 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09126636 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.146763228 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106514075 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125537125 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091874816 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.104132505 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131603634 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090634604 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123285432 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108633375 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.134218031 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.099020065 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137414431 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.100295417 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.116890238 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091095572 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122452338 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.100407911 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096406368 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.125904436 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095717704 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12168286 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.091181749 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.131548999 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.095283917 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.119851101 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.10907439 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128783 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.098151792 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119093912 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097094775 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.094417907 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139607761 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.157686746 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.08993502 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125023301 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.093391208 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.099111882 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119340597 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108116501 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128477131 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089564686 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.121684472 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091277832 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.091460167 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133907634 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090970148 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120215805 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.1016545 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124427466 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.101825982 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123199728 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.104402545 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119010688 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.096086131 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.090803808 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.119187026 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.088106422 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142748302 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095254401 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16093608 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.089895529 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.120014726 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.097255892 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125458076 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095784005 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.118365135 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104907005 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127463469 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093747883 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128922394 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.091871584 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.092269356 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.136826564 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.091849091 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.11997 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.090358572 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12482383 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.092393442 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.0903542 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133436976 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.08830313 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121837521 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.103121294 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11914506 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.090963571 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124456269 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.094944828 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.117551167 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103512323 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.12350997 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.09009922 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129306961 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.090494749 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09170005 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12877819 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.094115169 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.118865395 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.094329739 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124811951 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.090117671 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122400517 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.092831059 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.091591513 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.128182958 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.096588372 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123106936 seconds)
  done (took 14.100419136 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229200343 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216497388 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188818713 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.299053927 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.102422395 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.144742503 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211598233 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125431461 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.120072958 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158163748 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.169020098 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.151732757 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169050326 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180126962 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169301914 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.118959994 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.10967202 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165680937 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21479921 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.261140134 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.139690708 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.098161811 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160442641 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158605577 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.133912423 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.098905179 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.136523172 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102738402 seconds)
  done (took 5.652379262 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106403539 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151690289 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.095651075 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.141003585 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.116055644 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119373625 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.09414865 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.121221059 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.103257534 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13522129 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.088876702 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125871804 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.097428018 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.12888043 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.090618678 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.128324472 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.100056248 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.12059103 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.093297017 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.094247878 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129327717 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136878675 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.094197125 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.089379674 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.128869488 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.089093219 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.122149428 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141801214 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.089622846 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.140989197 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.088603389 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.097861421 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13263447 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.090241127 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119821183 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.092060678 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.121555285 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.092027901 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091638359 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117281124 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.088641024 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.110721852 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.089344245 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136081814 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096424488 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.113414164 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.09639689 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.124979134 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.091009234 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.087827732 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.1220297 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.093527988 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.122844879 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.097776529 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.120912319 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.091590321 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.093150826 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118740956 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.096784945 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.122714951 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.088142786 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.088042792 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.123806331 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.122842168 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100176583 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.094777107 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.118059902 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091804089 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.123418896 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097038035 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.121032902 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.096584536 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.087701784 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.121803766 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.0930015 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126740095 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.093452951 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.118297213 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.08985758 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.090538994 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.109473025 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.090656625 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.107369583 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.093667676 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.08842487 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.117859712 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.092381232 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126547483 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.106421486 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.120963158 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.099088209 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.12102705 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.089361797 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120846213 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087543243 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.092798167 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.136675556 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139241713 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089680391 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.116652907 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.104440995 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.09348222 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118747226 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.080006047 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129363316 seconds)
  done (took 12.46410834 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129468266 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.151172658 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.092507712 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.138679859 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124591876 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155993783 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.097479037 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.127535742 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.092211814 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140215591 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.09113019 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.12917347 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.090548669 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135128255 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124898059 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131450852 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.092314047 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.135158272 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.094856095 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.16859395 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.108704434 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.13828413 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108159765 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.120605399 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.096563729 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.13760184 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.12803829 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.135120221 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.104271606 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139739094 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.104550918 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.157951049 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139633047 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.095728752 seconds)
  done (took 5.289652157 seconds)
done (took 48.086650819 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.20030358 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.430326059 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.187736377 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.073551172 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.262822441 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.208055636 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.199859794 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.197477559 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.217337999 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.188279779 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.431170487 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.746163069 seconds)
done (took 58.464864024 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.24111692 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.347262282 seconds)
    (2/2) benchmarking "String"...
    done (took 1.484241387 seconds)
  done (took 3.951234687 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.746523026 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.146832138 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.45334885 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.190318215 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.189861322 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.483134184 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.920172114 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.606648039 seconds)
  done (took 28.111435032 seconds)
done (took 42.172297705 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.190154736 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.216860805 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.236086737 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.192044733 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.304926 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.213859816 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.55240066 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.234232937 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.208015952 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.182072194 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.211890658 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.207044312 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.208054777 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.579712105 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.194753396 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.204506234 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.27088638 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.690240026 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.605038594 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.209505249 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.220012665 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.252093474 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.217099932 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.193297609 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.206661961 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.194237681 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.190787707 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.195505511 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.795245191 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.195314646 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.204752867 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.697706976 seconds)
  done (took 190.595466744 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.191808815 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.252674066 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.338435381 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.220972575 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.640375428 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.392535703 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.33455005 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.728458902 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.211668517 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.223438674 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.449519288 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.191210643 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.518443014 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.161984078 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.221141741 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.277496639 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.424740568 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.509564332 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.229064844 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.348618251 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.202102845 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.443015001 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.340139976 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.366568431 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.218289506 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.241743325 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.236274226 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.202339866 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.382323907 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.321380436 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.194019264 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.212246757 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.807201229 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.043714255 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.215160352 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.220438312 seconds)
  done (took 149.636104389 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.188924633 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.18889438 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.190426116 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.220563516 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.18845184 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.753972517 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.759743135 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.719085684 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.517698281 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.569878492 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.440094454 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.190368128 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283781317 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.188942103 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.20413372 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.19088889 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.206225028 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.21651885 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.188893742 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190319059 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.756495969 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.204955954 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.366948984 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.36384797 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.206517496 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22143124 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.587017725 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.189844357 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222038746 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.518883659 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.238843246 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.190708559 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.581562067 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.798766175 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.191572179 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303008162 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.193059566 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.223782653 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.191501167 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.469178219 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.192213518 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.192223601 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.194164426 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.880903921 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.193435196 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.758197428 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192337919 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.128898245 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.191180939 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.191250161 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.319190278 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.888128486 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.210556833 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.192168212 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.1938673 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.191791215 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.192202833 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.223448685 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.326154951 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.304067924 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.192828 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.19206879 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.195176669 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.223114718 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.193064764 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.356794512 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194589505 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.711694044 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.252359312 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.308859296 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.754690226 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193965418 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290668573 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312758827 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.191836188 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.191583447 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192013833 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.191733506 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.301610413 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.191263614 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.5921522 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.363681809 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.208688383 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.556209665 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.290256392 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.192044131 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.582110815 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.194765195 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.191748162 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.929522511 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288342966 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.190789435 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.191367582 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.190892887 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.594358301 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.750939075 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.441600983 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.193960017 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.568049503 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.196056032 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.191917657 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.604383737 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.722027058 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.855305326 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.193399364 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302728959 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.363628889 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.208216115 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.191120355 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.533769447 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.195419246 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.251013195 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.193162078 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.588876377 seconds)
  done (took 364.635270919 seconds)
done (took 705.988280873 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.802491151 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.798128272 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.909215905 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.79279788 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.754917482 seconds)
  done (took 10.178511362 seconds)
done (took 11.300663486 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.376503335 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.375643365 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.252375294 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.379045379 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.22459057 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.393519642 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.358995705 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.214842435 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.294967273 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.27514702 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.295662135 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246224633 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227241132 seconds)
  done (took 18.03735094 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.501431099 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.50448241 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256349163 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.498175946 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23213301 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.501566289 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.391763112 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.418480075 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.405676885 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.207626013 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206455355 seconds)
  done (took 16.247773851 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.532207689 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.52857493 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262318643 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.510361216 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236912897 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.551607737 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.398717515 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.41121459 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41754956 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.208247924 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205536284 seconds)
  done (took 16.386107177 seconds)
done (took 51.793720309 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.201852886 seconds)
  done (took 2.324241644 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.241484417 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.401438817 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.224133614 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.20874577 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.203149056 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.212681852 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.209573071 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.206507373 seconds)
  done (took 11.031210924 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.19958402 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.197740516 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.200010694 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.198378425 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.200896986 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.199961441 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.198337103 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.197919339 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.197361889 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.200389591 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.198964118 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.196107157 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.199129214 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.199194101 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.199912482 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.200138502 seconds)
  done (took 20.307344746 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.199381335 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.195669647 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.195975173 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.196650441 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.196728274 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.196924314 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.198232019 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.197392442 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.195564804 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.196706897 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.197350189 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.196809327 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.197841667 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.196897441 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.196223872 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.19731913 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.19693381 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.198515999 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.201529823 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.197074751 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.196494779 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.197506568 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.197675789 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.196667764 seconds)
  done (took 29.858089407 seconds)
done (took 64.643934707 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.788524479 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.618378629 seconds)
  done (took 6.529651494 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.257646353 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.26056345 seconds)
  done (took 3.64306524 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.200563319 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.200082542 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.200080546 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.200205369 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.200265044 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.200591396 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.201923809 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.20072247 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.200881435 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.200348739 seconds)
  done (took 13.129117721 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.201531684 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.200264639 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.198170974 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.19981999 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.201237218 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.198239324 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.20066502 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.200816764 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.200448566 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.198318327 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.200423635 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.197849426 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.200212341 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.199376288 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.200394766 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.199185522 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.199358402 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.198768159 seconds)
  done (took 22.718721476 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.214182485 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.222759397 seconds)
  done (took 3.560745991 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.330021262 seconds)
    (2/7) benchmarking "second"...
    done (took 1.241518286 seconds)
    (3/7) benchmarking "month"...
    done (took 1.308384884 seconds)
    (4/7) benchmarking "year"...
    done (took 1.296102136 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.240607789 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.220958637 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.241166187 seconds)
  done (took 10.003188896 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.202607459 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.383007146 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.486471498 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.828165041 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.203933631 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.206180492 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.062096672 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.206009209 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.20850752 seconds)
  done (took 13.911509359 seconds)
done (took 74.618962365 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.200904998 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.195111327 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.394110006 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.201869396 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.211802447 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.522029751 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.234568275 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.313034838 seconds)
done (took 37.39891726 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.202773785 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.182164212 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.882229683 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.213358259 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.230312997 seconds)
  done (took 18.632185127 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.179287218 seconds)
    (2/2) benchmarking "read"...
    done (took 1.530829768 seconds)
  done (took 4.834166019 seconds)
done (took 30.793324818 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202242802 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.202340749 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.202825814 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.200186196 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.20230984 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.19956011 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.20032639 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.203264036 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.202389152 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.20314612 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.202683504 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202579725 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201271627 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200106226 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203037958 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.200393934 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200785838 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.200282395 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.203404036 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201034027 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.201046184 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203543499 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.20148673 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.199886338 seconds)
  done (took 29.964927885 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.203416514 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.2021148 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.203384635 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.204082375 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.201222832 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.203785818 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.203790211 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.199603437 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.20272086 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.203251147 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.200658392 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.201205165 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.203709352 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.200874101 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203482479 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.200666814 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.202882335 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201049249 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20343339 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.200516211 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.20351756 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201175936 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.20098491 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.204247439 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.201775571 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200861851 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.204197956 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.201545714 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.2048785 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.202081123 seconds)
  done (took 37.197315644 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.20895497 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.211437762 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.203694182 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.204281315 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.203575676 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.203565815 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.204801593 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.203346028 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.204159953 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.204672269 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.204697812 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.204475549 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.205026201 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.205345742 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.205020084 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.205328757 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.206314001 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.20357986 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.205368151 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.205438179 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.205307946 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.205047108 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.204550073 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.20471364 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.205627502 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.206249922 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.206358192 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.20549096 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.20771237 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.206231622 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.20658287 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.206423203 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.206641046 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.206021521 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.20673743 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.205672609 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.210597665 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.213230287 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.206974318 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.206579983 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.205883052 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.206986184 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.205966666 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.206052121 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.207326696 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.206272183 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.207747379 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.206653881 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.206562961 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.207428263 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.206320741 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.206960825 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.206713936 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.206842713 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.208667489 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.206912403 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.207853346 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.207425296 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.207888394 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.208019652 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.207892256 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.207586858 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.207715531 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.207592959 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.20761719 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.208125428 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.208190233 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.208318592 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.208113903 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.208957387 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.208340989 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.208447764 seconds)
  done (took 88.002278235 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.208292631 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.206860538 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.206468765 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.206076859 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20604884 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.209163915 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.206130288 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211543169 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206122964 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.209109613 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208535559 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.206815416 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206815211 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.210176692 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209017954 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.20751211 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.210036987 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207577742 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.208917611 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.209913792 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209874873 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.207711424 seconds)
  done (took 27.709119882 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209833298 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.211815351 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.207898019 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.2118128 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.209853449 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.211464794 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.210731345 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.212016867 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210674626 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208165921 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20761148 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210883752 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.209894794 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208888923 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20811424 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.210025989 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211528228 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.21102981 seconds)
  done (took 22.914521913 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.209294105 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.209179652 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.211264576 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.20877535 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.209228866 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.211009823 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208298259 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.211593424 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.211434419 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.209090194 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.211569565 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211652374 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.212565892 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208463211 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210947125 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.21064237 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.211597399 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209671518 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212299603 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209075698 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.209822144 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212873892 seconds)
  done (took 27.763861895 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211717681 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.212443409 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.209626426 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.21006219 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.210226806 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.212159671 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.212833994 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.208663465 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.213837382 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.211898845 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210197782 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.212799546 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.212285468 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.210598655 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.21105899 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211491838 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.213326158 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.211781468 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212962909 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.210985393 seconds)
  done (took 25.365137018 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.216149894 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215993777 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.217020299 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216407417 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216578344 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.217036551 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216971498 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.216476701 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.21687497 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.216689207 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.216595614 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.216359524 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216976554 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.216503752 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.216919413 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217691612 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.217459542 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.217104804 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.217066341 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217077976 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.218039089 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217588966 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.217257933 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.216401449 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.217401622 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.217943666 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217447645 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.217539437 seconds)
  done (took 35.212075999 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215618663 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.215581145 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.213955689 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.212925237 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.21341612 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.213553158 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.213732655 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.657198807 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.216772967 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213943925 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.217512227 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.214794708 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.215231133 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.21653553 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.215163612 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.216915708 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21608172 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.21376177 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214162561 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213263361 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.214924564 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216022024 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.215239432 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.214438277 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213848439 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.216327841 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213742998 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.214029481 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216802549 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.214043088 seconds)
  done (took 38.028344161 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.234632387 seconds)
    (2/2) benchmarking "in"...
    done (took 1.235027513 seconds)
  done (took 3.607354818 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.213238908 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216228004 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.216855993 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.214718592 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.214578092 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.216946677 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.217103789 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215215554 seconds)
  done (took 10.863420335 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.21718591 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.217790506 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.218137652 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.217975814 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.21941149 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.218268576 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225174945 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.235963824 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.218171246 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.218606158 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.224795435 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.224401003 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.220019338 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.218270413 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.217807703 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.219773027 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.218301248 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.219698178 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.219646909 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.218674809 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.22009495 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.220615348 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.22167333 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.216009302 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.219888504 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.229722668 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.222995242 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.219135019 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.21868497 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.221959815 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.219034186 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.216387659 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.220985838 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.220969614 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.220018953 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.220748108 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.229708249 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239093416 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.226160995 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.222412559 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.220587125 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.217335849 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.221128149 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.221188316 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.22171021 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.221737849 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.22141262 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.218350269 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.219799272 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.224135961 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.225174027 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.219985198 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.21784112 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223492804 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.222257602 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228367364 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.240555551 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.224290533 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.231215074 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.232001871 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.234280973 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.243987674 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.223510516 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.223169256 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232077117 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.244372575 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229435256 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.235592561 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.218735918 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.221392629 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.229146121 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236007967 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.246158796 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.222792403 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224152384 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.222273318 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.221785746 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.222545262 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229360223 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.24161168 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.224138688 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224517387 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.232907957 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244744648 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.222641198 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.224556203 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.224682779 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.224362917 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.224734913 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232812964 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.243284031 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.224236958 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.222049923 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.223540366 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.224957109 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.225219941 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.222841544 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223406738 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.220843902 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.224188967 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225501826 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.227572412 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.232096615 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226392289 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.225106082 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.231758517 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.224116563 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224050204 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.230631256 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.225119325 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.225838575 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.226283858 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.229548785 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.221663627 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.228463825 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.232082407 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.225432358 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.225093817 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.226732006 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.225290619 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.234875223 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.249467805 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.22586821 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.225498118 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.230477286 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.237270069 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227084249 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.229020091 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.226682876 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.223561033 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.223624229 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.227345745 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.226792315 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.226445397 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.227715232 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227710493 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.223863862 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.226923773 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.227989744 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.227498978 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.226692461 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.227718114 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.228013254 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.228549215 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.229464285 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.229139337 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.233182292 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.22616627 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.228091495 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.228282827 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.225445475 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.228039033 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.22832732 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.228710337 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.227674793 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229736764 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.227450447 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.2297747 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.228707397 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.228047016 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.227611112 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.228332313 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23185746 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.229097259 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.230808489 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.228566996 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.225374806 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.227501905 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.228067618 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.228205134 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.229292194 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.227782255 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.231229672 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.236792177 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.228862554 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.230768899 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.230734643 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229790463 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.230026627 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231340972 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.232462649 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.23662917 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.230736339 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.236994986 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.231344794 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.230614145 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.23022119 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.229229414 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.228746099 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231492517 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.233398277 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.237041462 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24170761 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253036076 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.231746056 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.232853536 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.230958278 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.236943515 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.233250856 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.232767542 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.230783403 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.231768383 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.230771495 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.23188132 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.230841898 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.231557226 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.22994254 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.231152905 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.230902067 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.23288287 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.231300088 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.231959819 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232545462 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.228519851 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.231945571 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.232730056 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.231374543 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.230010487 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.231468469 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.230875406 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.232511599 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.23338777 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.237931679 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.230397691 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232477041 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234560496 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.232160246 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.231507696 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.233193826 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234330322 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.232750312 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238754686 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.249023298 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.233117027 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240307284 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.249652059 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.231983293 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.234599089 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.232989253 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.231646167 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.235754302 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.241038834 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.233169988 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.234234591 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.235573148 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233388462 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.233674783 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.239518516 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.231298807 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.232787655 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.233951978 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.234878815 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.230608792 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.234692958 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.234430153 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.233749062 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236416013 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234541237 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.234947118 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.235217833 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.235100325 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.236212669 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.236658644 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238715344 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.243064002 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.239961861 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.235381231 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.236091654 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.236476778 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.238773195 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.234891461 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.235985418 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.235163715 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248152539 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.260321964 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241955514 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.235724055 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.235265599 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241958041 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.23691715 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.238714981 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235751607 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236427639 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.235780122 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.235251113 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.23325173 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.236389911 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.236732876 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236994312 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.237834291 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.240437215 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.237049657 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.236372129 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.238312912 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.237985602 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.237543258 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.236726246 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.236869757 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.238005174 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238861097 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.235830776 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.236988145 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244078349 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253179163 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.238744242 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.237347512 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.237741213 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.236930376 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.238245425 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.238779759 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.240855086 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.246367376 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.241348692 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.244827569 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.239965217 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246790431 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.239099821 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.241655622 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.247803073 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.23606008 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.237026386 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.237725301 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.239664167 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246223819 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.257652211 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.241081476 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.243656605 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240095446 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.239971788 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.239101053 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.239858179 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239253733 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.23984022 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249288898 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.260229466 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.243058025 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240381027 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.236556629 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.240563578 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.239456301 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.238729823 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242466585 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.240225887 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.240742643 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.239463709 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.239250075 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.239896484 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.241586498 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.239343266 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.236789015 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.240118917 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247027002 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.259013341 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.245203067 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.240930572 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.246809604 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242063462 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247866725 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.259368771 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.241678922 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.242837678 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.241274424 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.241783424 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.24065523 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.242236588 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.241652631 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.242064049 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.244042392 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.242464334 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.242520338 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.241533879 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.242772721 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.240475586 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251664365 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265650127 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.243990183 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245999241 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.239167232 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.243519445 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.248064225 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.243264261 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.241198599 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.245843787 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25296493 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250612541 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.242101718 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.243596501 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242864108 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243616958 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.242548694 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.243103342 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.244795725 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.243181471 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.243461344 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.244845152 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245252876 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.243112155 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.243041298 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243830706 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.243652624 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.253315053 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.24471362 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.244068349 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244765254 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.244841382 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.243557072 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.243017303 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.244393466 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244051838 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243245556 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.244967664 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251640421 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.249628789 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.245968766 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.244429884 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.245406359 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.243289242 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.244178425 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246163223 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.24589184 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246375517 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.244859504 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.246232829 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.245097247 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.24360723 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.245001015 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.244101297 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244772383 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.247043436 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.251901601 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243491457 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.242278353 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.244043249 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244997443 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.243749268 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.244797806 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.251808138 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248341598 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.256629673 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.253733223 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.249508277 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.246177211 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248699068 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.252629136 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.244872022 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.244790077 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.246794884 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.246410602 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.246110898 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.248548379 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246779587 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.252993921 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.246390748 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.2456947 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254618926 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.267516514 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247924037 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.248429923 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.250860516 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.246238373 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.244264885 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.24681448 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.24571552 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253355135 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.263898667 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248987805 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.247539753 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.246486587 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.248632858 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252095178 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247977093 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.247684122 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.246001918 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.247374007 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248740019 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247429069 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.24408951 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.246843125 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.246714535 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.251578815 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.25339243 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.245612151 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.249938421 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.248166126 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.248759037 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249149779 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249357898 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.246025401 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.244805155 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.247627676 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249563578 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.248577592 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.249129551 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.247594398 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.249250515 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.250458899 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250135603 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251808013 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.259073082 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.256223631 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.246849682 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.247511369 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.24824924 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.252195974 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249654862 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.25102443 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249589471 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.249486723 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.249997391 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250256705 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.250656562 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.252471587 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264921462 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.270562837 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250042302 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.24916593 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252415578 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.24996719 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.247369148 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.251521537 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.252137606 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.253912138 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.25934069 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.252472342 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258557542 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.268292403 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.252276292 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.255977999 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.253773369 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.258015923 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.253256688 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252928473 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.252829254 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.256509519 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.267045444 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252396732 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261727577 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280894096 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.269022134 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.251762997 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.253734779 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251111976 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.254182704 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.25424206 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.253617194 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.252692924 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253077444 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.253621454 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.252978508 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25708034 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.253463741 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.253825781 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.252999398 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.251837632 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.253121966 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.249694783 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.254223352 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.253973269 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.254373041 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.255270701 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.254615737 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.253530164 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265943937 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.278264694 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.252636193 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.25446175 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.250798958 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.255454924 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.257381578 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264497747 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.26150517 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.255359303 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.255459182 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.255492934 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.255065785 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.252050371 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.253746273 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.253232116 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253657929 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.250835902 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.266744952 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279100738 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.257925712 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.254331622 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256051764 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.255966407 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255054199 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256473151 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256467213 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.254710668 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.257907648 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259588976 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.2553914 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.255931715 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.258711997 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.263265102 seconds)
  done (took 739.781616887 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25341672 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25175862 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.252574276 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.253128497 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251925143 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25308299 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252629751 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.252534463 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.253196291 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.253534832 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.253530958 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254156448 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.253563791 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.253649985 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253711913 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25381612 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253808798 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.253302652 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253272915 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255041558 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.253952148 seconds)
  done (took 27.493416446 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.257026783 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.253143366 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.255499246 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.257592987 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254767188 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.257114244 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.254857906 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257148178 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.256612134 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255793007 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.2573786 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257111116 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.254893398 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.255809879 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256212913 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.257560293 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.258161672 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.25597552 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.259153462 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.255710155 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.258341273 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.255610868 seconds)
  done (took 28.817621398 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.259828851 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.259500117 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.257503255 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.255900084 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.258909958 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.255397156 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.25924011 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.258323482 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.258552972 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.258898184 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.257093221 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.25969827 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.266311066 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.263830144 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.26091214 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.259486071 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.402811414 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.262100099 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.261269556 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.261611759 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.256060109 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.264910047 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.256259234 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.25628149 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.258669605 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.262347407 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.259812196 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.259178928 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.260453868 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.261068641 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.265172051 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.260372282 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.259196327 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.261666107 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.259449722 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.261387406 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.264942166 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.261658976 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.258590675 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.261175682 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.270433412 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.280963549 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.26254688 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.266509005 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.261508373 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.260775116 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.264965169 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.27010323 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.260694248 seconds)
  done (took 63.12284537 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.261184725 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.261423395 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.258202012 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.261539867 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.261874417 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.262864178 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.26160672 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.260832258 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.259928532 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.25921718 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.261744252 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.259145627 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.260082284 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.262001908 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.262237658 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.259312755 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.258466914 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.258907927 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.259580754 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.259583246 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.260126637 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.263501075 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.263519423 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.261056211 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.263448976 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.261091427 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.260266843 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.263120126 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.260323031 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.261550784 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.263017583 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.262620243 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.263880635 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.260702875 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.260735097 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.263379557 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.26334321 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.261445126 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.262893979 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.261279102 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.263230657 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.263320362 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.263172338 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.264709576 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.260844924 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.261880831 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.261246412 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.261527147 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.262636227 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.265308905 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.264413359 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.261590211 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.264381468 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.2615406 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.265421149 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.264305296 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.261403175 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.261269286 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.265154632 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.262348819 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.261333575 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.264651396 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.262147539 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.265275456 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.264805874 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.262316056 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.262452454 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.264384449 seconds)
  done (took 87.000114858 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266372928 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.267059593 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266824603 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266893213 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266981483 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.267322762 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.267577373 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.266783453 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.267490014 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.267463165 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.267172177 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.266785735 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.266684597 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.266523135 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.266793133 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26819746 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.267624016 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268079647 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.268236056 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268319212 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.26882115 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.268841281 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.268274924 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.268701808 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.268756951 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.269209269 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.268198699 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.268882013 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269894078 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.267742663 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268304958 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.269609004 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.268784084 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.26970599 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.26958732 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.268950774 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270240796 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26955831 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.269394397 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.271235458 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269277704 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269182073 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.269087426 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.270109047 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269909079 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.269435166 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.269698031 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.270153584 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.269193351 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269829175 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.26915999 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269317144 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270018659 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.270558287 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.270609938 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.269032902 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270162153 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27027672 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270738415 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.270585976 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.270511413 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.269499115 seconds)
  done (took 79.84849169 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.26980618 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.269014298 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.267184265 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.266487272 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.268165667 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.267633982 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.269529268 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.268218372 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.270463748 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.270203522 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270775826 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2682203 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269225219 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270369727 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.267971737 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269865828 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267621943 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268313906 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270869371 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.268465207 seconds)
  done (took 26.565357414 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.267827598 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.270913404 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.267582848 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.269048708 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.270549345 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.26792356 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.270528366 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270787014 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268285139 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270736237 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.271126238 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.271454777 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26853371 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.268312051 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.271198941 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.26850183 seconds)
  done (took 21.500351072 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.269141165 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.270629955 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.273237325 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.272573467 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.26873472 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.26855326 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.272287462 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.269257994 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.269152846 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.27260078 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.272569969 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.272594221 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.272820246 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.273107181 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.270289969 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.271696305 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.268607053 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.269897473 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.271664559 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.274019386 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.270532914 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.270249022 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.273060007 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.273022865 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.270840475 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.27150421 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.269717083 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.270008908 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.270766442 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.272931446 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.27064666 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.271081698 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.271266147 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.270982529 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.275414393 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.270832331 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.273871255 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.273112093 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.273313053 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.274197511 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.273627313 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.271020219 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.274034155 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.273985601 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.271362711 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.27307816 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.272113433 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.271438316 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.272600247 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.271796579 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.27500839 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.276574904 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.274001006 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.276084149 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.274972273 seconds)
  done (took 71.153308525 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274223835 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.275113475 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.27264973 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.274452403 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.275134132 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.273389841 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.275739844 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.274273884 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272814099 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.274445129 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.274109239 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.278399849 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272557858 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.275571445 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274699564 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.27626149 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.273553252 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.273938288 seconds)
  done (took 24.13392592 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.273260357 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273874364 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.276467885 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.27308293 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.273932718 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.277561464 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274099492 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.276825673 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277385007 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.274566375 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273907835 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.277607873 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277045434 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.276096714 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.275282912 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274854332 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.277834364 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.277908691 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.274405443 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275433396 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278517214 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277389754 seconds)
  done (took 29.2602505 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.276600832 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.276432381 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.277040396 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.292923632 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.296267847 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.300278885 seconds)
  done (took 8.913135552 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284740897 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277540573 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275482675 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278520827 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278810197 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274931194 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275622768 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276851568 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277026494 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275711193 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275205949 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279343341 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278370195 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27633255 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278576017 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2788165 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276509153 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275774192 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27642077 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279067617 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276450453 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27871487 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27682586 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276782686 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278040216 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277734343 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279026357 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27837357 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277600912 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279854007 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280773642 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277408272 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279863178 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277996944 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28120384 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27997704 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279403528 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280429068 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280635451 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278016643 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280761218 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280253561 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280915366 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278292034 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281417642 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277983814 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277836449 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279421758 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27845852 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282347475 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281401198 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27894503 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281783464 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281035363 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281487983 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282500449 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279304005 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27865864 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282463101 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27912858 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279702772 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282767697 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279398791 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280343479 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282081689 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280451086 seconds)
  done (took 85.633690401 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279568311 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279181361 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279276981 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280221657 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279258676 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279649025 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280447141 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279997535 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279251895 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279239814 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283389892 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280071562 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281250325 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279988118 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279760644 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280573675 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281185549 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280752942 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279727831 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285020056 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279395282 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279797339 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281148011 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280685807 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282277871 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282747336 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28212785 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280631885 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28003096 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280406691 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280353733 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280374705 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281023471 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280121725 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281454831 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280339491 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281122476 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280568569 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281185982 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283297154 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281361177 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284292982 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281031381 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281128436 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281990343 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281309788 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281188686 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282063201 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282600235 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281460884 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281826754 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281781429 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282515984 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282505431 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281894342 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282728223 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283036039 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283536021 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283243926 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284919312 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284024998 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282534942 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285734448 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282533298 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283251174 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284288757 seconds)
  done (took 85.775964351 seconds)
done (took 1726.753808309 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.446114788 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.403770423 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.284635703 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.279268179 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.285044114 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.290929643 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.29253708 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.284572367 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.285059403 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.284470603 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.28494735 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.471083613 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.334939571 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.284507604 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.285524619 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.379318241 seconds)
  done (took 42.379130318 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.312722182 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.292313031 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.402315549 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.311495237 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.312994815 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.470989124 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.346262741 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.290304142 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.457799271 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.333677899 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.805237487 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.312235924 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.29003378 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.371273956 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.309325694 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.47054786 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.534935816 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.864432029 seconds)
  done (took 29.691436598 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.729673882 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.319894797 seconds)
  done (took 9.253193268 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.309665342 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.289142213 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.292265352 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.289378369 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.28179859 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.282929799 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.290356113 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.287697359 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.867645201 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.415897949 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.296944507 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.3008218 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.310735069 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.292107937 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.287931975 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.328494979 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.441265837 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.289092684 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.288060075 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.297219912 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.289653296 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.385574022 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.331995568 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.290099583 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.413611567 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.855196268 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.297737678 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.299393323 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.423718967 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.290698272 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.290077469 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.291394579 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.293415862 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.153008294 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.79391925 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.301011759 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.315759058 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.29836373 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.287607927 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.439109853 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.292993859 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.297093244 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.284435766 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.779399099 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.443373987 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.414217394 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.531140168 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.298070752 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.293221832 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.351828903 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.29749981 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.293741089 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.334651643 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.096192052 seconds)
  done (took 109.303822331 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.312395434 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.676591741 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.453221297 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.306244178 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.998957274 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.871215763 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.307784947 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.566457248 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.33071985 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.285798863 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.565917248 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.7903788 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.311074008 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.354301455 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.459237555 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.318325569 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.287767856 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.062931632 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.307996062 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.285981322 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.782906878 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.29271176 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.293948244 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.435749156 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.324278875 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.733935009 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.636561464 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.675345482 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.3066906 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.286850183 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.740933595 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.301717353 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.355023951 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.287253051 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.548378105 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.639306792 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.612482007 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.289845511 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.334989957 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.289019672 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.303777828 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.72528711 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.618873514 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.289306943 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.304011852 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.744746696 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.288658665 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.292454341 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.291963802 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.488586257 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.897914796 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.295065025 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.647081092 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.29245253 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.557123656 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.349851301 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.311704606 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.761512142 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288777243 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.304319318 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.32804483 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.29056061 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.293991199 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.295139054 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.291017707 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.625895777 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.608863976 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.28975277 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.625521656 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.740188176 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.310753144 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.80824663 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.100529422 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.321297308 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.347959144 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.289984454 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.86162804 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.771352687 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.293182943 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.290491273 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.612555118 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.294130215 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.57290701 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.311455445 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.289832171 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.809058459 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.299950448 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.344088546 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.301796569 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.295335315 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.955823279 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296477521 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.556689275 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.360359547 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.29138145 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.290107959 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.314081604 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.291390654 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.307447479 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.294468285 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.802730911 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.311308386 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.411176781 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.316453044 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291813752 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.297212432 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.294980662 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.29323988 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507184821 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.8839241 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.31504257 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.293696097 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.299726093 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.299762815 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.455340465 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.295510187 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.587265131 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.293594976 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.292712294 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.302757042 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.89933856 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.343809566 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293572504 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.320234799 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.195146066 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.500927667 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.316173039 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.314879434 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.297357031 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.292845989 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.558676855 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.316155214 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.354533458 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.297362108 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.988523606 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.336835119 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.2955862 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.562079133 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.302241617 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.198358221 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.314004795 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.295486951 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.578352327 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.566649663 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.43577275 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.295441271 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.309926053 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.973647221 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.323374313 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.439005296 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.317728885 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.341194271 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.489996652 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.413357882 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.29521638 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.896269942 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.295412835 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505654551 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.300811977 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.595559416 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.78014235 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.317001465 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.30053235 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.990939571 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.025961262 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.984185445 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.298761262 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.571644237 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.245510687 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.772164823 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.296305248 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.297251789 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.780906417 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.301518046 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.303404855 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.295801363 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.295752303 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.445641925 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.46758955 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.46889753 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.299961932 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.744243325 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.308322498 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300321442 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.303355881 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.298225318 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.645986089 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.360565932 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.296611884 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.328357325 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.298927195 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.300456084 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.7617625 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.178381416 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.303959129 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.449026799 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.924068013 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.320454613 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.296961022 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.038076628 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.323611386 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.800071961 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.347256163 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.595757479 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.299327732 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.335217323 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.963647651 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.384985825 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.759747589 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30038973 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.299870742 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.881508023 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.314300499 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.372791965 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.298933919 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.299643177 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.819319055 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.313714474 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.297518417 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.558485996 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.32297259 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.550271667 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.305709111 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.344749922 seconds)
  done (took 1100.063135973 seconds)
done (took 1291.893208736 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.299001409 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.299135592 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.292686182 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.304176841 seconds)
  done (took 26.41441136 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.309407161 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.305615604 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.30681047 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.305172508 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.310977948 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.304119244 seconds)
  done (took 9.061552795 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.391985871 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.299523093 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.304327557 seconds)
  done (took 19.214797695 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.504491922 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.544244188 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.622332239 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.409416198 seconds)
  done (took 10.299750297 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.30512344 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.306077522 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.304791737 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.310369056 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.310354256 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.311558483 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.310827049 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.310084183 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.310485213 seconds)
  done (took 12.996054213 seconds)
done (took 79.206989265 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.298181394 seconds)
    (2/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.342792054 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.701870566 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.212579412 seconds)
    (5/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.668281462 seconds)
    (6/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.305637938 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.577431434 seconds)
    (8/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.401891687 seconds)
    (9/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.126838473 seconds)
    (10/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.381495259 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.339400387 seconds)
    (12/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.487289545 seconds)
    (13/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.516317531 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.325278191 seconds)
    (15/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.305311997 seconds)
    (16/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.527794419 seconds)
    (17/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.545455656 seconds)
    (18/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.046056309 seconds)
    (19/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.299217954 seconds)
    (20/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.348685715 seconds)
    (21/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.678969528 seconds)
    (22/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.429831249 seconds)
    (23/286) benchmarking ("sort", Int64, true)...
    done (took 6.299579406 seconds)
    (24/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.286590325 seconds)
    (25/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.30943982 seconds)
    (26/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.088903711 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.413811255 seconds)
    (28/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.296351493 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.7022232 seconds)
    (30/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.439316155 seconds)
    (31/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.287596236 seconds)
    (32/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.333815563 seconds)
    (33/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.364501443 seconds)
    (34/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.315807092 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.151396699 seconds)
    (36/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.670947533 seconds)
    (37/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.292412543 seconds)
    (38/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.411901108 seconds)
    (39/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.007454685 seconds)
    (40/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.583385945 seconds)
    (41/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.182831203 seconds)
    (42/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.349058851 seconds)
    (43/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.551234126 seconds)
    (44/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.316987428 seconds)
    (45/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.302328708 seconds)
    (46/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.301501612 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.867118617 seconds)
    (48/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.041354379 seconds)
    (49/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.810665284 seconds)
    (50/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.327309939 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.934845602 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.358690053 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.212418278 seconds)
    (54/286) benchmarking ("sort", Int8, true)...
    done (took 6.302760446 seconds)
    (55/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.320980441 seconds)
    (56/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.398574799 seconds)
    (57/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.308065608 seconds)
    (58/286) benchmarking ("sort", Int8, false)...
    done (took 4.316432303 seconds)
    (59/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.334538943 seconds)
    (60/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.410635135 seconds)
    (61/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.302022818 seconds)
    (62/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.319571631 seconds)
    (63/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.330747238 seconds)
    (64/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.346863991 seconds)
    (65/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.295626333 seconds)
    (66/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.858625858 seconds)
    (67/286) benchmarking ("sort", Float64, false)...
    done (took 5.577686376 seconds)
    (68/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.304359346 seconds)
    (69/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.328506672 seconds)
    (70/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.408122522 seconds)
    (71/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.964978822 seconds)
    (72/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.738955062 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 5.498199178 seconds)
    (74/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.786770956 seconds)
    (75/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.394185235 seconds)
    (76/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.290315393 seconds)
    (77/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.29406714 seconds)
    (78/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.323273354 seconds)
    (79/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.058488196 seconds)
    (80/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.290900205 seconds)
    (81/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.292920545 seconds)
    (82/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.65553132 seconds)
    (83/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.331963146 seconds)
    (84/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.367826436 seconds)
    (85/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.265785973 seconds)
    (86/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.367106644 seconds)
    (87/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.819781856 seconds)
    (88/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.503284665 seconds)
    (89/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.321872684 seconds)
    (90/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.295140455 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.303977149 seconds)
    (92/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.293430629 seconds)
    (93/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.802447615 seconds)
    (94/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.363479458 seconds)
    (95/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.392138697 seconds)
    (96/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.147131492 seconds)
    (97/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.341151962 seconds)
    (98/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.333395573 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.314754935 seconds)
    (100/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.411581358 seconds)
    (101/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.29708368 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.520768092 seconds)
    (103/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.304793583 seconds)
    (104/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.349885723 seconds)
    (105/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.458624733 seconds)
    (106/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.295297048 seconds)
    (107/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.801886012 seconds)
    (108/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.014046351 seconds)
    (109/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.583894874 seconds)
    (110/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.291914804 seconds)
    (111/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.305439519 seconds)
    (112/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.315550426 seconds)
    (113/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.424869884 seconds)
    (114/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.705398935 seconds)
    (115/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.329319456 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.818074375 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.328171911 seconds)
    (118/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.292190941 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.56860262 seconds)
    (120/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.29227998 seconds)
    (121/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.097877607 seconds)
    (122/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.916270895 seconds)
    (123/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.415612743 seconds)
    (124/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.144574281 seconds)
    (125/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.325441249 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.062491436 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.570232574 seconds)
    (128/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.081042408 seconds)
    (129/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.293639105 seconds)
    (130/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.516634882 seconds)
    (131/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.294641786 seconds)
    (132/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.41494277 seconds)
    (133/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.628834195 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.443814117 seconds)
    (135/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.316710841 seconds)
    (136/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.148120132 seconds)
    (137/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.293710073 seconds)
    (138/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.136019043 seconds)
    (139/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.869298087 seconds)
    (140/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.463284775 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.656977988 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.0705911 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.333781133 seconds)
    (144/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.333083347 seconds)
    (145/286) benchmarking ("sort", Float32, true)...
    done (took 6.307506494 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.881566064 seconds)
    (147/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.390129491 seconds)
    (148/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.752520032 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.348990304 seconds)
    (150/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.027263132 seconds)
    (151/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.515772307 seconds)
    (152/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.323471811 seconds)
    (153/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.325906589 seconds)
    (154/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.298677261 seconds)
    (155/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.335450215 seconds)
    (156/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.295390325 seconds)
    (157/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.296749468 seconds)
    (158/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.297805757 seconds)
    (159/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.309126089 seconds)
    (160/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.736176204 seconds)
    (161/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.899944831 seconds)
    (162/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.295432152 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.658390928 seconds)
    (164/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.694611163 seconds)
    (165/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.874107008 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.216602539 seconds)
    (167/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.547949061 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.335330607 seconds)
    (169/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.418694396 seconds)
    (170/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.932149257 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.351234305 seconds)
    (172/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.148462581 seconds)
    (173/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.417119465 seconds)
    (174/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.662975575 seconds)
    (175/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.153782871 seconds)
    (176/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.350524372 seconds)
    (177/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.439437964 seconds)
    (178/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.934988281 seconds)
    (179/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.504602835 seconds)
    (180/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.396416965 seconds)
    (181/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.428117026 seconds)
    (182/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.696239746 seconds)
    (183/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.298717253 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 5.375039261 seconds)
    (185/286) benchmarking ("sort", Float32, false)...
    done (took 5.31895855 seconds)
    (186/286) benchmarking ("sort", BigInt, true)...
    done (took 6.309805289 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.367455836 seconds)
    (188/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.699092967 seconds)
    (189/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.663221423 seconds)
    (190/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.297157469 seconds)
    (191/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.375320297 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.72060112 seconds)
    (193/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.790331564 seconds)
    (194/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.685841058 seconds)
    (195/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.320387412 seconds)
    (196/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.32666292 seconds)
    (197/286) benchmarking ("sort", Float64, true)...
    done (took 6.312060618 seconds)
    (198/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.300183485 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.526866032 seconds)
    (200/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.837674978 seconds)
    (201/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.316300808 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.164447356 seconds)
    (203/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.367300191 seconds)
    (204/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.340050017 seconds)
    (205/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.298679301 seconds)
    (206/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.305488146 seconds)
    (207/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.298619025 seconds)
    (208/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.346471938 seconds)
    (209/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.351917539 seconds)
    (210/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.577112241 seconds)
    (211/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.51919527 seconds)
    (212/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.351521032 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.71926995 seconds)
    (214/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.513486775 seconds)
    (215/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.351406751 seconds)
    (216/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.340156669 seconds)
    (217/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.300741047 seconds)
    (218/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.52407884 seconds)
    (219/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.411632234 seconds)
    (220/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.304112485 seconds)
    (221/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.525486475 seconds)
    (222/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.451284428 seconds)
    (223/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.768207952 seconds)
    (224/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.314696865 seconds)
    (225/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.257398808 seconds)
    (226/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.27211337 seconds)
    (227/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.41548071 seconds)
    (228/286) benchmarking ("sort", BigInt, false)...
    done (took 6.313572322 seconds)
    (229/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.340083112 seconds)
    (230/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.158088937 seconds)
    (231/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.343742749 seconds)
    (232/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.911793256 seconds)
    (233/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.527316475 seconds)
    (234/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.320883597 seconds)
    (235/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.301591375 seconds)
    (236/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.097607019 seconds)
    (237/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.404698391 seconds)
    (238/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.33843994 seconds)
    (239/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.302530085 seconds)
    (240/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.332746772 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.950397355 seconds)
    (242/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.948541375 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.3458749 seconds)
    (244/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.628470387 seconds)
    (245/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.090254748 seconds)
    (246/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.315209565 seconds)
    (247/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.805658656 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.706752793 seconds)
    (249/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.806959821 seconds)
    (250/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.424906876 seconds)
    (251/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.396510068 seconds)
    (252/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.321830156 seconds)
    (253/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.15509362 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.70577497 seconds)
    (255/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.093530857 seconds)
    (256/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.321535663 seconds)
    (257/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.82051616 seconds)
    (258/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.235348024 seconds)
    (259/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.35588536 seconds)
    (260/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.30048469 seconds)
    (261/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.779448457 seconds)
    (262/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.384066734 seconds)
    (263/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.332901 seconds)
    (264/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.690475532 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.404239796 seconds)
    (266/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.341144128 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.398225966 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.445572735 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.233483577 seconds)
    (270/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.784992133 seconds)
    (271/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.473798118 seconds)
    (272/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.572013712 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.129072895 seconds)
    (274/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.321721945 seconds)
    (275/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.42518597 seconds)
    (276/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.316420734 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.373078223 seconds)
    (278/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.30335776 seconds)
    (279/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.416975546 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.357671741 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.021321768 seconds)
    (282/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.243817496 seconds)
    (283/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.324636821 seconds)
    (284/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.401848318 seconds)
    (285/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.636288903 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.957620664 seconds)
  done (took 932.601832634 seconds)
done (took 933.82175884 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.348884043 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344293182 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.326750678 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.348841785 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.437939256 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.502835869 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.337533475 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.328604382 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.375303478 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.376067648 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.325657104 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.502596621 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.32942996 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.327967877 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.327762093 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343257237 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.358123397 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.329831081 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.345503819 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.33718369 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.345331474 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.328325383 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.378329915 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.503825602 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.332780522 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.330971073 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.332161678 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.348048514 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.440737915 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.332515338 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.332256684 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.340866467 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.359611855 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.32674793 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.323724071 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.348986134 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.341498354 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.338315893 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.333228756 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.362455578 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.758851232 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.329356211 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.330483558 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.32979364 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.330405944 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.334415858 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.331779633 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.335493378 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.345245678 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.34594265 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.751785857 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.345310338 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.33436483 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.331259966 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.340077341 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.330791983 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.334537847 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3488947 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.350205597 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.349006996 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.349150338 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.33499986 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.332307443 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.346877484 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.338627968 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.790511973 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.326830157 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.334876888 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.766096763 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.337185136 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.791691697 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.340449883 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.333850731 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.346045932 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.364303765 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.36781239 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.32706276 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.332232164 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.340819293 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.331565738 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.341948354 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.346628673 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.338086484 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.333451876 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347338816 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.509698671 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.343185997 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.334026305 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.342012455 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.353559461 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.341764866 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.344612668 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.336911413 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.329190781 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.342490821 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.33687943 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.33738687 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.337657159 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.338159952 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.343823531 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.765930108 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353519795 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.329646757 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.330724551 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.332236908 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.347702623 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.767817789 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.335221302 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.356065741 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.381166045 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.337197427 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.358472764 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.338774744 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.35280796 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.343466919 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.33824667 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.329902635 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.359582677 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.759706078 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.349664052 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.336689949 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.333263151 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353669397 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.337736645 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.331754703 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.37390438 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.336334111 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350944393 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.456553054 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.345429614 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.367266132 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.333683421 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.339315539 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.366387569 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353763332 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.368899837 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.339113083 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353834753 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.353579835 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.33261402 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.347982829 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.346856519 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.3382097 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.34245742 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.330658853 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.365987551 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.350947755 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351978766 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.35810773 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.456973077 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.333852117 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.361940724 seconds)
done (took 225.796515834 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.395438432 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.326092422 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.427596384 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.333910841 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.433829399 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.434664302 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.331876306 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.331446517 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.331450244 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.718318134 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.332574165 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.333067327 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.326728522 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.331942328 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.418127659 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.334034239 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.331727176 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.680779456 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.335622577 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.406460962 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.332177778 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.332735821 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.335343503 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.718866288 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.334691794 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.331433453 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.406350906 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.335081523 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.683032137 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.330652257 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.332535404 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.684026537 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.425132175 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.353062209 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.346021568 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.34218314 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.43519298 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.354455026 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.418005728 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.419186601 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.430249021 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.375537173 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.330899024 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.335967872 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.338279651 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.337660567 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.333901448 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.363872947 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.336078614 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.335132291 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.682925197 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.347095449 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.344371015 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.334139284 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.335239868 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.357623214 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.335326798 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.339551844 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.428728937 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.339625265 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.400670274 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.721693743 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.722504399 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.3381066 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.337308297 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.336190095 seconds)
  done (took 148.61178056 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.404382088 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.410420517 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.449367583 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.338584826 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.387995672 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.454535936 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.345691522 seconds)
  done (took 11.039774802 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.344219606 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.338858269 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.387180286 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.38777431 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.340225262 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.516618816 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.339023608 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.350420001 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.336247969 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.390185795 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.343632259 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.340255156 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.346337002 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.342426699 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.386839892 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.350938973 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.454610852 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.34073403 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.342314514 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.492745552 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337732117 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.346111475 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.390789769 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.3516687 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.345426972 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.347458646 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.160592068 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.345610231 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.342266161 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.34165188 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.3388403 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.416610359 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.34420005 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.344121836 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.338685146 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.457911437 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.341876039 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.338872262 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.340639768 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.338905943 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.341243355 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.340229835 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.340445205 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.33935996 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.341673441 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.362995453 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.341834992 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.341468583 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.341503292 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.341962327 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.391105871 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.342972171 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.339367607 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.339393376 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.395953279 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34821222 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.344471774 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.339171822 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.342893179 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339859757 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.493696843 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.388972057 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.342413468 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.389491576 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.343458478 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.343339083 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.34278648 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.343211176 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.396892034 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.342860459 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.39064271 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.340628496 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.522842406 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.366295258 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.344824558 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.345825813 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.345536062 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.344193333 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.338267624 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.350350312 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.340905224 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.346340297 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.349182998 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.341361135 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.342407091 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.509920582 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.449619941 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.341122065 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.356715608 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.350867424 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.342544896 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.398119558 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.343925821 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.34081561 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.397112411 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.460097328 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.396307852 seconds)
  done (took 154.414355315 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.3494606 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.353082145 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.348010408 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.367537489 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.345477018 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.344778186 seconds)
  done (took 9.364590528 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.347302978 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.346055514 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.344648461 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.345321102 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.346857657 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.349289882 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.346696703 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.347406723 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.3515613 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.346847646 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.349758927 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.350333293 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.351850556 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.347043637 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.348272915 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.346412162 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.348413859 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.344090942 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.346159891 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.348095913 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.45203981 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.34781521 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.346649722 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.348497209 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.355637902 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.3464602 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355488794 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.346570169 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.346631236 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.355305924 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.367870629 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.351740696 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.348647042 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.353059118 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.353075133 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.348900877 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350757393 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.350719172 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.344924933 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.351457289 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.351619206 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348935599 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.347579126 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.350562029 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.350608938 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.352462844 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.356042539 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355833291 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.349822057 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.351798372 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.351600354 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.349159153 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.354398474 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.3522436 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.350682311 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371104178 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.356460416 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.352010857 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.351676582 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.351189463 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.3497243 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.353484942 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.352172195 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.354049577 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.348103563 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.35331133 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.350690008 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.354856902 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350990127 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.349808883 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.353167019 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.34791996 seconds)
  done (took 99.606494712 seconds)
done (took 424.282454297 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.783036468 seconds)
  done (took 8.043147468 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.433599733 seconds)
  done (took 7.695235932 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.448163119 seconds)
  done (took 22.715028342 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.369478523 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.420253294 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.358197546 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.353880251 seconds)
  done (took 26.76356382 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.374590207 seconds)
  done (took 7.635719394 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.343040742 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.358867428 seconds)
  done (took 13.964644341 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.35157869 seconds)
  done (took 7.612315593 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.038084047 seconds)
  done (took 8.305011402 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.351834376 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.388496655 seconds)
  done (took 14.267484892 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.329651381 seconds)
  done (took 7.591764417 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.710609115 seconds)
  done (took 11.973291017 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.355131889 seconds)
  done (took 7.618902226 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.367237085 seconds)
  done (took 7.629198788 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.410835367 seconds)
  done (took 9.672130192 seconds)
done (took 162.748828408 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.345195025 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.354366667 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.354294918 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.353496602 seconds)
  done (took 26.669424284 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.386813 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.385315584 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.386898909 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.396092684 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.388499253 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.385491263 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.378503375 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.377143685 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.396492094 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.38855474 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.387164629 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.388296659 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.386539574 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.378204337 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.388727426 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.388503567 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.397566825 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.38872544 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.379501704 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.390108776 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.35394859 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.398761588 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.389512486 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.354025637 seconds)
  done (took 34.503449052 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.8760567 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.425074431 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.506930257 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.406243057 seconds)
  done (took 7.478048302 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.404847191 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.406715674 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.41997729 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.456807472 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.482596763 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.4161958 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.377095733 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.375414104 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.362556613 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.407965551 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.4832137 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.423749756 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.491578543 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.354359935 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.539751805 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.354308874 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.353756033 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.40691791 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.458846121 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.473349334 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.355577325 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.406127549 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.410286048 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.424275101 seconds)
  done (took 35.310780844 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.356473317 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.373565875 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.35443925 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.353524899 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.362140202 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.354155849 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.355754537 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.355391968 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.355243608 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.36039702 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.354069864 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.367091323 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.354915638 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.35549248 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.360764901 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.356634538 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.361406212 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.354816043 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.355764704 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.362012125 seconds)
  done (took 28.430349845 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.348749501 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.202165686 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.702196009 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.604546588 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.350002413 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.349930756 seconds)
  done (took 27.823512838 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.427582216 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.558675603 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.357107438 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.716542678 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.793513022 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.357461337 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.35768944 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.598673376 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.922783769 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.914808793 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.42172287 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.425613803 seconds)
  done (took 20.120269736 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.353541977 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.357678618 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.358150048 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.374602165 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.412041006 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.362862768 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.365336317 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.351771362 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.419932317 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.417014584 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.361686113 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.415000976 seconds)
  done (took 37.817639378 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439367396 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394507184 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.345195366 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394197857 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.070633899 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563673103 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.415272898 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.070722234 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.375231214 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627292724 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353421886 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450652827 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.608279632 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357994693 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361033065 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.343792245 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585712309 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845907813 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363253578 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.485844167 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386516861 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354259292 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.561293817 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.60006432 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571187051 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.332921625 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.615147157 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.134612434 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643058682 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369339638 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366071916 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355069755 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630022414 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.36235068 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451415751 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574481185 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363158205 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.92706746 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.354426975 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.483909988 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365520229 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365904355 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365935134 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357088489 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.290957998 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360473959 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.446721746 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.361313315 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.068402779 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.356332549 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619083067 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452677959 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.360638695 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.348402442 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440776382 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.362721956 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.360359201 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452610624 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930981478 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.7378279 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36539444 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.299507099 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.357434901 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.494055968 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978998743 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.362838329 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.360343859 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361188773 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291495372 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.485606324 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381693887 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504714459 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.383799725 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.008230833 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069139323 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.381578611 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.296316572 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92088405 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371882656 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.299719523 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585952634 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.134571112 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294359091 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.30453432 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.292751326 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069341201 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374592151 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.800318411 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38735943 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.07581994 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.602989334 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386782048 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384576677 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.582604708 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.244336313 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360445235 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.36436741 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494842968 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38250571 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.080787507 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31314905 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.364368156 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617226048 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.571180244 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365138526 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.355813685 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217396314 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360296518 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.382309382 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.374321715 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.591781829 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.952341985 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38410497 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.760982241 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385002176 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.138544719 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126551786 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382855694 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.373160628 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.372683233 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637290929 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.151475993 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.25111128 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428807304 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366459572 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.362071198 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.662473636 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.218479638 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.257548671 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.574103153 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387773892 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.380790214 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.363233515 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307395941 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.35917823 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387586946 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.149004999 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.585891522 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379791729 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644953783 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297073182 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509637976 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.372670993 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.585760114 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.560346419 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.368937301 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622007603 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373693073 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376326713 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381412494 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382095498 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464126549 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385864965 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.363833736 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642584937 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.36821624 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.367509163 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.664690691 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.148640603 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364331795 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.369856375 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370528468 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957365942 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348833668 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371688598 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.253295823 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.378918839 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431427802 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370335419 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588917636 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.65657802 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382140481 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.376607295 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.371118731 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595093266 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375472814 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.504168715 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452390691 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.855715872 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.971697921 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386303859 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.299366758 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.0763263 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.057600846 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364346686 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.56222831 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364861139 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.588672784 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387867792 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368354761 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.963477859 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375223199 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.534710364 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.37893555 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378235518 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.659887443 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366458049 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.657133661 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.78511384 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387853999 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.385587187 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510802798 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.380597805 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.300863729 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.884267086 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371896832 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367342503 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.141517269 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40078987 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.523284716 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.696263249 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648901098 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383194848 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638612347 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.613510428 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.406383924 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.362799739 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367925844 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381979315 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.38624982 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376983018 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.378315436 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.521908614 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.812281075 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936587404 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110801014 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909090427 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647326938 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.371676364 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.256941359 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.096828042 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322611704 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.024179843 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606049762 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.09310876 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333356962 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.23766655 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.570850423 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153245275 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641632616 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603909674 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.633123211 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.374128869 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64451545 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588794263 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403287843 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.36972739 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.306343334 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.673432009 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356144665 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370514061 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457649023 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.504181844 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380054432 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.156564091 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.391294064 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.099706465 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.110972493 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.999004099 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.75682372 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385869765 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.378381628 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.697312439 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402372429 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.89537943 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992394217 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386552849 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.870741667 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325298608 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.595152248 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.389438144 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.375322668 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.949662335 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.381704401 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.625460058 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637889988 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314054071 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373120702 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914835775 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.235141114 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.376775101 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373160069 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12457519 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393872653 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672879314 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.382543077 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.664887697 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380320983 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.307161211 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306278828 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.065124899 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38220042 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348480824 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870177049 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.401978566 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388658374 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391052272 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.225043261 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.627569535 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.386519484 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.964434828 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606611491 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373371089 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404224397 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.37791006 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374437024 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.369647692 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.257403791 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.609969172 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408381041 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625192161 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.374701323 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.287167345 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.381481409 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593383063 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.255389795 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374865525 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639277698 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.09319439 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.377603061 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100634219 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40855682 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38977728 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.393151501 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.37937758 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403619301 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44487606 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601689239 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.394399606 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.387382299 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.087202494 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377743487 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387592103 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.391464588 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470968941 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.82254751 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.681762485 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.159079882 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986570812 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134177931 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.985264297 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654623945 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386396323 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381049909 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311552457 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526870504 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.903865172 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651835843 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509387558 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.377175016 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426477326 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383316311 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388122143 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596537859 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653367303 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.248644739 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391489309 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.044386811 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.537614601 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38855248 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.590770343 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882325562 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958619802 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497951837 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390850226 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.11645703 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672671036 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.471277979 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3796048 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.969236232 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.39881138 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.151687395 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.393740151 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380414336 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53367234 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647296382 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.428285057 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.389902718 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.537367142 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.153673058 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.579451239 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643033605 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.831811435 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609484275 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987560132 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.107603666 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649867335 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451341838 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608853171 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.494112532 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529158437 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.379294732 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.271627187 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381640847 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226707279 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.091216413 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.391278604 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983114809 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651007273 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.384942296 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.380868339 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413235483 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.391357005 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604984849 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10825961 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613802406 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391629343 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391109778 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.951982771 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982068741 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658189846 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324289808 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.386330944 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616828079 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.626232184 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409095434 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.835601744 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.094701434 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952902028 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.362994056 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40500399 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388487673 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.112272685 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992403646 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.696075638 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893131441 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.049566849 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396159164 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665602448 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.389795673 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384530725 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667610944 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.3872043 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.385413241 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622400978 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.98921489 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185921531 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.406577517 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.580111927 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.327518582 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.611153935 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452681119 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320238713 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39547613 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.826073616 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.405742249 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514968388 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396718177 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.383173824 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405799315 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.125475752 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671887604 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.390960138 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.407849591 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.385481968 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406936871 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486231011 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.476278308 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391403556 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.058301138 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.735298331 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.641484841 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.386126281 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.380678605 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.389631667 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386957183 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.103612614 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.355830674 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39447389 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967334369 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.396050214 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.42157803 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391012322 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.602849256 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59840416 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388804482 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624071924 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400035096 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409214551 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.292988373 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.154158852 seconds)
  done (took 1695.908582575 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.391238889 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.42357437 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.426951416 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.4444144 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.431683352 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.510597177 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.421211035 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.521116476 seconds)
  done (took 52.872551872 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.396361998 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.553581644 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.419016564 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.393840823 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.404240718 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.394562649 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.855990481 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.396157821 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.396435431 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.398963107 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.393257647 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.406920747 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.026128886 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.404381244 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.392150363 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.390269155 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.404902376 seconds)
  done (took 66.336790718 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.665122535 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.478464341 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.540429274 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.442737525 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.447460846 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.389222132 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.512889041 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.406021922 seconds)
  done (took 54.18608857 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.400068746 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.399978363 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.400114136 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.399810118 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.40016433 seconds)
  done (took 8.303171355 seconds)
done (took 2097.024990135 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.393674642 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.396082051 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.393661598 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.396909148 seconds)
  done (took 6.884480616 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.376133554 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.09287407 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.377242682 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.390898227 seconds)
  done (took 18.541202498 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.404393468 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.412508458 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.098657396 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.03439495 seconds)
  done (took 5.438780139 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.141731053 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.155029301 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.137689422 seconds)
  done (took 7.738471875 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.392370626 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.398585383 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.398204487 seconds)
  done (took 20.493842131 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.686806044 seconds)
  done (took 2.992898913 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.537369297 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.588808775 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.706476573 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.713132774 seconds)
  done (took 7.850177278 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.785202492 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.765619867 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.575278882 seconds)
  done (took 6.430862832 seconds)
done (took 90.491943849 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.296271673 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.762891783 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.594379315 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.274136422 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.625522694 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.596316767 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.610683364 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.238254864 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.77643114 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.765150278 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.309775572 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.626622253 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.558414948 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.763850348 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.559058381 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.63958723 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.625604713 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.339029849 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.959985944 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.159354693 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.613309207 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.907875076 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.144237563 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.930751715 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.626842542 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.549325496 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.502218386 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.641023771 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.128170684 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.522689883 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.549349227 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.33325596 seconds)
  done (took 195.836344322 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.393408358 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.393055279 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.394429945 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.393776848 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.414188307 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.393683532 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.395077224 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.394070677 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.393880416 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.392894069 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.398874038 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.394591674 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.394224254 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.394846822 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.394138724 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.394346166 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.394358099 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.394108116 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.410616188 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.39319817 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.395141689 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.395239501 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.409991039 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.394930234 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.395999376 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.395109256 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.401607633 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.394698139 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.412419978 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.395924184 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.414508503 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.395463487 seconds)
  done (took 206.03087931 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.396830285 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.395008497 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.404116452 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.396931013 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.40833737 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.404786517 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.395887718 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.39527107 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.426492195 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.414395373 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.406690711 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.396124772 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.412293712 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.39548662 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.407729772 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.401312193 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.395527199 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.420715469 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.395990544 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.413353636 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.412234848 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.39727487 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.409461426 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.397465259 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.405169431 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.398261175 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.407891616 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.396729296 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.410877442 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.398650429 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.409501756 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.405819066 seconds)
  done (took 206.242706014 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.591310048 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.404063457 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.405058265 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.359661677 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.405154822 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.404082222 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.398238118 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.602702075 seconds)
  done (took 14.882400955 seconds)
done (took 624.298377442 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.755163114 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.454473877 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.603859485 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.425621489 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.223016974 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.442668941 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.424994756 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.598879655 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.34346417 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.60595585 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.650729576 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.423286285 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.797263342 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.42403485 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.680216356 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.524105285 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.283373394 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.384423056 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.741384319 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.995586648 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.686048753 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.943903821 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.610773636 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.342432763 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.809987431 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.93811155 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.158373717 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.280562966 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.443193737 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.756071544 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.198095357 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.452320775 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.476048485 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.471058241 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.52761897 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.525331409 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.401222537 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.492326353 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.60814873 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.672637169 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.018887479 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.164953613 seconds)
  done (took 95.074233725 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.396156675 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.396160427 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.396980012 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.397128755 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.398149382 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.397190473 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.397208566 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.395846774 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.397316542 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.39806176 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.39620338 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.398085426 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.397145225 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.397771944 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.397233547 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.397624454 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.397034397 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.39956433 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.39604638 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.397230175 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.397388863 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.398669289 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.399127476 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.397678136 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.3984062 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.398344418 seconds)
  done (took 37.649491382 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.409894025 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.662372279 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.831507937 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.424134415 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.409783451 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.413690541 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.489781637 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.410497616 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.412556306 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.413394859 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.579661071 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.413809372 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.445708508 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.862268218 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.420766713 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.411790143 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.411669611 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.410292468 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.672476534 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.4199523 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.510028479 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.411540631 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.491579102 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.421606642 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.43219889 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.412294402 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.416154451 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.979032572 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.414289042 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.582647941 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.227653588 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.496778878 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.930619337 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.846824008 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.236457242 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.420313877 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.412918043 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.586160642 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.413759198 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.411858408 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.491797597 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.412345511 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.843235962 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.086244925 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.43893495 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.413483523 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.996540746 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.584926298 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.666444886 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.430754276 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.869899817 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.425517037 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.415616279 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.414823719 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.66735621 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.428180192 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.414838105 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.984039726 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.438445426 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.494434846 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.422596198 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.41462632 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.682416289 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.41679539 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.675729323 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.418349323 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.422587733 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.433855824 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.84943312 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.424917343 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.099822123 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.438415954 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.415629095 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.583805242 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.67907977 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.040027268 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.418830736 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.686650985 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.948198221 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.494526443 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.42144645 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.968827323 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.497446907 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.42210401 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.418393307 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.418187391 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.416011961 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.462301255 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.492968752 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.050495005 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.102036688 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.017223829 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.516722551 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.430879843 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.416811015 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.985588988 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.437467224 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.417036321 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.845255013 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.122877692 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.442036849 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.424598417 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.107300566 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.444657765 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.499087992 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.430144153 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.855673439 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.427168852 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.508798609 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.417101105 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.42374067 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.441111397 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.498238787 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.42776667 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.418410935 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.077212359 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.619730494 seconds)
  done (took 186.507608261 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.412735649 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.411371612 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.419047712 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.410717511 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.412119277 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.41830919 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.410027484 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.411967728 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.416537506 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.410741773 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.411555637 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.41211697 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.413819441 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.411056805 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.440147953 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.418657629 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.026640275 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.413971546 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.412197964 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.412512825 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.212757776 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.421957984 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.410621982 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.412029276 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.412250544 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.412910642 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.420384735 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.415749515 seconds)
  done (took 154.34960629 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.420103052 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.995615117 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.423137321 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.554280522 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.445779701 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.417603329 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.552802245 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.479844747 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.421041481 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.417224861 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.418329999 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.728021427 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.420648268 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.949830649 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.619628989 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.56163921 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.952253804 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.437482085 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.418904314 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.418774463 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.557349591 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.43464641 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.739256502 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.025762195 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.429913086 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.018219686 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.42030655 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.421605941 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.419457738 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.022673064 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.428253288 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.742656792 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.507748927 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.481219535 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.022367987 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.959862221 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.966091261 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.570896284 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.421274346 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.420699833 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.41989232 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.410982233 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.024528903 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.431627281 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.420642646 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.01661037 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.448745515 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.422614375 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.426734432 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.420952799 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.481473048 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.483732977 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.745811389 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.034872457 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.508166527 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.434055484 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.555989278 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.815555354 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.42570051 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.948858531 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.410831932 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.027481164 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.450570701 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.412512431 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.423404122 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.428386732 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.573746769 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.556598346 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.953192396 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.441158974 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.949824761 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.592067546 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.420922359 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.421198165 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.424539761 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.029186029 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.959241623 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.591698757 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.560394259 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.62272716 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.414220642 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.423223034 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.414183074 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.502864213 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.422968373 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.030001921 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.976920395 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.442758923 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.42571489 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.42644916 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.425496239 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.60599804 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.030599919 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.511021589 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.944512107 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.767483196 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.758406395 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.429060782 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.483410078 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.441247599 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.751550221 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.434561239 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.483185806 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.882416002 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.752089775 seconds)
  done (took 169.700827284 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.67312724 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.644504656 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.515389511 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.569688468 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.041578652 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.989800025 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.747220493 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.568673129 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.535708794 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.684884315 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.6426378 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.516692388 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.641627082 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.500748933 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.189461982 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.500713085 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.518803085 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.567162587 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.566377291 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.459906157 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.121058569 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.717413613 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.613005755 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.316232568 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.515851655 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.185070965 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.992652852 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.982754795 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.593722075 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.78016228 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.962722719 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.548113678 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.417208353 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.124849961 seconds)
  done (took 68.277749586 seconds)
done (took 712.871380248 seconds)
SAVING RESULT...
DONE!
