cset: moving following pidspec: 31495
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.14938457 seconds)
loading group "string"... done (took 0.630013355 seconds)
loading group "linalg"... done (took 9.632460246 seconds)
loading group "parallel"... done (took 0.171704517 seconds)
loading group "find"... done (took 2.450990172 seconds)
loading group "tuple"... done (took 2.289698362 seconds)
loading group "dates"... done (took 1.430915273 seconds)
loading group "micro"... done (took 0.627558155 seconds)
loading group "io"... done (took 0.686670211 seconds)
loading group "scalar"... done (took 54.652351812 seconds)
loading group "sparse"... done (took 13.458008382 seconds)
loading group "broadcast"... done (took 1.332838555 seconds)
loading group "union"... done (took 11.080577356 seconds)
loading group "simd"... done (took 3.591673704 seconds)
loading group "random"... done (took 14.105934631 seconds)
loading group "problem"... done (took 2.194424235 seconds)
loading group "array"... done (took 23.771247587 seconds)
loading group "misc"... done (took 1.540224564 seconds)
loading group "sort"... done (took 3.757734835 seconds)
loading group "collection"... done (took 20.689850505 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.915023411 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.181950861 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.246467864 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.582235912 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.315047396 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.206882943 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.203297989 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.198217176 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.673465739 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.231048795 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.198138325 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.405669674 seconds)
done (took 7.174183813 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.305624968 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.094340838 seconds)
    (2/2) benchmarking "String"...
    done (took 0.242491731 seconds)
  done (took 1.00846616 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.100559995 seconds)
    (2/2) benchmarking "String"...
    done (took 0.159294838 seconds)
  done (took 0.931477529 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.138376884 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.207982244 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.153185541 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.154085865 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.141165647 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.152835497 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.138297684 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.153117377 seconds)
  done (took 1.773255384 seconds)
done (took 4.830559389 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.528975508 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.924340937 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.556571614 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.215140068 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.346866525 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.36135063 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.373024949 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.270050053 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.132323391 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.111727615 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.240214136 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.498768594 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.445433529 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.960110151 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096030997 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.154028455 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.202097347 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.82204406 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.122999859 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.155435897 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.530471438 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.250591364 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.160487866 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.149455668 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.22781228 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.167893627 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.168167265 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.147948842 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.728189178 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.178442455 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.236261609 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.125700133 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.16742604 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.208795196 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.27725013 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152664386 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.719458668 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.242882423 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.123023605 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.141927266 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.724459863 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.161609447 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.249564627 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.14771669 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.111094994 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179381261 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.138489887 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.136168434 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.135721309 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.144351527 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200606167 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.502488969 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.148514975 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.237281221 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.151213083 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.731754436 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.141160827 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.31816546 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.182772823 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.148256073 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.120470069 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.146874054 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.199230014 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.137488293 seconds)
  done (took 22.817979438 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.254889466 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.252712722 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.121221211 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.204337088 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.187158158 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.122816735 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.149759477 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.124732691 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.17621752 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.241835711 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.168874547 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.255351466 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.13693557 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.131834572 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.234755132 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.298289119 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.172747246 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.14887801 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.14956895 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.137279468 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.184651903 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.13797397 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.154683008 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.154858031 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.211852918 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.246518499 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.153633363 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.166533607 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.144757375 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.140973933 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.18961259 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.210170442 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.122548615 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.150903128 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.239210727 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.153744691 seconds)
  done (took 7.128416889 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.281199096 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.144339654 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.307240537 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.229213157 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.169131144 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.232562395 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.219494742 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.327334642 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.413456418 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.224433289 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.175256574 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.139835031 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.139801018 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.123802964 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.139265056 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.871019492 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.213480988 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203711869 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.231817398 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.160531657 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.12839014 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.413657631 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.147377749 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.13209061 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.158136939 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.094151218 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.285731865 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.140633457 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.526017659 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.144121818 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.138874992 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.172963336 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.24815495 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.151589109 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.182022868 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.16294181 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.155271141 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.146650422 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.250590944 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.141682472 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.13915771 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122360463 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176726733 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.173618796 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.148143769 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148277724 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177777565 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.143911457 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150504334 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.219374335 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.240465635 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.221357618 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.129099727 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.317318983 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.166326808 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.140912892 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.153146291 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.894359471 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.166827849 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.145773146 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.124559065 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.157562564 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.243356365 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.14418293 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.503673057 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.16746997 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.194177207 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.126840571 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.204118764 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.157637225 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.162696108 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133702896 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.148568055 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.154261027 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.149763319 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126771568 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.149821636 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.126926197 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.153074493 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.146189819 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149748233 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.125843027 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.210959299 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.143214929 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.167940281 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.172563215 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.136081691 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.147336683 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.179551324 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.128483657 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.143077971 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.13334908 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.268461793 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.14273938 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.163817201 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156387205 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.130455346 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.188357542 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.134313937 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.370748543 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.129163841 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.186266074 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.142492282 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156996989 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.159294069 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.127275403 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.149843356 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.140616065 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.12883873 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.206710015 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.133222667 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.143981787 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.136109767 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.156957739 seconds)
  done (took 32.807790223 seconds)
done (took 63.426312594 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.497380498 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106306745 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.128113498 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10692072 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.129200229 seconds)
  done (took 1.723490816 seconds)
done (took 2.457998744 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.241450397 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.333717297 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.244430245 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.147862658 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.2131322 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.210983744 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.195901588 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.208291152 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.216943998 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.232115132 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.127978984 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.235958846 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.223076482 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.212761762 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.126531733 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.247247712 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.208779971 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.196418972 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.239161418 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.155114767 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.164920134 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.15221349 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169218237 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.134963741 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.169224383 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.15093735 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.17215639 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.151059782 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.162315194 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.135805538 seconds)
  done (took 2.462078034 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.194308997 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.150519839 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.161112946 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.142434384 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166711283 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.135468554 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.144586053 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.166511678 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.172515583 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.149550163 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.161988406 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.134045677 seconds)
  done (took 2.429310808 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.122588494 seconds)
done (took 10.032344057 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.244615744 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.876900477 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.200258427 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.314096577 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.377401553 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.320136311 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.681343905 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.257939854 seconds)
  done (took 16.133050859 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.169685963 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.254504501 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.166295239 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.140559145 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.164969233 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.139700027 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.157495866 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.145427431 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.159174013 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.145176702 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.159859295 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.141413514 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.156793891 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.141951222 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.162700787 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.141423571 seconds)
  done (took 3.356686559 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.185410938 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.180029667 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.142493958 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.16226379 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.13959743 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.162403194 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.146656638 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.161283987 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.139024243 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.157085618 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.147873623 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.159366495 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.161983797 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.1395931 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.160353771 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.163301702 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.157930837 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.145368276 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.179728581 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.145143178 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.162827549 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.141100764 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.162031778 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.144160581 seconds)
  done (took 4.564222448 seconds)
done (took 24.803071187 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.201187665 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.15047549 seconds)
  done (took 1.106842567 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.217006157 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.23465037 seconds)
  done (took 1.211681737 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.162337822 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.157473237 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.170690211 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.166404471 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.137285475 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.156792425 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.18210954 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.143805368 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.158017651 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.142147894 seconds)
  done (took 2.344891763 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.145025984 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.162115378 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.157421485 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.226716889 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.163146235 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.140053494 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.158245333 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.140588827 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.158011783 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.137218985 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.15726965 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.153863211 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.157726412 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.157187238 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.158842615 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.158900653 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.147568486 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.15841805 seconds)
  done (took 3.602670145 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.142007374 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.141542859 seconds)
  done (took 1.047292886 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.145515501 seconds)
    (2/7) benchmarking "second"...
    done (took 0.156723351 seconds)
    (3/7) benchmarking "month"...
    done (took 0.144492606 seconds)
    (4/7) benchmarking "year"...
    done (took 0.159177574 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.14196512 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.15777586 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.138824078 seconds)
  done (took 1.811135899 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.593646091 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.267917868 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.395839373 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102917208 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.153479573 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.37063973 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.155133694 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103903856 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.1030219 seconds)
  done (took 3.040309875 seconds)
done (took 14.925546329 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.141447456 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.330432732 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.644661517 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.175721437 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.136176116 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.213647909 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.398701189 seconds)
done (took 2.815226503 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.360750484 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.215330525 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.123220977 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.139805697 seconds)
  done (took 1.608402367 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.133368636 seconds)
    (2/2) benchmarking "read"...
    done (took 0.162764762 seconds)
  done (took 1.073910935 seconds)
done (took 3.459925735 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.161224483 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.157923015 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.142513444 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.156445872 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.141333126 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.156495738 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.139605323 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.153636856 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.139459913 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.153874316 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.139540789 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.157115301 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.136647545 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.157848215 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136853436 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.273182644 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.139557063 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.154510919 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.13680329 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.156882031 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.138509024 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.156946774 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.138802218 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.157631707 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.139397964 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.158864895 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.136547671 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.154881567 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.155736704 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.140409475 seconds)
  done (took 5.340637452 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.14590333 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.133003086 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.153679599 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.143099342 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.150490855 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.135832426 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.150156595 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.135894656 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.1548669 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.135731995 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.155536957 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.13623604 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.153862652 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.13712924 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.155282875 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.138577817 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.161566845 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.136456598 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.155188589 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.137523354 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.157810012 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.135970363 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.154747542 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.136337728 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.154283796 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.133924363 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.153157116 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.137686224 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.153585941 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.136938363 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.155844609 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.140579608 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.135796738 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.164236807 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.156525211 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.139334268 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.140524713 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.152827954 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.136558148 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.155104849 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.134495664 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.157202393 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.136345271 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.161606165 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.136556053 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.157395574 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.141033158 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.158298552 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.142964479 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.156600641 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.133541912 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.154771008 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.139369329 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.156350888 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.140083596 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.152513877 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.138350973 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.151508443 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.13844072 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.154409091 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.134956687 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.151748976 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.142551507 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.137070922 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.169868668 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.160353142 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.137957208 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.155814786 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.13818964 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.158830393 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.140234034 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.164467004 seconds)
  done (took 11.354532864 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.143701304 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.139672929 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.158760482 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.138433316 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.158405828 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.139780904 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.158491593 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137742726 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.15814085 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.137967195 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.155760659 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.138280504 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.156001541 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.137384998 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.15707591 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.137091526 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.155376951 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.14009484 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.155010703 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.138106459 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.136682675 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.155763244 seconds)
  done (took 4.022902354 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.28859934 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.144222111 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.205513844 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.168329297 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.155363402 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.16893482 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.142208936 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.162392858 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141443127 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.164779544 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.146658454 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.162372882 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.172538141 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.147444239 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.165427391 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.147689172 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.161378552 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.147530074 seconds)
  done (took 3.787547704 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.143935412 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.136130719 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.156754291 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.136398002 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.157518634 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.137108776 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.159017987 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.137849722 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.157446558 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.137795386 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.155497217 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138006516 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.156987282 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.137402878 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.155581586 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.138449031 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.155586196 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.138392249 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.138080338 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.157427491 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.136850084 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.156876863 seconds)
  done (took 4.02222601 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157880621 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.160023841 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.158236393 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.162195765 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.139543653 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.158539015 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.144809826 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.160215974 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.1477206 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.159295326 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.140518219 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.157873218 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.153976494 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.161827562 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.145354657 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.159800907 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.140584428 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.16029727 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.140401164 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.158758038 seconds)
  done (took 3.867163345 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.258735067 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.155935123 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.175655996 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1632144 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.176889534 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.156238723 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.18289344 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.154885199 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.178092759 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.185442576 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.158367346 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.175676669 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.162817352 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.18089095 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.15553137 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.183770297 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.181934727 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.162675086 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.176432352 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.155343428 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.18808544 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.175691895 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.165336598 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.175433273 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.15652612 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.180177452 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.156629206 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.181802658 seconds)
  done (took 5.663596816 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.158577498 seconds)
    (2/2) benchmarking "in"...
    done (took 0.17202886 seconds)
  done (took 1.13543482 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.149418442 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.141843876 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.162502438 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.140586803 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.16119054 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.140940199 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.161043104 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.140888935 seconds)
  done (took 2.002651105 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.259271238 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.257581218 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.144479755 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.172322262 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.256064755 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.236327888 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17524519 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.166368573 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.141195399 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.154003802 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.249153192 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.152468691 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.139839221 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.157930698 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.141178358 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.164904699 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.141133101 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.168252262 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.146845839 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.161387561 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.14603526 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.172037869 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.142384797 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.170892611 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.135306592 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.162280483 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.141900028 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.172321494 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.135989569 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.160915225 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.138565246 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.160416558 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.143497787 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.164064788 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.140852478 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.254868444 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.167875957 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.136544459 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.16263828 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.144184188 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.187561002 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.159936399 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.142584054 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.158049009 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.144376111 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.164435365 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.145508936 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.160695434 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.133649398 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.155348735 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.14248425 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.155444348 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.141426085 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.160364527 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.141471481 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.165669042 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.143226733 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.156897745 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.138147945 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.156188437 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.139447132 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.156148906 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.143005964 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.163955137 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.141952548 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.161683759 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.140874619 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.160891549 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.14201373 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.163681499 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.139953482 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.175268657 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.141590631 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.169115849 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.146573946 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.161694235 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137613798 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.16630362 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.140007469 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.161549523 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.144969204 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.185486437 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.142075888 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.157066063 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.136242674 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.168283621 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.142951908 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.16538381 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.133856407 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.169062072 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.162815606 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.144272466 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.133767709 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.160294126 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.155935682 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.146831032 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.134519271 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.161951461 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.141685127 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.166511258 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.146543635 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.161338463 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.161847816 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.148264874 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.166842655 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.141523444 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.211734188 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.138284345 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.159376901 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.142920968 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.171407412 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.137070852 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.160847549 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.142151457 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.158650203 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.136738897 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.167320579 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.141404295 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.162996007 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.145022213 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.16450849 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.144113578 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.164396534 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.141814193 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.168577653 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.145146181 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.170834433 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.142733584 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.164916573 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.14310507 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.163432236 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.141328796 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.165921728 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.139274206 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.167997271 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.13917098 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.161914026 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.143108213 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.167458656 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.141998295 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.157461923 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.139953761 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.163555295 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.160444914 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.146141 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.162538686 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.138546948 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.156008875 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.143849438 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.156746678 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.143213044 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.17031244 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.138386103 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.164252033 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.139488408 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.169539786 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.139549869 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.166423537 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.145393908 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.16766329 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.147679394 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.154951059 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.140172085 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.163990267 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.144324848 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.158253784 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.143410346 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.161549174 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.149831344 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.154632164 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.14741295 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.154657516 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.140151202 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.165831283 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.144593247 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.164826267 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.139236351 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.193754596 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.154590888 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.167685779 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.141826695 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.161548337 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.14755822 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.162054407 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.147912595 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.1695907 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.148356226 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.15844466 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.141667037 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.16872823 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.140300523 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.164137842 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.141352193 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.165741957 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.136525322 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.163361486 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.136661792 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.167502935 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.144195152 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.166361728 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.148303636 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.166064484 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.141633724 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.171019024 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.139416891 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.16746117 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.135758464 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.169252039 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.153258176 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.168980776 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.148844417 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.165079442 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.14031072 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.164281366 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.151167966 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.165729943 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.142619394 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.166047651 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.136681347 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.158851136 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.14911554 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.165320953 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.139088148 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.16503621 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.145276854 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16772517 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.141659145 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.156884406 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.148431725 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.169938579 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.138417881 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.165174217 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.140241996 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.16188141 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.149362429 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.160063092 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.139392447 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.16756649 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.147106276 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.16870651 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.143051152 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.166060363 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.14890441 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.169899398 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.144748575 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.16083861 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.149867033 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.162056222 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.142791622 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.162464514 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.146761261 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.157154622 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.144960683 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.164854343 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.139867647 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.15998885 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145846131 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.168984408 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.148047249 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.16135348 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.14681441 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.169225151 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.149529909 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.163744984 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.149233432 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.159627562 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.136115633 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.16201802 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.136122966 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.165713322 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.139594428 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.170212217 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.142529088 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.162663213 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.147095591 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.168652801 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.159987105 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.149640258 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.173481348 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.138697945 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.156135567 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143488079 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.162179842 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.143102835 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.15945205 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.145820079 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.164259645 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.148448487 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.164798331 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.14031079 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.163876496 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.15195424 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.160188736 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.150050924 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.168977144 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.149770232 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.159657594 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.147796029 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.160045771 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.147257832 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.157105593 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.142982917 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.163414425 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.142979495 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.160915645 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.142243228 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.161414102 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.137970688 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.160143828 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.150694652 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.162150019 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.147538664 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.163871747 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.141491107 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.161714977 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.139976319 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.169997735 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.142557584 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.170767316 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.144823025 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.157733257 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.138660371 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.168788573 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.144070206 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.169698046 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.138854668 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.167607068 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.150868557 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.167937487 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.144776162 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.17293484 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.153683859 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.169420427 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.149258785 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.158180939 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.142368174 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.167836706 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.144298308 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.168548388 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.146125356 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.159691187 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.146259311 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.171762135 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.145666359 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.163791848 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.138948186 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.166824356 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.14996928 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.169388858 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.146847584 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.166913264 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.145064886 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.159981447 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.148537534 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.17098089 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.144621044 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.17102077 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.144591851 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.168499081 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.142657736 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.170414478 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.147684073 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.162016482 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.143169044 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.162679346 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.151625217 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.15920139 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.149358588 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.168601328 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.142244625 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.164008425 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.149473408 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.161967315 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.147874321 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.16978025 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.142475171 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.176835616 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.146222366 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.162398585 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.149101293 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.172416758 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.139494136 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.163270902 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.145046587 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.171892878 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.143536339 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.170282268 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.144462714 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.170467906 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.148003528 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.169670319 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.150453071 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.171355799 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.139602878 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.172354389 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.148461127 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.168752465 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.14253279 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.164123106 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.140962548 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.164232547 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.152365744 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.162312819 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.153508837 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.170106478 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.143519577 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.164715708 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.151178373 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.164937245 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.151652245 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.162811277 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.147234505 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.160845034 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.147010454 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.16516814 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.151627592 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.163388026 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.14014778 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.171707171 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.149587598 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.171030408 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.147400727 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.174719704 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.140149736 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.160854673 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.148121001 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.163852191 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.154535992 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.168782008 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.143752568 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.164860419 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.147413159 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.168210008 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.151591134 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.161388121 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.142304688 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.167020821 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.147171368 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.164883188 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.140344174 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.17038738 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.143639774 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.167677049 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.144718264 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.162040019 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.145395724 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.172831894 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.142997793 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.162306044 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.142920479 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.173046028 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.164193995 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.143253412 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.139372891 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.171493596 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.167808141 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.153108995 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.162383359 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.146077025 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.163856731 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.148975719 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.171805786 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.144759191 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.166931772 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.144433869 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.172054072 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.151155325 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.160062253 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.145358708 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.1771286 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.151754982 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.16754491 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.148890861 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.166355372 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.153820049 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.17411879 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.148828073 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.161112178 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.141132961 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.165493321 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.141000472 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.169143506 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.151571858 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.165204388 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.144993577 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.170778212 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.150234468 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.169826205 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.148936537 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.161156946 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.153295192 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.164693289 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.149429058 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.16066233 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.140596091 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.171390789 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.151723694 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.165659404 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.1477514 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.168443278 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.150467319 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.161937353 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.144959425 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.170181837 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.151514658 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.171333241 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.146992086 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.165733785 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.150410957 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.176766403 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.150678798 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.16573169 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1537669 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.173025424 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.147679883 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.166796141 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.149775611 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.173321412 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.148954765 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.174431748 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.144708485 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.16687122 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.15308937 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.175836257 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.155050723 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.166907258 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.14162604 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.172158206 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.144260733 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.164142382 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.149650315 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.175636441 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.152587491 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.167991893 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.143629298 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.176594384 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.151406474 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.167603367 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.144567546 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.166991277 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.150653026 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.165936116 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.150234258 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.165450788 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.15396057 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.17488886 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.152345071 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.17598411 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.142096281 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.173809812 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.14903655 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.176614568 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.148008277 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.162756171 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.141437679 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.170694821 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.153838487 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.175371742 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.15040055 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.172263038 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.151521642 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.169489709 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.146658314 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.166242299 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.153440671 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.174050904 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.148837712 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.17192277 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.14593853 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.169725354 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.149948607 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.174609564 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.154470062 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.169976643 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.157623954 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.175596283 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.147035946 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.167507265 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.148305032 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.17242437 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.148229534 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.173855069 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.145719229 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.16440289 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.15377605 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.176904339 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.147398492 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.17686488 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.155266183 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.169292268 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.151368271 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.177121197 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.152538112 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.173613139 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.150426182 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.173578987 seconds)
  done (took 94.281457512 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.20565178 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.178722168 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.150795363 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.172790338 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.168920224 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.174692047 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.150262754 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.173935177 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.152364278 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.183792087 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.151089954 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.174506339 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.16557301 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.195427226 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.192506464 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.161361791 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.172888675 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.153300919 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.174596574 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.152900799 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.187857688 seconds)
  done (took 4.493747215 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.160206755 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.151011941 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.173253945 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.150868557 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.17399119 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.151152741 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.173928473 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.150882036 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.173656859 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151524226 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.172562097 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.152267408 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.172289227 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.152051039 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.17187025 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.153038455 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.171937786 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.153189452 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.151433922 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.172355995 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.151170969 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.173985254 seconds)
  done (took 4.459271043 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.1819429 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.155006234 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.172787056 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.152426367 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.176906155 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.15217836 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.179041203 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.153245186 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.183564824 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.167564395 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.145114892 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.146879642 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.173229291 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.151433364 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.16918136 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.152155732 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.184081509 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.154680215 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.180123744 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.152261402 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.166571531 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.152790798 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.176275 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.143182454 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.179609712 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.157956399 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.178509851 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.155806126 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.166042274 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.155360818 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.175374955 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.147017997 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.165095226 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.145109096 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.165748382 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.156312196 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.177605686 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.153608011 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.174427907 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.145349698 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.175108371 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.157602304 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.166046674 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.154917465 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.153034754 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.169170534 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.155785453 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.175673597 seconds)
  done (took 8.731160156 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.189441619 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.213161883 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.155818907 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.205476618 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.190179422 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.162249823 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.178772524 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.18190735 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.179249401 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.155664418 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.190622844 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.18904052 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.158575053 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.180077857 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.159070927 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.178357877 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.158456183 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.176749013 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.161360254 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.177993166 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.160544159 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.18170509 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.165219893 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.187692374 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.180676816 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.158305815 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.177690752 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.161979955 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.187434868 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.16214059 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.182222963 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.161245993 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.188887916 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.158629878 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.179005025 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.15856311 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.189952856 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.17890641 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.159939752 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.175655717 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.159916634 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.181529998 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.159424464 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.19087965 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.158030501 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.181470772 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.157397041 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.178005667 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.165819829 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.180075832 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.183949928 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.168554255 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.18078095 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.15872165 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.181266975 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.166794883 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.180625483 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.156919256 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.180846322 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.165974249 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.178686829 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.159810057 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.189401949 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.179501178 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.164531817 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.189292717 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.159546337 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.182198588 seconds)
  done (took 12.833782215 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.193527193 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.182949103 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.16868891 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.191685549 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.161245435 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.185122074 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.160892387 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.183465719 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.183197458 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.397533024 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.183757166 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.293024553 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.163719492 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.19068151 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.161254934 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.18516824 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.160590603 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.183212894 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.160638304 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.184580875 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.182189858 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.169481678 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.182604715 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.168039735 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.194248025 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.158498158 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.18225467 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.182357896 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.170364542 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.183356766 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.171724421 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.184510963 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.160926679 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.191299815 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.192972305 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.162045606 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.177307533 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.162674248 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.182168068 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.161155898 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.180596848 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.169814402 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.185058379 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.157104545 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.183039896 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.160189434 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.190344387 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.192791486 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.165941772 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.18858292 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.160708844 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.190191853 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.181892265 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.163021918 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.191357015 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.174482733 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.190891384 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.189771967 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.162951937 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.190841237 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.16858289 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.197204756 seconds)
  done (took 12.253513802 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.16424889 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.156542043 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.179226912 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.156176285 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.178623623 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.156173491 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.180286404 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.156337967 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.179791508 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.15695753 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.179995794 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.15770078 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.17833853 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.159363631 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.17921008 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.157644628 seconds)
  done (took 3.607367319 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.180925801 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.195013695 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.258154406 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.160108628 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.180712785 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.165031111 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.180583648 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.160158635 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.176755507 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.163152451 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.183505877 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.16101894 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.19559708 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.158674717 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.180894861 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.161126565 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.179013337 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.161668743 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.180675071 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.260537741 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.162265677 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.181486277 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.159591593 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.184664614 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.16107572 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.185339421 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.165232814 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.181021902 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.161139346 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.180384461 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.160133911 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.187958957 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.158170183 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.184592328 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.1593028 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.181482086 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.158099155 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.181309788 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.160958387 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.181685954 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.160847898 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.182729731 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.15876167 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.18427497 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.157081916 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.18207895 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.156968354 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.187190634 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.159984451 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.183399579 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.158637352 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.187340652 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.162498318 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.189653657 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.165221219 seconds)
  done (took 10.592770492 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.176880594 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.182318925 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.171467964 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.179240461 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.16108459 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.183006792 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.161312203 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.183238594 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.162163219 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.179369039 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.162386851 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.1837117 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.161781327 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.183202278 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.162212877 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.183190614 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.159526432 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.182768633 seconds)
  done (took 4.06256927 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.165816477 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.156538481 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.181642302 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.156725517 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.182188322 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.157715237 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.181270677 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.157646374 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.180633376 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.15816739 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.178725242 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.15884038 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.180681496 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.159008419 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.179791998 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.158429015 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.18120356 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.159748457 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.157678012 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1814934 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.15733146 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.182428436 seconds)
  done (took 4.654418274 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.177248448 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.2834681 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.189017402 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.294071474 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.154957415 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.179279153 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.187358951 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.158309168 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.193113872 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.156055739 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.177611343 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.156076761 seconds)
  done (took 3.253432368 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194355092 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.218106716 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.161016496 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.184183827 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168659786 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188418304 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163748477 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186720323 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171740414 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195894604 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187300005 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17370491 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196029048 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171357335 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191381041 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18999099 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166122941 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186150976 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162209594 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202054675 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16395395 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195739067 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163511575 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186597611 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185201973 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.174874682 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196151061 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176195311 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188222818 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17108251 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191102584 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.186066957 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173412136 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198882344 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.161252349 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19516588 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164620165 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200813386 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192211663 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173250663 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.18549349 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169431811 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195980927 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.168848497 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19532847 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188633485 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17007016 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.18788304 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164774655 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.208587139 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191597548 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.173828879 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192601797 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17236277 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196521289 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.208481469 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175993469 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196159511 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168310579 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.198147265 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195433163 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169727449 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196426795 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175629317 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193434654 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19541661 seconds)
  done (took 13.087618405 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.205491843 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.184997547 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165579436 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200215404 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172355926 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.18915492 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187386678 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166694451 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187045573 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163691277 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.231586014 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166075309 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196500616 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195184178 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167921214 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187915167 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166467537 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196531556 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162962133 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.209333184 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.187706272 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174072205 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196922807 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17387232 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.200685715 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192153486 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.167477652 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.187408538 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16720157 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.188347694 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17110011 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190230336 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.173598123 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.187594246 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173326441 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189392589 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.18859612 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171728612 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189079701 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170956726 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197913366 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.18014281 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190337822 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18834944 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17915253 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.189496933 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166468445 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.185950322 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166690052 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.186678837 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.177138168 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.200983658 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.201021024 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175187152 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191214469 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166865773 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190565784 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.166221905 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190050774 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170507437 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199500369 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190379796 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.185763078 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191288013 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165789379 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197381804 seconds)
  done (took 13.097432852 seconds)
done (took 231.380691782 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.327958534 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.351090178 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.152273554 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.577001237 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.152180176 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.870058825 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.849541761 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.258358971 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.154257186 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.174903596 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.154075179 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.194179372 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.521731849 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.175202168 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.154325282 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.192735054 seconds)
  done (took 32.218295777 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.360198388 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.39953684 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.191881803 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.157236056 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.181531465 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.159840578 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.180281235 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.16052572 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.178661686 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.16643129 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.180639382 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.155649542 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.185213915 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.155374577 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.180854633 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.158979644 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.186943186 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.158407713 seconds)
  done (took 4.471562201 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.184699605 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.221334711 seconds)
  done (took 1.384460343 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.194108552 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.275726753 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.378795935 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.228995741 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.179636252 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.198876198 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.229728236 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.171499323 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.269384257 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.192272356 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.170992694 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.178754855 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.183152411 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.188401751 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.174101539 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.180064728 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.186080925 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.19592715 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.193053739 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.161562723 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.20580117 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.159767942 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.186531542 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.173894669 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.262727754 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.192889683 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.16234334 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.181021204 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.162439721 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.193946451 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.167371983 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.197353728 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.168958497 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.238271711 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.185935306 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.23517369 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.163187861 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.183088855 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.172042618 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.184339922 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.183427236 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.163916375 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.19123626 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.15804859 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.179006003 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.163979721 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.179810924 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.159845117 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.189865904 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.161730483 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.190987346 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.164614578 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.232315506 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.18683549 seconds)
  done (took 11.383626927 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.998730285 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.205049539 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.18338156 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.147161661 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.206501539 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.171794681 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.007552427 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.183234684 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.315226539 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.078734314 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.201022141 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.1670035 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.330080661 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.340268829 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.34064227 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.419063206 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.840024559 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.1954428 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.213714747 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.205732307 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188021326 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.198194687 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.176029159 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.518395321 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.158271802 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.184289357 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.186411135 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.16841576 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.238649552 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.182128886 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.165037537 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.259940806 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.356993232 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.273770847 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.184417446 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.157917847 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.183125662 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.250162818 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.335479114 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.28176523 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.251426037 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.180138061 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.15885393 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.187084126 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.173953266 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.180839966 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.244732797 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.254787567 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.255496456 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.162947048 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.192957708 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.166984991 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.187766335 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.243640899 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.157334882 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.447344736 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.427812923 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.184727122 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165570915 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.196440413 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.335339361 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.185496773 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.302368199 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.204633774 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.280428747 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.159475866 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.911849475 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.248346525 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.15981341 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.188350768 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.164284579 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.189361231 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.162747372 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.245449578 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.493936834 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.188268145 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.165994921 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.183356557 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.295742496 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.160337009 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.182911668 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.242578753 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.161392032 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.189349707 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.168899271 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.191190024 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.253802177 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.33713959 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.166505322 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.190478203 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.165157943 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.194152552 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.18443288 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.271585863 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.318285446 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.239867374 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.291517657 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164285137 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.244163521 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.249356709 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.189569079 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.253432577 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.164425658 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.196839695 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.163533505 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.313726487 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.220318101 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163563747 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.188295872 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.165897772 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.224365193 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.20469712 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.167500909 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.251777617 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.557978357 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.24910116 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.181342124 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.16651028 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.190214203 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.241763425 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.169033925 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.327342884 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.192465885 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.250459224 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.165519512 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.184838868 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.165942052 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.244197045 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.192979289 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190111046 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.166563849 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.193447016 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.342520581 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.285656018 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192570298 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.31570956 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.256323308 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.167456629 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.257982946 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190829505 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.248515332 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.173777825 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.18798438 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.162685562 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.90141812 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.172959424 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.189668672 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.167022636 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.269197361 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.160854882 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.188884774 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.160126019 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.183461248 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.867320977 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.188560431 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.16012532 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.186479579 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.166539893 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.19060245 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166764782 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.192075542 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.245396569 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.309690149 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.195182082 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.165672325 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.186441655 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.242665216 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.16313981 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.187122329 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16177099 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.186887941 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.168248002 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.192201676 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.16548934 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.252133529 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.241530435 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.323408654 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.632353458 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.161489181 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187120094 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.306325546 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.187029301 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.389717994 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.19291734 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.299858313 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.246849407 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184159242 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.427205304 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.248794277 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.271504917 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.164483207 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.25504179 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.184387903 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.167466966 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.24287886 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.187000526 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.168772998 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.242460511 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.196127455 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.168936427 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.351205275 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.16277873 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.311807319 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.184595331 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.254024971 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.164860769 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.194185657 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.39386056 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.18557723 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.175242536 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.242274593 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.191177175 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.162872946 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.039993564 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.188071961 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.170477824 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.192389479 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.300089417 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.246071515 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.193428648 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.168566058 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.19536367 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.247128982 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.291734374 seconds)
  done (took 61.944454391 seconds)
done (took 112.373132718 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.32113546 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.252248836 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.395272052 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23422783 seconds)
  done (took 2.268273222 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.345123148 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.201783761 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.296699252 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.194676432 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.305362155 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.159449676 seconds)
  done (took 2.520935798 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.237878225 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.228286432 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.228089479 seconds)
  done (took 1.71550202 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.275126257 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.269838992 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.410902253 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324102947 seconds)
  done (took 2.367796352 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.342262868 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.177904747 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.218633878 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.290114896 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.305457559 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.269331107 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.209684067 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.211627261 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.217459916 seconds)
  done (took 3.299980675 seconds)
done (took 13.192918248 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.323646394 seconds)
    (2/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.182572588 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.380201421 seconds)
    (4/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.399399463 seconds)
    (5/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.240808834 seconds)
    (6/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.409012976 seconds)
    (7/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.490491004 seconds)
    (8/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.28369669 seconds)
    (9/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.231415043 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.196452775 seconds)
    (11/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.227981016 seconds)
    (12/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.330653849 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.199388064 seconds)
    (14/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.277142226 seconds)
    (15/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.205178396 seconds)
    (16/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.350348742 seconds)
    (17/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.353238634 seconds)
    (18/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.212314988 seconds)
    (19/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.304862441 seconds)
    (20/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.190381612 seconds)
    (21/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.313420372 seconds)
    (22/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.24587135 seconds)
    (23/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.12671332 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.215185604 seconds)
    (25/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.1998655 seconds)
    (26/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.216717015 seconds)
    (27/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.28443617 seconds)
    (28/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.210532359 seconds)
    (29/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.170745246 seconds)
    (30/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.298432014 seconds)
    (31/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.192958197 seconds)
    (32/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.413992938 seconds)
    (33/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.278010004 seconds)
    (34/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.154212836 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.185502221 seconds)
    (36/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.235959894 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.18373775 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.217925967 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.166388757 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.19910437 seconds)
    (41/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.224954165 seconds)
    (42/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.190067605 seconds)
    (43/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.17564587 seconds)
    (44/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.188197396 seconds)
    (45/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.217736767 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.190421701 seconds)
    (47/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.197747562 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.204594174 seconds)
    (49/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.131053607 seconds)
    (50/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.190082831 seconds)
    (51/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.125963504 seconds)
    (52/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.325326147 seconds)
    (53/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.165151099 seconds)
    (54/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.237474542 seconds)
    (55/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.301665736 seconds)
    (56/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.170544941 seconds)
    (57/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.25248071 seconds)
    (58/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.181885699 seconds)
    (59/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.19594447 seconds)
    (60/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.132800756 seconds)
    (61/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.230880617 seconds)
    (62/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.475949002 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.190636463 seconds)
    (64/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.130728565 seconds)
    (65/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.218884748 seconds)
    (66/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.26352562 seconds)
    (67/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.134668871 seconds)
    (68/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.127823937 seconds)
    (69/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.201144014 seconds)
    (70/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.128877772 seconds)
    (71/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.129308483 seconds)
    (72/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.159242876 seconds)
    (73/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.219881523 seconds)
    (74/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.225774241 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.187679243 seconds)
    (76/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.126888831 seconds)
    (77/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.213309668 seconds)
    (78/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.277781414 seconds)
    (79/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.238256485 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.170645024 seconds)
    (81/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.263923366 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.180640779 seconds)
    (83/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.211339235 seconds)
    (84/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.181225908 seconds)
    (85/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.206132428 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.186041186 seconds)
    (87/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.189465713 seconds)
    (88/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.243357482 seconds)
    (89/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.199956433 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.16893531 seconds)
    (91/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.200458382 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.185091903 seconds)
    (93/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.159694679 seconds)
    (94/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.132351398 seconds)
    (95/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.186661376 seconds)
    (96/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.196497613 seconds)
    (97/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.173402707 seconds)
    (98/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.152285217 seconds)
    (99/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.192306089 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.163336273 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.19973343 seconds)
    (102/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.163389423 seconds)
    (103/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.15399598 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.189700659 seconds)
    (105/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.198411893 seconds)
    (106/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.195109867 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.191049784 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.168033449 seconds)
    (109/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.130079739 seconds)
    (110/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.206260587 seconds)
    (111/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.133571246 seconds)
    (112/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.33956441 seconds)
    (113/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.136149226 seconds)
    (114/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.155405237 seconds)
    (115/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.129896895 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.17456319 seconds)
    (117/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.207153368 seconds)
    (118/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.135349544 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.192435225 seconds)
    (120/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.174590567 seconds)
    (121/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.127402933 seconds)
    (122/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.157717193 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.178244943 seconds)
    (124/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.134368274 seconds)
    (125/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.26771889 seconds)
    (126/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.135345494 seconds)
    (127/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.158614234 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.186556265 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.211171895 seconds)
    (130/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.255895111 seconds)
    (131/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.161908019 seconds)
    (132/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.176319489 seconds)
    (133/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.197049849 seconds)
    (134/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.131226185 seconds)
    (135/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.188975288 seconds)
    (136/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.176623647 seconds)
    (137/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.130875162 seconds)
    (138/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.159673377 seconds)
    (139/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.241384257 seconds)
    (140/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.128607346 seconds)
    (141/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.158048171 seconds)
    (142/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.13627131 seconds)
    (143/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.181950302 seconds)
    (144/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.162666984 seconds)
    (145/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.130023658 seconds)
    (146/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.134836699 seconds)
    (147/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.191668437 seconds)
    (148/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.132402102 seconds)
    (149/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.164824661 seconds)
    (150/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.160831696 seconds)
    (151/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.133194521 seconds)
    (152/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.128441683 seconds)
    (153/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.159096558 seconds)
    (154/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.137237913 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.16735075 seconds)
    (156/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.156133403 seconds)
    (157/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.136859792 seconds)
    (158/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.131536349 seconds)
    (159/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.135632821 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.192214247 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.167717836 seconds)
    (162/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.157007954 seconds)
    (163/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.135923081 seconds)
    (164/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.129366661 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.201882446 seconds)
    (166/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.13262329 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.187766825 seconds)
    (168/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.156646875 seconds)
    (169/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.177139566 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.194104362 seconds)
    (171/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.177303063 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.194639346 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.172922199 seconds)
    (174/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.153537821 seconds)
    (175/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.133548896 seconds)
    (176/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.174775787 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.21412723 seconds)
    (178/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.136715291 seconds)
    (179/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.193008692 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.16842882 seconds)
    (181/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.129722642 seconds)
    (182/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.154323466 seconds)
    (183/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.137392331 seconds)
    (184/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.173842219 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.194371575 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.166793207 seconds)
    (187/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.156776151 seconds)
    (188/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.137806839 seconds)
    (189/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.173805691 seconds)
    (190/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.154933669 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.168187729 seconds)
    (192/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.160761923 seconds)
  done (took 38.690124492 seconds)
done (took 39.719692708 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.319487834 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.155335954 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.17321197 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.202117462 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.298131418 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.181382633 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.219000964 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.20135291 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.186485586 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.199735875 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.165806769 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.212011946 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.176002968 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.308202181 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.205041856 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.167303328 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.192726882 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.185975884 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.215870608 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.191696584 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.296613348 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195500001 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.185072766 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.194039829 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.299580065 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1683807 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.201524161 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.175847501 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.214381871 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.174394803 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.201389366 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.167004756 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.216888474 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.1895549 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.191273695 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.175135679 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.191730736 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.136497246 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.199140896 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.177171552 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.212699255 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.177223235 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.200723919 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.167670972 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.20188957 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.175099501 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.192813346 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.179020042 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.190035548 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.176871514 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.193830374 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.19124925 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.201373443 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.165342395 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.191037771 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.167863037 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.211608194 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.166975494 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.215396874 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.168012776 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.193616172 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166666586 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.203688262 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166759055 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.201009849 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.167172935 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.203078339 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.178790823 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.200985754 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.168777049 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.192775142 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.175556682 seconds)
done (took 15.151248773 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.177567412 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.234916465 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.315711306 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.317720711 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.220254894 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.183495261 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.206840409 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.18995132 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.205086625 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.184552659 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.22950642 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.199075315 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.345562239 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.184447338 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.210906639 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.180032042 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.204554922 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.17491533 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.31429723 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.220333256 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.189408514 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.210827647 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.218275871 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.185642742 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.196458991 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.204340021 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.202459475 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.179864563 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.19806534 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.180901356 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.218455783 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.171558408 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.200957747 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.188249428 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.217342373 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.20661524 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.185294093 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.205832879 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.172817787 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.19696087 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.177933101 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.213767547 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.171846713 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.210814099 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.180283051 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.21387182 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.178240194 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.210385482 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.173052453 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.205729863 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.172152897 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.222225606 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.209397647 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.188539828 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.208808676 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.185297167 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.210235114 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.189805003 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.201267074 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.184968563 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.198256007 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.172236078 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.198880668 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.192989695 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.202250998 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.183389592 seconds)
  done (took 14.565034982 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.198302522 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.230127449 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.182990449 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.210277717 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.178193889 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.195534013 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.166059455 seconds)
  done (took 2.466735889 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.175059622 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.333857259 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.323587727 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.32289141 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.343031541 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.335898021 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.190956964 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.197004731 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.203109557 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.207252961 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.333673576 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.417255435 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.179929026 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.211746829 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.329800668 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.167395798 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.355010368 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.171052129 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.20978401 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.329821341 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.185486646 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.231667449 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.181015896 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.199723583 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.330254147 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.197069684 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.378203191 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.186633231 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.207471006 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.182374029 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.212863311 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.271900219 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.330632408 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.182156334 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.207040923 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.32599802 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.318346279 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.21185215 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.373076492 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.202580999 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.318820501 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.184522906 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.213997324 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.183257173 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.212729356 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.316212208 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.21614215 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.186107605 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.210827019 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.34089314 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.180494112 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.357495111 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.183616157 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.210442404 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.181538588 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211503991 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.191776622 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.21092794 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.339700531 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.18552848 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.323821905 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.354155231 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.324428686 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.328177627 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.193368863 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.35964308 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.3093994 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.184322881 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.206300187 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.185827262 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.329382179 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.213727946 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.181333674 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.344512734 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.189030882 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.331448085 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.330304433 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.212478836 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.182313198 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.204198034 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.18235629 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.199850204 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.319856875 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.182869903 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.211382817 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.215516442 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.185249744 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.209922855 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.176707178 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.221321231 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.184372049 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.210929825 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.189151777 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.211775185 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.187487529 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.360946667 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.181831363 seconds)
  done (took 24.916794797 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.179336143 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.170622884 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.203018484 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.197162782 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.17382378 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.196452845 seconds)
  done (took 2.259517988 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.214665217 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.21283761 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.193776387 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.214276969 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.233008751 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.319082894 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.356116445 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.180928664 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.234674465 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.197966166 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.321819625 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.325398781 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.322230851 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.220832272 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.327934579 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.186945421 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.329880776 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.21564949 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.22049878 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.185008373 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.212727331 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.189997904 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.210282397 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.313753515 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.186534544 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.216257389 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.178574873 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.227386457 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.193094736 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.207389362 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.18928252 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.218138214 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.206490225 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.181318448 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.32998917 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.206090383 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.182236023 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.218760849 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.188613999 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.215830868 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.328463696 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.183320169 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.222487581 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.189767218 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.212995521 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.203836047 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.191458634 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.206341044 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.331447595 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.189865276 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.2180521 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.187606398 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.21762991 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.188936526 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.207303317 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.180186531 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.217907738 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.330349062 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.218208545 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.179853527 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.215050881 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.188668685 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.209817323 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.191440895 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.215896588 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.188673992 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.207858555 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.187875009 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.213314766 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.188582361 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.217980443 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.186102577 seconds)
  done (took 17.234247037 seconds)
done (took 62.533469935 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.695387451 seconds)
  done (took 2.836191111 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.24442801 seconds)
  done (took 2.386671378 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.535852151 seconds)
  done (took 18.708544013 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.498375527 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.421486979 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.094710647 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.244995051 seconds)
  done (took 3.402352771 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.140320916 seconds)
  done (took 2.292828718 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.479707929 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.348608577 seconds)
  done (took 1.973070458 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.825196137 seconds)
  done (took 1.981654161 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.960421923 seconds)
  done (took 3.106285792 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.371552486 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.290099879 seconds)
  done (took 1.820000784 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.727523591 seconds)
  done (took 1.894271122 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.616628903 seconds)
  done (took 16.78437705 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.32831696 seconds)
  done (took 1.492435735 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.365318523 seconds)
  done (took 1.533499267 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.591448466 seconds)
  done (took 4.761995992 seconds)
done (took 66.130754129 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.193065333 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.216088373 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.19161431 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.214171439 seconds)
  done (took 1.966321486 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.197117594 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.212559642 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.191724939 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.211193057 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.192686654 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.2136037 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.186522532 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.215419852 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.187068202 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.214002353 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.187611847 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.212501324 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.19010518 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.211766664 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.185365751 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.215290226 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.190379936 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.213400182 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.189378551 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.214455973 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.187528037 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.214591534 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.189235866 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.218260088 seconds)
  done (took 6.002507791 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.189469695 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.176051997 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.207787806 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.175672549 seconds)
  done (took 1.91830218 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.203912872 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.227155841 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.199238185 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.223756946 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.200862833 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.227513778 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.185148893 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.211420182 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.186099224 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.224394736 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.202186186 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.229228591 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.197736109 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.219637916 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.223450691 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.183134951 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.219200011 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.200437988 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.222120565 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.197958344 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.217059376 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.195331893 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.213693864 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.197780319 seconds)
  done (took 6.182958741 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.267115951 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.226861251 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.213116347 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.259615416 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.242587133 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.184972963 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.240422054 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.190946139 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.219437332 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.19430739 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.215250487 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.232182528 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.219600901 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.187068412 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.21624803 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.218292912 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.196343334 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.217756042 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.228098559 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.218841586 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.190903117 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.226788616 seconds)
  done (took 5.985799382 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.195876026 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.204297488 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.178029482 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.20154197 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.190633739 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.207647914 seconds)
  done (took 2.361391348 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.182865572 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.171294129 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.201076198 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.171567418 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.204832542 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.174058447 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.200456776 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.173962974 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.203895621 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.173902562 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.200977373 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.172779862 seconds)
  done (took 3.411306284 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281239256 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220985993 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.350575516 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.468876175 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260924032 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.258890743 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.378410411 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229196534 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.27655053 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235447189 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27978977 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230453607 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252110831 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28704153 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211085711 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.242828714 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270072193 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.307929521 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211182441 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312896004 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254679872 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273881616 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.289321987 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218467935 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.236872649 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258875378 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.189035072 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.225090285 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235709932 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260973829 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273573685 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249662894 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210216117 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283300341 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323582489 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275287032 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.392728433 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203446891 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.257193041 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.291096864 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.331053761 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210338549 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288401479 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252397599 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226204952 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262679633 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248486627 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.283228614 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.231623239 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215452328 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279794658 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281002074 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.266366275 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206328332 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399245324 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232938071 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.238453367 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248381027 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286599713 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302377138 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281777662 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.193193772 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.296327975 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263648191 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314868253 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.241395571 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.263448865 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1948048 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262622781 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307556638 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28341097 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255722882 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.288803974 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202904923 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272402936 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263119912 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224737866 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307874975 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274173901 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.218015713 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221768285 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233765411 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195264914 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.289374578 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189601485 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.345371224 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204025456 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.271042987 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273867578 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222696825 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260055836 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258026946 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231136446 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246989928 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.156813796 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242835839 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.255982831 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226946318 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228209467 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249378779 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209431939 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.225504794 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220665002 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.22217951 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268981272 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.191736742 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259379562 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271300282 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.202502358 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279924843 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246591483 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.23424969 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267386655 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296687938 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229847734 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204347634 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320968679 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271821787 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.234841596 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.240592397 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.298279621 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.238047939 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205222815 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265931792 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293149569 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244135026 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.304396599 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209958334 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.234680611 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.19483162 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274902905 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.259646915 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.258704616 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199187411 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.265942338 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287438926 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.196476103 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240039393 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284921987 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203768999 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22507045 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205294192 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23902006 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.241710346 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.222768831 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.239425349 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253472666 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239221761 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.267007418 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257658883 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204665901 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272302435 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231897017 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.26856809 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218677458 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.218219789 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.273597153 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269385094 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230783887 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283131395 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.258283333 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277087819 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244298873 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230869442 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.280924271 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198924668 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.220559682 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231515754 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.271707387 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26394376 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.292912248 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274336143 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.264497531 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.234202058 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249045985 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269350174 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.285205961 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227192229 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.239607914 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273585 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267669303 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.191815593 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.222609453 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.198833595 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238094104 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200819671 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238210948 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281587484 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263354998 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272843914 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239244669 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239549736 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.29388381 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.196775442 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259814534 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.277959369 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209258593 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.29226447 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293824446 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283947421 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238845177 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234722306 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.222581797 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198339258 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.233608757 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.259451639 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20871879 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.236014929 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211242086 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.29703938 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268530306 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249495833 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286477142 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266201798 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.302754491 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.192640978 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.261676642 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235344592 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27106366 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.286799879 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205406288 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.259366432 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.296330002 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212614118 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292056553 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271704384 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284414939 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294898883 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.236307844 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232534109 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.243289807 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230519049 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2402082 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.259801962 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212804296 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232323049 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217693465 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.238437653 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.241339558 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287545085 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214625686 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275775222 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.256413403 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269904504 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198218432 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243263546 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276777864 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217350055 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.191070456 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237259361 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29266494 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251642335 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252069205 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24074088 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.231434109 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.4191012 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253657186 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272499946 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238745234 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209712422 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276201744 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.259689448 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25934087 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.255039555 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243566448 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312841249 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.272937152 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.210504701 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233789506 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246926442 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.221468666 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.226587194 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.222877295 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.26690091 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.244843635 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291114743 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209034054 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274856879 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281737782 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.217226925 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.251545675 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23995279 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.329686199 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24287013 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273249623 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.269296745 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.263925112 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253128139 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225842616 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198343868 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.235016618 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.28819873 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201433088 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284653936 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.26488564 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281070728 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277796289 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26275988 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21239733 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.228255772 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239915704 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2521373 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282197268 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236934809 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.20878046 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288589282 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.215551084 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202988034 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263075074 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.390852775 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217623135 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270466307 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.164097404 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.388525384 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230690928 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205567412 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.261304947 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272201444 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.234024243 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.257425753 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279228665 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211467324 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.26139155 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236633025 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.277012042 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252412754 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270020371 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277222613 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.24913622 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231989766 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258382927 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274317216 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248056893 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.219722634 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262363601 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300109602 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.276694194 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.205651361 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274813508 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271655215 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.247022405 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274999985 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241432797 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255044513 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233179163 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268604757 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211426188 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228123003 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260970127 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.264633652 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204077069 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276756632 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275744353 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204043615 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231098452 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22091266 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2712662 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244663236 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.203068491 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288445968 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.233458109 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288122672 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284419897 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234165113 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.271435914 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214665287 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23433804 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21182561 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247336341 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233789925 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.249612538 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280249464 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.202499005 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276579934 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268485957 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2684671 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255804805 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215754391 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.371307692 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.200999024 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297060401 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.25496245 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301792218 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221017142 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282592011 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276051375 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221448622 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269039171 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250763662 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.326025048 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238385482 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.272455876 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235616764 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215717935 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242058505 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.206276091 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.253762787 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275017654 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213913864 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.241616619 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.27764208 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217405999 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.25039029 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245052042 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30616079 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224116977 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291453333 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.291092394 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209916149 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281605712 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278081312 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232333385 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.236919792 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275614448 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.248221928 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224891796 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.239360606 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.24067914 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321146775 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.200950834 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.264536293 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248948487 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.275445851 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279876652 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.23723806 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254117231 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245639267 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282468252 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200407468 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.25534134 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.274592321 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209987596 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.230987404 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.24625848 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265266344 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.271365234 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.245243127 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.252082964 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302753234 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.196819861 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239397762 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.392660128 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265183583 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267074744 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.225149511 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213573877 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251776151 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265101728 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.239656803 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278525084 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.236064865 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203087558 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.25087457 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.245902988 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.199258648 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.275232486 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256161415 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261127968 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2912216 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.207560333 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.36519204 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247824042 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27719321 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.178138435 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.233172878 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215953649 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240292428 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216778824 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.283306767 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32302753 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.271387025 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.25182476 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210341692 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.232246503 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205145361 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.266013576 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254460152 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248302874 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254038031 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.163368191 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247229553 seconds)
  done (took 122.814094519 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24671615 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.232069525 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.247115154 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.302211057 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.274005165 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.37074533 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.309084836 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.325770267 seconds)
  done (took 3.617226953 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.199994357 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.241453958 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.251346906 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.221741116 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.186569605 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.591814224 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.244638023 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.228535836 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.234833215 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.230311969 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.214451991 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.647771619 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.224530508 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.222832596 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.224000971 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.184458163 seconds)
  done (took 5.647200667 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.313217204 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.736068462 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.09461287 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.422019169 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.382291771 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.300542199 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.929949542 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.292807696 seconds)
  done (took 13.783715722 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.253000189 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.278626982 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.534570911 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.420939911 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.293717728 seconds)
  done (took 3.097841842 seconds)
done (took 177.942844343 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.205151926 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.229618794 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.201157284 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.232484312 seconds)
  done (took 2.164021906 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.262486452 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.153694824 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.187961402 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.153723599 seconds)
  done (took 2.0649144 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.462558053 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.152723053 seconds)
  done (took 1.955048823 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.225590419 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.713186642 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.21132841 seconds)
  done (took 2.479397485 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.218104202 seconds)
  done (took 1.538366506 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.199176236 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.192644469 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.390609449 seconds)
  done (took 2.102794007 seconds)
done (took 13.620926516 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.222709675 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.034920712 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.658792295 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.2083626 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.827248004 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.476872513 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.510460513 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.255105485 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.308352899 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.186654462 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.249663802 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.767097828 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.493779621 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.954021458 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.471145318 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.952076867 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.805642324 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.186968538 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.22397031 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.187546056 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.489418173 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185220411 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.219783884 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.187354482 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.801328297 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.49210357 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.217245224 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.994395517 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.187876614 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.226940102 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.477288488 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.217012233 seconds)
  done (took 23.978318402 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.194236082 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.275224594 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.241632123 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.221010716 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.195242355 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.220625262 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197862591 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.231514636 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.318824133 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.187443738 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.241603838 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.186756919 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.224911352 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.187990875 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.244006518 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.186570862 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.221555548 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.187824932 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.225375308 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.18941005 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.240346695 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.186551028 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.221742234 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.187334437 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.219794221 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.234253043 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.188314729 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.230129754 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.187438291 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.2278032 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.192290025 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.219299465 seconds)
  done (took 8.233901043 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.235243462 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.285825942 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.243397292 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.259195112 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.272128599 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.190354444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.306349572 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.255315149 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.294758223 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.223364508 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.208564511 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.219631561 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.258849257 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.189433377 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.243105286 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.189146399 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.221237142 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.190155815 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.227196 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.189327288 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.241104263 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.186324881 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.220914964 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.188571745 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.21956577 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.207374764 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.219920215 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.231275569 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.188376748 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.22855162 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.194088089 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.219032183 seconds)
  done (took 8.570612855 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.207699875 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.233581658 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.211289299 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.242516174 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.198518261 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.23252049 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.202797158 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.231817677 seconds)
  done (took 3.088489326 seconds)
done (took 45.190994261 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.216468728 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.23452703 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.209448422 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.234620408 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.355737765 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.19541647 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.238122809 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.196181163 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.234906129 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.210074759 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.218519548 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.197503817 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.238880517 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.201248567 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.356492191 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.241129406 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.36195378 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.35681842 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.195664686 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.236360085 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.196049093 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.360920617 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.236536364 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.196110413 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.338203971 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.226760051 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.348189808 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.198898617 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.233288395 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.188713383 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.391407874 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.200862344 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.196234311 seconds)
  done (took 9.562775965 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.311022093 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.231585455 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.197049569 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.229709238 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.199668897 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.230063962 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.343678411 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.196999702 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.229609575 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.19625722 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.229463328 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.324153372 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.204336529 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.228092413 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.200420458 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.173738713 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.34645991 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.232523144 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.189482056 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157426234 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.228397968 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.196573391 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.354976285 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.227884985 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.197351353 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.231032592 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.198240293 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.236752872 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.200238033 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.230196033 seconds)
  done (took 8.306236708 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.208051876 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.242197977 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.217625231 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.296305836 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.227713873 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.243703896 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.214599706 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.241753438 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.219046221 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.224378952 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.206600644 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.259100477 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.240150161 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.203847779 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.191915466 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.239714352 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.238111285 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.193597384 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.201384548 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.242193508 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.242558289 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.208205038 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.245338251 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.200499868 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.222086901 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.200050858 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.233006446 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.20227677 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.232498769 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.206771755 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.224841022 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.194280642 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.226528387 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.226702292 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.226052978 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.205195926 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.244771629 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.205085507 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.238768282 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.22491666 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.228710229 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.194755073 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.251806881 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.248615065 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.227768979 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.203407011 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.226250489 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.209385425 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.225431042 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.210470898 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.266296433 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.224647003 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.213441179 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.22398833 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.191191491 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.234098275 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.192790578 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.227862915 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.208128702 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.225710756 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.21418862 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.232211094 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.204420199 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.228464109 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.204014701 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.224798349 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.194095003 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.228769594 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.219313085 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.232795455 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.229913594 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.225136311 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.205760034 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.239069508 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.204575386 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.237018129 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.192373415 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.237099146 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.204654237 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.230490204 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.206390352 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.227817867 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.194771486 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.24232453 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.213270975 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.241553971 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.204881361 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.235280478 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.194817581 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.227731893 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.21070829 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.227250057 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.197331728 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.239563425 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.194407264 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.229806528 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.202948294 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.234454046 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.191657542 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.251054202 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.197385227 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.225833048 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.21889292 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.229220489 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.196823214 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.234383297 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.234833354 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.226195454 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.202777672 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.237463228 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.194346782 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.234695348 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.195564114 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.225645384 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.209006816 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.241947667 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.201796471 seconds)
  done (took 27.216927586 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.460089024 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.446644926 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.296023049 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.529473057 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.240671457 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.368155475 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.446195637 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.449025326 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.229851994 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.228142 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.283619446 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.447164894 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.196233334 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.256959772 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.453333905 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.529711215 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.222720989 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.267633405 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.263731094 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.206453349 seconds)
  done (took 8.198651659 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.208081838 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.262063842 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.21685062 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.245045826 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.204271996 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.243540956 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.194344896 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.249225827 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.204910205 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.234434282 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.196991391 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.233345665 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.206746542 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.24102206 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.209982289 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.244549674 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.202978325 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.231814116 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.216854951 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.231513379 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.16983277 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.252095535 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.204381158 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.251519903 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.212271756 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.239504618 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.193490177 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.23112562 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.20192938 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.235488396 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.198773601 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.234478421 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.202830471 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.17006157 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.240565717 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.208796594 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.233176299 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.197262725 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.234025989 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.197581341 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.241622346 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.206509012 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.23628731 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.166487512 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.247802951 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.177136353 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.207506905 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.240222866 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.172311437 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.249078811 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.206621037 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.242302181 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.204546402 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.250327224 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.203553818 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.248765293 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.205122942 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.243053324 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.200175595 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.227940509 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.193579854 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.230401227 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.205133349 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.243242105 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.207376441 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.238044167 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.20325364 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.228255143 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.199127347 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.232241544 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.197701677 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.241714676 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.215771293 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.238565253 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.202227951 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.239189425 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.203768091 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.161284406 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.237848472 seconds)
  done (took 18.677447042 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.226427397 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.23856225 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.213591756 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.261568947 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.207300244 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.234075995 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.20677406 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.247628137 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.21084469 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.246684233 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.209469304 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.242739737 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.216667357 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.24217521 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.206701704 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.244616232 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.207572834 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.267914796 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.20822627 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.255813187 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.21076507 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.233998122 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.210126511 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.241740448 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.25583379 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.209509952 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.254988012 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.208913368 seconds)
  done (took 7.81976898 seconds)
done (took 81.110134817 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.603413186 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.792370873 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.483881993 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.493588535 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.484164921 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.489431233 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.486273429 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.490748021 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.970136705 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.458651411 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.488291424 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.48666014 seconds)
done (took 32.160216883 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.564169996 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.270723463 seconds)
    (2/2) benchmarking "String"...
    done (took 2.281941789 seconds)
  done (took 5.925997434 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.257480927 seconds)
    (2/2) benchmarking "String"...
    done (took 2.269939984 seconds)
  done (took 5.896352183 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.471818868 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.47593217 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.807875918 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.47892864 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.490296008 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.47589732 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.482687358 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.493580364 seconds)
  done (took 18.075713819 seconds)
done (took 36.309238976 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.533674778 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.673955885 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.720839501 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.461960491 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.482524628 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.483311321 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.476195122 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.499567019 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.474125585 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.483087479 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.965883791 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.739270825 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.486418839 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.85661333 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.462297057 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.473270169 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.484816401 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.724213952 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.473634182 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.511190215 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.456608694 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.454824388 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.483079587 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.479115815 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.481713352 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.487119627 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.475487071 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.477047535 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.665043579 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.492548599 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.514123339 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.472582932 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.468864093 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.471831649 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.477376697 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.477027282 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.673025389 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.476197217 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.469864429 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.472308874 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.673261663 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.469744721 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.478213954 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.480564114 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.460270332 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.506863408 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.461052065 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.645754254 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.492557468 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.47357817 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.526155595 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.853914943 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.470045737 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.477840792 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.480936856 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.704849548 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.481911212 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.522133506 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.499907496 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.476215376 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.472578321 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.469426524 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.494680713 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.471914131 seconds)
  done (took 161.310117443 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.473060576 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.47278589 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.469105534 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.470483432 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.472418385 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.474133897 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.472830239 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.474339858 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.471877255 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.471943185 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.474384208 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.472614359 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.474137528 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.480436584 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.481602095 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.499284511 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.471548303 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.475133186 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.483591454 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.475420792 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.478284006 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.472218639 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.475248424 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.471687706 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.51491513 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.545690063 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.497770981 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.491762605 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.479335955 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.473308303 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.51638473 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.473570976 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.133005391 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.429408516 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.488941157 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.482441308 seconds)
  done (took 90.303947173 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.474863319 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.47418048 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.474123351 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.509364494 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.475017529 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.003662756 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.001715302 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.440726646 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.114121915 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.72301813 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.683399963 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.471207966 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.5652994 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.486584991 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.472118067 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.567145794 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.497158892 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.471288702 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.475539802 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.005954388 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.487097976 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.592492943 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.640622316 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.469465146 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.504381178 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.87330889 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.470999419 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.505989204 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.802075459 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.502076137 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.476235281 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.7702388 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.642539321 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.476203852 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.585065182 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.476518697 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.506961884 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.474471998 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.755373431 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.4734241 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.47807057 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.481112508 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.061696672 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.477313072 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.006616624 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.473139427 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.392737582 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.470641064 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.475906957 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.926247116 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.087392538 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.474819808 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.475117541 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.482116546 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.47691351 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.477792882 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.508031154 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.936355036 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.30438333 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.474243547 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.481081777 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.507528576 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.47594537 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.476982024 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.629592633 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.477367757 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.184712735 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.533707325 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.733280538 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.00784576 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.476037281 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.57325558 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.589785475 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.474206462 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.478125256 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.479856831 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.479703949 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.589379557 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.476164741 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.243752016 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.64489374 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.476595033 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.704580869 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.574951466 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.474763376 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.790472447 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.476898075 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.479833923 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.137249926 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.475114049 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.572526785 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.476804977 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.480189345 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.481622698 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.246471147 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.004483182 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.48108052 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.687131932 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.481477079 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.357254859 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.477702437 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.373208144 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.996667244 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.092625257 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.479501408 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.588787164 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.649115855 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.477988087 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.480372679 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.712060661 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.479674685 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.544069816 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.477391085 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.883851711 seconds)
  done (took 408.773722004 seconds)
done (took 661.760532415 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.466152016 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.464515424 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.464256802 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.460527837 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.46537566 seconds)
  done (took 13.694194073 seconds)
done (took 15.072088707 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.483062896 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.483821511 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.477812227 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.310059611 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.479049466 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.479706812 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.482142178 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.479022367 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.481847028 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.481284386 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.282449535 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.480471434 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.486768743 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.449182539 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.305749007 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.479699968 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.386214546 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.477815161 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.4802712 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.869577828 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.488335353 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.606682525 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.835785542 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.550336743 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.848820929 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.910297671 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.486858 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.734210615 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.557589481 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.532637356 seconds)
  done (took 21.798446018 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.394689715 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.847627551 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.48794494 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.610795479 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.822700358 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.553203239 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.850038542 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.870010216 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.488632458 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.734310348 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.537072697 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.533455965 seconds)
  done (took 21.714086827 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.262324141 seconds)
done (took 96.01400779 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.545016723 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.610263289 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.534553731 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.52307343 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.521845829 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.521898909 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.523425361 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.521064446 seconds)
  done (took 13.679298185 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.519997271 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.518847264 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.51797299 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.519390489 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.520011518 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.519686058 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.520198274 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.512718761 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.513546451 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.511940729 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.512936875 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.512122736 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.519030318 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.50651441 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.505640137 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.507229935 seconds)
  done (took 25.61876032 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.507599674 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.506043122 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.506398893 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.503904373 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.504722982 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.505749928 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.506359433 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.504531128 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.503879928 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.504114944 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.503092397 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.502741655 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.502719514 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.503175858 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.503005096 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.508724957 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.497298295 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.496572504 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.497165945 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.496430377 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.495481304 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.494247977 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.497894809 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.488538661 seconds)
  done (took 37.405481941 seconds)
done (took 78.083258634 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.450834006 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.453880553 seconds)
  done (took 6.251674881 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.596553863 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.579540876 seconds)
  done (took 4.523721557 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.482631415 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.481748971 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.481841371 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.479626844 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.479878133 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.474908577 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.477430545 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.475922392 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.475243814 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.479013358 seconds)
  done (took 16.129147918 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.469059718 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.468388683 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.467397844 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.468718404 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.468512302 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.472694817 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.462582427 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.462522225 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.462569996 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.462909075 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.462231405 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.461485849 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.46390117 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.458247798 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.458754427 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.461482707 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.459738491 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.460590205 seconds)
  done (took 27.681243335 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.483073092 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.482381244 seconds)
  done (took 4.287969511 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.637316449 seconds)
    (2/7) benchmarking "second"...
    done (took 1.536089122 seconds)
    (3/7) benchmarking "month"...
    done (took 1.622541945 seconds)
    (4/7) benchmarking "year"...
    done (took 1.60840153 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.53791582 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.483472864 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.53588309 seconds)
  done (took 12.283923256 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.457239779 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.78624293 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.958998487 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.663096892 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.454970776 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.482807416 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.40782756 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.483379626 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.484381149 seconds)
  done (took 16.50213648 seconds)
done (took 89.006802055 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.427227792 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.445223936 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.430829857 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.446530806 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.822151616 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.482137149 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.42855792 seconds)
done (took 17.814011475 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.416855384 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.428551354 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.425668166 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.435657845 seconds)
  done (took 11.036112763 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.428650808 seconds)
    (2/2) benchmarking "read"...
    done (took 1.842808363 seconds)
  done (took 5.602709534 seconds)
done (took 17.969552693 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.47202036 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.467605064 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.466502688 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.469066353 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.468333019 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.466996606 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.467762626 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.467807464 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.467122949 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.467579292 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.4685922 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.468559584 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.467088727 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.470424346 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.468493305 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.469877908 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.466117583 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.466239038 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.467269615 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.468007978 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.47051535 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.467184828 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.468175108 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.468738308 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.468281546 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.469047286 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.46977636 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.468179159 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.467962022 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.468022924 seconds)
  done (took 45.381488038 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.472312925 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.470080588 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.468026625 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.467957553 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.467433952 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.468602537 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.469546721 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.469950614 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.467596054 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.468531857 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.470190309 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.469274829 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.469590023 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.469590652 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.469161616 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.466572321 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.475162449 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.469209457 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.47088502 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.468634315 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.469355356 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.472672607 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.469917159 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.47076168 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.470224321 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.471002284 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.470380835 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.470580512 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.467343577 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.470660131 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.467260257 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.468976467 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.469970727 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.469298994 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.471726747 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.47071356 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.474908087 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.475784665 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.471752867 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.469924982 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.470797928 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.47022041 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.474886087 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.469741997 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.472264175 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.463331545 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.464951164 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.46180216 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.466815298 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.465825718 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.464629126 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.463157431 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.453720337 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.456159194 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.45606023 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.457310319 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.454983277 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.458544484 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.451693054 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.45726136 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.453131575 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.45170814 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.456012039 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.458300598 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.458842777 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.45044967 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.449160539 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.449033777 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.450458819 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.449879765 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.448105936 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.449434597 seconds)
  done (took 106.817109986 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.449709213 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.449649359 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.450690203 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.452172654 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.449735822 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.45066506 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.450627625 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.449580356 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.449889962 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.451189289 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.449646635 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.450758647 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.449765364 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.451393156 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.452924845 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.450432768 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.451743479 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.450322559 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.452035556 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.450710248 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.451816743 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.452325467 seconds)
  done (took 33.235957241 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.4509644 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.45270701 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.451993441 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.45286541 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.456844128 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.453664185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.452222032 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.452415073 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.453939779 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.452084165 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.451142076 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.451471517 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.45631487 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.45369694 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.451582495 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.453132623 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.450963003 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.456402452 seconds)
  done (took 27.474440291 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.454016604 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.451156813 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.45226233 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.452800598 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.452133683 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.452163575 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.452791029 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.452203315 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.453112718 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.455446255 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.4527728 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.451929187 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.453098261 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.452977715 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.454316084 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.452594845 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.454177797 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.453907721 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.453710559 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.452877492 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.454846458 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.453147219 seconds)
  done (took 33.289582706 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.45297967 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.45424694 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.453215314 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.453018082 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.455129454 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.455460991 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.45485861 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.454573518 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.455155575 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.454875163 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.455631404 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.455135601 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.456230503 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.454429645 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.454897442 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.452715321 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.458930636 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.458028915 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.454223334 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.454767887 seconds)
  done (took 30.421069537 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.455816763 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.455446464 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.457311296 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.456927728 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.45695769 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.457101633 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.45752969 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.458688986 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.458397328 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.456641239 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.457619366 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.456605829 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.456610369 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.457198083 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.455635664 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.458794656 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.456362084 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.456659048 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.456623989 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.456890922 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.458445658 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.460162008 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.458748979 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.457055957 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.456890363 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.456872903 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.458046655 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.457817087 seconds)
  done (took 42.126890299 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.483108362 seconds)
    (2/2) benchmarking "in"...
    done (took 1.482612629 seconds)
  done (took 4.289101778 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.456674483 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.456762693 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.456996871 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.456449106 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.456884356 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.456979969 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.456820522 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.4577103 seconds)
  done (took 12.979998155 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.450120647 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.460821729 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.458708122 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.457379531 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.45705463 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.444888348 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.46600025 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.462962294 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.4496048 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.451699409 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.452047429 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.451604915 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.458087163 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.453204978 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.450497441 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.456970052 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.461624065 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.45943503 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.460849386 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.460614649 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.461020148 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.456070636 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.45855908 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.463493437 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.451106736 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.469093172 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.46811274 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.463033323 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.452413257 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.465306587 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.452647156 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.46466258 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.460824382 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.461423551 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.460748326 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.460106415 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.470746105 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.461144814 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.46955608 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.469791166 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.462115259 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.461559113 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.458333005 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.45889851 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.462823939 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.464785501 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.463641571 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.46137571 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.45527675 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.457973741 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.464710911 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.451257105 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.465589165 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.467444429 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.461212909 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.472713325 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.469275179 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.455654661 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.45815463 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.474122582 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.47932024 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.466579723 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.465262378 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.471380474 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.468600581 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.464194784 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.4759189 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.47076168 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.466885209 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.464351228 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.473824081 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.483834712 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.473251871 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.468752276 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.465747704 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.464750651 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.458110909 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.469458581 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.474445389 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.474358157 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.472767312 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.467299787 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.470963312 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.465888784 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.458614605 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.469691642 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.46824034 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.468338048 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.458849271 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.479760031 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.472173452 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.472082518 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.459159297 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.462773514 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.459880338 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.469253806 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.459143862 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.468211565 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.467191254 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.469286074 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.467916277 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.460753424 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.472221084 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.474090106 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.47143474 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.479463065 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.474718747 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.463049875 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.481899828 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.475278036 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.468411102 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.463159805 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.468576206 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.470904365 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.461853215 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.469130746 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.473783713 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.469283838 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.474384976 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.470157623 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.473837909 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.476604602 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.47292208 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.472840506 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.462824287 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.474909764 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.469904379 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.471407712 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.472728271 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.47173422 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.467821083 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.468542613 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.477811389 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.462599539 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.473676506 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.465719209 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.471960366 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.469218816 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.470910233 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.472480963 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.469972334 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.467815356 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.472402881 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.479598348 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.474473186 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.472445903 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.486042255 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.468121889 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.472208023 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.471346601 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.476765027 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.469466054 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.464752117 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.475323852 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.458817633 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.468130619 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.463082422 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.473611344 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.47178716 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.469430924 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.470725852 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.461616174 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.46602232 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.47603337 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.480321835 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.47178688 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.479310393 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.470312182 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.471168505 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.462448472 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.473018322 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.461961399 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.466811387 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.475042182 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.472329407 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.47308942 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.48053499 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.481172361 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.473358589 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.472094112 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.465825857 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.472908321 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.478949453 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.481421136 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.479280361 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.474284334 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.472638385 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.465564231 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.466651032 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.473080131 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.466265368 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.476331173 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.485651423 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.476612214 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.4665022 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.475967231 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.461917958 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.473981503 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.477250704 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.479582355 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.473673922 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.472940099 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.46512458 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.475720411 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.470195058 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.477474265 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.461385348 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.477469936 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.47403109 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.474445737 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.473836792 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.467925076 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.469728937 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.476731364 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.475083109 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.475912056 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.466832829 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.478252088 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.46517319 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.471232689 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.478771637 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.475636392 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.485045759 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.481562425 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.476022824 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.482732546 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.47341956 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.468392454 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.47768365 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.477536634 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.469769096 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.489215493 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.476095458 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.472106474 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.488057455 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.481143866 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.466936962 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.482272362 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.482903797 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.474931205 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.469289705 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.480413466 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.478059814 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.477281923 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.478560787 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.470317699 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.482313498 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.48764155 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.486555448 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.470215242 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.481267206 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.474859687 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.482221167 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.476796665 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.484576286 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.480665383 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.480323231 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.485532902 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.479655129 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.473586969 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.481708254 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.479722107 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.480726844 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.467242587 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.485703385 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.483268648 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.47908285 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.484715619 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.471109769 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.4822688 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.468928625 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.481022552 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.470153921 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.496408657 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.492179627 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.490373322 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.482451225 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.483569314 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.488221512 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.478271364 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.471188271 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.473933452 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.475424354 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.472777021 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.474641503 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.48038099 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.47303669 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.482667663 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.482546698 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.479061897 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.482441447 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.479682158 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.473425776 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.487277118 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.481548317 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.4835052 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.46799827 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.480745561 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.478275415 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.486410876 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.476980697 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.4745241 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.496539888 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.481721593 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.478606253 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.477333745 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.475265396 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.472882411 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.482258812 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.486943347 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.477633922 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.4848428 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.474656379 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.479860253 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.475562919 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.492804916 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.488905049 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.473802011 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.486938597 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.484939949 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.473903211 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.474942938 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.48446021 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.496394689 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.493283888 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.475829713 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.48639649 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.480687453 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.479618952 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.485878337 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.483733511 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.482474622 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.483080285 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.493804484 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.484212133 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.480386717 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.490890147 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.490486185 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.482333263 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.484026286 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.472001153 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.490596674 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.492273633 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.482827111 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.483042921 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.477524971 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.486945791 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.483860203 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.484326393 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.483523079 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.481103917 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.492559773 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.484815632 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.489157105 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.48627329 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.497546371 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.489857265 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.497553844 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.498005927 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.481409962 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.493121367 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.481245765 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.473354956 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.477895339 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.484038858 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.488190992 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.474295369 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.491350611 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.487964845 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.490147176 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.499865451 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.490037804 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.479119587 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.49176037 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.502934766 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.478036418 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.487871118 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.485954045 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.478785466 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.488981315 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.491683964 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.475586037 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.483775835 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.485990851 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.488833811 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.481439854 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.492341519 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.479299917 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.49271985 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.486816864 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.487317765 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.487442991 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.489885341 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.477497593 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.49119277 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.495320948 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.494908885 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.485651003 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.490732376 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.479802914 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.502560556 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.495786581 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.486855696 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.494225627 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.486917156 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.483101169 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.488127855 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.492905907 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.480444895 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.491515297 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.482192464 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.484333866 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.480001751 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.493844643 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.486515708 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.490626706 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.480677675 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.482724723 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.491476814 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.489678052 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.489681964 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.491536319 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.494767386 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.480234602 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.478997294 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.490023277 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.485259194 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.494494935 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.480306539 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.486058877 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.484871854 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.493889411 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.490469563 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.4917559 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.482122203 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.486081086 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.504872372 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.492714192 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.486653017 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.483916286 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.493605367 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.485351594 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.489229671 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.487005575 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.483777511 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.484937016 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.494620929 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.484226241 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.483472165 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.483452679 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.49385903 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.500864042 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.489981932 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.484730286 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.507149757 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.500809286 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.499299667 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.483097466 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.486644147 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.487130871 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.492419671 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.49098597 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.484744743 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.504940467 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.49454145 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.496203812 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.492307716 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.490643468 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.484765556 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.493605926 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.492498243 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.49514418 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.498056562 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.495526631 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.49973827 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.493499836 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.492528833 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.483160184 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.484032012 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.489036281 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.487430419 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.494747202 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.497768885 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.493510313 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.493841151 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.499764321 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.493392491 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.493160827 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.494633152 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.483079099 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.495445755 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.48872849 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.49900333 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.492768319 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.487384674 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.498153152 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.494011634 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.487023384 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.489711087 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.497726631 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.495753475 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.487011582 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.495026567 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.504469738 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.50288413 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.4935379 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.489508548 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.4929307 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.498109152 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.493940326 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.49587032 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.489601995 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.512544787 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.505869706 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.48906715 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.494526504 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.505217109 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.503906188 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.495981926 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.496808848 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.498493418 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.493735062 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.499698879 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.496594364 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.507877154 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.499286257 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.489785677 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.499130231 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.49118816 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.491366745 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.504510245 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.504436424 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.499516454 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.492642744 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.510692875 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.504166067 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.500594803 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.515998997 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.502349776 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.500493184 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.504127515 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.487170959 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.499705305 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.501343362 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.504077438 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.499043349 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.50138855 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.499491172 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.491797525 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.506504703 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.507622443 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.508182011 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.528746009 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.491553849 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.487915957 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.501342245 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.501995121 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.499996124 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.500086359 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.499970143 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.499642447 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.494823818 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.518481226 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.509208818 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.50507149 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.500217381 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.501011266 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.510155656 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.503134302 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.497499368 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.504634493 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.502384416 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.503159655 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.506112265 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.508020398 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.50532243 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.495178821 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.495892599 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.494909443 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.508685986 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.514187384 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.517626997 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.510947656 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.500238683 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.505295331 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.502133128 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.495038231 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.505832341 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.500487108 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.497398028 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.499696016 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.504969172 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.502601274 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.500491298 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.499784086 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.504439705 seconds)
  done (took 884.292865268 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.503567457 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.504630093 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.503016201 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.503619071 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.502596314 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.506491713 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.504902474 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.505076938 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.505673591 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.505571623 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.502814219 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.507266322 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.501866055 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.505129388 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.506555897 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.505771788 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.503523388 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.505474125 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.506349166 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.506414677 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.505888074 seconds)
  done (took 32.963259505 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.502727337 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.507555675 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.505947509 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.503917292 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.503355979 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.50409462 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.507517681 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.509846957 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.505473217 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.507637669 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.50761497 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.504607115 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.502720563 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.508058323 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.508504748 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.503948233 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.502648975 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.509285853 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.508201078 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.505693286 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.509451656 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.509255332 seconds)
  done (took 34.503337192 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.503427496 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.507361027 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.497136263 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.513721962 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.512941974 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.504112289 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.508676907 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.508116081 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.515770825 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.498868815 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.496321494 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.498929927 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.500390029 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.511332971 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.51003525 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.514077454 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.509982659 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.509651751 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.505941922 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.510707402 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.518747461 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.516060947 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.503870708 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.499862657 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.516096704 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.509850729 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.511218291 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.507004417 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.499455133 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.509525478 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.50593864 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.50532697 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.519270362 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.506445128 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.500412378 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.513154012 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.509184443 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.507989808 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.509063199 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.516373276 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.520750439 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.507704856 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.518116306 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.517554572 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.51158377 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.504665852 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.512539828 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.511658152 seconds)
  done (took 73.791898609 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.509817136 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.510445358 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.509194291 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.513143606 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.513324635 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.512118126 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.510927402 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.514040857 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.511376621 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.51019777 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.514672152 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.511339396 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.513535904 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.511628399 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.512180425 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.511983402 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.514495244 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.515538952 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.511614291 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.513135085 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.50999963 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.514217415 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.522099144 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.513993854 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.517364114 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.516781708 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.514182984 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.517472858 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.519520534 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.511062755 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.511544101 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.512288749 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.51814494 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.512001561 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.512509447 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.517185251 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.521744979 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.51531113 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.516188685 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.518021671 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.518883581 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.515907924 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.513096952 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.511717866 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.512709123 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.517113105 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.513412984 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.515715651 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.517071131 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.513006368 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.517711435 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.518919689 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.512211155 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.516112629 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.512319269 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.519028293 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.518613994 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.518459784 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.516422444 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.516642864 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.515886203 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.517213747 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.518509441 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.513007835 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.518480388 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.520869728 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.518416273 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.518839232 seconds)
  done (took 104.385927989 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.516479016 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.517686432 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.517028737 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.515434191 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.513893562 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.515751339 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.518790762 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.515311619 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.515397733 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.517694185 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.51884915 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.523164364 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.52042868 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.514840889 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.523687125 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.518305296 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.517019728 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.519185366 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.518331696 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.514161194 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.518289441 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.517498559 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.516642375 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.515431257 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.516627289 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.517897842 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.517822622 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.519011181 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.520775722 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.521644827 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.518169664 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.520218877 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.516585524 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.518178813 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.520290814 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.520512559 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.519253391 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.51805687 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.518756191 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.52185875 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.524252909 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.521587766 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.522849169 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.519607067 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.516956801 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.52106675 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.521650554 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.521142179 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.521382433 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.518964527 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.520578769 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.522900014 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.522447443 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.521690852 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.522907138 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.520017316 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.518518661 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.521965957 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.521760624 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.519553988 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.52211402 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.520681994 seconds)
  done (took 95.565592736 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.519021588 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.523604224 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.522592014 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.520988737 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.520313093 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.523663309 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.523049404 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.526493069 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.524267506 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.52478943 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.533513445 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.524228884 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.52545851 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.528718351 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.52552437 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.526426719 seconds)
  done (took 25.773564641 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.524603722 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.522312719 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.526543564 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.524355227 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.530566771 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.532942213 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.522421532 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.528139088 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.532226619 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.528694676 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.528012676 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.527423564 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.52851651 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.526898218 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.526067456 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.533301337 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.527948771 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.529731958 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.530481076 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.530666155 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.527845894 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.526556834 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.527281437 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.529189921 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.529436669 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.527102643 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.529055755 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.527886681 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.529384358 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.532043426 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.528541723 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.532254835 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.531045254 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.529368015 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.531770974 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.528043895 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.527957501 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.53097178 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.530297114 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.53228787 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.52967399 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.532721654 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.531283133 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.533616111 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.534754035 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.532192117 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.529796002 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.530279723 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.531975889 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.535203045 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.529495545 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.532916092 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.530772104 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.531477781 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.533741895 seconds)
  done (took 85.513858992 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.535660715 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.536018791 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.536182429 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.537758328 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.53794229 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.532673952 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.535555673 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.537853452 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.536001052 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.534479699 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.533464207 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.534086632 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.535783077 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.534585928 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.534160804 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.532478118 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.533838975 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.534734201 seconds)
  done (took 29.021384005 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.536410042 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.538777732 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.536486658 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.533729185 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.531496009 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.532852257 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.531282714 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.532337946 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.533429146 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.532763559 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.537866931 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.534292664 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.533118283 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.53444841 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.532406461 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.534159756 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.533432638 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.533952328 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.531885305 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.533743921 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.534389115 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.536031921 seconds)
  done (took 35.139721819 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.521860776 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.520529252 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.522756839 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.547673415 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.534994499 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.521535874 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.523735944 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.521571004 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.549632464 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.557984713 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.553388807 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.52578411 seconds)
  done (took 19.791098715 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.536764696 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.53500735 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.535281268 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.537341306 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.533975305 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.536249408 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.536486798 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.536662379 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.533441928 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.535263737 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.532959533 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.535994905 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.536218607 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.53284185 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.53778836 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.53324239 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.544760335 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.533122753 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.535670772 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.53556608 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.541430094 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.534522651 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.539732601 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.53899836 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.539256983 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.536390347 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.539725268 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.535091718 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.535720499 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.544062273 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.532664454 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.535633547 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.535094442 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.537472468 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.534446035 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.532626461 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.541399923 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.536112099 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.533818791 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.537987198 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.537811547 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.539591242 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.536483585 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.537292347 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.53530648 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.541725662 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.544534888 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.538198328 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.540054011 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.535488766 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.537902131 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.538075687 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.538146715 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.540994913 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.539718005 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.536425477 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.538436068 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.539204881 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.537136531 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.534900423 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.540125458 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.534076435 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.536584854 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.538774798 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.536494062 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.537929718 seconds)
  done (took 102.838555171 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.54495226 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.53794662 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.534998969 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.539159833 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.53929749 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.535862836 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.536814982 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.53842643 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.535996232 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.53833375 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.539892957 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.53696088 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.536517458 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.538178214 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.535615248 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.539011002 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.535845934 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.537007115 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.541146957 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.543838012 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.541196544 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.537333973 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.539364188 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.539866417 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.538623871 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.542177675 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.538609484 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.541346634 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.541389446 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.545153473 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.542508932 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.544068698 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.544164101 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.544187498 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.543063053 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.543000265 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.542890964 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.545884012 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.546036685 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.540725186 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.540157656 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.537869306 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.536967306 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.541984843 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.545584882 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.541707783 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.537350315 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.547400685 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.54577499 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.543764678 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.545337924 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.547743956 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.544769066 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.54226337 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.542076824 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.549178844 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.542844938 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.543078628 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.541508526 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.538283674 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.53913455 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.545137688 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.547342996 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.547278044 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.543696793 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.54221518 seconds)
  done (took 103.12827665 seconds)
done (took 1964.057500798 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.506894068 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.511151104 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.526041754 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 11.794317909 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.525688288 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.20630752 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.208611375 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.524798719 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.530639056 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.528628815 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.525539945 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.509115999 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.869214095 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.528795666 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.533745527 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.505421046 seconds)
  done (took 58.731538977 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.565742264 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.563694797 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.682686045 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.550449188 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.584203271 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.788748346 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.624208707 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.558273786 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.732329928 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.561898758 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.534142366 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.578554089 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.550464274 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.53403907 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.573498627 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.789736181 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.875664077 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.521868808 seconds)
  done (took 33.569575574 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.04910813 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.532325235 seconds)
  done (took 5.991513796 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.581119289 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.552858293 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.567802581 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.550554648 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.524034586 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.520169429 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.550387029 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.530128936 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.547491479 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.680698642 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.550141048 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.576412126 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.553446915 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.553188503 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.560051945 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.611757962 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.745451639 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.569068385 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.560238003 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.571550404 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.549863499 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.788797514 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.59857507 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.563519914 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.6864991 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.533617927 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.563931489 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.576756443 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.763992893 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.564502371 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.554992084 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.553882306 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.561521685 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.533181908 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.150523052 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.522697614 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.608085357 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.568063718 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.563634384 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.752535082 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.548882299 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.568285324 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.535456639 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.149717293 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.732305344 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.81587016 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.526951926 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.561774231 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.557091653 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.74843498 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.554321048 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.56215738 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.657885057 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.524927716 seconds)
  done (took 98.475079201 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.57804313 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.53145585 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.790328574 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.547252972 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.523957411 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.5259907 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.527932987 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.874081613 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.53403027 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.525120618 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.92100448 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.250055053 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.52734625 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.575169022 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.572922227 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.56351705 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.530352218 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.525405151 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.526231792 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.527103272 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.186249592 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.536995312 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.526677938 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.727236263 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.598197927 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.166877157 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.524513557 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.526451722 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.525513545 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.526012002 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.217096043 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.538799731 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.602876455 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.527306301 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.900877968 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.006966878 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966832445 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.529534587 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.570434899 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.528221571 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.529923253 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.170180789 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.980092441 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.527281786 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.527352117 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.16556016 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.52763672 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.538161312 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.535690816 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.889365959 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.527762644 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.531027794 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.531155952 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.528804606 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.530447413 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.600098728 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.58888145 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.164775911 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.528337437 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.526599088 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.534830372 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.531285228 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.531602377 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.532575546 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.532733388 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.985684283 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.719200675 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.53955716 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.989298429 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.210110727 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.531233127 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.289569854 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.534373471 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.572185401 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.646398401 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.533679737 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.528840015 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.163532527 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.539164373 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.526615849 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.976382053 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.532535248 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.916899908 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.551997359 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.531034079 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.21998831 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.540345599 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.6014665 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.532587489 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.535644093 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.532912879 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.539495211 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.903329118 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.595264035 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.530589958 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.533724575 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.574799631 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.534603807 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.534186225 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.536691642 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.291244438 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.529758638 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.524746617 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.524335043 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.512863054 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.514754984 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.517923892 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.520983639 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.890912036 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.521011855 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.526685412 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.526289621 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.517940375 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.538213833 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.727055934 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.523753195 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.90704607 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.523001214 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.5308754 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.518653944 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.522611779 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.538545509 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.516171365 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.521156567 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.52040242 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.965290349 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.545246501 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.519731036 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.524828541 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.523845735 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.518829455 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.521143435 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.562665127 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.523875348 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.439039769 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.544782057 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.557446796 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.524798509 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.533345616 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.522522453 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.527894365 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.525405151 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.929640914 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.900434825 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.738821396 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.521718229 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.522868236 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.422253975 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.56814215 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.786003583 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.541047433 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.522960148 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.915273653 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.725471374 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.526861481 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.522055493 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.528070504 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.894015154 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.523623919 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.939863931 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.232824091 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.524281126 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.536290823 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.433270391 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.365453596 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.527630504 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.530686619 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.903666241 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.537365471 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.528573361 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.530627603 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.526181996 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.52381277 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.534581387 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.531160562 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.524008325 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.527455272 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.599612214 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.807130292 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.540945954 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.53387641 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.15198064 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.535688512 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.520287601 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.526325729 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.527045303 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.519483937 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.555568484 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.524582141 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.554554808 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.519831327 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.523961392 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.218775725 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.514223491 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.529493939 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.783053208 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.36033409 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.513654215 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.510500253 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.510925935 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.555200351 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.164187709 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.513635079 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.901792261 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.516998286 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.577711104 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.50791403 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.534747051 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.164337867 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.524652332 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.508790399 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.338428092 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.502743121 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.290494762 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.510617307 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.514309466 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.26631976 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.511340653 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.50812083 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.507233567 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.51045758 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.901889968 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.507911655 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.535824563 seconds)
  done (took 546.108483851 seconds)
done (took 744.273290918 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.509162164 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.510521415 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.514783619 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.509536862 seconds)
  done (took 11.443734919 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.554996763 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.539248881 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.550876896 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.537579046 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.550390032 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.538158379 seconds)
  done (took 10.680290559 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.511784146 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.510175561 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.514025632 seconds)
  done (took 8.930484666 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.79647803 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.521238071 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.957332074 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.532425038 seconds)
  done (took 10.208766841 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.55222127 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.553336007 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.548726482 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.553006706 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.54847254 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.550428375 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.548914635 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.548722991 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.551535638 seconds)
  done (took 15.363872459 seconds)
done (took 58.020119599 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.648325181 seconds)
    (2/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.528957279 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.717589437 seconds)
    (4/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.858692994 seconds)
    (5/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.655952199 seconds)
    (6/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.503754214 seconds)
    (7/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.90271214 seconds)
    (8/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.86446377 seconds)
    (9/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.757183299 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.657630346 seconds)
    (11/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.665694639 seconds)
    (12/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.60486742 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.591165608 seconds)
    (14/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.77161998 seconds)
    (15/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.582041683 seconds)
    (16/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.510381872 seconds)
    (17/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.918841216 seconds)
    (18/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.504581623 seconds)
    (19/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.514286838 seconds)
    (20/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.656315234 seconds)
    (21/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.518821283 seconds)
    (22/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.515287175 seconds)
    (23/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.710061454 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.687089049 seconds)
    (25/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.773405682 seconds)
    (26/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.662501146 seconds)
    (27/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.506484728 seconds)
    (28/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.547428133 seconds)
    (29/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.590455881 seconds)
    (30/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.957305675 seconds)
    (31/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.724450086 seconds)
    (32/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.510421333 seconds)
    (33/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.511250418 seconds)
    (34/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.503618652 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.843840337 seconds)
    (36/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.652459926 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.755386911 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.676598051 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.844697849 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.675359555 seconds)
    (41/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.50868396 seconds)
    (42/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.528167933 seconds)
    (43/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.762815998 seconds)
    (44/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.616869366 seconds)
    (45/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.709667549 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.525135564 seconds)
    (47/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.770252139 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.707290012 seconds)
    (49/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.976721481 seconds)
    (50/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.76672683 seconds)
    (51/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.62228856 seconds)
    (52/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.697637388 seconds)
    (53/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.505392271 seconds)
    (54/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.180435515 seconds)
    (55/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.013716967 seconds)
    (56/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.594182403 seconds)
    (57/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.509018011 seconds)
    (58/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.830225757 seconds)
    (59/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.708163657 seconds)
    (60/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.867748755 seconds)
    (61/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.013298409 seconds)
    (62/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.925993242 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.725546594 seconds)
    (64/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.696500233 seconds)
    (65/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.882709456 seconds)
    (66/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.508944608 seconds)
    (67/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.097611016 seconds)
    (68/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.510980482 seconds)
    (69/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.604125357 seconds)
    (70/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.508519694 seconds)
    (71/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.517666807 seconds)
    (72/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.184998456 seconds)
    (73/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.13165934 seconds)
    (74/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.752039418 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.691377374 seconds)
    (76/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.540096125 seconds)
    (77/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.515986495 seconds)
    (78/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.75483719 seconds)
    (79/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.508887269 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.685642985 seconds)
    (81/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.170063735 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.766363935 seconds)
    (83/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.548692539 seconds)
    (84/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.747310813 seconds)
    (85/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.957280741 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.690647463 seconds)
    (87/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.708381212 seconds)
    (88/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.520489791 seconds)
    (89/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.5956622 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.710008793 seconds)
    (91/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.594972657 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.69649688 seconds)
    (93/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.515893885 seconds)
    (94/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.718351684 seconds)
    (95/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.664027947 seconds)
    (96/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.72810495 seconds)
    (97/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.605985929 seconds)
    (98/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.632882366 seconds)
    (99/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.682127175 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.716092947 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.592723628 seconds)
    (102/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.722637774 seconds)
    (103/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.524783005 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.698800595 seconds)
    (105/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.600461344 seconds)
    (106/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.921651978 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.7647029 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.734072049 seconds)
    (109/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.839038749 seconds)
    (110/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.564515571 seconds)
    (111/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.909050445 seconds)
    (112/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.825476341 seconds)
    (113/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.521672973 seconds)
    (114/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.521557176 seconds)
    (115/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.687543786 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.597454047 seconds)
    (117/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.741830857 seconds)
    (118/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.100182921 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.773602704 seconds)
    (120/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.597359831 seconds)
    (121/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.520807849 seconds)
    (122/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.782281322 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.70062436 seconds)
    (124/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.518220858 seconds)
    (125/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.1001091 seconds)
    (126/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.828322163 seconds)
    (127/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.828039865 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.742272254 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.694183946 seconds)
    (130/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.697952163 seconds)
    (131/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.520130947 seconds)
    (132/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.727274188 seconds)
    (133/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.79866504 seconds)
    (134/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.78815686 seconds)
    (135/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.681865271 seconds)
    (136/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.665803103 seconds)
    (137/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.935172203 seconds)
    (138/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.91381886 seconds)
    (139/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.140290326 seconds)
    (140/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.515350242 seconds)
    (141/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.752894974 seconds)
    (142/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.958056678 seconds)
    (143/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.78299049 seconds)
    (144/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.356627054 seconds)
    (145/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.729260823 seconds)
    (146/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.966476533 seconds)
    (147/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.806378451 seconds)
    (148/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.895160272 seconds)
    (149/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.72575514 seconds)
    (150/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.025963079 seconds)
    (151/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.02369156 seconds)
    (152/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.517107448 seconds)
    (153/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.176818435 seconds)
    (154/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.524893214 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.550447931 seconds)
    (156/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.8321649 seconds)
    (157/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.140047628 seconds)
    (158/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.896051516 seconds)
    (159/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.359023239 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.657896092 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.555238763 seconds)
    (162/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.524451259 seconds)
    (163/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.884294643 seconds)
    (164/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.528071761 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.605928589 seconds)
    (166/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.983489521 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.726487844 seconds)
    (168/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.777064877 seconds)
    (169/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.667493681 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.71884176 seconds)
    (171/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.700178563 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.769808857 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.861386703 seconds)
    (174/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.606845745 seconds)
    (175/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.929813351 seconds)
    (176/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.607703466 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.831033192 seconds)
    (178/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.891315788 seconds)
    (179/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.537777605 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.731091502 seconds)
    (181/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.518965855 seconds)
    (182/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.522272141 seconds)
    (183/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.522050116 seconds)
    (184/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.601640264 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.718751456 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.764105198 seconds)
    (187/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.519563766 seconds)
    (188/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.52253223 seconds)
    (189/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.599564232 seconds)
    (190/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.521471341 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.729211794 seconds)
    (192/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.988111547 seconds)
  done (took 380.105080621 seconds)
done (took 381.505268034 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.598290327 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.722195259 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.567960772 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.563870447 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.573056462 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.537186886 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.600238969 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.573675745 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.589548853 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.590327792 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.539098932 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.58039713 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.593214403 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.579414184 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.609355281 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.570239763 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.573862011 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.579861727 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.595136435 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.591356345 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.574950977 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.583386966 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.602116512 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.566532238 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.581530096 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.588975036 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.580763797 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.539460849 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.577194349 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.591815691 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.545048501 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.581979245 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.588654465 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.5786504 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.5714029 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.576204209 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.578885834 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.73065695 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.601961115 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.580240336 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.577519949 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.592351793 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.581553702 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.579788673 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.585666166 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.608217009 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.587735564 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.597530245 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.542617744 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.559469678 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.605656906 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.590833024 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.575224266 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.544282551 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.55777917 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.591895241 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.576574508 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.597130403 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.582829353 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.58246569 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.612010787 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.603731382 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.587761265 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.590522859 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.578379765 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.598331673 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.578040406 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.595576225 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.582369238 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.582756857 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.57978106 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.578305244 seconds)
done (took 123.558529059 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.747258014 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.544658297 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.7826959 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.578164863 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.797140055 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.74792409 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.579704374 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.581681511 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.575658399 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.447113281 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.579873111 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.578361885 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.544728209 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.579846012 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.748444058 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.582827118 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.582291435 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.340769591 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.574476754 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.758277572 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.551766883 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.581129835 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.58433988 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.436153857 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.544543409 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.554909811 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.764274494 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.581565365 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.340359134 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.553453271 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.539717935 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.341912753 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.76535864 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.598120054 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.589473844 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.591332739 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.800232488 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.584440731 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.749454452 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.753730974 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.79029973 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.623281914 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.553887055 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.551841124 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.583289467 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.581271823 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.58791778 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.611458552 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.538754614 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.585317658 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.347417504 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.590435627 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.590691735 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.582727384 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.58595922 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.602249559 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.585326039 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.580350546 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.764048766 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.581983296 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.754836002 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.441036252 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.450710317 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.582282985 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.548602026 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.583220953 seconds)
  done (took 125.664948738 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.698720277 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.703798367 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.741262838 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.575969961 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.670345929 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.743036597 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.572395065 seconds)
  done (took 13.13672437 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.591353761 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.582979022 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.668873185 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.672292545 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.584169467 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.811840319 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.584176871 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.597800391 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.584716884 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.670955434 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.586494693 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.587399906 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.597699191 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.551030896 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.666685617 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.597792079 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.751454357 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.578103542 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.586250948 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.787994409 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.587167683 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.591991621 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.665881045 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.59972787 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.588676325 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.589483481 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.395091932 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.588215164 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.581752121 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.584118344 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.588451646 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.695503807 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.588302535 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.547506775 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.587227329 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.750421335 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.587096376 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.585682998 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.586022147 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.556556458 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.583668356 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.584147188 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.586436725 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.584483823 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.586225804 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.610316158 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.589983963 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.585074471 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.590656256 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.585823169 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.670493573 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.588426783 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.588968402 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.589314605 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.675289993 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.603466754 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.583333886 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.586149048 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.590368719 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.584449392 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.789689318 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.665424981 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.588681703 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.667870405 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.589005697 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.585680204 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.586685779 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.590853837 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.727724315 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.592822314 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.671830056 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.593234237 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.820568664 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.610589517 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.589751532 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.58228913 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.585644795 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.587773767 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.554982446 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.596474104 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.583354909 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.58391748 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.597174403 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.593760352 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.58535635 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.804166298 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.753863043 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.588610675 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.602327084 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.594672898 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.588035811 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.670049593 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.588348909 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.587294865 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.6700637 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.754128091 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.673120933 seconds)
  done (took 163.265324805 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.601469502 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.599736601 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.584941214 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.617315721 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.580318419 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.581091213 seconds)
  done (took 10.999169238 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.588485449 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.596111559 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.594363781 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.5905135 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.588336757 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.587869519 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.593554041 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.584211931 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.589421602 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.594090352 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.596098708 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.594202657 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.595894422 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.589956446 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.594603126 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.591016777 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.588761811 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.594707399 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.600079941 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.597933229 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.558950339 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.588878236 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.597667273 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.585870243 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.594061647 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.59801173 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.619131175 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.593853171 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.593463597 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.600472868 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.592954104 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.593785914 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.580604489 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.590454485 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.599853934 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.586050782 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.600437318 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.597491204 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.589412871 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.596411108 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.59863213 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.595608283 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.595247343 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.599653559 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.589423347 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.591583259 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.603546372 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.612821225 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.602186772 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.598939363 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.599996899 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.599119483 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.599559134 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.592664611 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.593547476 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.589773812 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.602464462 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.59856208 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.595682594 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.581320642 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.601947287 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.599413445 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.585243627 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.594940111 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.592631298 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.599296252 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.587648471 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.595091736 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.595313971 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.594572256 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.594896949 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.595461686 seconds)
  done (took 117.226250073 seconds)
done (took 431.715298583 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.891181972 seconds)
  done (took 4.340957394 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.582481683 seconds)
  done (took 4.026128812 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.535015592 seconds)
  done (took 22.983467242 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.63507643 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.566406873 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.565344588 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.564994962 seconds)
  done (took 11.7743836 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.04048783 seconds)
  done (took 4.483156413 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.573250551 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.573292316 seconds)
  done (took 6.59873375 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.86798824 seconds)
  done (took 4.307139337 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.266244192 seconds)
  done (took 4.707585651 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.595540606 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.579856768 seconds)
  done (took 6.631124322 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.549752032 seconds)
  done (took 3.991106341 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.48495287 seconds)
  done (took 17.9294536 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.573863758 seconds)
  done (took 4.023446208 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.606190075 seconds)
  done (took 4.052537268 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.117162245 seconds)
  done (took 6.562926543 seconds)
done (took 107.861879366 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.56563408 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.57004763 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.564459699 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.560971755 seconds)
  done (took 11.705870838 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.718433887 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.715259532 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.716278306 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.710217898 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.706344152 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.721166986 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.635649338 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.632153851 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.697414385 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.693002092 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.725896708 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.709596101 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.724101717 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.634747548 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.695795534 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.725264714 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.698675509 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.727151965 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.635772887 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.710991321 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.601091871 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.708540241 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.697462087 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.603023471 seconds)
  done (took 41.992825346 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.152296183 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.723086365 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.804909549 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.683506052 seconds)
  done (took 8.812796446 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.768597739 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.766943478 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.776201639 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.81557997 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.870001835 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.779116953 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.636953414 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.625444269 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.619722732 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.772958558 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.844602097 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.765925332 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.984003692 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.603795497 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.988167839 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.604107617 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.604524151 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.770135434 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.820006301 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.848605888 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.605940392 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.764477592 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.778336897 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.763583973 seconds)
  done (took 43.628038316 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.6212723 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.62669366 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.603467383 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.629118549 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.606449815 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.602457198 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.607283231 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.618683424 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.605504652 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.604938729 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.608002177 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.627608371 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.604857922 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.606414195 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.621425951 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.60846299 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.609137796 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.61982896 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.623679729 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.602582913 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.606023643 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.622249939 seconds)
  done (took 36.932866255 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.571135827 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.570889986 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.008587265 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.911126338 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.570931611 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.569666087 seconds)
  done (took 15.654393482 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.682802681 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.861835712 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.601508055 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.973717468 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.100782858 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.60046316 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.600648239 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.904158273 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.21033373 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.169748611 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.660391591 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.686681945 seconds)
  done (took 23.502240265 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.737449784 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.581493079 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.59787093 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.588085887 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.584974738 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.582154476 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.606332621 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.134734801 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.614181315 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93648934 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.580012165 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.744526591 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912808675 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.580732508 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.585664909 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.553920439 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899120761 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195894673 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.585309207 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.577841568 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.640838964 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.579252921 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.593366796 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.830030272 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.586641989 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.575120622 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.923419591 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.577695739 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950642607 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89986485 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901381524 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.587739335 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.942983951 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078215463 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.757351755 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82619822 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.581074241 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.582428953 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.564870365 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.584136223 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.580400832 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.583181493 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896034266 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.58632037 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.582046013 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.592622358 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139946148 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.616102788 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.583893664 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.58373701 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910535411 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.744905829 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.612543397 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.580254304 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.628352251 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.583983829 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.612927454 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774127003 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.300587316 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587634433 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.596395114 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.586647995 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.581002304 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.58178767 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.32183073 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.611436832 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.605780316 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613079778 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586124255 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.586719163 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646727562 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586677748 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.63394535 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.577847295 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439533547 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.587523386 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.58591969 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238770587 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.603536246 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.585964528 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890111096 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.585890287 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5812068 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.587727532 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.586701633 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.448141485 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.619515233 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.558537787 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649247017 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.145362479 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.835525453 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.637544271 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.650422795 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.886820943 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.557212478 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.587024509 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.586032275 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611661371 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.634983332 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.150452582 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.591284339 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.611454292 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924184213 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.885817673 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597977647 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.574079288 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151119986 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.608162951 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.643059498 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.599002918 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.833213358 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.297643996 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917453889 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.583744065 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.656244834 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.589011983 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.518946579 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.59536279 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.633145039 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.585808083 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.951683032 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.551731543 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595014073 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.745476293 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.600668773 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.589610801 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.588985303 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.593060681 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.591130688 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.826128379 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.590261792 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.917624511 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.591988409 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.591933653 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.584405112 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.592633323 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.59062811 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.89556137 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586703519 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945058097 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.588356453 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.589257544 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.584864039 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.893999579 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.598087579 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.613676502 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017433223 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595461476 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.604892215 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914991005 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.656212917 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789190441 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.650887309 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.599911553 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.923681916 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.618306351 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.614592959 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.591408377 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.588178008 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603103369 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.62341503 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.581158889 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296547138 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.591616922 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.594371742 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.592246263 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.631158125 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.743287886 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621716141 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.837666089 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.605956455 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.591205628 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.616063467 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.60192361 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893358856 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916261488 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.607554075 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.835485085 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.145933013 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.309891922 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638438938 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.5952354 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.592174745 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.589667304 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.591474097 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.593948574 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.591070764 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84001534 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92694497 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.599858893 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.308843185 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.597765401 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.605640704 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.621520446 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914659329 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.626758403 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.598354721 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.594261463 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.590253062 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.608759326 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.918074149 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8942193 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.637484208 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.594959317 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.200223157 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624147526 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.595015748 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.589291068 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.651301608 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.593844231 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265893728 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028109021 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.596981572 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920645496 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.608081586 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.638790729 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.596676994 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.622208941 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.604569269 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.622032243 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.621402624 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.846612198 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.598111184 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.60287862 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316686291 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465321533 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.254866418 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.614582762 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.599536924 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.595730644 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159261384 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602973884 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.595506942 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926718964 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.159192729 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594480555 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154467897 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.606009745 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.463773152 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915775463 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91508131 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.605442563 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.6038381 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928217129 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.905784387 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.652572719 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.602116582 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.599373635 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.570178931 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254502894 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.609599167 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.857346385 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167725169 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597089196 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.600081337 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.671959961 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.611631619 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070899868 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.604409471 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.593782072 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.600141959 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.601759973 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246690868 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.604940335 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.592842498 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.336324543 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.616501232 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.160342806 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595357063 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.843475277 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.913774161 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.906490692 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.598862468 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.601011414 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.926726576 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918402263 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600836391 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.595504428 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.254829752 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.546161562 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.628344848 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.601627903 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.53345848 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607152558 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966313942 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.619559163 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.617095931 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612490457 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.601106258 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602393294 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.597609584 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.606399389 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.599315178 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196554534 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.601753268 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.62269825 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.620614814 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609348996 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.945238776 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.653179989 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.316967193 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923909528 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.620594002 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668842525 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.637437415 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608626558 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.585540103 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.609724532 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.609788857 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643809593 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.917433285 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.610795479 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.584860966 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.678268515 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.904671467 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.609969676 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.608540304 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896935777 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.612573848 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.625362974 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469582689 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.670140316 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.608991618 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612276184 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.599053972 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665798842 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.761301908 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856800506 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.932409212 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.933009638 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093582711 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.60971692 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.614580178 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.655983208 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.771592113 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.610137714 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.625442803 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.610672 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316385276 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474480518 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.327099696 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934328101 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.613614483 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.614022775 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61402082 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938147931 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.613700737 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973652725 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612948476 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.618149138 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.661869921 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.613512166 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.616508147 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913314954 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.972704281 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.614130819 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.614858146 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.614092128 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.613757587 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942121131 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.912145253 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.229538896 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276729045 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615858064 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.623782745 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.187502336 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973955906 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.613794812 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.615017385 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.613196762 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.635760735 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.614430788 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.644425174 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.616270337 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920099826 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927194233 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125344082 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.932688089 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.638811751 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.572488443 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.611831575 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.94543091 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.530371355 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.859868075 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332965386 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422950083 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947228485 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.764562449 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861490208 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.618677208 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93608454 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.617441296 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.610938164 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.616002286 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614091848 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.610958069 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.93084358 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325228927 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949760021 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.641282735 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.614508102 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.667001509 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.862781782 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.91809126 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.484795658 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.925215211 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943265341 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.622866497 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.611814743 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332942339 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952872918 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.613544781 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.63951645 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896490259 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.614849416 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682407518 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.567533902 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.611342266 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273027247 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.905892083 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.664351102 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.627892136 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.429218618 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330314351 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.610484545 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.224680527 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.619994903 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614387067 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.974634134 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.63853064 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.620482954 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.988151287 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.640621199 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.618892598 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865909484 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.323787822 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.477829967 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.642500907 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615650706 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.614800806 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.618467475 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68595818 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.616777455 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.617652426 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.087075737 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.618620357 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.61580687 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656813552 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.618137125 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.620543576 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.620277202 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615901994 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.638419313 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.591257729 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.596231127 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.629849159 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80656772 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259247073 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.618238255 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.313911497 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.036743918 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.949634797 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.6219851 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.593129686 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.645622603 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.61886997 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.617805309 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.610342977 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.606585516 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274438111 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.629108841 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.940829417 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645599067 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.916125577 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915282104 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.622780942 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870186426 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.624582637 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667794068 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.59491846 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61925717 seconds)
  done (took 1102.478896262 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.637752609 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.625794314 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.621440058 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.668503935 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.616047334 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.718480611 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.610234723 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.651329056 seconds)
  done (took 22.63309175 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.614946565 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.641723225 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.611812018 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.639357491 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.60908758 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.171365437 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.613111555 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.640522164 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.665560474 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.602305154 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.610591612 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.323169797 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.637333421 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.607582501 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.611103898 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.639062132 seconds)
  done (took 36.720859407 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.665319033 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.899883638 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.499408759 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.611895828 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.653867786 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.626386568 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.91799027 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.615379372 seconds)
  done (took 28.978860791 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.654934472 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.646331563 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.650426147 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.651964541 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.645803632 seconds)
  done (took 9.737617333 seconds)
done (took 1384.229211655 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.644536432 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.641229307 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.639472869 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.642277276 seconds)
  done (took 8.052639585 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.584729804 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.59880806 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.598809038 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.627187437 seconds)
  done (took 10.898600095 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.057803719 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.228820509 seconds)
  done (took 5.767153561 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.615892915 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.459515138 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.451774838 seconds)
  done (took 9.011798707 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.986093832 seconds)
  done (took 3.474555598 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.125106692 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.172416758 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.607835116 seconds)
  done (took 8.389932127 seconds)
done (took 47.083076278 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.608455237 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.370709641 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.760889775 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.609384266 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.766707065 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.765170557 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.854971641 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.606965174 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.604808196 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.621959119 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.608426952 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.766151617 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.84556402 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.372318086 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.844095677 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.3723206 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.767819148 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.610742329 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.607371301 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.603637446 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.860135077 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.613226794 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.608880431 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.606463504 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.765935459 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.756080225 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.615351156 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.370260422 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.619536744 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.612466292 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.749954726 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.608014469 seconds)
  done (took 90.236160411 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.60127241 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.602229725 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.604936982 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.61724155 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.610986914 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.611750838 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.624429336 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.615144286 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.603341878 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.606852031 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.618229036 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.605076735 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.603913948 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.60653551 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.610796177 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.6118204 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.612005339 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.612230508 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.603335941 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.60658838 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.604254284 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.608067618 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.605750913 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.61089179 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.61654621 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.605322506 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.605847713 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.61719769 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.612163949 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.605653834 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.60810666 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.613147524 seconds)
  done (took 84.987766253 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.619403907 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.608237403 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.612301187 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.607409224 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.616122484 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.607035714 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.608218056 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.620258972 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.60731431 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.611630082 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.611501435 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.611057663 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.614001822 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.613027048 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.609570323 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.612992057 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.611108368 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.62042743 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.616712642 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.613335188 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.611985644 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.60703299 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.613885327 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.631676836 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.609391879 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.613506787 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.625121254 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.614236071 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.629269616 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.60445857 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.610886902 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.623984238 seconds)
  done (took 85.136154607 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.942808091 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.651232605 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.650683932 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.617832896 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.657125532 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.655702586 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.619594852 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.935896807 seconds)
  done (took 17.214173325 seconds)
done (took 279.062840401 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.629573286 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.630305781 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.677069759 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.621436776 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.674097243 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.679127214 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.902871658 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.68360816 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.903418794 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.631804855 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.676012012 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.619420668 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.521438516 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.841155918 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.620112445 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.620597284 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.601591376 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.61258593 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.622755031 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.926706043 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.68713284 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.616460724 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.630837273 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.611263136 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.604743453 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.719843075 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.726506003 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.854351172 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.827363312 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.7178783 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.634946385 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.628574975 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.650757963 seconds)
  done (took 75.101720619 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.636105751 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.65519917 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.650436274 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.653609512 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.656888561 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.661553051 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.644740508 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.661116892 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.659613489 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.663561686 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.663613788 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.659139476 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.659326651 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.656741546 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.662506315 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.641427656 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.648886287 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.658523895 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.648938108 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.642441472 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.658978282 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.656370828 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.662994505 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.662344073 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.660027298 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.659597983 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.661907495 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.663529768 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.662270461 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.659184104 seconds)
  done (took 51.189120769 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.663632086 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.623095018 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.62220063 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.664431699 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.652823798 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.659244098 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.984841019 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.666800506 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.658615387 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.654785151 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.627279978 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.662649559 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.71140534 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.625496859 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.651769963 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.656844282 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.656751323 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.654071512 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.626570809 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.674694666 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.994946913 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.662749362 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.988855496 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.681530731 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.657352238 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.653916326 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.665870011 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.620326859 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.664052531 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.614460191 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.44299963 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.960826513 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.625129215 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.632799534 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.453634083 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.664428487 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.65243164 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.62420752 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.643685555 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.645414476 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.971143048 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.651830446 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.618877861 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.618404477 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.651303633 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.655130587 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.618589137 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.621426021 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.899219726 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.65903213 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.61723743 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.653294109 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.659722721 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.65190776 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.900542241 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.645365169 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.652005398 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.62139117 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.656389056 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.968121645 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.658920104 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.64617442 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.621365329 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.645775137 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.62086785 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.648154839 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.676160006 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.644975035 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.621611868 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.650330116 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.619362002 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.651963423 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.659065653 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.624225958 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.618507353 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.625803114 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.645310552 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.623576015 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.615811829 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.967992158 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.654496777 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.616990401 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.992289312 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.654718592 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.65834559 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.657309984 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.659575076 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.777260223 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.964674558 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.61202692 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.642058532 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.627509127 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.981014415 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.667839535 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.649668928 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.631937484 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.657051989 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.659642683 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.615679759 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.624501691 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.65435423 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.66818071 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.622740155 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.652788878 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.973805747 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.665034778 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.625412072 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.655695253 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.77808407 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.658419273 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.674300482 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.664010207 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.995380837 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.65494858 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.657054573 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.623035793 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.63591662 seconds)
  done (took 236.394763265 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.626182352 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.624216459 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.630427235 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.625852212 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.626540987 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.656702784 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.627924543 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.625639336 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.643147568 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.628906301 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.629264867 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.654214269 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.656263831 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.627590282 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.632150639 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.623915932 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.621453748 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.626073888 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.630007628 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.623614847 seconds)
  done (took 50.136039437 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.655408136 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.278905509 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.245102956 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.663103318 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.663105413 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.66144347 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.718471672 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.664737953 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.665770696 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.998555193 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.83725661 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.66700109 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.666143858 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.662329128 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.244444493 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.642981695 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.998947981 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.276852874 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.661810277 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.278432893 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.640573916 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.662039146 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.649660756 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.275869508 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.014871025 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.978420859 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.721339005 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.283413415 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.65951627 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.659638282 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.283434647 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.662428442 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.656158371 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.273034301 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.666381947 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.682215386 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.663957826 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.725660366 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.725437781 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.007759646 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.287774095 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.983620333 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.68844418 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.879370065 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.669448538 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.639290443 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.286027364 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.66923203 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.639352253 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.669823166 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.677568705 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.261948883 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.655982789 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.261488629 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.672466659 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.664047852 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.283047306 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.259290934 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.250380234 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.845739881 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.660551317 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.977552383 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.665928328 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.294292452 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.668099274 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.66426841 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.662293159 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.842523759 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.286298279 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.9808718 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.00775783 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.006768388 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.663271495 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.733695675 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.666196867 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.008947437 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.732482741 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.117408227 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.007930548 seconds)
  done (took 149.428346235 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.995728926 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.770583955 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.135871119 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.348983904 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.274840956 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.850621298 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.787146117 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.95554309 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.639360564 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.82638714 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.422669112 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.768271371 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.464287672 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.743451874 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.781812967 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.84394042 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.155264158 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.628551229 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.417475365 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.39661992 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.637110837 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.806466521 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.497986162 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.11646048 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.646855582 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.442018291 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.633739877 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.2960271 seconds)
  done (took 62.784947096 seconds)
done (took 626.526975339 seconds)
SAVING RESULT...
DONE!
