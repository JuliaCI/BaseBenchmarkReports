cset: moving following pidspec: 2434
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.177878835 seconds)
loading group "string"... done (took 0.587252191 seconds)
loading group "linalg"... done (took 9.856568423 seconds)
loading group "parallel"... done (took 0.175256364 seconds)
loading group "find"... done (took 2.469830137 seconds)
loading group "tuple"... done (took 2.341481065 seconds)
loading group "dates"... done (took 1.449000323 seconds)
loading group "micro"... done (took 0.635912361 seconds)
loading group "io"... done (took 0.680212477 seconds)
loading group "scalar"... done (took 55.77911451 seconds)
loading group "sparse"... done (took 13.646441493 seconds)
loading group "broadcast"... done (took 1.361401823 seconds)
loading group "union"... done (took 11.209895756 seconds)
loading group "simd"... done (took 3.888219794 seconds)
loading group "random"... done (took 14.495058695 seconds)
loading group "problem"... done (took 2.192608851 seconds)
loading group "array"... done (took 23.799767346 seconds)
loading group "misc"... done (took 1.545103397 seconds)
loading group "sort"... done (took 3.79541323 seconds)
loading group "collection"... done (took 21.198050465 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.911214897 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.177503368 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.240161476 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.564675927 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.308629051 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.205797748 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.200619925 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.181935147 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.662890162 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.234004827 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.191147212 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.404049496 seconds)
done (took 7.09690534 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.300178116 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.091954291 seconds)
    (2/2) benchmarking "String"...
    done (took 0.234809468 seconds)
  done (took 0.994100786 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.096782069 seconds)
    (2/2) benchmarking "String"...
    done (took 0.141550682 seconds)
  done (took 0.906011931 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.132058133 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.200664903 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.148722264 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.147368391 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.135070598 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.14729862 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.132355448 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.148338417 seconds)
  done (took 1.727094766 seconds)
done (took 4.72944255 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.525926097 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.906997111 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.530953692 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.220742596 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.345086829 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.361254039 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.370386626 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.269118231 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.13461635 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.09664588 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.253287307 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.468211984 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.471819775 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.982654918 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097080292 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.149223724 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.19909536 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.803788527 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.120607865 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.155938335 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.534174213 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.25470718 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.156168812 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.150179572 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.225814958 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.165743982 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.168073398 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.141891507 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.72729968 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.173191507 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.239828822 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.122612799 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.166543106 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.201105741 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.275794359 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.149653109 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.738825098 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.243387934 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.123931682 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.140021856 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.725415223 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.157769714 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.251177961 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.144430866 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.111862618 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179601959 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.144795439 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.118625211 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.1529045 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.144150942 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200333576 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.522884021 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.149099407 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.235762383 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.149677484 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.741580476 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.13998931 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.317661065 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.167617824 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.149941623 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.130512686 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.128367302 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.199231062 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.134375468 seconds)
  done (took 22.757581184 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.246376093 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.247346468 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.118447604 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.201975963 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.182359293 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.120118627 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.143742092 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.119181357 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.168784312 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.219451021 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.181506042 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.254103542 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.132722534 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.134561455 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.223218749 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.290108819 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.148168563 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.162089397 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.128923377 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.151502157 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.181451077 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.137898541 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.150213934 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.134631436 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.21090154 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.246158887 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.165174147 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.165756553 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.144012517 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.1371951 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.182191604 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.206578853 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.117110982 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.143118199 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.215421039 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.162104692 seconds)
  done (took 6.972112097 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.276035731 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.142283526 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.306206746 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.227334915 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.166776725 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.231836256 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.218026398 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.330591411 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.401086828 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.22240391 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.167293829 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.137281075 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134949773 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.120190074 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.117898233 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.876418223 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.212117197 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.200735513 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.226657245 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153958195 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.12089184 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.425382167 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.140476802 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.124600202 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.150734042 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.093171346 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.259695384 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.152285148 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.516267257 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123378748 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154438354 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.169455977 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.2327847 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.162209873 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.176757114 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.151715801 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.125384101 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.247254975 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.157004533 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.117584924 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.1359499 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170584681 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.154966913 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.147560943 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161789289 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.17249498 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.126549542 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165480052 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.220476431 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.239622371 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.242523508 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.12527445 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.316866901 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.165549404 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.138418719 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.234251227 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.148970411 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.9177746 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.129603701 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.174972669 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.127846006 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.135472884 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.150395172 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.121268075 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.721463254 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.162553912 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.560232555 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.121396443 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.200624465 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.150432258 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.156923027 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127345384 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.141232974 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.147014365 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.142495565 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120230513 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.14277486 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.121184754 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.144809476 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.143878911 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.141393888 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.120273325 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.203030427 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.139486383 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.161821276 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.164270191 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.131154876 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.141788701 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170422859 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.122737745 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.144566708 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.245006995 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.135323563 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.160886032 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.15347643 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.169541253 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.143211857 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.382469028 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.123510539 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.178427299 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.139067545 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152896049 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.153883885 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.124260075 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.13833463 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.140784523 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.120906506 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.121502531 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.203656136 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.131219619 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.13761764 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.12772546 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.14122159 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.132645849 seconds)
  done (took 32.893310456 seconds)
done (took 63.291144288 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.48874581 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107696098 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.129380978 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108034409 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.128792077 seconds)
  done (took 1.713500718 seconds)
done (took 2.448223339 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.228337416 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.344958671 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.252750298 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.144820442 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.210878911 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.20987194 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.194031588 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.206369818 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.215848817 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.211399159 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.14319244 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.233250401 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.221296507 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.192497244 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.141342764 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.246325109 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.20679152 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.195134661 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.237894567 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.147558499 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.139569773 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.162882235 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.144276028 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.146283057 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.142642721 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161258915 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.146438384 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161311225 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.136397792 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.146027718 seconds)
  done (took 2.377759211 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.167881963 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.143692574 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.137922986 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.152743306 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.140820352 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.145303603 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.140579539 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160089631 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.147753076 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159695797 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.135762446 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.146278518 seconds)
  done (took 2.354630781 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.119185687 seconds)
done (took 9.817546212 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.242577146 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.962633377 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.197864267 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.310886182 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.3768665 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.318370444 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.685197468 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.250950208 seconds)
  done (took 16.199253551 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.155737053 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.24487667 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.15120149 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.138570973 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.151361916 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.135579671 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.149455877 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.134563132 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.15409257 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.133961518 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.136408129 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.153325154 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.13566397 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.149544995 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.137706338 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.156756805 seconds)
  done (took 3.22246146 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.17840949 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.176436263 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.139228948 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.159638876 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.136382916 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.15896826 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.143921514 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.158038951 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.137272973 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.15332271 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.144026486 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.156700583 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.139045754 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.152623877 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.140169082 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.175851203 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.136278783 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.157370989 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.157782425 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.158171301 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.157275936 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.140282504 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.156002729 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.141322301 seconds)
  done (took 4.469126695 seconds)
done (took 24.636981771 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.194827498 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.144700943 seconds)
  done (took 1.090301567 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.208643572 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.226885905 seconds)
  done (took 1.19571134 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.156296831 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.148995972 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.164061226 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.162330419 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.13389461 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.149989883 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.157843117 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.15268422 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.133713861 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.150571242 seconds)
  done (took 2.274687096 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.138076776 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.152474907 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.14968377 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.219634284 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.159076723 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.136864122 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.154135592 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.136896459 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.155054774 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.133888814 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.154002056 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.152127237 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.154843085 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.153068766 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.154509034 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.139773011 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.159736234 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.136736383 seconds)
  done (took 3.502523052 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.135533087 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.134324204 seconds)
  done (took 1.035447036 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.136661233 seconds)
    (2/7) benchmarking "second"...
    done (took 0.13249527 seconds)
    (3/7) benchmarking "month"...
    done (took 0.152464849 seconds)
    (4/7) benchmarking "year"...
    done (took 0.150491624 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.134107137 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.132470547 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.149827433 seconds)
  done (took 1.754401799 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.580497841 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.269234936 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.396603507 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104273106 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.155194805 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.374902842 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.156475206 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105178668 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103968738 seconds)
  done (took 3.039142268 seconds)
done (took 14.651369354 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.13532056 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.328942039 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.645944921 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.17278545 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.13902592 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.21116547 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.3928751 seconds)
done (took 2.800753713 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352756171 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.209428518 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.120501288 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.136539639 seconds)
  done (took 1.58485014 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.125667726 seconds)
    (2/2) benchmarking "read"...
    done (took 0.140689748 seconds)
  done (took 1.042647532 seconds)
done (took 3.40163599 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.15356024 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.150549592 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.137104655 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.152931878 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.138518732 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.15354683 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.136492915 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.150333363 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.137808446 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.150782513 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.138402865 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.152897446 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.134547486 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.153861745 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134746045 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.271713393 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.13681216 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152197636 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134477436 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.153821516 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.1372303 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.151036804 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.137829189 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.153176671 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.137197684 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.153519592 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.134457601 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.151245629 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.136526999 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.154704519 seconds)
  done (took 5.241474841 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.140293958 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.128555594 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.15034335 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.140504878 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.147558779 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.134008732 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.147518271 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.136169272 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.152225852 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.133035563 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.153569669 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.133244108 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.150157712 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.135199525 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.150977788 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.136556053 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.159442063 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.133462433 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.150586677 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.135511785 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.134587296 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.151007262 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.133233772 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.151831738 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.132805924 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.147870969 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.13484082 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.149675179 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.134220909 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.149618258 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.136541246 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.152355477 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.132933595 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.158809999 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.136686307 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.149771629 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.139556434 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.128956832 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.152656563 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.12952974 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.149661699 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.132264305 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.151719293 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.138767088 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.150756531 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.133905646 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.149813953 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.135454795 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.151914011 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.135968827 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.148138391 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.13388148 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.152993128 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.135758325 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.135312668 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.149464328 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.133232934 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.149096124 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.134745976 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.151969395 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.13108287 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.149729724 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.138674967 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.152430487 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.148821369 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.157503828 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.134318756 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.152816081 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.13619169 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.156741929 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.136459671 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.161239428 seconds)
  done (took 11.077391196 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.134773493 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.133128172 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.152943891 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.132666801 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.152934741 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.137175056 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.151716779 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134258972 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151432595 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.13567668 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.151734518 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.134361429 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.150812335 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.134506699 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.132601569 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.153013872 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.133167353 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.152949757 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.133962007 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.151814837 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.134223005 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.151451383 seconds)
  done (took 3.919785819 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.280086665 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.14011272 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.20209197 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.147868455 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.172139139 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.165536484 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.139002034 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.157720196 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138575583 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.161994064 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.143585787 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158533917 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.15135556 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.162882864 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.162187664 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.145707705 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.156989168 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.145624244 seconds)
  done (took 3.724163667 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.136123874 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.133323588 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.154883453 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.13381122 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.153544106 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.133907601 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.153418253 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.13448882 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.153170735 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.13457689 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.152570659 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135224109 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.134196674 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152849255 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134614045 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.153852107 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.134476738 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.154223243 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.135164814 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.154078532 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.135560046 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.153789669 seconds)
  done (took 3.946513101 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150228252 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.155490443 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.155508392 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.159375924 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136556332 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.154500234 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.142487463 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.15535558 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.143690688 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.155463834 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.138021602 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.154692157 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.15216097 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.155709745 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.143542415 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.156044844 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.138234687 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.155956564 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.137809215 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.135761887 seconds)
  done (took 3.77259685 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.23060195 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.173228173 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.174050624 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.160710242 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.173539107 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.153341776 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.179768112 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.151951585 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.172700662 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.183105547 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.154929408 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.172729018 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.160595422 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.176185393 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.153536075 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.181105642 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.159794552 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.180430207 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.17257844 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.153822145 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.183767224 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.152568633 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.180993057 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.152932926 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.172687882 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.172988618 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.154351053 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.177754378 seconds)
  done (took 5.569264709 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.150370867 seconds)
    (2/2) benchmarking "in"...
    done (took 0.165465385 seconds)
  done (took 1.118329852 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.14027112 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.138527602 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.158840171 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.138007075 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.158539714 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.137928503 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.159779047 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.138367177 seconds)
  done (took 1.971471792 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.250462157 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.256341816 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.141614028 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.168885653 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.255672178 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.23496696 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.174329571 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.163119556 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.137565328 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.15236763 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.249004989 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.128274063 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.157912679 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.133122864 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.158260908 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.141948568 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.15844445 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.145434974 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.16324939 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.138551138 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.162271334 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.149858163 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.158516177 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.147097058 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.153377395 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.13852404 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.161073835 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.147681001 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.154264729 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.137817875 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.155133065 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.138680484 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.161389098 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.142138327 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.158688127 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.254557301 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.143024822 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.155610082 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.137153056 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.163957303 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.162467099 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.15847546 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.137936955 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.156136755 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.160514965 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.142235057 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.141367698 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.159149079 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.130820476 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.153507021 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.138684745 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.15313798 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.137587957 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.160109955 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.137759278 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.164039575 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.139947405 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.155209122 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.133877429 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.154157313 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.137484034 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.154903707 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.140560472 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.162740737 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.138896084 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.158714876 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.137090408 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.159739797 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.139233348 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.159981517 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.137601088 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.173126485 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.138686211 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.162858768 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.142900784 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.159829333 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135108033 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.16443802 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.136564643 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.159016869 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.142971952 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.180354499 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.139295716 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.154820107 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.134276502 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.165187836 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.140374555 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.162807714 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.131365658 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.167471506 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.140959894 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.16091739 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.132986814 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.157442577 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.134329232 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.163103143 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.132459442 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.159237707 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.138226237 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.162987277 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.144352365 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.157652939 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.140621863 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.164184705 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.144830847 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.157476171 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.209489558 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.136739945 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.155066227 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.141442916 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.143280791 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.154553732 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.138700808 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.15927172 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.135973786 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.155341752 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.1447902 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.159754673 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.14104133 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.164006471 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.141508497 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.161123631 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.150952645 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.160193067 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.135436357 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.163851493 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.147937807 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.161717841 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.141564999 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.161561397 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.140733259 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.159136996 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.14517747 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.156242145 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.145342016 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.156963047 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.140548599 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.161268483 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.145817286 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.15966311 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.136124642 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.157810641 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.141553057 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.158737853 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.143168485 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.160297479 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.13706317 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.153001998 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.14049112 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.155219808 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.141292968 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.168910446 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.136596002 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.162241721 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.137531176 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.168169709 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.13748564 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.165226877 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.143913202 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.164903512 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.146185768 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.151953472 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.1376791 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.162239555 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.142162631 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.156224754 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.142328016 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.139886713 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.168510604 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.133158274 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.164915384 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.133629842 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.158508704 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.144904041 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.163310642 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.143289381 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.158154958 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.171972218 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.173182148 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.146003134 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.161202412 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.139447202 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.166511468 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.139383856 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.165689086 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.145512149 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.166232452 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.137521748 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.160394419 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.145170905 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.157290043 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.142276054 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.160129721 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.141605088 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.154019167 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.141526586 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.152330824 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.145552587 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.161412705 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.144849775 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.165809283 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.142750136 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.157866025 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.149135166 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.155056519 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.144881692 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.153088811 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.145744232 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.170801678 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.147000817 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.165072598 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.142081127 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.157970298 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.142779121 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.167402992 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.143418866 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.158714247 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.143850835 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.152488735 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.134963461 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.164911264 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.143853908 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.135501658 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.1614764 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.141286403 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162995727 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.137415938 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.153938709 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.14379098 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.16542376 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.135681011 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.161846769 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.136558916 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.158938996 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.146315114 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.154382481 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.136216135 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.163033651 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.143977107 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.16139287 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.139884478 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.163972108 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.145450619 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.165083214 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.142361399 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.16049115 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.147571489 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.159815574 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.139959627 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.157093441 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.142983546 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.155677059 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.142894359 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.160707169 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.138833507 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.157141002 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.144151781 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.167221404 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.146489997 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.16058746 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.144813388 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.166354954 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.148227858 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.158585879 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.146890328 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.157008653 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.134532122 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.157494469 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.134280135 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.162386292 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.13805324 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.1657319 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.14004211 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.159159067 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.145927635 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.16237868 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.139160434 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.164863074 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.151992442 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.155110087 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.135266922 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158748329 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.141191348 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.157255473 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.138023907 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.161728806 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.142774371 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.164860629 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.144311996 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.157385936 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.143085025 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.169311195 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.138432478 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.145609578 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.167996713 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.146074232 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.158657467 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.144317095 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.15836106 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.144228746 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.156030456 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.140377208 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.161039403 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.140070466 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.1606052 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.138793068 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.157968901 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.133975626 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.157862533 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.146565774 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.159981657 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.145806461 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.163255328 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.139475348 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.158887733 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.137258377 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.167552172 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.139062656 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.168540706 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.142279685 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.154931434 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.135455912 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.167539601 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.142241971 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.1681695 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.137249506 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.16453035 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.148107032 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.165259423 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.142401558 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.170025392 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.150331687 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.167702821 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.146265806 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.15494163 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.139748008 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.165454838 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.143451133 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.164540826 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.144563076 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.156123624 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.145686473 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.167203664 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.143996244 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.15956226 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.136558567 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.142338072 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.168442719 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.144205069 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.16513755 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.143098155 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.163958559 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.137135735 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.166361798 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.146902829 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.16331141 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.147859445 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.163494324 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.145773565 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.16019586 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.147635534 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.164843518 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.136005074 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.155193898 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.139270504 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.168275798 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.136607176 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.166965715 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.146706295 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.158522253 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.141547749 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.166307252 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.139090942 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.164560381 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.147838772 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.16026612 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.153454011 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.163550407 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.141204758 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.16745684 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.147855674 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.134676205 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.16267802 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.140703158 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.170238688 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.139819107 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.168018573 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141171374 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.168069487 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.144268276 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.168701271 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.147365877 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.169151538 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.136247703 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.170517494 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.145728308 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.166711074 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.140264065 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.162244026 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.138086834 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.163762375 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.149227077 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.161415219 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.150919261 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.169839265 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.141193024 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.162784388 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.148232816 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.163602439 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.150250252 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.161385117 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.14541032 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.158416443 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.145693947 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.163790382 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.149871014 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.161235308 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.138665189 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.169556757 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.149521807 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.169064027 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.146755045 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.170475728 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.13869976 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.15866885 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.147022746 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.161734394 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.154590468 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.16706496 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.14258566 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.163525752 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.146612499 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.165751036 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.151538824 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.158898348 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.141760415 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.164475873 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.146386981 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.162337543 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.139775945 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.147665286 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.165167721 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.145915483 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.165237633 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.139774338 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.164831506 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.150505661 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.164810972 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.139394192 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.163475467 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.150003712 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.164707188 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.140399209 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.159757885 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.149109883 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.167283843 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.150302353 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.16272607 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.143488218 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.162604197 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.146349686 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.172115532 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.14207505 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.165740699 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.141884174 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.171284491 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.148471045 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.158926984 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.141587837 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.175666123 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.149888963 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.16811649 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.146661248 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.165506451 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.15082742 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.173161406 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.1473422 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.160588927 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.139058186 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.164496058 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.139283145 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.168167335 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.149880372 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.165133569 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.142624561 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.169639798 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.149676227 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.168834738 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.148177363 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.160127485 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.153165008 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.16277873 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.148461965 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.160199282 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.13978705 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.147763762 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.173051476 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.143675743 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.166904325 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.147338569 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.170420065 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.140246046 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.165325074 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.148135388 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.171271291 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.15075248 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.167168744 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.143369977 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.170282687 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.155132297 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.169590839 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.143778199 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.173682701 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.151659649 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.167700446 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.144566568 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.17039597 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.151609294 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.170445208 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.151237319 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.16533143 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.144522987 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.174555228 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.152606417 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.176346168 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.144097374 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.161800044 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.150042544 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.165355943 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.139773221 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.171059463 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.152987262 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.173723907 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.144884485 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.163871886 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.154163319 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.173107558 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.145298924 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.165275486 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.142991647 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.171105069 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.143863336 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.17054557 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.143612745 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.173723209 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.15283368 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.172889863 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.154654722 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.161268133 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.151050354 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.169916579 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.153996259 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.168115024 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.141359666 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.161438895 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.149360055 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.174059494 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.153110113 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.149154512 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.172203183 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.149602963 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.168611595 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.14561307 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.165594033 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.152759858 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.173672295 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.147375026 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.170133507 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.144541984 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.169055576 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.147387807 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.17601952 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.152335503 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.168722782 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.156446641 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.175396606 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.144990714 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.165207252 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.147701534 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.170517284 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.147477483 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.17234098 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.143287565 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.162218114 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152740652 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.174820136 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.146684365 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.175699577 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.153962386 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.166501411 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.150803395 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.17661387 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.152092316 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.169677513 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.148826956 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.17080084 seconds)
  done (took 92.84421448 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.19604155 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.177113793 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.148538652 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.171251107 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.166318916 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.17366992 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.148903991 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.171155355 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.14992088 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.179582893 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.14884323 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.170097678 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.163842832 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.192020996 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.188251872 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.158927891 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.170160256 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.151436087 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.169654884 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.151343966 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.185092113 seconds)
  done (took 4.429793412 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.150814011 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.148250626 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.171385411 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.14912881 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.171248314 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.148815083 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.170914402 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.149606665 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.171879469 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149736569 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.170064154 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150657217 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.14909808 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.171958599 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.148606468 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.172126078 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.148802651 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.171626504 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.149358378 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.17092802 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.150368912 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.171507564 seconds)
  done (took 4.406924093 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.172953418 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.152195122 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.171587253 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.149070144 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.175792466 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.149114633 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.175917482 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.150127121 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.183205351 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.14470674 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.163551804 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.145430575 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.170071278 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.150353966 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.167382458 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.150202201 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.180818524 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.154515389 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.176211514 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.150862271 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.163315251 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.150762748 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.150899705 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.164304902 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.155391897 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.178243616 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.153000811 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.176051717 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.141606625 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.175825571 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.151159655 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.166390992 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.141854212 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.164061645 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.142866422 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.175466238 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.154527262 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.171700815 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.152349262 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.141755317 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.175222282 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.153564361 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.16514642 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.150678728 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.172804726 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.144974162 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.177221698 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.151063763 seconds)
  done (took 8.599844855 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.179526251 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.212357451 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.153501294 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.203961691 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.187684202 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.161263943 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.177249635 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.179757146 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.177142708 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.154147954 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.189621948 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.165083563 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.179683115 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.157303523 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.178397965 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.154712691 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.179577375 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.152823554 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.181023299 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.175187851 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.160857118 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.178207647 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.164621004 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.185944595 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.156944678 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.176658638 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.155151992 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.179648055 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.163484686 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.182851883 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.158083162 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.181424816 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.185611802 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.158072406 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.175330605 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.15782412 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.18813803 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.156122996 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.177884702 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.154182735 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.177448194 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.158895066 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.178526264 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.165844414 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.178481844 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.157161815 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.178386162 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.15238984 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.186873694 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.155118259 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.184815611 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.186582107 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.15837838 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.177169247 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.159941778 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.187300285 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.156501047 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.17560613 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.15747631 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.18666878 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.153701109 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.180357432 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.165050318 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.179254708 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.160068889 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.187675611 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.156808278 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.180874746 seconds)
  done (took 12.680835671 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.186517992 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.18176669 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.167137036 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.190240254 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.158650342 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.182106538 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.158762088 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.181500804 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.159002552 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.427806147 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.179686677 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.293281639 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.162741714 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.187076374 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.159093416 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.181976982 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159922152 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.18179728 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.159287225 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.181623585 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.159110108 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.190041694 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.158806437 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.189198431 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.19337487 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.157849892 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.181637204 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.159576158 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.190388666 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.159146356 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.193835682 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.159186025 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.181931864 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.189882317 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.171526351 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.182220728 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.154779389 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.181153903 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.161040241 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.182407553 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.157136742 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.190829504 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.159503523 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.179273705 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.159686647 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.183564684 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.16651475 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.192609549 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.187175478 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.166280922 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.182474322 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.167030039 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.183880087 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.159513371 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.191635682 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.197701747 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.167666433 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.192212362 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.159171079 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.190460882 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.1671883 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.195512293 seconds)
  done (took 12.161957816 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.156798292 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.155022228 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.1788886 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.154799574 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.178459286 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.154861871 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.178792568 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.15481864 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.17702726 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.155293351 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.177054358 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.155597021 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.176533133 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.155838672 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.1546909 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.1786774 seconds)
  done (took 3.579137473 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.173535545 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.194014965 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.259931797 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.15844431 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.178458378 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.162982667 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.178728245 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.158541879 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.153814951 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.184232646 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.158584273 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.181154671 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.193800483 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.157756304 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.177939877 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.159251816 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.175378237 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.160582501 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.155277078 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.259879905 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.184632207 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.157155459 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.180589166 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.158270336 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.18217128 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.160205778 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.187291066 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.156132703 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.181303084 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.155314652 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.180997877 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.162010686 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.178377921 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.159455752 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.182213464 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.156286076 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.179472962 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.156830349 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.182058696 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.155533675 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.181156416 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.157098539 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.180155381 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.158646501 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.178601692 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.15781532 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.177762899 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.162555867 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.180463172 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.158987397 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.180057464 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.161390774 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.184131865 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.164513867 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.186102437 seconds)
  done (took 10.486441397 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.169068008 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.181092861 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.168770833 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.178207368 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.15900765 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.17998462 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.159649143 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.157962126 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.182174284 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.154610443 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.181892963 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.15797344 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.182108284 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.156996152 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.182707173 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.158454857 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.179646168 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.157525269 seconds)
  done (took 3.992227364 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.15643798 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.154768424 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.180664315 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.153790366 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.179575559 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.154934087 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.178754086 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.155654221 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.179565293 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.155507973 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.177535774 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.156522209 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.15408796 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.179592111 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.155398043 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.179277198 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.154604158 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.179170409 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.154720234 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.178996435 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.155811364 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.178487921 seconds)
  done (took 4.603522278 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.16998677 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.283941764 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.186755523 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.294964884 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.153074144 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.177189292 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.162363524 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.178990988 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.190164825 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.154713739 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.174348847 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.154892602 seconds)
  done (took 3.229973798 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185029535 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.215289807 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.158078063 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.18056556 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165984026 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185388519 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161447765 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185037846 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16974882 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197453182 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.183794112 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170397716 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192183726 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169107049 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190733752 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165964331 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184963256 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161120349 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.181772696 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19845289 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163144349 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191771803 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162653295 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.184797871 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162213296 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193704242 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169386415 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197194699 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.182994988 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171452389 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190043021 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162559149 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193499676 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172307735 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.183283014 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168793392 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186195046 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199346021 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167014674 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194869752 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159144889 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191002222 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169453671 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19108673 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191118018 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.164712356 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189979536 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16293734 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186252247 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182546677 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191475327 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169903589 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190895015 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19330894 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171602897 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.206784815 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196354998 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1716807 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19047031 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174185418 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194882604 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16639602 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19365193 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197619124 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167338528 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194783918 seconds)
  done (took 12.919314252 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197627855 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.183229096 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163490273 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199658839 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17046162 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187455053 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162182495 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187474469 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1627348 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.184615026 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.22872776 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163421549 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195785861 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170336605 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188394418 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163112781 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.186658932 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19309306 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162455435 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.207107063 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163058584 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195369606 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170338001 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195114965 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197947728 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169139735 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186536849 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163937467 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.187490462 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163735486 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19241092 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163260146 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194938755 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159538025 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194871569 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186251129 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165867462 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191838292 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164060877 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191908482 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.171636211 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.201777893 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162771118 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188129091 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197517366 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.164361264 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186570163 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161684248 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.18674344 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161542679 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.199269823 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17426399 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.200082496 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.194637321 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165174286 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187003179 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165440801 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186578755 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165200546 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192590482 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171312009 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188950983 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.207309673 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166113512 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.186429573 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172401881 seconds)
  done (took 12.928827472 seconds)
done (took 227.97911397 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.32306699 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.353070946 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.149329464 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.506517135 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.149013922 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.869685035 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.892915992 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.233341475 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.175753425 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.150109103 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.175297222 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.169109633 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.559343895 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.17168524 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.15174716 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.190705047 seconds)
  done (took 32.185211612 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.354079943 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.401842511 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.190743739 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.155770298 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.156412558 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.181160677 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.152896608 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.181881579 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.154831072 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.184940488 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.176299724 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.153288557 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.18343855 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.153104106 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.177471032 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.156903472 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.18319648 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.156912551 seconds)
  done (took 4.427514211 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.175955127 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.226846724 seconds)
  done (took 1.385832654 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.185974068 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.27497987 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.377683433 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.22905315 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.176302937 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.197437747 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.228960331 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.169490478 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.269501869 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.167191582 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.192527416 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.176715978 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.181819979 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.184368138 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.171907266 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.176610657 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.183957471 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.194648915 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.169407367 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.183192849 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.179611248 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.182238957 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.160352723 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.195072223 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.260161994 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.168194922 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.184015369 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.157123822 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.181919083 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.170247557 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.190348856 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.170474821 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.192036222 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.238753895 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.157993555 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.233600656 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.184674253 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.155947625 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.195347118 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.156078367 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.183659109 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.182904544 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.167577735 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.177538219 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.157027301 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.182736716 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.156366322 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.179432664 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.164787854 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.182688874 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.164242674 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.188837701 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.232524122 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.159335974 seconds)
  done (took 11.261915429 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.002049423 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.203186802 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.181932493 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.147900791 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.203202306 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.170600605 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.015329254 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.181863001 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.326359448 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.087480119 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.198331506 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.16614948 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.326014223 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.316854399 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.365065418 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.418768266 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.849569348 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.194818978 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.187700894 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.225611231 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.185954233 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174305406 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.197979576 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.516216412 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.158376704 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.181118632 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.163357226 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.189852006 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.237173107 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.15734927 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.186318316 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.25999235 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.354943321 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.273531502 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.156907802 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.181721712 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.156361504 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.245838524 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.358735144 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.281637071 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.249432138 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.154384995 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.180001661 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.162374629 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.196125779 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.154396519 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.242266492 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.253348627 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.254218151 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.185765383 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.165993664 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.189334622 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.160792025 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.239771412 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.181759635 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.423915289 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.453328038 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.158180939 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.187745034 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.172034726 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.356803403 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.160996241 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.297922033 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.203842682 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.277787769 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.181878785 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.875564902 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.248966576 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.156585555 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.18704732 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.162031918 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.188660793 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.184740182 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.222090533 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.49435658 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.18835398 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.162379518 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.181170106 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.292125835 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.158279276 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.181929629 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.242189317 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.159253632 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.187180088 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166073982 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188900628 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.253014507 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.335997476 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.165079511 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.189564399 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.163786052 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.192453245 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.157252958 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.291816927 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.319569549 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.237496612 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.295702617 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164085182 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.243854753 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.249221427 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.186599148 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.251443986 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.164007658 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.194406425 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161869676 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.313746881 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.195678445 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186837027 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.163276699 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.189597295 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.223782229 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.18001067 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.189026202 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.250796767 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.556302726 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.248203979 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.156161059 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.187613313 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165060236 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.240804574 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.189289434 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.331034275 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165982979 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.247685338 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.189477657 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.155066018 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.189633542 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.245162391 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.16645797 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.189608888 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.185679688 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1693223 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.343199719 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.285133117 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192278572 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.309555077 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.257090095 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.16354873 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.255055898 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.191151193 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.249886037 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.168578979 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.187218709 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.159102705 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.950615717 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.169880053 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.190607548 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.163855054 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.267581024 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.183442951 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.162498597 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.182457909 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.158179402 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.882818269 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.187635383 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.156420031 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.185494608 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.164754051 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.189767218 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16446428 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.189312063 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.243497305 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310980747 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.193026431 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.163571429 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.184728868 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.24214881 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.160122737 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.184832582 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.158956596 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.18460511 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.165916001 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.189472838 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.161749968 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.251660424 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.241568359 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.318659307 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.632936981 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.158991866 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185686252 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.307794098 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.183808569 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.391199956 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.18913725 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.301444269 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.246671102 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.156457815 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.451063924 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.249027617 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.242866709 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.18794911 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.253848342 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.156018653 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.191021288 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.243109407 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.158376285 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192783454 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.241840041 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.167909341 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.19258294 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.326532096 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.186537478 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.310638385 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.15736184 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.253064793 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.185461364 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.164723741 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.419653296 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.160600521 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.196536306 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.242958899 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.164910496 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.185574716 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.041733799 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.160430108 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.195157778 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.164187289 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.325423226 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.246449635 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.16600009 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.191919377 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.168836833 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.243436543 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.291163562 seconds)
  done (took 61.650281717 seconds)
done (took 111.888024939 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.31822259 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.227070356 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.421179886 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.233270376 seconds)
  done (took 2.274919737 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.339497572 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.209247908 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.296922116 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.183152551 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.306096467 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.156990564 seconds)
  done (took 2.52036296 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.229786623 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.225951289 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.225669968 seconds)
  done (took 1.713932826 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.266987024 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.268540294 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.411032157 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324264419 seconds)
  done (took 2.3620723 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.339758988 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.175582105 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.215908601 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.287150761 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.30617832 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.268967793 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.208701958 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.210191743 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.217495256 seconds)
  done (took 3.292314547 seconds)
done (took 13.194864445 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.319992298 seconds)
    (2/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.171883101 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.383835542 seconds)
    (4/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.332132808 seconds)
    (5/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.493268034 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.317087739 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.313884957 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.164715708 seconds)
    (9/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.360399602 seconds)
    (10/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.309359731 seconds)
    (11/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.309869642 seconds)
    (12/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.255411181 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.201869945 seconds)
    (14/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.168768109 seconds)
    (15/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.29857058 seconds)
    (16/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.42688997 seconds)
    (17/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.172095138 seconds)
    (18/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.335185012 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.184191579 seconds)
    (20/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.194766039 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.338612962 seconds)
    (22/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.262864642 seconds)
    (23/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.133682014 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.215800557 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.162456762 seconds)
    (26/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.216330023 seconds)
    (27/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.389324438 seconds)
    (28/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.268897322 seconds)
    (29/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.16766783 seconds)
    (30/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.185546989 seconds)
    (31/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.199238744 seconds)
    (32/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.333595983 seconds)
    (33/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.303614656 seconds)
    (34/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.496291323 seconds)
    (35/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.275153217 seconds)
    (36/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.216389529 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.189140602 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.19105153 seconds)
    (39/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149044093 seconds)
    (40/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.249273109 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.163090851 seconds)
    (42/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.219472182 seconds)
    (43/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.130633093 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.171246706 seconds)
    (45/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.317829942 seconds)
    (46/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.133880223 seconds)
    (47/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.164471614 seconds)
    (48/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.24335406 seconds)
    (49/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.193384787 seconds)
    (50/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.278632778 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.180810563 seconds)
    (52/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.18447248 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.189982958 seconds)
    (54/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.281183872 seconds)
    (55/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.214196023 seconds)
    (56/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.141015418 seconds)
    (57/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.216404614 seconds)
    (58/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.202151475 seconds)
    (59/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.165827232 seconds)
    (60/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.196841651 seconds)
    (61/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.128690178 seconds)
    (62/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.130331797 seconds)
    (63/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.200552598 seconds)
    (64/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.195686058 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.20003717 seconds)
    (66/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.169878656 seconds)
    (67/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.365059342 seconds)
    (68/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.157175504 seconds)
    (69/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.132383664 seconds)
    (70/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.131080147 seconds)
    (71/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.127836577 seconds)
    (72/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.214607877 seconds)
    (73/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.203572745 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.191301492 seconds)
    (75/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.129706858 seconds)
    (76/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.128726425 seconds)
    (77/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.138258923 seconds)
    (78/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.222450425 seconds)
    (79/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.131731346 seconds)
    (80/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.269195615 seconds)
    (81/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.190526254 seconds)
    (82/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.273056441 seconds)
    (83/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.240555101 seconds)
    (84/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.155418925 seconds)
    (85/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.191382089 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.181992626 seconds)
    (87/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.161953905 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.16706936 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.189539117 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.183759611 seconds)
    (91/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.205799494 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.172917799 seconds)
    (93/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.154015954 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.162966184 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.170739589 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.192029377 seconds)
    (97/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.187210958 seconds)
    (98/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.224398718 seconds)
    (99/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.172854802 seconds)
    (100/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.153772208 seconds)
    (101/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.244865286 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.211736213 seconds)
    (103/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.138058338 seconds)
    (104/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.245698632 seconds)
    (105/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.157347942 seconds)
    (106/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.132315219 seconds)
    (107/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.17656505 seconds)
    (108/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.158738063 seconds)
    (109/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.202931532 seconds)
    (110/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.198331576 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.162434483 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.188819542 seconds)
    (113/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.137131335 seconds)
    (114/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.185160208 seconds)
    (115/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.259716755 seconds)
    (116/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.161687949 seconds)
    (117/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.197373493 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.171097735 seconds)
    (119/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.19070372 seconds)
    (120/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.129821397 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.164073098 seconds)
    (122/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.253722278 seconds)
    (123/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.131893518 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.19109965 seconds)
    (125/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.137038935 seconds)
    (126/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.160883378 seconds)
    (127/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.189533739 seconds)
    (128/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.193777085 seconds)
    (129/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.377357135 seconds)
    (130/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.157125288 seconds)
    (131/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146427978 seconds)
    (132/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.130168019 seconds)
    (133/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.217255002 seconds)
    (134/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.172403627 seconds)
    (135/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.131129733 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.213493699 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.183399509 seconds)
    (138/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.222084177 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.164751747 seconds)
    (140/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.21042613 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.173505793 seconds)
    (142/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.131692095 seconds)
    (143/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.162706724 seconds)
    (144/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.13708929 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.164897156 seconds)
    (146/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.164300712 seconds)
    (147/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.172175665 seconds)
    (148/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.20894752 seconds)
    (149/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.171604783 seconds)
    (150/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.131306223 seconds)
    (151/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.163569264 seconds)
    (152/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.131809638 seconds)
    (153/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.136757125 seconds)
    (154/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.131439899 seconds)
    (155/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.166424865 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.165198801 seconds)
    (157/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.132542902 seconds)
    (158/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.162552026 seconds)
    (159/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.131035797 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.161352222 seconds)
    (161/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.164799867 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.172240548 seconds)
    (163/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.158241771 seconds)
    (164/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.137746008 seconds)
    (165/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.136694897 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.211985476 seconds)
    (167/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.13227122 seconds)
    (168/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.13279503 seconds)
    (169/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.136659487 seconds)
    (170/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.163677239 seconds)
    (171/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.13204228 seconds)
    (172/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.161402368 seconds)
    (173/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.155210589 seconds)
    (174/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.205193272 seconds)
    (175/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.174643158 seconds)
    (176/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.1636104 seconds)
    (177/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.137343304 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.190681232 seconds)
    (179/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.131184839 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.183456151 seconds)
    (181/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.163374756 seconds)
    (182/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.173987628 seconds)
    (183/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.18840692 seconds)
    (184/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.134482395 seconds)
    (185/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.165266617 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.193495555 seconds)
    (187/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.186142595 seconds)
    (188/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.162952705 seconds)
    (189/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.165948616 seconds)
    (190/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.132524953 seconds)
    (191/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.164096985 seconds)
    (192/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.171771564 seconds)
  done (took 38.824132106 seconds)
done (took 39.858119389 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.313442862 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.156097922 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.171000446 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.201635417 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.299194681 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.179051959 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.21702676 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.172381977 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.210420054 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.171562739 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.189470323 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.183967319 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.198705924 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.309197978 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.202588332 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.165265778 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.190157771 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.184008246 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.212990073 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.18946257 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.297706573 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.19199746 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.183810945 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.189705409 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.270341222 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.195293898 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.171759761 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.201663773 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.184297808 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.201447055 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.171417189 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.189940215 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.187231491 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.215627979 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.162488819 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.19959235 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.16280555 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.163244641 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.17311573 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.201241094 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.186754894 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.199944421 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.172736771 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.191577435 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.174406885 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.19940741 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.163875727 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.204065196 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.163158318 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.200597856 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.16661644 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.215198944 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.173212948 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.189278818 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.163111663 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.191259447 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.184532475 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.190059225 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.188541573 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.189712881 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.168019341 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.189363676 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.176430397 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.163146933 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.201536243 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.164056546 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.200848935 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.175024981 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.200070693 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166692287 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.193081746 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.172780003 seconds)
done (took 15.00635395 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.170762218 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.233882465 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.31767238 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.319757981 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.192608502 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.209016034 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.205535913 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.188057434 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.203333399 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.182215071 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.227403289 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.196417157 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.319183186 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.209945692 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.179524225 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.205432059 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.175072752 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.200477937 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.316419707 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.216721763 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.188598494 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.210846644 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.189774691 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.210168975 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.168549995 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.228321912 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.171648783 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.205208498 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.168691215 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.205554212 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.214672201 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.170544942 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.197991798 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.18790539 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.211553718 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.180813286 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.207739126 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.178356829 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.195523327 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.169602224 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.202953183 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.185711256 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.195501606 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.181507649 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.205538567 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.184843198 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.204605069 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.181745388 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.197193233 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.176385908 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.198088877 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.192664514 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.209935775 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.183533185 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.209542429 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.180937534 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.215489414 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.182889529 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.200821068 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.182040887 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.19749795 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.16898818 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.199752915 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.188813256 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.200601696 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.181189172 seconds)
  done (took 14.427540123 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.190065371 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.228413333 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.180547471 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.210151444 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.174940333 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.192801822 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.164278991 seconds)
  done (took 2.454189042 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.166223931 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.335172022 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.3229396 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.324462839 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.314666062 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.366403298 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.18823483 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.195789004 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.2012691 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.206784047 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.335573329 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.42035087 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.177142918 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.208446688 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.330998655 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.165689157 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.327867391 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.197922655 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.180313362 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.325383626 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.213518004 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.228394895 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.179992302 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.195530382 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.330382306 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.167834541 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.403354504 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.186550398 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.203402053 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.182074411 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.208823622 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.244057292 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.326258249 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.211990645 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.173923025 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.35395339 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.319559631 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.183718474 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.406164918 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.171084116 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.314263217 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.212383292 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.18188095 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.213737934 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.181516798 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.310790011 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.217022779 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.18173128 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.211069927 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.339839934 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.206933298 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.33471058 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.178313108 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.211648702 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.176867813 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.213078912 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189007974 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.211375203 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.341118727 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.212236696 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.327910693 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.329311639 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.321711092 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.32961936 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.220218856 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.333219189 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.309158308 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.180833331 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.204976205 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.182692157 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.328573766 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.210888759 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.178841667 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.315581122 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.216855928 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.33115063 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.329356059 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.209281362 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.180306239 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.201199189 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.180025686 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.197334242 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.32293967 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.180747775 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.210647458 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185475821 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.212573889 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.181153484 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.202271462 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.218044068 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.183523059 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.207631361 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.189676494 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.209779959 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.185090367 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.330756097 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.20977507 seconds)
  done (took 24.790795954 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.171571469 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.16802863 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.201778313 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.169700979 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.19781049 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.168806522 seconds)
  done (took 2.222207796 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.206345653 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.211451191 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.192183098 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.211418784 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.230932089 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.319270908 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.327501912 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.208813775 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.230605303 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.196950115 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.324549931 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.324756172 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.323101073 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.218490284 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.328808783 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.184815191 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.328770649 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.213035959 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.190550697 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.212219026 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.181021902 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.218024233 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.179600353 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.310295674 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.216037179 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.184895161 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.206002314 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.223933086 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.192034196 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.208249108 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.186633161 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.214719274 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.175182333 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.209125825 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.329965074 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.175074428 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.210820664 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.185441808 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.218763434 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.182954271 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.325023734 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.213225299 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.217868627 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.1885913 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.207879367 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.176368028 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.214776334 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.177686142 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.327665899 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.217105751 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.186213275 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.216502811 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.184137033 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.217655541 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.175388504 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.20910592 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.185417643 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.327375849 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.221145231 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.204988568 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.186313497 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.214618563 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.179339845 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.217003015 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.186937878 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.215113948 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.176404835 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.213975744 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.182859567 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.212497064 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.187163535 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.214972029 seconds)
  done (took 17.124370844 seconds)
done (took 62.118714819 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.644819079 seconds)
  done (took 2.794698055 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.266263189 seconds)
  done (took 2.420156781 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.107690441 seconds)
  done (took 20.295135437 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.501249076 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.422621131 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.102057252 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.244683279 seconds)
  done (took 3.427217176 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.171379056 seconds)
  done (took 2.339636486 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.474478563 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.348841777 seconds)
  done (took 1.982823863 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.841942261 seconds)
  done (took 2.014579926 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.999764914 seconds)
  done (took 3.160492686 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.365154675 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.285797726 seconds)
  done (took 1.828374055 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.727834943 seconds)
  done (took 1.907115423 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.172262409 seconds)
  done (took 18.352898439 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.322820661 seconds)
  done (took 1.503094423 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.356656946 seconds)
  done (took 1.539104728 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.866381333 seconds)
  done (took 5.047295191 seconds)
done (took 69.776409698 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.185192894 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.215163464 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.190247936 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.212556499 seconds)
  done (took 1.968526654 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.190088698 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.210502676 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.189645974 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.210774219 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.191725148 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.211827915 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.185105313 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.185592595 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.185148335 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.184403757 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.214130442 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.182115757 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.215758861 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.182728753 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.21178154 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.186642729 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.216977103 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.182706474 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.215166258 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.183562798 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.21443509 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.184985674 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.218374697 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.187040196 seconds)
  done (took 5.943738237 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.181891845 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.174965057 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.207168733 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.173158751 seconds)
  done (took 1.928785287 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.195877074 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.226462946 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.198328642 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.222327434 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.200466553 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.225449759 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.183885744 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.210596124 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.184507052 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.224895498 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.200705131 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.229068515 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.196541125 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.219703358 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.195455791 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.209771927 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.188287351 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.228720775 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.194657086 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.226437175 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.187803211 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.223900958 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.183362144 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.226013028 seconds)
  done (took 6.174972251 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.262547074 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.228787334 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.210678607 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.260768147 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.242664587 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.183873802 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.24189808 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.190143174 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.219835707 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.193563162 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.214090702 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.23107736 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.220250494 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.186012411 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.216159891 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.188803828 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.224302615 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.188839516 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.256623695 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.217927433 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.191922031 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.226149708 seconds)
  done (took 5.987313471 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.188654717 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.203907564 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.17696168 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.201781106 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.189717631 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.207105247 seconds)
  done (took 2.360939614 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.175696784 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.169829278 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.201542877 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.169862592 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.203794561 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.170290859 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.199102344 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.17030343 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.200393779 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.170957494 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.199045982 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.170920199 seconds)
  done (took 3.391714268 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273260936 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220604031 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.35181527 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.470292626 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26368863 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.256663993 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.382440043 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228197105 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.277538715 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233560846 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279708474 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229567111 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251999573 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285872666 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21114829 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.247404925 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27097105 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277755851 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24157234 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314719002 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255282254 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.274674314 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.260449461 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246835858 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.23662618 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231704465 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.218738919 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195321137 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266411462 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263809525 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274673755 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247406042 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209891775 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286974133 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.327099416 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276903019 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.365951075 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.232386814 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.232552268 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.28852021 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.328741245 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240362898 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290775245 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249720233 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197950592 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292545581 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246422677 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.255237975 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.233427659 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241201552 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279633186 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246921344 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.269331246 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234967659 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.401557349 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204715697 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.240892505 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277014207 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286641409 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300713729 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248926207 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.222110996 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.266634884 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291565987 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315232545 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.209432219 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.263374064 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22165158 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231353722 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307741438 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281912735 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258992432 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.290868622 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197715226 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273031578 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264472528 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221821365 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.30568992 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2724542 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.217820506 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219418126 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232575945 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19254753 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.290356896 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21834697 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.316716393 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200541214 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.275667109 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275006689 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22032306 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260693486 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258259936 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228914305 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24560309 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.157610056 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242583292 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.255221492 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225014158 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227899232 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247710341 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208944866 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.224056006 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218999567 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.222174551 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268394675 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.194149409 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258358133 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238552402 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.233323455 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27974968 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214685261 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.265283386 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26830926 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296218116 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198254471 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.231964064 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322347834 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270673526 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.204112129 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270586155 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.299463431 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.239616295 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20441091 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265208934 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292888781 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211002949 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.304199368 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238772542 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201737595 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.227942115 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273550149 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257384546 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.229500972 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226377949 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.233863608 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285913663 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.22688346 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206792847 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283668475 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23415757 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191721866 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235788224 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233183563 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.211069508 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.251076411 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.206806466 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254066526 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267555252 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235026954 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256884273 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233663164 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272159539 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199899023 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.270003539 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245745496 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.188827922 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.274436924 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298267049 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197249105 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279223147 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.25989541 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276384867 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243106543 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228022432 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.282389472 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195536877 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.221436329 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26066094 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238947285 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26245188 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.290326794 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274118448 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.26378508 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.232441988 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248664024 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26812411 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.287150551 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224337117 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.239489044 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27453107 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267628796 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.189748081 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.221257815 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.196646026 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237029933 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198788059 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236741488 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280573668 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231461626 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273686968 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.267064967 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23929293 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.293279264 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.194216038 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260500165 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.275180175 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207895502 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.292225429 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294170649 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280805541 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209932772 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264499696 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.218909122 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196254286 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.233808922 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228254514 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.238665475 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203306021 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244508118 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.29374308 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269645741 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216837351 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288117924 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265249652 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.306240829 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.22152419 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.23144249 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266413697 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269484549 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.257831391 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233085576 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.228290762 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.295820789 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243117508 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295198154 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238075945 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282284081 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294675042 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.267878199 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199347208 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.244381496 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261344197 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20775512 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.261446306 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.241937819 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200132572 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249045426 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.206067824 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.241153152 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28881487 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245140251 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243533203 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.255980876 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269894098 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194283784 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242067235 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276974747 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213529457 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.195899632 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233666167 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29326802 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251548678 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25435993 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267881481 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202679614 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.419429733 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284446227 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241083451 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238327444 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237102009 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244350067 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.259354489 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259405404 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.252479941 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243013793 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312057141 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.271420898 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.208348701 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231499899 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215999046 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250948811 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.228983169 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.221271923 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.2668171 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.243971318 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289798794 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205651431 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274221045 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280376366 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.216093192 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.250354043 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208578479 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328595626 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272928142 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275184086 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.267351945 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.232907132 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284536183 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225439352 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196198343 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.234213722 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.254226393 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232145303 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285569415 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.262888598 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279004055 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277271013 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231626243 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242751679 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.195952083 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.270267748 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250150944 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282009884 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204337088 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.239260802 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287479924 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.186256437 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232802928 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.229209874 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.396640452 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.251632558 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26887183 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.167034579 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.386455638 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198003811 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.2346855 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.259675689 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238998967 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.234408789 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.257381193 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275880054 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242780035 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.228095556 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236319577 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.27720201 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282162418 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269324612 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244441768 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.247704893 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263510814 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225722628 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27362495 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24797015 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.216517688 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260720585 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300601355 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.2777173 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.202208256 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27382714 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27391486 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242374746 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274484346 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24220161 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284186069 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199466357 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270400377 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206978555 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227493315 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261443372 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.2651143 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201670548 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276259223 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276553953 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201155259 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228986591 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217914233 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270404288 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242726257 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.200804655 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288995828 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.232099626 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254328571 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314926221 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233125455 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.269761539 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213311483 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232963284 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209745527 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247294785 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200998325 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.279624805 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280408982 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.201098967 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277338969 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269578206 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265208166 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224025206 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246459274 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.369317635 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.199345322 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297801836 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219836265 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299017494 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.252370152 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283018183 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241049438 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253033853 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269471488 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24873121 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.294383175 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268976173 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.270914339 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203673526 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246173902 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208426156 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.236881799 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.253701606 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243942613 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245477026 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.205895736 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.272431221 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249276043 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.216275897 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245276582 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.308713699 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.253406107 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259880045 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.29115532 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243690905 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28040116 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244576493 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232372078 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.269949971 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241156993 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.248212011 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257191994 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.204423621 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.241590009 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320221517 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.196630312 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.265085455 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279774335 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.242221794 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27830627 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.237306993 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251301161 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24615749 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283988278 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198409867 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.255534241 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.275614168 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206550847 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.230352757 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275046079 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232699214 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.271929412 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.246519756 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.25162271 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302807012 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.194251028 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239072021 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395583544 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267222878 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267795018 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.227639632 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208380828 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251432812 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264134636 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.237585939 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278752627 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.234064821 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201653856 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.250309065 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.224173409 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.230043989 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.273846277 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254859155 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262836077 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290923658 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.206249831 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.363440142 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.245241592 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245450836 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.210748309 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.200572713 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246575001 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205733634 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246643725 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.281218303 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323874356 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.268670409 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.220147059 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239719939 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.198696775 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235402421 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2331719 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25462777 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279686334 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251152119 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.166398744 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213174454 seconds)
  done (took 122.323051 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250512513 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.244859001 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.263634153 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.31768551 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286825022 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.387388158 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.322004076 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.342773058 seconds)
  done (took 3.736915148 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.192249308 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.240499787 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.248903649 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.189723358 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.213648048 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.597600435 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.243247622 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.226894635 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.234101208 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.229615512 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.213863858 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.652533887 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.223536178 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.222405866 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.224208819 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.182605903 seconds)
  done (took 5.647298934 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.596607991 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.76986857 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.614138153 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.428446313 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.382770393 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.29706124 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.982540448 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.294314871 seconds)
  done (took 14.684799653 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.244901464 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.278144099 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.538495992 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.421665842 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.292477137 seconds)
  done (took 3.103382769 seconds)
done (took 178.420768316 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.197969029 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.197250572 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.231321804 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.199207176 seconds)
  done (took 2.135603697 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.258697562 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.154575592 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.191149377 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.154451065 seconds)
  done (took 2.088508951 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.462477526 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.153805732 seconds)
  done (took 1.965972488 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.219861199 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.751102776 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.212085769 seconds)
  done (took 2.521045868 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.20904928 seconds)
  done (took 1.542277687 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.19181699 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.190249472 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.391185988 seconds)
  done (took 2.106661399 seconds)
done (took 13.688829844 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.216542551 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.041795748 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.659101202 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.205684187 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.828435935 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.473001629 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.540392531 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.254798672 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.276534118 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.216997707 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.2161161 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.800597618 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.522776814 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.960758558 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.507168614 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.956032328 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.802172538 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.18488657 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223306609 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186153421 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.518352857 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183518868 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.21843525 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185756163 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.800364627 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.492083525 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.215867883 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.970374864 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.216307814 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193815429 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.504879775 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.18493497 seconds)
  done (took 24.074652091 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.186912107 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.274527159 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.240861914 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.220908609 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193861104 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.220405821 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196057613 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.23129736 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.319205466 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.185246532 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.24037519 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.183712398 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.223770075 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.185818462 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.243625882 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.184717344 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.221532989 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.186305326 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.224830057 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.187409586 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.239078936 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.18402864 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.219502913 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.186274176 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.217871281 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.202246878 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.218124665 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.19705795 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217836988 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194418229 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.222370666 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.18570937 seconds)
  done (took 8.177009241 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.227567835 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.286351428 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.240978898 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.258397175 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.272305158 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.188295313 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.309212086 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.255027612 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.293708229 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.220009891 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.206673907 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.219043846 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.226094883 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.221613307 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.20987578 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.219178919 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.188704584 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.220453523 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.225559968 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188037948 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.240387413 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185053909 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.221065751 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.187130012 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.218785015 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.205674199 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.218255269 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.198105989 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.218604754 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.196140026 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.224707765 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.186963859 seconds)
  done (took 8.526821253 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.200140325 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.200151849 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.243570639 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.2425226 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.196597557 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.200570129 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.233524458 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.196255962 seconds)
  done (took 3.067233829 seconds)
done (took 45.176605141 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.208861825 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.235135767 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.208008365 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.200909068 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.388668 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.193707105 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.238956923 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.194017689 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.199876605 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.243691464 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.18544523 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.228674051 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.205476478 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.231782198 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.358214267 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.200693957 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.39552397 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.359520369 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.195290476 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.235941456 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.195713785 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.361571677 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.236065843 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.194662184 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.34084488 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.224727041 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.349315091 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.19718115 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.232213817 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.18652316 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.359275156 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.232615963 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.195779365 seconds)
  done (took 9.555783176 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.304020505 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.231227938 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.194649682 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.230798414 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.197142458 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.229263931 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.345059033 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.194390502 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.230083518 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.195436584 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.229550699 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.289555606 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.236632606 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.190545879 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.23310611 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.175784994 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.345050652 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.231721506 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.188690336 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157984685 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.227233714 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.195314641 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.356049956 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.226549759 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.196324337 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.229842985 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.197615283 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.201114052 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.232899658 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.196895708 seconds)
  done (took 8.265025113 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.201314078 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.208315736 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.249388836 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.29730289 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.226656965 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.243239032 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.211610638 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.242453876 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.21690789 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.22422607 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.20478037 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.260189022 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.206291038 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.235315539 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.189490437 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.240452504 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.204356783 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.224842 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.197803436 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.242170879 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.208941235 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.240622918 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.21212893 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.233172807 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.187976837 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.23225209 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.199629785 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.234717697 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.198462807 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.239407469 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.190797797 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.226609194 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.192051308 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.258445924 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.191500051 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.237858669 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.209415737 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.237544313 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.203255316 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.258014235 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.191716349 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.227375562 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.216299223 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.28084996 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.191158177 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.235455082 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.191025968 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.240723908 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.188332888 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.242642378 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.232324166 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.224426305 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.210688804 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.223977644 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.187602697 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.23421477 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.190331327 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.228462153 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.204222897 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.226420413 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.210210461 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.232640059 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201447056 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.226889607 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.201071728 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.224095396 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.189618457 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.228976255 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.216563084 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.232770801 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.226922712 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.224716914 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.20236498 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.239227349 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.201454388 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.236288218 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.189417942 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.23642825 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.201525558 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.229297106 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.202730948 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.228474306 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.194625378 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.241366936 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.210726308 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.239478429 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.202089037 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.234216376 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.192342057 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.226556813 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.208475883 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.225265518 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.195437074 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.237526573 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.191347168 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.193928013 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.235655247 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.200065944 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.222802565 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.216189922 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.229159727 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.190217206 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.250947624 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.194170921 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.228892375 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.200368566 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.267553646 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.190127041 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.2343291 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.200923665 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.225974197 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.199272198 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.228448325 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.18981918 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.241846397 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.207261273 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.234707291 seconds)
  done (took 27.028716641 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.454980762 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.445562386 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.296614744 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.532780251 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.204061075 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.404024422 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.450715485 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.449732959 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.22862174 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.224502152 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.284488412 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.449437809 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.192418533 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.255580615 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.454640426 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.534174981 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.220032449 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.26799204 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.263304712 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.205346504 seconds)
  done (took 8.207307018 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.199946097 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.259230102 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.215133572 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.244607642 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.202642878 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.242409108 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.1918348 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.248039223 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.202930205 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.23310562 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.195422546 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.233307601 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.205237411 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.206698073 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.240900816 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.213466252 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.236234649 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.195667689 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.248985991 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.196026534 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.204722333 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.216490169 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.236230389 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.212772727 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.243392473 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.201573818 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.225922165 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.195964514 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.233395183 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.200862554 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.230074718 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.199905379 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.233954751 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.171708078 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.237613386 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.207716289 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.197214395 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.231294496 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.196632966 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.229436509 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.206082981 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.239775603 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.199803341 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.20042849 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.21269674 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.178172588 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.241454238 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.2041643 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.209030562 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.212069915 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.2387782 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.205941063 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.234784395 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.214167877 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.234190535 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.209132042 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.23712778 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.206016561 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.231487817 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.19031198 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.225009199 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.196372807 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.234532897 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.206667901 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.239056098 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.201467379 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.20058682 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.228103169 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.195726496 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.230288921 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.195284749 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.240247241 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.212322461 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.237256847 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.198966712 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.238618891 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.20070569 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.19618647 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.201346763 seconds)
  done (took 18.5125964 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.22101372 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.237896174 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.211753045 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.260188744 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.204747545 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.23389385 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.203568973 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.211509788 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.24256213 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.211019223 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.24374161 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.242168854 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.215665344 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.238767863 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.203524414 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.243768429 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.205632015 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.265967551 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.205005818 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.254898126 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.208112358 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.23404331 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.206524866 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.239876872 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.221216399 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.240824549 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.220017015 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.24106592 seconds)
  done (took 7.791382131 seconds)
done (took 80.716276771 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.579008755 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.848457824 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.503446353 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.502203668 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.508831535 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.529164218 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.507660087 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.506754525 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.188113377 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.480452647 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.506248805 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.508434906 seconds)
done (took 32.616904218 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.6057565 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.319232635 seconds)
    (2/2) benchmarking "String"...
    done (took 2.340974924 seconds)
  done (took 6.066925061 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.301954809 seconds)
    (2/2) benchmarking "String"...
    done (took 2.319646863 seconds)
  done (took 6.020942328 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.499031476 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.494016104 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.82891763 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.494126244 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.497677952 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.496698149 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.500895051 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.4992366 seconds)
  done (took 18.208064308 seconds)
done (took 36.798345377 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.534354334 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.781239081 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.770126424 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.482864755 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.502314156 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.502815477 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.493230738 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.557594231 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.510609345 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.484023283 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.027857313 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.780550515 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.516015479 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.913812015 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.47824643 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.49759973 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.508847809 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.832584926 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.499081483 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.520533093 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.498726689 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.483161931 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.499348137 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.535352576 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.511382907 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.504764328 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.542978754 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.510926843 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.781602465 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.518262064 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.510028894 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.516908191 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.543251694 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.499230035 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.494654802 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.514434133 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.779989969 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.516152019 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.484831416 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.497857863 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.781340979 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.528800205 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.496637736 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.500042917 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.483298051 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.524852287 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.489220732 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.683554312 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.516323619 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.500862924 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.576431612 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.917332155 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.510788348 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.50192081 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.504312595 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.816716288 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.506929477 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.62984434 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.528749641 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.498724384 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.496336441 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.504455001 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.5587735 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.504170607 seconds)
  done (took 163.901246524 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.498992784 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.502144442 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.501855857 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.504167953 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.501507978 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.501495267 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.500292739 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.499424194 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.502475001 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.530655888 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.502891464 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.503587992 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.501525159 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.511590475 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.508814424 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.513870723 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.502914511 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.519098204 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.512317314 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.498769082 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.503824893 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.501499178 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.500385838 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.498642181 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.517038514 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.5861707 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.514774609 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.530871768 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.513202412 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.499835 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.508605878 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.50632563 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.301819456 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.457457405 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.507011471 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.507664487 seconds)
  done (took 91.475404381 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.499556333 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.500073019 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.501747743 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.539489903 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.501652619 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.176073717 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.179495382 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.573718138 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.838297734 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.179937128 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.855723553 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.506757458 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.59799413 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.515434191 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.504942772 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.601621896 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.527884796 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.507565242 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.502605883 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.178361717 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.519409975 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.565949903 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.697694239 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.504044125 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.541357599 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.90584948 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.503593438 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.539785471 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.851710193 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.542447612 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.503272658 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.940447246 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.070385906 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.619623348 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.506850207 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.540805154 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.503046232 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.796550036 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.50207013 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.503840887 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.506148722 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.236893462 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.508933294 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.179863026 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.507214989 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.570520526 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.507607077 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.505112417 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.02424645 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.391779849 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.508672227 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.504981814 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.50755302 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.504497883 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.505353229 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.504138131 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.54293217 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.997350641 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.507693052 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.48356666 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.508054062 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.509782005 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.542970304 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.505901204 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.098230718 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.506828696 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.047419229 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.568011686 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.761853236 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.185213497 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.50764158 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.603960252 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.630362981 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.50521648 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.506271084 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.507317027 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.506366138 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.6235691 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.507379395 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.358829989 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.698116429 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.508485192 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.171053107 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.613797537 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.508154703 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.952575534 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.510593212 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.506766119 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.312685503 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.606591802 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.504778296 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.506255369 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.505963922 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.358888306 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.179163705 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.869258025 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.511346171 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.416523639 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.512434228 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.490961874 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.150185928 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.252732907 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.515984191 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.508619776 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.625674187 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.700912665 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.508730056 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.50956452 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.172216733 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.511972996 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.567762074 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.509739471 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.510179122 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.915098282 seconds)
  done (took 417.057893686 seconds)
done (took 673.834037991 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.491006852 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.492159443 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.493020307 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.496096257 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.493845272 seconds)
  done (took 13.876298516 seconds)
done (took 15.282806634 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.508212951 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.53531081 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.535395248 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.418373454 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.5165124 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.513551339 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.513812895 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.531823496 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.515569752 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.517522236 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.363533729 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.516947721 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.516955334 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.518449657 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.363725443 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.516958896 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.492589874 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.516674571 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.535285248 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.910872605 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.521649506 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.644649155 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.910405087 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.586648344 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.891084055 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.978563894 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.523996173 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.78112056 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.564439235 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.566053686 seconds)
  done (took 22.292712014 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.484597867 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.910245709 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.522473144 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.647200597 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.900524012 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.586985608 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.902046971 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.929415955 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.525209945 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.766022341 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.566947235 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.56335872 seconds)
  done (took 22.234185507 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.343419579 seconds)
done (took 98.212481352 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.575896349 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.661495153 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.576275796 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.55359023 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.553141639 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.554788916 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.554374129 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.553328604 seconds)
  done (took 13.99633913 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.550284362 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.552308433 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.552331411 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.551907334 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.551886102 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.552918217 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.550209841 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.551871995 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.553311284 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.552838808 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.551814794 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.552875823 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.554554458 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.552547359 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.552835804 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.552678801 seconds)
  done (took 26.250850615 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.555824382 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.554586655 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.553931404 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.554841436 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.558041564 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.55515251 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.554434191 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.553315613 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.556226529 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.554559347 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.55479157 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.557223443 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.554069759 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.553838516 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.553673062 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.558239913 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.554722007 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.553411576 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.55789825 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.555702998 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.555720807 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.554344864 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.555332141 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.55463303 seconds)
  done (took 38.740455683 seconds)
done (took 80.400324024 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.519516832 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.526255189 seconds)
  done (took 6.462319895 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.654026535 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.669984081 seconds)
  done (took 4.742906622 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.556263754 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.554164604 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.557239996 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.55679776 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.555954496 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.555755449 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.556225062 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.554999278 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.555002351 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.55694764 seconds)
  done (took 16.977101278 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.558824484 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.55682423 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.555111862 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.555584966 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.557116237 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.557900904 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.555460649 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.556557996 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.556457564 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.557716523 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.556845742 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.557321151 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.557203259 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.556743493 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.556543468 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.557507627 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.563198085 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.558983234 seconds)
  done (took 29.45007176 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.57894513 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.586111334 seconds)
  done (took 4.583701601 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.739398494 seconds)
    (2/7) benchmarking "second"...
    done (took 1.636196963 seconds)
    (3/7) benchmarking "month"...
    done (took 1.725538562 seconds)
    (4/7) benchmarking "year"...
    done (took 1.711531333 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.639926488 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.587827544 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.640511548 seconds)
  done (took 13.099213385 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.558790752 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.910472484 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.092869282 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.774349517 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.551383664 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.580878476 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.505742176 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.581699041 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.579593187 seconds)
  done (took 17.555356446 seconds)
done (took 94.285883144 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.523199424 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.614864222 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.549754128 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.542305415 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.921219451 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.534513432 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.525714548 seconds)
done (took 18.633329351 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.512098641 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.507852709 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.510566462 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.535664766 seconds)
  done (took 11.487791779 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.52225489 seconds)
    (2/2) benchmarking "read"...
    done (took 1.93586454 seconds)
  done (took 5.879033151 seconds)
done (took 18.786849431 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.561775488 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.56041931 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.558719653 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.560143647 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.559734656 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.560422873 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.560586441 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.560457373 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.559287881 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.560845412 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.563599603 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.559792066 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.561412873 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.559826009 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.56148006 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.563390778 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.562370676 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.560545444 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.560500047 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.561993952 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.562809908 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.561375228 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.56295867 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.560306447 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.561340098 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.561566453 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.560770751 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.564757851 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.561968809 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.563642277 seconds)
  done (took 48.260218986 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.567399667 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.567754112 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.56249646 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.563374784 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.56266792 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.564129768 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.56235566 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.564659445 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.563271209 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.563437431 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.56383392 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.563261362 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.563909349 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.563789013 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.561459526 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.563202136 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.563709603 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.563179927 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.563706949 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.564374352 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.563814784 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.562239932 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.562396866 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.56438413 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.564273991 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.561222974 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.562691317 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.563324777 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.56482874 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.56280879 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.564261 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.564026683 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.564567394 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.564598263 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.561709069 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.566091471 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.571536227 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.571999624 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.565072835 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.562935273 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.564185012 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.564106441 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.564463959 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.566540479 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.565262314 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.565780188 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.566031687 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.565178296 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.562665406 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.565800721 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.565354994 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.565661388 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.567972785 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.567691324 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.567901128 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.566844149 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.565078772 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.564535476 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.567427744 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.566773121 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.564943838 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.567334785 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.568398258 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.567325985 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.572019319 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.567857547 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.568592207 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.567033699 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.565415825 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.566422099 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.567276537 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.566737153 seconds)
  done (took 114.116575511 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.56598161 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.566748048 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.568610645 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.56644773 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.563986454 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.568613998 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.565918543 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.567151312 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.566002772 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.56893457 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.567371731 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.565586099 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.56675601 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.568337846 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.566688334 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.56661053 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.568468518 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.567421877 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.569190048 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.571626811 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.57052681 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.566577076 seconds)
  done (took 35.912800644 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.568439046 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.570191782 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.568266048 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.570463954 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.569872468 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.571313363 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.566696505 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.570148271 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.56699368 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.569893699 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.568928213 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.570278106 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.569535483 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.569728246 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.568779522 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.569685293 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.568372208 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.57111676 seconds)
  done (took 29.678423493 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.569060842 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.569589471 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.569488969 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.572092653 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.569540931 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.570151833 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.570488188 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.568898112 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.569027108 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.570564595 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.572324106 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.56976177 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.568540525 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.57078676 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.570108391 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.570303808 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.571404996 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.569476607 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.569865204 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.571849256 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.571124303 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.570607547 seconds)
  done (took 35.975441501 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.570551186 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.571681427 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.569419966 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.569870722 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.571423713 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.571387605 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.571492716 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.571815941 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.57274092 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.573242939 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.570267699 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.573117783 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.571115992 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.572444723 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.570660487 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.570674176 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.572661649 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.572039923 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.57287683 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.572484392 seconds)
  done (took 32.864523416 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.572781636 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.575356964 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.573923611 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.575235091 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.573931992 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.574066856 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.573797967 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.571565281 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.57413118 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.574263179 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.575537783 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.576152107 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.575396354 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.573623573 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.575685149 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.576257427 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.575405992 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.573831141 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.575095688 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.575072081 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.574837066 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.57550831 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.575490431 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.576867841 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.572278011 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.575434977 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.577037205 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.57487485 seconds)
  done (took 45.526353387 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.602877922 seconds)
    (2/2) benchmarking "in"...
    done (took 1.601843991 seconds)
  done (took 4.639308393 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.574629428 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.574126919 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.575466265 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.577000399 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.576184234 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.575483447 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.577446475 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.576064456 seconds)
  done (took 14.04304451 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.566877534 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.576251212 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.57662172 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.578078749 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.57794186 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.566744137 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.583361823 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.580521378 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.57134996 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.570761687 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.576729415 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.574257732 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.573575523 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.573173585 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.570911915 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.574502666 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.580587867 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.579750679 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.5808724 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.580057003 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.579461467 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.575237465 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.577006475 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.581003632 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.573147885 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.590473063 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.587614598 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.581088489 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.573445548 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.584650185 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.57103749 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.58079781 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.580643879 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.579140825 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.577528399 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.58007614 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.590525652 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.57940706 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.587475545 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.583638883 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.585428077 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.579938971 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.578298958 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.578027834 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.583043486 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.583286114 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.581728584 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.580594571 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.571654887 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.579808578 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.585877995 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.570399002 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.581132139 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.584471182 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.579520692 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.59248037 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.588179893 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.576966806 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.578114926 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.589981939 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.597514461 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.588079183 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.581688495 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.587620395 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.586818407 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.58479343 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.593757278 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.585863817 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.58201221 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.58014207 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.592507679 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.60008874 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.595709412 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.588280186 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.58228459 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.584017214 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.576039104 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.585294191 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.59178957 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.591047856 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.587572484 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.583498852 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.587093442 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.583998147 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.577916647 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.58925552 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.582360648 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.583611365 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.576635758 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.595903292 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.593974486 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.584148725 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.576625841 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.577001028 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.581407664 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.585480179 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.575285586 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.579692641 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.587217131 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.581855556 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.585153182 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.583761804 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.592246332 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.590356357 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.585516496 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.595589495 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.592143875 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.577271872 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.595834638 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.594171717 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.586823017 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.578427257 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.591456079 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.586803322 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.580271207 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.58975677 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.590852021 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.587726065 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.590960904 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.590055551 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.58858169 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.598624029 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.591029209 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.585689284 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.584397639 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.593234866 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.587990833 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.590045214 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.590059671 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.585263601 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.584389607 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.588041329 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.588581969 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.580200876 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.589306014 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.581308489 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.590466008 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.587157906 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.587749951 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.587179417 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.58488981 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.582299886 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.590593678 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.597201851 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.592241723 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.588576941 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.599179826 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.584129308 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.591215335 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.591085291 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.592785577 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.586532198 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.582837873 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.588992288 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.578513231 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.587852896 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.580700521 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.589344916 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.586243055 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.587075214 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.587351855 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.578935561 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.58404061 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.591701571 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.59276232 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.586576827 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.58992404 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.588870833 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.585928001 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.578433263 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.592584154 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.579621612 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.587526389 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.594061857 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.58973498 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.588100624 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.592010897 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.594649222 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.589211659 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.591466624 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.586320578 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.596381286 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.594414904 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.597345724 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.595973412 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.592408923 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.588118433 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.583239181 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.585583893 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.591243272 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.587589246 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.597786492 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.604809662 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.602246836 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.585962851 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.592778593 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.582376363 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.591845164 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.597223432 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.597146886 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.589679525 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.589632522 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.581715315 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.594171647 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.588020237 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.593187164 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.582573943 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.592605456 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.591113856 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.589975444 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.591775672 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.58564256 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.590525094 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.595724638 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.589793925 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.593107336 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.585520896 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.594506606 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.582913232 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.587451868 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.594850155 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.592252758 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.60047622 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.59755881 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.595188886 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.598934124 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.594347508 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.586339296 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.592248917 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.595213749 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.590463355 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.607435345 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.59282825 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.589086293 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.606416989 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.594079386 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.588140223 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.599545375 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.60090735 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.592751494 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.58969063 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.601385413 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.594132326 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.594352117 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.59511667 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.587264414 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.603934341 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.605094405 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.600425864 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.586673906 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.597573476 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.58888983 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.59579867 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.597190747 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.597442594 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.596574187 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.601858169 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.600892823 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.593133596 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.592509983 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.600212708 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.595110872 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.596521737 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.588928871 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.604155179 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.603341947 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.594974333 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.602231052 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.592743812 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.596543946 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.587835017 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.598875806 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.590511824 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.615122495 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.614994616 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.60745085 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.599188207 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.598952562 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.604314207 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.596651362 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.592323298 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.592133539 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.59477347 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.592500834 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.5920146 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.597838245 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.593487062 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.601661217 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.60013281 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.596381355 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.602718334 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.601327236 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.590536408 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.604094278 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.596469635 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.59694714 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.591195291 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.601223732 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.600980614 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.605991167 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.59749295 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.593513882 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.612187625 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.601392188 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.599586093 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.597726289 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.596299431 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.593827819 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.60094283 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.603930569 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.598033451 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.606286246 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.597842854 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.605024633 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.597201362 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.611009403 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.610132825 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.596874784 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.607001142 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.597931133 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.591024668 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.592656441 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.602881554 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.609894946 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.611132044 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.592649247 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.605263909 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.602838672 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.603282443 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.601081465 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.603718881 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.601397915 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.601835191 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.613924298 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.607546951 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.601084957 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.610135968 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.611836882 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.605994519 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.602468583 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.591808707 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.610377619 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.611132673 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.603787745 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.602457547 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.598448169 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.603810163 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.6039569 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.604070322 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.603408226 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.604543078 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.613631314 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.606634545 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.607689078 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.602745014 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.614844877 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.613998959 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.612865784 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.612642222 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.600931026 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.610520025 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.60507031 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.600202233 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.598921763 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.601754944 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.610152032 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.596650663 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.609794933 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.606815992 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.607719948 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.612634889 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.612070572 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.59926168 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.612813473 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.615523245 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.597691368 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.610340324 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.604707903 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.596317381 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.608411168 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.603273852 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.596488771 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.602721199 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.604260361 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.610568635 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.599587769 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.611256851 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.600639788 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.610820692 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.603742208 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.606356576 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.606009675 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.605178145 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.598298779 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.60911412 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.616337734 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.615054959 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.605757478 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.609707771 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.605580011 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.620376167 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.617854686 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.6068213 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.612061562 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.608124329 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.6027645 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.611049911 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.615616343 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.599915953 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.611603333 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.601960417 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.607818215 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.609656507 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.614573893 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.610309733 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.610362743 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.597679984 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.602318214 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.61678835 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.60979172 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.613117213 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.61394602 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.61746141 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.608523612 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.603316595 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.612683428 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.607011967 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.613688235 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.602175738 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.608303333 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.610148818 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.61166612 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.610690368 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.607724627 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.603294176 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.603412557 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.62166369 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.616755874 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.609883701 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.607360755 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.611543758 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.605499554 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.609506278 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.612712972 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.605024633 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.606655498 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.617682668 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.607799987 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.603853605 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.606254609 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.613726439 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.621906598 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.613392458 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.609813929 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.625020402 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.62299298 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.6227947 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.604970367 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.610674165 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.606298817 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.615896407 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.614076832 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.606162138 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.62642519 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.614858216 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.615399346 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.618169671 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.610420082 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.604492024 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.615619905 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.611553606 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.617476706 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.623318231 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.616142738 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.621503684 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.612384369 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.61263873 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.604692538 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.606600672 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.613471518 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.611572952 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.616769632 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.619439665 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.616447874 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.616664033 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.617080985 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.610426648 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.613718616 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.613714635 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.604332576 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.617719404 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.605882284 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.621126122 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.610753086 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.608131103 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.619036611 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.615552718 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.611398698 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.616494598 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.622051938 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.613950908 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.607550374 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.617703131 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.626781241 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.621422599 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.615113067 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.608579066 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.61832828 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.618242655 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.616965467 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.615991461 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.612104026 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.633687636 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.625400968 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.608012373 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.612704451 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.625414028 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.621566611 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.614213372 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.614716858 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.619894681 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.615592876 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.619677963 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.614217353 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.626874409 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.621377761 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.61007779 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.618917881 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.610886622 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.611772488 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.624660441 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.622570999 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.614358083 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.614597987 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.631682562 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.625751571 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.619641646 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.636859547 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.619641576 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.618158217 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.620485328 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.607757383 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.619432471 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.61848242 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.62072656 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.650806573 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.614709175 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.618021258 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.607834557 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.623720097 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.628873616 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.625165603 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.616095665 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.607994844 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.613265765 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.618198236 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.617538375 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.616754826 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.617644115 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.618104928 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.61835489 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.610590425 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.634910975 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.638682685 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.623319907 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.618306909 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.617083499 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.625654352 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.624148504 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.616251131 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.624370599 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.619332598 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.619228814 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.622974542 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.626936638 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.620221049 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.615873569 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.615714889 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.61288059 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.622017856 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.632315115 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.638203503 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.627787584 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.620317081 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.620182427 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.619840484 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.614839568 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.621680872 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.618912433 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.616020236 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.615004883 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.621892002 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.619324916 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.617837715 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.614327981 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.624465583 seconds)
  done (took 955.256873123 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.61913355 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.620786345 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.620826503 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.618524045 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.618917392 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.618814865 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.619109874 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.619493443 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.617866071 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.618915227 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.61997828 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.625535971 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.620946281 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.62556684 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.620970795 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.62051543 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.619494909 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.620938179 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.620261138 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.620016973 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.620277271 seconds)
  done (took 35.497813864 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.620073056 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.62534684 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.619789989 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.621253652 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.620132909 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.623862714 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.619767989 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.621764751 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.621144281 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.621345145 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.62176049 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.623148167 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.621436776 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.620694084 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.621055513 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.62225343 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.622192459 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.620997963 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.622663469 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.622048307 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.622801405 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.621942218 seconds)
  done (took 37.151858348 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.621852262 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.624086554 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.616545582 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.626320917 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.624259551 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.62394359 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.622379215 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.622502624 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.622883887 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.616019118 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.61707477 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.617082312 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.621948783 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.627955622 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.62653952 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.630277914 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.623313621 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.623130288 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.622623938 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.624356701 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.638105237 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.633377331 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.623601158 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.61545913 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.626160072 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.626617323 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.624554561 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.623900917 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.616404642 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.62880559 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.627071641 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.61838157 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.633493896 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.625249272 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.619118465 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.62784234 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.627583019 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.626478409 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.625087171 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.632899756 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.635515732 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.625783698 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.636083681 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.635651643 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.626076752 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.624474523 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.63230848 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.627301977 seconds)
  done (took 79.491995178 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.624379888 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.625714974 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.624591297 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.626621933 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.625735088 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.627652232 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.625451044 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.626131647 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.625986377 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.626109508 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.627461775 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.628376695 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.626705882 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.626148339 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.626899901 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.626745831 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.626266022 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.62704545 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.62563724 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.62694879 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.626969253 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.628266905 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.629208365 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.627226409 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.628054657 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.628501013 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.62756046 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.627131704 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.628976771 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.628058568 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.629305445 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.628006537 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.628126873 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.627483774 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.62768834 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.627682892 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.628624003 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.627506682 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.626737939 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.628665838 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.630112671 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.628303571 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.629058904 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.629623292 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.627311127 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.628793997 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.62946154 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.629786651 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.630616016 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.628348409 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.629528867 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.629097736 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.635798589 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.62970794 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.629778549 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.629681261 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.629823178 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.630553229 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.6299058 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.630336582 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.630076702 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.633215928 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.629257674 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.631365902 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.631011736 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.629748168 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.632075909 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.631614118 seconds)
  done (took 112.209889683 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.632841439 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.632762658 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.631175864 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.631304861 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.631515852 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.633961833 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.632158042 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.633828366 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.630925343 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.631182987 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.633557033 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.633650201 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.631402499 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.631839426 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.632896474 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.632301007 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.633885566 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.632590849 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.6338797 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.632796112 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.632651261 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.637085135 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.633120525 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.633024563 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.63380008 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.632300379 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.633982785 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.63419161 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.63404697 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.63275302 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.634181065 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.63568782 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.634463922 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.634453586 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.634118836 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.63710504 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.635334563 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.634282613 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.63490916 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.634439198 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.635951611 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.635241884 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.636007274 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.635906144 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.637350602 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.635545275 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.637953751 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.636945941 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.634391566 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.634953369 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.641612107 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.636464386 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.636615732 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.637125713 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.63647577 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.637323015 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.635485491 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.636431979 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.636257166 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.636889021 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.636633472 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.636259052 seconds)
  done (took 102.822753301 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.640226666 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.637198348 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.63651984 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.638524355 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.637413459 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.636110569 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.637035966 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.63608829 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.639434735 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.641818209 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.635976404 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.637075707 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.635537591 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.638611586 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.638697142 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.640593193 seconds)
  done (took 27.69176646 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.641105269 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.637568786 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.637301364 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.639416577 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.638858545 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.637275173 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.635878208 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.640960209 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.637758335 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.637749256 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.640155986 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.637760709 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.639022602 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.638964703 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.638519605 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.639713541 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.641271701 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.638411142 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.638168792 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.641093186 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.642364787 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.639349598 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.639926139 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.642412768 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.640205364 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.641632292 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.639423141 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.638910367 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.639487326 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.638781859 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.639810133 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.6429928 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.644032248 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.640094876 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.642471854 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.639639161 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.641060989 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.641062037 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.639723948 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.640869973 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.642285238 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.644781365 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.640493809 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.640401758 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.639998424 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.642096666 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.642032901 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.641100241 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.638959745 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.639593484 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.641798723 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.643012844 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.642614888 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.641184818 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.641637111 seconds)
  done (took 91.70490668 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.641426818 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.641846984 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.644025263 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.643885791 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.643144914 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.642911504 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.641926183 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.644059834 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.642118666 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.641998748 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.642265123 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.644511359 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.641715333 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.644034133 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.643619066 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.644911759 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.641402305 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.644974476 seconds)
  done (took 31.068239964 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.643367987 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.644205873 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.64563294 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.643219994 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.645935073 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.644633022 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.647254305 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.644941861 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.646377169 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.644281511 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.644568978 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.646059041 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.646682864 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.644874394 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.645219968 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.647562585 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.645085104 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.645745594 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.645914331 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.647716096 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.645526641 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.646580616 seconds)
  done (took 37.696041935 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.63770337 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.6375581 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.637191294 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.659716295 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.646864521 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.635845941 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.637138703 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.635367319 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.661046003 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.671405072 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.666439566 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.646888267 seconds)
  done (took 21.268839564 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.646543182 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.648842915 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.645850845 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.648888382 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.645797766 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.647179506 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.649874261 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.647685784 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.647443226 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.647206952 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.651256071 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.648544065 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.648190387 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.647922686 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.648370159 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.649118648 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.648867778 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.646614699 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.649574223 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.647676845 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.64680341 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.648644286 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.649475957 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.649062915 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.65162141 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.648332864 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.649165582 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.648059506 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.648445239 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.649485035 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.648241792 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.64887148 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.651624833 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.6478724 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.651283588 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.649995226 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.649924128 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.651193702 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.651059188 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.650369995 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.651975786 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.652473334 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.652494217 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.650023372 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.651734903 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.65065369 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.649675842 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.651825208 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.650057874 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.651657449 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.653478909 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.650279551 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.651807538 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.651516788 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.653833633 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.654747507 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.654438319 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.654188986 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.6518639 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.651149074 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.652974027 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.656030561 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.655237793 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.655095666 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.652747811 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.654469468 seconds)
  done (took 110.415275647 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.652744738 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.655103767 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.653490713 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.654351088 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.654840675 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.654101545 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.654118097 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.651390167 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.654292491 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.653356199 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.654536796 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.653602598 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.653063913 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.655688688 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.653348725 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.655259932 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.651198941 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.653094364 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.654985456 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.656363354 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.655288358 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.659858492 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.655264612 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.657455253 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.653245989 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.655359176 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.653933576 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.65556884 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.654920713 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.65529136 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.654532815 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.656698732 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.656281221 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.657431158 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.656495354 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.655568421 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.655143786 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.656306644 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.655892694 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.657201031 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.656247278 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.654516262 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.657404269 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.652471309 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.657106186 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.657046542 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.656852942 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.658381767 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.65753138 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.658251374 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.655920631 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.658582421 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.657355659 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.657230015 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.65842053 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.65684952 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.657743209 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.65538432 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.658206955 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.657256555 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.657133354 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.656781355 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.657684821 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.655901913 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.655241913 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.655590072 seconds)
  done (took 110.77863603 seconds)
done (took 2115.493741263 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.62209077 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.621501589 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.645462667 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 11.954241598 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.646477182 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.374248848 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.270808949 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.646219817 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.645127638 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.648377982 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.645147613 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.624874504 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.990552011 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.646414883 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.651838408 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.624653247 seconds)
  done (took 60.759096951 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.692459146 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.670449573 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.809216172 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.655643151 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.693456898 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.932549244 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.733688411 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.659437558 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.879327671 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.664481985 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.626215876 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.686515932 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.65419569 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.637236201 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.681590166 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.93386191 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.038090598 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.628833946 seconds)
  done (took 35.782415209 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.279685357 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.639297218 seconds)
  done (took 6.425425537 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.682850521 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.655845342 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.665683604 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.655476021 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.636106589 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.62618766 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.651837779 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.635227497 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.628595648 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.823556683 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.665402283 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.677055162 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.657187901 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.656889189 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.661849388 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.719408942 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.849695063 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.678627987 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.663081737 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.667815369 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.654064249 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.914730917 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.717592719 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.669405516 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.821682213 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.631443217 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.674802711 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.679138318 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.877071379 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.666999484 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.656034612 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.658379114 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.660459267 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.632678569 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.311371788 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.633911617 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.69764556 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.672715085 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.664809052 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.87497188 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.659773984 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.672908335 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.636161135 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.310345541 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.851577564 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.96238132 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.629480118 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.667650404 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.663914036 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.869921307 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.662375711 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.663282601 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.76677111 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.64843595 seconds)
  done (took 104.5038888 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.653790541 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.626690726 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.901673321 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.658854873 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.625610072 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.630871146 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.630111344 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.042516999 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.633006474 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.629594168 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.048495274 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.432106695 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.636418221 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.679750476 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.681701214 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.66687761 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.643628006 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.6455184 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.632061103 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.632901432 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.336597552 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.633528677 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.633502906 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.830868436 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.706031752 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.33979719 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.63936266 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.630557908 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.634265642 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.631930569 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.392695258 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.641401116 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.691950492 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.630779026 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.041409386 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.18409855 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.14145451 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.634362722 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.664932391 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.6380113 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.634103401 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.336146447 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.159246926 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.628030841 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.632729274 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.357686058 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.632570804 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.634673026 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.640136431 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.998377238 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.632886626 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.634890443 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.638232977 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.63207528 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.6335277 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.70377951 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.699077725 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.341701134 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.635889033 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.636746405 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.662916144 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.635359706 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.638410094 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.638274043 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.640714158 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.165239099 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.881126853 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.64271972 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.166477664 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.388117861 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.633239813 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.48301219 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.639563732 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.662875146 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.75118491 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.636439592 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.63575403 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.333412929 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.646828902 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.634189376 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.144274981 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.637643935 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.058406729 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.654787805 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.637733751 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.364081983 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.644226197 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.706856298 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.638087148 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.635959852 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.636344818 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.646710451 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.052103763 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.697725947 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.637252335 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.637748767 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.643223066 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.636689624 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.638946754 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.645164374 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.484509728 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.644545022 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.636780138 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.637811135 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.636975205 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.64144812 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.639597047 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.638105865 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.013119825 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.637992234 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.643162584 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.638614868 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.637664049 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.643470235 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.839517023 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.644140362 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.123814139 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.641332952 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.637808761 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.642382037 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.63728083 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.674747397 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.657894835 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.642223358 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.640307752 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.088795789 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.65860079 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.637667192 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.638781021 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.638992709 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.638440894 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.640474323 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.680991137 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.643256451 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.638133244 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.666825859 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.673844139 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.638221173 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.645979702 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.639398558 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.647317791 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.640267942 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.070787423 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.057714393 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.954514118 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.63920391 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.640494019 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.617249722 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.686294255 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.909007563 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.659534847 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.640696837 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.033625225 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.891901966 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.642612584 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.641321917 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.639602983 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.023380068 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.641476336 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.066127543 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.421265371 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.643484063 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.652329252 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.618805367 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.511167028 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.643814552 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.644504515 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.05883765 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.661567019 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.642119364 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.643516191 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.643751905 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.641931492 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.64982209 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.648887054 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.642355219 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.643718031 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.720919539 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.924812715 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.66359521 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.650678135 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.345752418 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.657357755 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.64527626 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.647761353 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.645817879 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.643414501 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.704814838 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.650877322 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.682402909 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.641502526 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.647268413 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.435363184 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.643671378 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.665145896 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.928102171 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.585649055 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.647416966 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.642596101 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.644983206 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.686497005 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.375119489 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.68860244 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.113177171 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.643242831 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.720461799 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.646517829 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.669265624 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.375062429 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.658716307 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.645051651 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.557142707 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.645534604 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.428437094 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.646104997 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.646500508 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.478840222 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.646484165 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.647041988 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.647036819 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.647268553 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.052247706 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.643623257 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.674270381 seconds)
  done (took 574.810265832 seconds)
done (took 783.783046663 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.646938204 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.645715213 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.649362604 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.651782464 seconds)
  done (took 12.113858683 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.684914052 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.681329029 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.680015035 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.672400171 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.681118527 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.674744044 seconds)
  done (took 11.597560765 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.643636037 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.650200769 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.649217404 seconds)
  done (took 9.469838588 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.984933628 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.65797166 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.176294695 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.658418295 seconds)
  done (took 11.005590934 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.687119989 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.687036529 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.682869588 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.686122516 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.684291766 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.687353399 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.686611265 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.683089099 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.686981774 seconds)
  done (took 16.693612436 seconds)
done (took 62.400267452 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.743185988 seconds)
    (2/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.709116082 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.008116046 seconds)
    (4/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.638480005 seconds)
    (5/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.655981741 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.668056602 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.842012871 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.788551324 seconds)
    (9/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.632652448 seconds)
    (10/192) benchmarking ("map", identity, Int8, true)...
    done (took 2.470996906 seconds)
    (11/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.635339592 seconds)
    (12/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.295378553 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.720633818 seconds)
    (14/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.71111068 seconds)
    (15/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.845577291 seconds)
    (16/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.632907858 seconds)
    (17/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.714420179 seconds)
    (18/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.633108652 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.637387478 seconds)
    (20/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.638077719 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.919584257 seconds)
    (22/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.632372734 seconds)
    (23/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.654004535 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.815924078 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.674819054 seconds)
    (26/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.710918616 seconds)
    (27/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.632345915 seconds)
    (28/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.636305497 seconds)
    (29/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.980405329 seconds)
    (30/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.63778236 seconds)
    (31/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.727798975 seconds)
    (32/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.98684735 seconds)
    (33/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.637211058 seconds)
    (34/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.941643767 seconds)
    (35/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.652150389 seconds)
    (36/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.784723253 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.808333937 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.902994229 seconds)
    (39/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.942652623 seconds)
    (40/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.636874703 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.841642991 seconds)
    (42/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.881679857 seconds)
    (43/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.973092668 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.808288679 seconds)
    (45/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.644811676 seconds)
    (46/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.156652184 seconds)
    (47/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.671090787 seconds)
    (48/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.055538697 seconds)
    (49/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.865582628 seconds)
    (50/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.813793849 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.906298629 seconds)
    (52/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.988360461 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.912748542 seconds)
    (54/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.635134258 seconds)
    (55/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.639686513 seconds)
    (56/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.638685618 seconds)
    (57/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.766457104 seconds)
    (58/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.636149262 seconds)
    (59/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.870719034 seconds)
    (60/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.724313686 seconds)
    (61/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.760395438 seconds)
    (62/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.034022483 seconds)
    (63/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.912383132 seconds)
    (64/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.772973225 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.827411154 seconds)
    (66/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.813185462 seconds)
    (67/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.636390424 seconds)
    (68/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.645522451 seconds)
    (69/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.63727196 seconds)
    (70/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.641431916 seconds)
    (71/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.981702003 seconds)
    (72/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.099651849 seconds)
    (73/192) benchmarking ("map", identity, BigInt, true)...
    done (took 2.640724285 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.664901731 seconds)
    (75/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.657049336 seconds)
    (76/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.640516158 seconds)
    (77/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.6566159 seconds)
    (78/192) benchmarking ("map", identity, Bool, true)...
    done (took 2.497013971 seconds)
    (79/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.659779362 seconds)
    (80/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.641187821 seconds)
    (81/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.821335241 seconds)
    (82/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.644839403 seconds)
    (83/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.636637801 seconds)
    (84/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.670768189 seconds)
    (85/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.640438075 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.830874024 seconds)
    (87/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.639796932 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.858826741 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.843530591 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.817251482 seconds)
    (91/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.653784955 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.869893441 seconds)
    (93/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.853516708 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.863936329 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.721597069 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.848732929 seconds)
    (97/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.636371846 seconds)
    (98/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.829903509 seconds)
    (99/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.820677546 seconds)
    (100/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.640547377 seconds)
    (101/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.642502933 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.817929989 seconds)
    (103/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.670969263 seconds)
    (104/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.660501311 seconds)
    (105/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.77549254 seconds)
    (106/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.639199999 seconds)
    (107/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.686852427 seconds)
    (108/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.045235361 seconds)
    (109/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.830162131 seconds)
    (110/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.723913285 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.870865213 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.921292366 seconds)
    (113/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.663585502 seconds)
    (114/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.985345762 seconds)
    (115/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.555695735 seconds)
    (116/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.860370163 seconds)
    (117/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.714445601 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.725628307 seconds)
    (119/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.659167622 seconds)
    (120/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.826548124 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.027989173 seconds)
    (122/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.643889352 seconds)
    (123/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.641655897 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.846098516 seconds)
    (125/192) benchmarking ("map", abs, Int8, true)...
    done (took 2.48301226 seconds)
    (126/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.799610411 seconds)
    (127/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.848718751 seconds)
    (128/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.831622582 seconds)
    (129/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.898026348 seconds)
    (130/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.640381294 seconds)
    (131/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.644922025 seconds)
    (132/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.909032566 seconds)
    (133/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.79647356 seconds)
    (134/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.72212912 seconds)
    (135/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.642606228 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.913278218 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.817849393 seconds)
    (138/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.835005485 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.843262611 seconds)
    (140/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.42172842 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.797022932 seconds)
    (142/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.891836595 seconds)
    (143/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.618285118 seconds)
    (144/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.096059212 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.01254999 seconds)
    (146/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.642964863 seconds)
    (147/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.731516487 seconds)
    (148/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.675675308 seconds)
    (149/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.736088367 seconds)
    (150/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.642604971 seconds)
    (151/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.662682454 seconds)
    (152/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.646073708 seconds)
    (153/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.647295791 seconds)
    (154/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.656703901 seconds)
    (155/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.653877913 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.868948698 seconds)
    (157/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.950865819 seconds)
    (158/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.624695151 seconds)
    (159/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.865944056 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.795445636 seconds)
    (161/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.644010108 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.732828664 seconds)
    (163/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.613724552 seconds)
    (164/192) benchmarking ("map", abs, Bool, true)...
    done (took 2.500103889 seconds)
    (165/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.627287241 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.855067882 seconds)
    (167/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.642584857 seconds)
    (168/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.427946039 seconds)
    (169/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.2189893 seconds)
    (170/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.647496306 seconds)
    (171/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.649232071 seconds)
    (172/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.814873107 seconds)
    (173/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.646542343 seconds)
    (174/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.586446503 seconds)
    (175/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.802222265 seconds)
    (176/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.193064565 seconds)
    (177/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.637207148 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.922246537 seconds)
    (179/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.821268612 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.964289873 seconds)
    (181/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.643694146 seconds)
    (182/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.83357751 seconds)
    (183/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.966845435 seconds)
    (184/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.648550699 seconds)
    (185/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.670356685 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.726053501 seconds)
    (187/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.615457594 seconds)
    (188/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.155161282 seconds)
    (189/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.6682113 seconds)
    (190/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.947293926 seconds)
    (191/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.648132419 seconds)
    (192/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.773456387 seconds)
  done (took 427.817124381 seconds)
done (took 429.344125895 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.724985349 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.846021831 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.697041153 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.695262715 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.705474558 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.669099262 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.726530169 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.695156137 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.715649525 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.718065405 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.663115749 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.709476953 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.717609062 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.706786666 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.739488171 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.6958058 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.69456088 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.705161808 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.71971743 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.723791761 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.698312404 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.705370425 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.730887706 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.696435141 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.712253283 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.711102368 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.712094884 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.665357585 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.704586596 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.718042428 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.672665917 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.710521778 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.721512771 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.706821447 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.700196583 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.707754666 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.705761815 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.846856015 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.725284619 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.71012068 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.704374279 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.720614961 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.710477429 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.713546185 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.707796362 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.732583033 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.7142916 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.720547843 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.668601433 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.67818687 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.732501458 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.719179164 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.703885808 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.682008515 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.672555917 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.720273577 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.710549784 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.726649667 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.707348819 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.707423758 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.741693479 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.728973776 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.717337588 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.715204008 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.707971663 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.724096269 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.708824705 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.725351178 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.70605452 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.708729371 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.704728444 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.706998006 seconds)
done (took 132.824153969 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.877548045 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.668881986 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.914115476 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.705839618 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.929278297 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.881790973 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.706398628 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.70382358 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.703363186 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.565475539 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.703721262 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.709149816 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.67148958 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.706641816 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.88009837 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.706816628 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.707996038 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.462230288 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.709310591 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.885423419 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.673355389 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.70906894 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.70796447 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.574851173 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.668918513 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.679604019 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.888621661 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.706279618 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.467877026 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.679032857 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.667960849 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.474956068 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.890766416 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.725553857 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.713092915 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.716093227 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.934768591 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.711505143 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.880939818 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.877200655 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.917375178 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.746608559 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.676656718 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.676632832 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.712249721 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.712029511 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.711232902 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.735624551 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.672818939 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.706718292 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.464914078 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.716381182 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.719596954 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.708648495 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.707923124 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.730085579 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.710116698 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.709090172 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.893274138 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.71236936 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.882297393 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.571756786 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.568865985 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.708910749 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.674857257 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.708707092 seconds)
  done (took 134.15105797 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.825320036 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.838549232 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.881110929 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.70363417 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.797622449 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.887129781 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.702836024 seconds)
  done (took 14.187943383 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.713321087 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.710050699 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.793211623 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.791869274 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.713421379 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.93889656 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.710847308 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.721982873 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.713912782 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.7933974 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.711135124 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.709958019 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.718695303 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.676371346 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.793237394 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.722291501 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.879132047 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.704653085 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.713181473 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.914718904 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.709486101 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.723600816 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.798027598 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.721764688 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.712856083 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.715520947 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.537749459 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.709166368 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.711758179 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.712215359 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.712328712 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.827226773 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.708985968 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.677116762 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.711954432 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.875659537 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.719856694 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.714480452 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.713289309 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.680707232 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.712623442 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.714750178 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.71301134 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.713586692 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.710335582 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.740911047 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.711076807 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.712748039 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.710603212 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.711798896 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.79637264 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.715843265 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.714581233 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.712269416 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.800788913 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.721012568 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.712824584 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.715554541 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.715548046 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.715137798 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.918609623 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.797337148 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.711914064 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.793964442 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.713228337 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.715172859 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.715600566 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.715028636 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.85292606 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.717045234 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.79889817 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.714713442 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.949309405 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.740691746 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.718239449 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.715460186 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.714457195 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.716937678 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.67968294 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.72173326 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.716700288 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.711083163 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.724089705 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.716333411 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.714258426 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.924168011 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.876022293 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.714717144 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.730535985 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.725123355 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.715664262 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.803140958 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.717981107 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.719227494 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.799442583 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.884914834 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.801922437 seconds)
  done (took 175.683466597 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.73125514 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.72856248 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.722238282 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.747930935 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.712882064 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.711281232 seconds)
  done (took 11.911357932 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.71409381 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.721883209 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.718120998 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.718798878 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.720230485 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.721427215 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.721300942 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.713192788 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.72482653 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.718420827 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.720245501 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.723522314 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.722328867 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.720803672 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.720196961 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.719645634 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.723378999 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.72057131 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.72016616 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.719489818 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.685157659 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.720833774 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.723135812 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.715017601 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.7262258 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.718124281 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.743667613 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.721665584 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.720935253 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.725672867 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.72682015 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.722732618 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.71621084 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.717394928 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.723469863 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.715516058 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.724568257 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.72077811 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.719896993 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.724039698 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.724920467 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.722370701 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.720010974 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.721480784 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.714224344 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.720629976 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.726089679 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.747130833 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.72329086 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.722007107 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.724326257 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.721940828 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.726657629 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.725436733 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.716453608 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.717451989 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.727493001 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.72394206 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.727304079 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.716746802 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.728952194 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.72695613 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.716767544 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.725654708 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.722511361 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.724941279 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.715937061 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.730490728 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.721549368 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.719357748 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.728168436 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.723438085 seconds)
  done (took 126.527257275 seconds)
done (took 464.005173924 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.085888017 seconds)
  done (took 4.646514756 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.841571055 seconds)
  done (took 4.403408003 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.717923 seconds)
  done (took 28.282440177 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.775949582 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.695156417 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.716343538 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.688588542 seconds)
  done (took 12.434737756 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.332159348 seconds)
  done (took 4.889855616 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.700168855 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.695826893 seconds)
  done (took 6.955311705 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.129986362 seconds)
  done (took 4.686870725 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.572683231 seconds)
  done (took 5.141448714 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.704727046 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.698719369 seconds)
  done (took 6.973157341 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.671834107 seconds)
  done (took 4.234359271 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.767988933 seconds)
  done (took 21.325740446 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.71402809 seconds)
  done (took 4.279005173 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.731709737 seconds)
  done (took 4.289231194 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.131867607 seconds)
  done (took 7.693354372 seconds)
done (took 121.791754877 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.687984904 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.691397279 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.691463628 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.69345173 seconds)
  done (took 12.322900699 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.840897226 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.842531442 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.845670878 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.832215954 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.833892634 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.848646675 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.76043434 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.759153451 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.818835621 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.816518149 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.850719843 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.836630063 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.840576794 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.758689844 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.81787272 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.847768002 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.820605469 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.844070953 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.760300594 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.834795542 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.729977604 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.83520544 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.817514504 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.729649769 seconds)
  done (took 45.088073073 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.27429752 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.850508643 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.931567275 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.812588738 seconds)
  done (took 9.425416388 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.891044525 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.892219464 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.908814661 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.948237342 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.000009428 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.907031544 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.757929902 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.755463457 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.742283918 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.89336989 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.971958585 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.889530226 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.114914264 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.727213565 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.109680498 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.725256613 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.726440283 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.892418582 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.945732206 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.969975232 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.729827376 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.891218569 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.898679993 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.886164295 seconds)
  done (took 46.737351239 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.744997251 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.754309539 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.729014562 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.754668872 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.727213635 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.729678543 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.73234236 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.742023549 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.729188188 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.730702976 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.730939039 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.74937609 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.734398208 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.73125095 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.744477283 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.732685002 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.733923217 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.746152287 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.746108985 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.73121128 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.732061738 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.741597028 seconds)
  done (took 39.791224639 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.695731699 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.695037197 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.131149639 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.034212102 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.693158537 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.698497483 seconds)
  done (took 16.513076209 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.828183948 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.040155455 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.732959617 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.210946727 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.345080614 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.732754633 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.72431613 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.087180499 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.481464018 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.461443596 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.795533287 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.822590987 seconds)
  done (took 25.831040387 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860661052 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.706400235 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.70432106 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.800962469 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708211498 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.705206717 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.712811385 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366227088 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.736468094 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064779676 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.720577177 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872292909 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.045040574 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.714949087 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.714166376 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.687417164 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023582817 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.422625461 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.707085517 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.707149282 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776074527 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.726468568 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.720135011 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.015293635 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.712528248 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.710741778 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.05672523 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.705264894 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14717067 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097891499 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105716027 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.713485213 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.07165604 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31284488 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894477014 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005955716 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.732283344 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.710724248 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.728465959 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.715393976 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.717245608 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.715927703 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089661961 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.70959708 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.708891822 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.715105531 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37949337 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.745824731 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.710202952 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.711289125 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100927639 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871261143 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.737221403 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.7094428 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.731441198 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713950216 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.739011155 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911144077 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.443485097 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.714736281 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.718670998 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.715606223 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.709095619 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.711727657 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.596033965 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.744805537 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.741300692 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.739379359 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708329879 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.716109779 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.76869838 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.712006604 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.761047896 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711788769 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.71259341 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.718493672 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.738012076 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.468376181 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715894249 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.717048306 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026165757 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71103581 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.709329936 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.710643162 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.712248324 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.710371759 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747995887 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.686478427 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.779529086 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373212334 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.018159712 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767861681 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77022958 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.015074543 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.686245297 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.713340991 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.733717675 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.720312549 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763770449 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376793515 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713924655 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.740708298 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053163465 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.013505628 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711824667 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.703611332 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389575867 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.725159603 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.773745041 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.713490451 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.01883368 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.567764658 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125302875 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.734356443 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786337564 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.714887138 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.713607296 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.72408279 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.74533249 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.714333366 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154442475 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.694068918 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.721446771 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862371465 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.71702896 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.714994623 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.715784947 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71904884 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.71494776 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.012486783 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.728331794 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.110434924 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.721574022 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.716599087 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.72994387 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.718671627 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.724013578 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.024712989 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.727028416 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070196845 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715650991 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.717626871 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.716010115 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.024561713 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.733704125 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.743121734 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143685729 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719074332 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.725745013 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114472029 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786174066 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912941583 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781246903 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.72146032 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.060638228 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.746411608 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.74853108 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.717752166 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.724513222 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.723565616 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.746587747 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.729687833 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.568686493 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.724520556 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.727161743 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.716676611 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.763463217 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868474964 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.746280725 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.018785699 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.729487039 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.727853033 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.747569227 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.730517687 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029106216 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108900859 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.73609591 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972489728 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.381769637 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.577791352 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.770362697 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.719558821 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.718570847 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.719148992 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.716994808 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.718948409 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.71948444 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019011286 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131472096 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.732824335 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.576145682 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.729502054 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.735719745 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.755533578 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115397636 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.757341209 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719280783 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.720264986 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.741937505 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.783859944 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.121762411 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024771446 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.765706729 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.719686212 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.323288597 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750922376 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.720739558 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.721770346 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777857924 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.739250431 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479984571 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155326246 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.718040751 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116337769 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.740437802 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.771173555 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.722677583 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719244116 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.732182005 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.742484781 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.752662821 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.026910196 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.738724317 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.729432004 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.449738685 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.721675501 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.505394995 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.740299727 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.736722526 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.725240689 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390196896 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.729269553 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.722518624 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100180616 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388023016 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.729594385 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384172667 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.744547334 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.72429427 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125735123 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044366955 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.737803739 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.728855673 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12991673 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031888623 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784451151 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.739528051 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.725942384 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.697832105 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481640298 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.737143739 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981498905 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388095651 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.727226696 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.730477179 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.793889712 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.746697189 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.303967285 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.727399971 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.722874955 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.725528784 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.728458766 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487963449 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.74142948 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.727254143 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.570305414 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.727760912 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.400099832 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.728384245 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.029856869 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.130733803 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.113025337 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.729568544 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.728500182 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.067311772 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125477618 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.733353242 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.724981718 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.51902033 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.681722026 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.758046258 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.726575286 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.750653138 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.743241511 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172945596 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.744900382 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.728525184 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.732745833 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.727666556 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.726309121 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.72655615 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.727039521 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.725988968 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.425628217 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.724366974 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.727878105 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.747158001 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.730192296 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.064308387 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.773746438 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.569573338 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047618556 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.718181621 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789914556 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.755139602 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.726183058 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.708259968 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.725711629 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.72579488 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.734475522 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.036625887 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.724708568 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.706958057 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.786024536 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.030082177 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.726769445 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.727576041 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074211323 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.733146303 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.751596834 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.728404988 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79449328 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.72915215 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.734455338 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.729142721 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790781146 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881484789 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030729256 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.13096407 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.130447664 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.313499992 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.73436224 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.735889389 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.775085295 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88962521 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.728978454 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.735332615 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.736410126 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.56441933 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.736059732 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.590974313 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139643107 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.737562228 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.733011649 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.729160391 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058294424 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.731318487 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090354227 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.730399585 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.741870666 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783855615 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.733795688 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.746931296 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03750847 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.084288093 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.732037782 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.743592185 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.737043097 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.732119566 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139406345 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.03796216 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.449595092 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.493195678 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.734147338 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.741370673 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412824424 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.098213188 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.733558646 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.734004164 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.732253452 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.731983515 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.755209305 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.767735897 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.735112266 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048248174 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123199396 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34876104 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.12490073 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.77067887 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.69136152 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.730690754 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.074562205 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653096878 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03650576 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.597518651 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.71827877 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07632004 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885895127 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04135463 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.738622698 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05813784 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.738334323 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.738459968 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.733486221 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.732464652 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.732604963 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.124396265 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.592851507 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081252092 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.762537751 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.739095803 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797625592 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.036089366 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.04408263 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.736820374 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045243672 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142851616 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.746879265 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.73519419 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.575853256 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139427437 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.740071625 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.762074842 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076124415 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.739494945 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.800405973 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.695061851 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.735777154 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.49766119 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.035667036 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784402681 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.74977251 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.727794226 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.599467363 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.741885403 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.444960703 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.738532812 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.735377453 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103132738 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.76734262 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.737603015 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112954587 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.76428029 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.736140049 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047506111 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.57943772 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.743338521 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.746644039 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.739170463 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.74728162 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.738427561 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.727785147 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.743937899 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.738801003 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.309498784 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.744674445 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.738599511 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.782421703 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.744254629 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.743590368 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.744387816 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.737856469 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.768302729 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.75205632 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.722525469 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.756168645 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941035029 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507257871 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.750042446 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.43989721 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.165484801 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.078500276 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.74835131 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.719172319 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.769577821 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.740116882 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.740242526 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.739769841 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.736185935 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.506815636 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.7489231 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.138332186 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772997879 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.040986497 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04003051 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.744177874 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052821242 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.763661776 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.794659712 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.715584991 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.743199328 seconds)
  done (took 1173.269386801 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.766346126 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.770223155 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.746029645 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.787750733 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.776641499 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.827990836 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.803633409 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.808519924 seconds)
  done (took 23.886517693 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.752149349 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.768067643 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.740833314 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.769295453 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.74580755 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.409258398 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.74950397 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.767045725 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.792449794 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.746680566 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.750526167 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.585699202 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.77175219 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.739685332 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.760204003 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.769246494 seconds)
  done (took 39.224205118 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.370721654 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.744136737 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.828025338 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.817923495 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.782535684 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.74964477 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.341378747 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.744711531 seconds)
  done (took 31.981879959 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.779325639 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.778758179 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.780261163 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.780341062 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.78061917 seconds)
  done (took 10.503431897 seconds)
done (took 1476.131166298 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.772005015 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.773509886 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.772622761 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.772279981 seconds)
  done (took 8.694450041 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.721391457 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.720253951 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.719064275 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.755032815 seconds)
  done (took 11.518463696 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.288089498 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.507745782 seconds)
  done (took 6.398209298 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.745658508 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.591214497 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.579617771 seconds)
  done (took 9.520770134 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.126032508 seconds)
  done (took 3.727524359 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.2578316 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.341103363 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.740532368 seconds)
  done (took 8.942672249 seconds)
done (took 50.404463167 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.751017081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.509793809 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.896793929 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.739245822 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.959434855 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.895799599 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.020453928 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.739426431 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.73944061 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.749314979 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.742028159 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.904891048 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.006097773 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.510588952 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.006630871 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.511728622 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.916169577 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.738270489 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.779224998 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.737491338 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.019509184 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.745196439 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.737588698 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.741846432 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.904356204 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.881606942 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.739972381 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.510856583 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.754724536 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.750131703 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.88770262 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.73820365 seconds)
  done (took 94.868539082 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.754808834 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.736752349 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.739054666 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.739998432 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.746774223 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.740290997 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.736261364 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.747443163 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.75126404 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.744458705 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.73917598 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.748200801 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.738155111 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.739991937 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.74063692 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.739216139 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.738950324 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.757479426 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.739624641 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.739342413 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.742020477 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.74035567 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.738316304 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.739574984 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.737078786 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.741106254 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.74337854 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.747696338 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.741713594 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.7460668 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.741188737 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.741246146 seconds)
  done (took 89.363280696 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.739985581 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.746258935 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.740407003 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.7403776 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.739887244 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.739105651 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.740814317 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.756020371 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.740205301 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.741128114 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.741232038 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.740550387 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.739956737 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.756937946 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.739800222 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.757287781 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.758066651 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.741344762 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.743284673 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.744195893 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.74053146 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.751919779 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.741284908 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.751668841 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.757682245 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.744073879 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.741528444 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.741093193 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.740986406 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.741516921 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.74182953 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.762798118 seconds)
  done (took 89.450371729 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.071337983 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.778671087 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.782695481 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.753073838 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.783055931 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.779730021 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.753668187 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.073745482 seconds)
  done (took 18.384225187 seconds)
done (took 293.669623568 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.757007089 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.753240828 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.808500019 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.752280929 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.800340812 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.811401017 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.077242714 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.813537252 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 2.069157607 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.761686944 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.799499224 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.753997767 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.772466247 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.985380403 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.746487455 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.752447222 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.754855838 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.751463088 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.794177458 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.100048616 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.817026732 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.748745843 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.755944104 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.768746012 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.751651799 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.862521065 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.865207999 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.997920057 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.964448621 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.864910824 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.747969068 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.756147622 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.77880155 seconds)
  done (took 79.905773704 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.773759917 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.782288865 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.785946523 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.784286955 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.785496954 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.784454294 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.775409988 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.782204427 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.785440243 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.784798053 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.787003851 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.784274733 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.787342999 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.784677507 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.784851342 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.761837661 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.775772953 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.782759176 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.776383994 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.764187192 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.783459615 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.78586418 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.786999241 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.786485767 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.785186999 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.786425006 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.785619317 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.787477724 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.783789615 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.785198593 seconds)
  done (took 55.079600487 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.787459914 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.754279158 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.768369706 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.794951369 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.778557316 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.782870433 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.192175485 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.788166777 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.784381799 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.783209164 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.749538471 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.792770645 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.848101843 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.750035532 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.790728695 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.788647565 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.789453254 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.781470605 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.766005858 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.802426272 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.20659778 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.792105756 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.201478904 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.807488927 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.784782199 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.782663144 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.794989782 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.752380104 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.785085031 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.753567894 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.768830939 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.18665991 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.758094098 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.759614474 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.773170736 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.796803979 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.790525667 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.75211366 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.786098009 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.785541584 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.189882107 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.785445202 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.752708568 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.762477337 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.788701762 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.792283222 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.752032713 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.75620133 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.106721882 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.797018322 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.764352995 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.79155841 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.792598067 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.787784257 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.106258414 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.78863653 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.786165056 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.753046878 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.820689838 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.206346422 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.807833105 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.785418383 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.756367762 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.794221179 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.756536987 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.792847889 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.807124566 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.787280492 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.756299667 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.793812886 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.754215602 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.787827139 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.793348093 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.756653063 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.763712201 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.75485479 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.78802039 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.772390958 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.756556962 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.220761732 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.800813497 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.758218066 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.228924014 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.796620297 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.793315058 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.797309211 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.795143293 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.910203944 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.202339767 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.763225478 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.76002982 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.75992841 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.21873871 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.808057086 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.787883781 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.764943992 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.797999103 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.793398518 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.758641794 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.763163668 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.793803597 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.811176477 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.758664213 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.796088386 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.217097579 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.805081499 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.778725563 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.793205267 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.914386459 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.798428767 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.810889848 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.795027077 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.237550949 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.798498189 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.799352348 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.758791393 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.770568241 seconds)
  done (took 254.073552516 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.76283255 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.760945927 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.762188404 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.763671483 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.760183051 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.790037965 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.760299966 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.759848861 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.786932752 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.760335584 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.764085782 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.792084175 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.791256416 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.760838652 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.783686878 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.761893324 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.762392341 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.791104861 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.763915369 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.759971223 seconds)
  done (took 53.019617231 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.799261066 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.610884317 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.561474123 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.806574076 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.798011115 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.789081489 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.870278406 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.801763827 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.800136387 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.243237984 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 2.038816179 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.801360005 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.798855497 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.799830132 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.546462857 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.782099665 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.220795256 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.563733489 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.801407776 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.563153806 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.780240071 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.799147224 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.788450333 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.565454448 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.229773004 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.206304237 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.876361862 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.566340105 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.802293085 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.798838246 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.566415953 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.802696558 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.792732442 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.553636115 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.800283891 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.821698625 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.799819167 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.87619529 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.874311252 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.219244081 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.572804475 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.2091018 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.821278879 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.032473613 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.804770425 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.778446896 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.576169847 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.80641826 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.777178858 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.802603739 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.813712344 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.562369348 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.801080919 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.543620526 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.803111625 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.800664386 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.570488538 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.545265149 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.536694087 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 2.03676955 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.801712565 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.19792021 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.803202628 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.577631834 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.803510977 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.802221777 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.801814952 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 2.036943804 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.574898037 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.19920962 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.22636908 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.224184095 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.803064831 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.885722199 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.806645175 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.224866235 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.883958148 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.290250527 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.228211772 seconds)
  done (took 164.514057204 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.179825591 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.92704198 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.349805446 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.569359344 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.486059017 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.008742872 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.948072308 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.134870154 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.788365965 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.968425524 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.718202503 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.919629235 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.682885862 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.892801452 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.930595853 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.992634189 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.385015511 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.79406229 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.639878157 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.693268118 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.801024418 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.965217924 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.693736474 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.283754869 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.775208077 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.682656782 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.794785845 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.508150723 seconds)
  done (took 68.141921122 seconds)
done (took 676.340475297 seconds)
SAVING RESULT...
DONE!
