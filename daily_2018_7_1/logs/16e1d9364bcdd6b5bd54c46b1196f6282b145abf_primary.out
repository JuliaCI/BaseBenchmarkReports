cset: moving following pidspec: 16990
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.025795904 seconds)
loading group "string"... done (took 0.547162858 seconds)
loading group "linalg"... done (took 8.925564966 seconds)
loading group "parallel"... done (took 0.171069718 seconds)
loading group "find"... done (took 1.4477086 seconds)
loading group "tuple"... done (took 2.099416556 seconds)
loading group "dates"... done (took 1.374036931 seconds)
loading group "micro"... done (took 0.219309565 seconds)
loading group "io"... done (took 0.637814566 seconds)
loading group "scalar"... done (took 43.624935588 seconds)
loading group "sparse"... done (took 13.864570009 seconds)
loading group "broadcast"... done (took 1.136208925 seconds)
loading group "union"... done (took 15.257637042 seconds)
loading group "simd"... done (took 5.370470091 seconds)
loading group "random"... done (took 10.485310021 seconds)
loading group "problem"... done (took 2.25414091 seconds)
loading group "array"... done (took 25.566168748 seconds)
loading group "misc"... done (took 1.074618907 seconds)
loading group "sort"... done (took 3.611484182 seconds)
loading group "collection"... done (took 21.407130033 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.656169517 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13526829 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148941738 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.19518843 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.21000011 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.150096883 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.166702608 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.568867696 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.003238108 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.213769904 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.145640595 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.557658621 seconds)
done (took 5.875997535 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.242852694 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.449336983 seconds)
    (2/2) benchmarking "String"...
    done (took 0.131296032 seconds)
  done (took 1.250390959 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077339894 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.181818748 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095727648 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.112921156 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.112602662 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112357079 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.111959499 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.095766375 seconds)
  done (took 1.499108129 seconds)
done (took 3.753720854 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.492243678 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.851603415 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.544974785 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.141163654 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.163095685 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.152567043 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.320540264 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.177145336 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.125269631 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.119880289 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174105341 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.364039276 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.493346146 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.962674806 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.112524234 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.129441417 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.08585052 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.727521927 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082599374 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.143613294 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.544645545 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.114890464 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.132879573 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.143482822 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.207346674 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.119135915 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.183953981 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.111356739 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.680269869 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104316984 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.188075289 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.101548432 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.167177912 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.252346842 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.098142487 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093614163 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684993944 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.192243944 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.115911558 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097531987 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.684133386 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082423717 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.204410388 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108903433 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.123978971 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.197591829 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114354781 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077785253 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.104991698 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.102581108 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159693788 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.465465664 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109003811 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.148707485 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108446447 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.690604464 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099636903 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.158988859 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.14322945 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108566153 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.097785137 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.122849185 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157067914 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.110147262 seconds)
  done (took 19.899028526 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119218913 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.142856344 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096404837 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141214749 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14239147 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099428447 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083715427 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096180815 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127569806 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.189673475 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139998811 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.129101739 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093665648 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080099081 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119273693 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.251760679 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122980673 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.107837635 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099632347 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090903737 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142911756 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114125393 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.09417003 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.112475318 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172838359 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209267485 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.124350406 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125250922 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.080730264 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.117162917 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14355232 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.164891302 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07693831 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095143954 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.185078572 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121527779 seconds)
  done (took 5.246348846 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.201027882 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117822243 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.196157682 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.166752842 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.182149545 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152968485 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.187694991 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12075618 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257502713 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.200216681 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18573504 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132275248 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098316952 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096364413 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081808394 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097135467 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.710555816 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.181781038 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15283132 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125771999 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08956558 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099910192 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.392177169 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100708657 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082314802 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104392391 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.073138965 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.177175243 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.101872041 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10391432 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.285077782 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.102368976 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112159439 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133052205 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.202227634 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135292775 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083607366 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143771111 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106047014 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082966605 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.235681433 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095082587 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096986655 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.109160111 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136630458 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13575163 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099592016 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095829097 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.24494738 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084349767 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122190074 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.074998712 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19930378 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.097843395 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100461855 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.354436056 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.120636324 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087156744 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.102411445 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.308902323 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135480494 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083581659 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096635765 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087149282 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097218806 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.402091167 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.093004307 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.891331468 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.097773951 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.15922618 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10252308 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108618699 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086546185 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10517747 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102392774 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.10010997 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07936008 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.099936373 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078729223 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104496697 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11633788 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086108266 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099108025 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147851797 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117840537 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.121731793 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110266063 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103142742 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097245197 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114190347 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099884316 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084257385 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.149033258 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107235435 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11570506 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08481621 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102488573 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144956705 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099464773 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.17066375 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09635739 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124655362 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085949565 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130463803 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.121515476 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098037188 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084798333 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096912547 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080667703 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163849908 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081991496 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097522907 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084850323 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112392678 seconds)
  done (took 23.928391402 seconds)
done (took 49.747767177 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.440816008 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.098571096 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.117483296 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.111317676 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.1116334 seconds)
  done (took 1.628725071 seconds)
done (took 2.350106408 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.358040177 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175200767 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.119445498 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.181490122 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.104295407 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.191542357 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.169946979 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11979703 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20262939 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.102345004 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.180860444 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101997639 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10623866 seconds)
  done (took 2.865937524 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095522811 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11995958 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081941655 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111337132 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076168879 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111643658 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092399089 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.140616477 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091755114 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103321029 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076051867 seconds)
  done (took 1.816718189 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092010061 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.1150995 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081770221 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10800814 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076233094 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107559204 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09102194 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118083086 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090501344 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104311502 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076131544 seconds)
  done (took 1.781887686 seconds)
done (took 7.176590633 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.059316399 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.846368007 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117813156 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.163456971 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.335700518 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.21201479 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.509884154 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130745385 seconds)
  done (took 11.284337199 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.113495719 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.116120738 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101320945 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.083986432 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09858876 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.082568106 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097407821 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.083053235 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100192631 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081444565 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097277457 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08115778 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097303934 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08307245 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.099265218 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.084603067 seconds)
  done (took 2.285728404 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116773543 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115802931 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104103525 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111012579 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085189016 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103329139 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088019187 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.104209642 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100400516 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.086162215 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.107849796 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09058128 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106532184 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.101071928 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.08848359 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109553943 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084352488 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104605992 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106127002 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088439864 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108368731 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.085162928 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.10603804 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107710761 seconds)
  done (took 3.242712793 seconds)
done (took 17.534673379 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.172320727 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08569661 seconds)
  done (took 0.983054855 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.10231072 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.12069244 seconds)
  done (took 0.954265096 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.10827485 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098772515 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138154659 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.116262863 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082973187 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098976755 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.133009639 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.083111753 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099688244 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083834691 seconds)
  done (took 1.775384576 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086655571 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103946554 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090120727 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.120602312 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110836562 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084431923 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.104603728 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086457691 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.105383421 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081149998 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106721652 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118255514 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089157563 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120795196 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105624402 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.088362479 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109329554 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102930623 seconds)
  done (took 2.547867724 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082945083 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.083851089 seconds)
  done (took 0.896967112 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084389288 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097477944 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084609293 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101235226 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080423642 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.097340969 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080468596 seconds)
  done (took 1.359038283 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.678789008 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.238262642 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.336077464 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.116550893 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.136675549 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.384581194 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.135934944 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.113392725 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.096184913 seconds)
  done (took 3.010836918 seconds)
done (took 12.256091077 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.217174281 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.192582341 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.536963145 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118959473 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078821468 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161447328 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.262800307 seconds)
done (took 2.31065315 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.360663878 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.125281077 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090182464 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08070416 seconds)
  done (took 1.389752002 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080670938 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105444591 seconds)
  done (took 0.927715793 seconds)
done (took 3.061634859 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080536261 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079181983 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.094356961 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078880806 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.115276355 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.096557298 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077861108 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095837272 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077280957 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07928749 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099999516 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079775777 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.097601916 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079723865 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094635593 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077938101 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097643174 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07763542 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094430769 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077356557 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079296998 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095558518 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077299459 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097167699 seconds)
  done (took 2.897036357 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10145967 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098698545 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.085708408 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.103339692 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102767344 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085996653 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103396652 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.080613316 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102940882 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.082508456 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10123679 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.101862279 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.082513392 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.101787447 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082184917 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102661344 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085935669 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098009811 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082309911 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10169928 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103406328 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081300959 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101967811 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086480936 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102046175 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084582671 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.101636132 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098659177 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086038051 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.102655727 seconds)
  done (took 3.577449953 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089121797 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07734541 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.096211706 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.107763411 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078086692 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081785297 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.096537356 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078283486 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.096707138 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07757216 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098264203 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.077480164 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.095719298 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079163766 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.097671167 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085203308 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115817915 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078018113 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096283678 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079605883 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101518676 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077839899 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099151151 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078032066 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095667254 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078102764 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078457987 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.095862995 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.07886252 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.09602054 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084324266 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.103563773 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.077132134 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.10931315 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084518258 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.095500277 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.087142473 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095576331 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079184347 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096468851 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077251504 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096389216 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078351884 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.107507565 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081843907 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096480035 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078199131 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097207301 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079004228 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.081965849 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.096053498 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.077781016 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096966075 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080042987 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.10141043 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077476519 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097415852 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078304206 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097211995 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077593168 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095534471 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078684493 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.102840107 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079431895 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.119799754 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.090254034 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096350955 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080358689 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100232375 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086252075 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.0983163 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097312815 seconds)
  done (took 7.199601676 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083600395 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107178009 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080943291 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098175874 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07697974 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097052121 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085262101 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09672835 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080019731 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115485302 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078440112 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098482981 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080145597 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100619511 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079592718 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098219459 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089475816 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094350766 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079270229 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099606601 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079261371 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103763858 seconds)
  done (took 2.75404953 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.226426965 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106883749 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146794814 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11579393 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099250323 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113770754 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103842493 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087124178 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103383074 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107068578 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089337967 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104115055 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098567347 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106555439 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107054339 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09080266 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10419658 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107771414 seconds)
  done (took 2.768785729 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094403453 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10345229 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10714021 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098291566 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079809695 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100982436 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106238794 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.097542239 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102726876 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082230441 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110579693 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084713058 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103267476 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081466745 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102927332 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.099712391 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.084302986 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099697429 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092757165 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105497342 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087216898 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109755498 seconds)
  done (took 2.884857416 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098866333 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102664185 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112984202 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104452004 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095979153 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080529544 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107500502 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082243825 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10902869 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.083917797 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100961005 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080694772 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.106334087 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080631609 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103222729 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080120255 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098860777 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079448162 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098927148 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075007057 seconds)
  done (took 2.637219263 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123398305 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115037146 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096679853 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124832505 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113912282 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096137074 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124996882 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113098423 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09559114 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126970794 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113456247 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.096595645 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124458638 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121355613 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096690785 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124320129 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124643665 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106825913 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11391954 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114147798 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109542677 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114205924 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124674507 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095596504 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117681736 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096657792 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114027876 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122648772 seconds)
  done (took 3.918155267 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081484754 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080860842 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.096601352 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079587694 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.097841246 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078838579 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.098081864 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078765292 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099607531 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079544287 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081920159 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099615524 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081543321 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099823435 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081441877 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100011096 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082054434 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097053747 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0784724 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095036606 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080653068 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079549807 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.099203247 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079117558 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095276147 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082280484 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096701059 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07851144 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097765383 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078545494 seconds)
  done (took 3.391786739 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089749325 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10402055 seconds)
  done (took 0.952818126 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079624058 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113600873 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076725547 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101663454 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087312219 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099360178 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091953544 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106500831 seconds)
  done (took 1.509864067 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.10667478 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.117069389 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085541587 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110003781 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.099000228 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.117131828 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164636849 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103184259 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087829461 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099535112 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.099274453 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.098359317 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090881496 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105091897 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092280005 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116835542 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.081396052 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.111685431 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.091015428 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.105154905 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088867819 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118496873 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112182644 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.091340872 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104479519 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095142779 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.116319059 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.113858793 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088378732 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113501475 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090665676 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095100903 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.088197568 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.106974744 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081329521 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.119929672 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10048099 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107094218 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107189267 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086053711 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108369813 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.075517422 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.108708722 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087759805 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111417218 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085856782 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104636776 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075617991 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099131159 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084096778 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093189657 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083891474 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092447264 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090670525 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107307425 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117247065 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083146013 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103238754 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08547197 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101780449 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087933394 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101832422 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090354242 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102780074 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108490867 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090380488 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107112473 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.075868304 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091636987 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079365012 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108478123 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105236709 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110453553 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086047949 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105039562 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078772211 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104189758 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10447294 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089264531 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109930315 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084591899 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105843964 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091266615 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102935898 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084008022 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108043442 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082527488 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101631858 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081032114 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118839995 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101099508 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078723821 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099634964 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092511741 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102608989 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084404932 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.099313878 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090168472 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092159971 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086300666 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103994053 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08780781 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110520779 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104093456 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086678046 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107433031 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092434723 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10524048 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.083957735 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095427939 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08636451 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100995209 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088931323 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092125381 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086860078 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.103022365 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085969938 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109608507 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082282359 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104142817 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110267089 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092794557 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.10118167 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077586443 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103376995 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085966252 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107801563 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092449032 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100785722 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077055367 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094027504 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089300455 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102824997 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08731848 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104757058 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085745795 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093178193 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079742732 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.112547669 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10965919 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08456733 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.105200718 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090995623 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.105627178 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08485601 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109038601 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084134254 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099590625 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108707338 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085066769 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093918764 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090311709 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103592707 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084244304 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104272954 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090212003 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104074692 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086854902 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10195525 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.086227681 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104996306 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081476326 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104126475 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086160166 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115059637 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089491455 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.099440401 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081639657 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110373233 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085482744 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106585132 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084337147 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107953869 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.089201904 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098407347 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083810677 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103161617 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115615214 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094248527 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10517294 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089369539 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110958529 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085285085 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105550476 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084712989 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105518937 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086523077 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.10807651 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107025207 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087362986 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102731218 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077916585 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10540619 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092715154 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099201313 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079286399 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099284397 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085900485 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110242255 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086682933 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105143704 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0833614 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10573222 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089932029 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104068128 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084637877 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099343473 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.085424613 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.109576837 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.087560597 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106884358 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110536895 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08730656 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094189679 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090686357 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100833981 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090540987 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094680767 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08194573 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099996093 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.087850176 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10197874 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085027885 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093533502 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092325666 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110662426 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087456993 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100505882 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086114846 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116444265 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087641264 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110557942 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088162636 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109975719 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118329985 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082616716 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103927744 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094487245 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103615193 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075796724 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108178246 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083881488 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099160378 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084117508 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102072769 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087163749 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106262439 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.086636633 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094111093 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086064853 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102219823 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082927091 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095918451 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090244629 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105735107 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103500897 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095001365 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105669876 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087028589 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10637804 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085618569 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105358955 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.089991674 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105998148 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087364557 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103605746 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081410714 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105870177 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081600001 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098184215 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085044487 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.106023624 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10583259 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088879653 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103939206 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092238352 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104893024 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087193895 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123280747 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102122807 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083093952 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1090339 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09286154 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.107095342 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087623295 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097978936 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095776963 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.105779719 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093221199 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106490782 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080512642 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107239405 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085782126 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106284741 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087157364 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106788731 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102789592 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.0864291 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104629886 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095641684 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101528485 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09284181 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105897703 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088626597 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10412788 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086299999 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103694091 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082697777 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.109059552 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.109684341 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091528113 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.108040946 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092712208 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108467825 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087977185 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104082739 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088802439 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.107107106 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088274903 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095136417 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082974705 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100922586 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086569742 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108899581 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.087491357 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103136763 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084934518 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106432759 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084721807 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096934426 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090349235 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107074735 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087413535 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113840782 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10064936 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087944153 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11500707 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076021117 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102382111 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079753682 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101198069 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092416023 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106143346 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092176609 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10558472 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082563344 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098816967 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087551857 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103383468 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077825247 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101203798 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090716048 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104048827 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085072621 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.107376129 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089524585 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106025264 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090436298 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104097647 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086075699 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106818311 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078754985 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102075458 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081909421 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106252757 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.107463815 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086795059 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082555697 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.110414683 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.109209955 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092378728 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.108343437 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089233772 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116050304 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090982749 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110432244 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096486194 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.100217343 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091803452 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.109760826 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.090822652 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.105783926 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092797128 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111953656 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092446064 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115467202 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.090322377 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113228191 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090099347 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.104391836 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.090078438 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.111780969 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.089061744 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.106897805 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.091512991 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116908172 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.103381935 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.09220941 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110996924 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088564325 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111404706 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.091722358 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.111341299 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095996614 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.110801602 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090638135 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11360676 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090736326 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112191505 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091472403 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.110178983 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114697044 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086571951 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.117154732 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092657138 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.111629911 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090290805 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.107739472 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09065793 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.109538251 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089918201 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.116312145 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.093086942 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10626148 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086994599 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.104207685 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090877 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116017345 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117170016 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092115853 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111384429 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.082979914 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.102556582 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093744132 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.106866862 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090289123 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.112939465 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096090434 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111243099 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088098262 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.109045542 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096117845 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116239948 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09361233 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109697405 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112924438 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.093110904 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.110858052 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08984182 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.110634368 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092997274 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112987722 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090454579 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.106331569 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101415678 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.116135547 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092079262 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.111240968 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.113618327 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091670922 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101290633 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.092835433 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.110141691 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094837991 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110913299 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092111429 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121408732 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086174115 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.110119953 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095830669 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10983948 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.116755368 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082759534 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.11118999 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093174449 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112070215 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082171054 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10594016 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087514319 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.111112538 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087889902 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101761364 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102401516 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.116490057 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092005856 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109515559 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090080514 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101761357 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.083636097 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.106863345 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093297456 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.110151194 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099564849 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10763628 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086758204 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.10249029 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091485927 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112284281 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093237548 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.105458832 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.082476947 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10773179 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091835299 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119460589 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109506368 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091468566 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113178795 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092090699 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10496803 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097366456 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.102142494 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093721667 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123054029 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.092591102 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.1138346 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094592731 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118984847 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.112086465 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083658276 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.112578424 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092352458 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.112411037 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.093948212 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.113563741 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107406176 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114744292 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086672187 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.111284122 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090862519 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.108559123 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.119652665 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09383848 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.112444995 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094549081 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110078549 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095551279 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118919947 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09434451 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.112733508 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.112718826 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.091415651 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111054046 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08995214 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.10999236 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.094869304 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.11391484 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09204335 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114611003 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087941414 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122396845 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099744277 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.113721638 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083564114 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.107292218 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088985414 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103728057 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.093490236 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.105690806 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.089340794 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.109447308 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.091220661 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.11445931 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094298082 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112224733 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.092755087 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.111759442 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081897867 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.115896572 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092370652 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11560859 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.086224121 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.112395141 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.093010808 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.118120568 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11668795 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.090500139 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.112190078 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091270231 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115115844 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083804494 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115653757 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090883306 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.110757604 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.088103265 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111389158 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.094239335 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113820951 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09439888 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113870394 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09295421 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118493536 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094935472 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.107054917 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084668766 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.115973016 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.085543601 seconds)
  done (took 59.614991835 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153564795 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086136453 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097743484 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078703589 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125349356 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084529852 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103208027 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.084498954 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105036729 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117625324 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0843121 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102442624 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106531836 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131982049 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128595583 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118427051 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083557817 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104387952 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083215948 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104130168 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124434279 seconds)
  done (took 3.017592636 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108471922 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121486976 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12150088 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105210573 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116325093 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.121340387 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.120564131 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102734083 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.126458457 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116025055 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.106406955 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124116673 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.116739718 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.116874852 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096993426 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118997897 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.126393234 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094962385 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.122251056 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.120699348 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097327908 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11655917 seconds)
  done (took 3.32331935 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.094995053 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.086503078 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.113263621 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.080737413 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.108095439 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.080738263 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111746975 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.083134233 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112844984 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.107175903 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.084940341 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.107488633 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.092548769 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.101230869 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.087626722 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.08293617 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112409683 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.106080589 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088826854 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.080999899 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.127443479 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100971382 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.083798994 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109401857 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.101747418 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.114573328 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.092545258 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.112302715 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089581101 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.112689768 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.089152458 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.114809202 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.096085725 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110473996 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089860856 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.112219046 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.092555196 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.106526402 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.089001771 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.116885433 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.086908502 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.114139613 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.099711198 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.110342268 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.088284627 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.115000602 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.092361754 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.107852783 seconds)
  done (took 5.610420523 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126313259 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163921188 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09677274 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.172354492 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125384156 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.127496822 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091979877 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.147868198 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105505296 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086647204 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126134429 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121396601 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08803562 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.118116449 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110957873 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089123227 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111267355 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09273798 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.116415124 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.118828526 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.096695877 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111144559 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120220893 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100605344 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112295861 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105882058 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08887153 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.125089588 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.124816937 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.097676049 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.115663825 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.122740064 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.114501766 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115193026 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108665423 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091208843 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122974684 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.107278064 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092466161 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104611619 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091181463 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.115155393 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.09252156 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124382731 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110332156 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.093532847 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117294918 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.104034328 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.126972769 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.113187075 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117867374 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10171925 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11324528 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.113039938 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.099901057 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.135260221 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.114549049 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.093066859 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.11751098 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.104818989 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.115549181 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.134234936 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.10871098 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.11330205 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116010647 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102624832 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111723529 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113952261 seconds)
  done (took 8.59401144 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10142008 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.139470041 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13194716 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109692438 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119722269 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.117948371 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098038249 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.118968556 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09851511 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128915714 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119119088 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.170447104 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.09205205 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.125460177 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11827048 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099059153 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119837805 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09831237 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.121798776 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119530358 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.099383777 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130293304 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.120046251 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109050118 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133211943 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111928007 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095138997 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117564287 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129682332 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118655934 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112229025 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.120383075 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118681472 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110244369 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.130403709 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.118952632 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089265146 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119097997 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.119737088 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099515303 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112711472 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109647034 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121697157 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.111564583 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094623203 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112590124 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123466318 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126575921 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099443584 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120893978 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.115036318 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109441309 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119884032 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.120072061 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11049657 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.137952322 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131174232 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130421225 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098293011 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.131108153 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131036448 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.139124022 seconds)
  done (took 8.079683056 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087071558 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088741071 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.10904405 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.087340972 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.111526618 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088576263 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111197695 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.090193147 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110442329 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.090546568 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11071036 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088158417 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087033108 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111162336 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08783398 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108592989 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088130716 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109088051 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090017892 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108680848 seconds)
  done (took 2.777038802 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097277121 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.131788673 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.091180651 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119933596 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092595033 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.120117895 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.113029638 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094093722 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112236423 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093900199 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.124665125 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.123910924 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092141608 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.118702714 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103129286 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.12031715 seconds)
  done (took 2.565032183 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.109187506 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119798775 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.134777767 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091637597 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10457805 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.092350883 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105771515 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.082126719 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10547875 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.099235653 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.116476459 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.097237219 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109853906 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08707861 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.113127395 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.096677458 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.108610932 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.11588742 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.092019765 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.13708925 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096798842 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.11435029 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.092093479 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.114241593 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.094861115 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.120047488 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.119284407 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.08918839 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.110500473 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.092165245 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.114929716 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.099800083 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.109315909 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.096164989 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.112796406 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.088670516 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.111814709 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090793755 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.120305173 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.111459826 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.089892198 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.113833343 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.09175899 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.112156965 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08769581 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.112476802 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.087238935 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.118112014 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.093199119 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.114868071 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.09126492 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.121369085 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.098467276 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.122742977 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.121240968 seconds)
  done (took 6.615416574 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101989586 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109304665 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090990643 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102861088 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088843095 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113478009 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089057731 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108166199 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087077264 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102909467 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087518004 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109902849 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086822878 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111250583 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106797467 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090071325 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100048033 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.087503784 seconds)
  done (took 2.596775844 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094890312 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107163882 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096752573 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111612516 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.092053997 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114330653 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087454809 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.109650318 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08985981 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.111616906 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09175524 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.114419088 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090191912 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.11483556 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092429348 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111555872 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.09444357 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088604654 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.11282399 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08590945 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115697345 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087508128 seconds)
  done (took 3.039912289 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.105035533 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.138945983 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.099477437 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.149758236 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.111019351 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.089047276 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.120994447 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.109836504 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.10789107 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.109367527 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.088779597 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.110183237 seconds)
  done (took 2.170376385 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113298066 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144955553 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082556784 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109951188 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118501602 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091523793 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110780993 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090021013 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123727172 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125271215 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11448645 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104059481 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123896976 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122931355 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125247897 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104620727 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114647149 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115779231 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089510574 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135874169 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117654149 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107188936 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112466142 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110839189 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091231916 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121890364 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123560115 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103534367 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112490677 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122178553 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118571533 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090982661 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123188042 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125402184 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088056457 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123309542 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110741919 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132959298 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099485793 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12195586 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108764255 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09951683 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123580952 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118949325 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103699135 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1119848 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117397165 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091043796 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112207113 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141078446 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126533037 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108948868 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128402468 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129639658 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130695276 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145760907 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132419399 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108214062 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126617362 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131855038 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129798771 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105374766 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129728189 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131802618 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12642841 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108092607 seconds)
  done (took 8.479697349 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12624002 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10576412 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11161469 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105203642 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123333917 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110621469 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090805609 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111400216 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110847602 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087573948 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159473254 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111028853 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122129097 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101938305 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111626143 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091103369 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112612021 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121938404 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087451058 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139956409 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114101925 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122759158 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12250027 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102286441 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125359928 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118699698 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112333381 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091767597 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112092659 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090760622 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119795652 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111615238 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101058276 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10651278 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122041021 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090874458 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112263912 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119123929 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091500947 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119658932 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121905531 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133863091 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091312519 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111788708 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125449826 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091940523 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11183719 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087369433 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113352981 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108211318 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104538594 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124433242 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125221078 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122813796 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112423542 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091715714 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110887556 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092023307 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111918631 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119679145 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102547288 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112085775 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139853587 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111940154 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091824809 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123643747 seconds)
  done (took 8.181652738 seconds)
done (took 159.897328173 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.103976271 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.142851063 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099950774 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.1703457 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085759514 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142718399 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118694575 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.123341683 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.08553372 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.108442729 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.085593712 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110257136 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151320609 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108257891 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085804328 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110560196 seconds)
  done (took 2.664475391 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.182919838 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.291309018 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105113773 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113575751 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091875391 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110817116 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.112696504 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.093110787 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108683492 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.101093202 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109944593 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089469112 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.121015676 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.088609601 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109783602 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.10890389 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.099862499 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.109196966 seconds)
  done (took 2.983379774 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119072975 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.166875032 seconds)
  done (took 1.126381596 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122984339 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.186906726 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315190072 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.164571438 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.115180277 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130168514 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.164904925 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.126838199 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19703477 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129373791 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.129665992 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094636283 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139036666 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.119116827 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.097405165 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.114222043 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119826896 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117031111 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115039779 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095420097 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.1382496 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.094654597 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.121291272 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115554659 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184983326 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.128845756 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.09483175 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.114771837 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.095347171 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115252268 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.098294384 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.129596613 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128827665 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.169919223 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.120462847 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.185673318 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10336291 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112378696 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095547324 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113837904 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096783637 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.12085988 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129580216 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093688013 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.115801653 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121375359 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.095227791 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.355536958 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100651823 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.124834137 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.121093649 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.099357765 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.19017802 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122972518 seconds)
  done (took 7.983588626 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.855319721 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.131576664 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114638221 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.960868933 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120132954 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128018847 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.824503857 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137093823 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.239993822 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.859450962 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130894338 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12602648 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.212187757 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.279843683 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.144904989 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.33727782 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.71209219 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127033232 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.118307575 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156371827 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119349015 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14159689 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131730621 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.417717587 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.090965902 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112432925 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117147339 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104514116 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165465891 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.113857156 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113871553 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.186381065 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.269957055 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206936411 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090354292 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112645488 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089183225 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.195889951 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272175635 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.198578388 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.175628084 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108978763 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089739171 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125540515 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132895607 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087888088 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.189750449 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.178198322 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.176831512 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116244031 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125402622 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099755366 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123890018 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165731587 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.110843165 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.344686103 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.34307624 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090716709 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121209625 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109287123 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272969628 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112911913 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22961973 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117452995 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219479823 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112019118 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783625228 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.193137512 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090367296 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121473138 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097039498 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118214314 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123420731 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170843756 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.381847084 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126641003 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095205859 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111394647 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20748815 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.112597388 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090706017 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169196631 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115491405 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121350586 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106507365 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127866921 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175367456 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.278348946 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105393804 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122446383 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118056776 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104228826 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115228773 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.218673021 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223949181 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161663135 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.241788957 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103209644 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.19272736 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171253801 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124901515 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.175784042 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120751268 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10846676 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126218974 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22075824 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147006859 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.112933036 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096323211 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119519846 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.152012381 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094356495 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120613493 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.173268692 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.466931826 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.172096932 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087592408 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.118396833 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120591412 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.167515654 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097577818 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268494148 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121684333 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.174171928 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120113472 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087920891 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121887202 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.168122953 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126959162 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12112094 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104259181 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121594834 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.254991272 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227580571 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128788755 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.216881896 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.181566079 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124154711 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178371918 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121775161 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.173234004 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123720797 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124829444 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093041983 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804382143 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126329089 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098575716 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11796085 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194587912 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090306878 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115029309 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.090709822 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109909366 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805295496 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094159342 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.109964302 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.092478842 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122457786 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098750612 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11949771 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116540414 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16723984 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23720074 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102929779 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120801709 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.112183736 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.166687295 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09205495 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.113631276 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.090503336 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.113501358 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122708041 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095645718 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.115006344 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.181234337 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164366774 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.230865669 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.5433902 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090955214 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.1134465 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233402594 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090617161 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.310719229 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11976204 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.206725404 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.196547148 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088489195 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.34104247 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.195308175 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.193049327 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094820229 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175459865 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110414914 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.096817048 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.190103864 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090645415 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12044785 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162966188 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130162234 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12709726 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.131679948 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114403745 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23272795 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110487954 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173960734 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114907347 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103771972 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.315960423 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113391193 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111546002 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.189840835 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094898896 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.113857642 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.581156983 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114135049 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10014271 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122909717 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228756894 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.170901596 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121232546 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120290096 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103827668 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.191857041 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.223119673 seconds)
  done (took 44.861567635 seconds)
done (took 60.456818891 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305695133 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270357391 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.307315645 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.222374639 seconds)
  done (took 2.047595649 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.181309118 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156103992 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.150294565 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089342209 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.157534005 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.110521203 seconds)
  done (took 1.713050627 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.487420315 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.401423765 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.343389964 seconds)
  done (took 2.09784613 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.263886689 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.283154881 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.365237937 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.41197851 seconds)
  done (took 2.299889067 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211606968 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129195537 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.102972668 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.142015412 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.175404573 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.17854965 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14630466 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.155152617 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132082581 seconds)
  done (took 2.291315514 seconds)
done (took 11.322316188 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.167351382 seconds)
    (2/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.16382003 seconds)
    (3/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.266534485 seconds)
    (4/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.301445271 seconds)
    (5/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.222774903 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.110056432 seconds)
    (7/286) benchmarking ("sort", Float64, true)...
    done (took 0.234208007 seconds)
    (8/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.233900625 seconds)
    (9/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.265402206 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.125528147 seconds)
    (11/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.159091401 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095666892 seconds)
    (13/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.264502487 seconds)
    (14/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.156140325 seconds)
    (15/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.129187557 seconds)
    (16/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095925298 seconds)
    (17/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.118383232 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.182234859 seconds)
    (19/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.102906298 seconds)
    (20/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.142896764 seconds)
    (21/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.116247693 seconds)
    (22/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.129243711 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.163944155 seconds)
    (24/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.125838336 seconds)
    (25/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.11154985 seconds)
    (26/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.116993095 seconds)
    (27/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.213397011 seconds)
    (28/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.10440832 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.225953555 seconds)
    (30/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.236757195 seconds)
    (31/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.117709006 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125219834 seconds)
    (33/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.109773939 seconds)
    (34/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.106038067 seconds)
    (35/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.215300459 seconds)
    (36/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.234556969 seconds)
    (37/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.20855859 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.121443883 seconds)
    (39/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.233027348 seconds)
    (40/286) benchmarking ("sort", BigInt, true)...
    done (took 0.277245257 seconds)
    (41/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.214927445 seconds)
    (42/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.125199001 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.120648386 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.106699896 seconds)
    (45/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.206025616 seconds)
    (46/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.108412659 seconds)
    (47/286) benchmarking ("sort", Float64, false)...
    done (took 0.152479971 seconds)
    (48/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.202681258 seconds)
    (49/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.122114594 seconds)
    (50/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097082873 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.117653755 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.152950823 seconds)
    (53/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119990944 seconds)
    (54/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.205009608 seconds)
    (55/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.193834217 seconds)
    (56/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.219101531 seconds)
    (57/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.09911445 seconds)
    (58/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090732907 seconds)
    (59/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.155211758 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.145137771 seconds)
    (61/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.212770149 seconds)
    (62/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.10437398 seconds)
    (63/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.128782434 seconds)
    (64/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.139745063 seconds)
    (65/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.19419445 seconds)
    (66/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.115595384 seconds)
    (67/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.257907209 seconds)
    (68/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.12309644 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.123052909 seconds)
    (70/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.119598375 seconds)
    (71/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.139511138 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.096424335 seconds)
    (73/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.125595376 seconds)
    (74/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.127101869 seconds)
    (75/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.117768075 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 0.08960938 seconds)
    (77/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.110415859 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.095625606 seconds)
    (79/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.156697525 seconds)
    (80/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.119089232 seconds)
    (81/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.085164546 seconds)
    (82/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.10417824 seconds)
    (83/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.117584242 seconds)
    (84/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.197887181 seconds)
    (85/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.248272281 seconds)
    (86/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.21088887 seconds)
    (87/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.14612658 seconds)
    (88/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090435254 seconds)
    (89/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.156445578 seconds)
    (90/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.207788435 seconds)
    (91/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.090758348 seconds)
    (92/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.145842896 seconds)
    (93/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.102959547 seconds)
    (94/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095372996 seconds)
    (95/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.100030949 seconds)
    (96/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.078063185 seconds)
    (97/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.133459708 seconds)
    (98/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.13065317 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.120492058 seconds)
    (100/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.197661693 seconds)
    (101/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.077454981 seconds)
    (102/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.130692195 seconds)
    (103/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.123327825 seconds)
    (104/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.106097695 seconds)
    (105/286) benchmarking ("sort", Int8, false)...
    done (took 0.199205049 seconds)
    (106/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117085273 seconds)
    (107/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095021738 seconds)
    (108/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119139453 seconds)
    (109/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.098593095 seconds)
    (110/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.207830585 seconds)
    (111/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.192183606 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 0.191267211 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.125860278 seconds)
    (114/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.100951369 seconds)
    (115/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.114864815 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.102714914 seconds)
    (117/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.202979535 seconds)
    (118/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.153844063 seconds)
    (119/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.118184532 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096027393 seconds)
    (121/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.119560582 seconds)
    (122/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.094742552 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125299823 seconds)
    (124/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.093713981 seconds)
    (125/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.177338551 seconds)
    (126/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.200529619 seconds)
    (127/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.12440876 seconds)
    (128/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.102326283 seconds)
    (129/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.156599306 seconds)
    (130/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095363743 seconds)
    (131/286) benchmarking ("sort", BigInt, false)...
    done (took 0.25466962 seconds)
    (132/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079112044 seconds)
    (133/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.125018678 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.101718267 seconds)
    (135/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.130618935 seconds)
    (136/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.141627577 seconds)
    (137/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.085031587 seconds)
    (138/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.126940743 seconds)
    (139/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.07745433 seconds)
    (140/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136578619 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095942827 seconds)
    (142/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.146937474 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08930159 seconds)
    (144/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.099369296 seconds)
    (145/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102129322 seconds)
    (146/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.121197069 seconds)
    (147/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.078113609 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127087001 seconds)
    (149/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118242279 seconds)
    (150/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.11367838 seconds)
    (151/286) benchmarking ("sort", Int8, true)...
    done (took 0.224511917 seconds)
    (152/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.100005255 seconds)
    (153/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.105689664 seconds)
    (154/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.100421343 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.106908622 seconds)
    (156/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.101304003 seconds)
    (157/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.085907774 seconds)
    (158/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.193523301 seconds)
    (159/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.207321034 seconds)
    (160/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.135315101 seconds)
    (161/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.079451555 seconds)
    (162/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.116474037 seconds)
    (163/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.094792535 seconds)
    (164/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.129932067 seconds)
    (165/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.108091127 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.119412883 seconds)
    (167/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.097891137 seconds)
    (168/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.101181571 seconds)
    (169/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.104093774 seconds)
    (170/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.125711627 seconds)
    (171/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.251518957 seconds)
    (172/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.075701053 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.120773229 seconds)
    (174/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.077175053 seconds)
    (175/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124440266 seconds)
    (176/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.246921519 seconds)
    (177/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.127314331 seconds)
    (178/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097033563 seconds)
    (179/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118404309 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.097108203 seconds)
    (181/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.157894808 seconds)
    (182/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.125658934 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 0.227809908 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.094038966 seconds)
    (185/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113624301 seconds)
    (186/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093276464 seconds)
    (187/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.193424381 seconds)
    (188/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119049381 seconds)
    (189/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.078511432 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.119116214 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.105941373 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.127078167 seconds)
    (193/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.077247471 seconds)
    (194/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.193257862 seconds)
    (195/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.153060924 seconds)
    (196/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.17514481 seconds)
    (197/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085763964 seconds)
    (198/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.100993245 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.096925857 seconds)
    (200/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115850596 seconds)
    (201/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.078937925 seconds)
    (202/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.099878766 seconds)
    (203/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.078616898 seconds)
    (204/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.100445974 seconds)
    (205/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114352305 seconds)
    (206/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.116704605 seconds)
    (207/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.07813326 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.147939678 seconds)
    (209/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.078377086 seconds)
    (210/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118062209 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.120585816 seconds)
    (212/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.092306983 seconds)
    (213/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.114227413 seconds)
    (214/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.078742441 seconds)
    (215/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.113587807 seconds)
    (216/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.078155253 seconds)
    (217/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.096000312 seconds)
    (218/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120523877 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.119427614 seconds)
    (220/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.077706529 seconds)
    (221/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.150774618 seconds)
    (222/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.078075668 seconds)
    (223/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.133005441 seconds)
    (224/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078578272 seconds)
    (225/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.076941669 seconds)
    (226/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.100278387 seconds)
    (227/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097050925 seconds)
    (228/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.100133354 seconds)
    (229/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.077010208 seconds)
    (230/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.100948458 seconds)
    (231/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.077920327 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.113776817 seconds)
    (233/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.097262559 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.120863988 seconds)
    (235/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.079573696 seconds)
    (236/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.109785057 seconds)
    (237/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.078855171 seconds)
    (238/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.190510405 seconds)
    (239/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.07767132 seconds)
    (240/286) benchmarking ("sort", Float32, true)...
    done (took 0.258614246 seconds)
    (241/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.077517275 seconds)
    (242/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101201371 seconds)
    (243/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.144437062 seconds)
    (244/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.101746721 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095213538 seconds)
    (246/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.16668663 seconds)
    (247/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093914461 seconds)
    (248/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.101516176 seconds)
    (249/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.078409235 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.129026392 seconds)
    (251/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.079172735 seconds)
    (252/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.158884682 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.097628226 seconds)
    (254/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.120512101 seconds)
    (255/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.158075599 seconds)
    (256/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.096259453 seconds)
    (257/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.085479282 seconds)
    (258/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.121506219 seconds)
    (259/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.192759225 seconds)
    (260/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.07836868 seconds)
    (261/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.133966304 seconds)
    (262/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133150746 seconds)
    (263/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.095757938 seconds)
    (264/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.108677057 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.099838332 seconds)
    (266/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.086232184 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.115062661 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.114611152 seconds)
    (269/286) benchmarking ("sort", Float32, false)...
    done (took 0.155350586 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.129483492 seconds)
    (271/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.079533057 seconds)
    (272/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.118433542 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.097029586 seconds)
    (274/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.144681176 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117076588 seconds)
    (276/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.094973361 seconds)
    (277/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.101785214 seconds)
    (278/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.078041743 seconds)
    (279/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114022572 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.09755265 seconds)
    (281/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.108539139 seconds)
    (282/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095856438 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117000325 seconds)
    (284/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.095489941 seconds)
    (285/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.143998578 seconds)
    (286/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.078274092 seconds)
  done (took 38.48814286 seconds)
done (took 39.364950141 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104494377 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.155603955 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.101711343 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.145022979 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.126745457 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.10670831 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.1246056 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.102084012 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.129227139 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.128746951 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.105089121 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.109768326 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.1016424 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12473721 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102299853 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.145949002 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.127910241 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.097480421 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117547853 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.094285058 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117966705 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.094158471 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.120053861 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.084640157 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.126828512 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123807699 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097359914 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.125646518 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.095639311 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.114381218 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092655788 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.12160806 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.09300922 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.144137153 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096363893 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117212882 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102047118 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.124464356 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.097544702 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.120337811 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.121862606 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094940542 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119596568 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.099266724 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118023057 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093466641 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.116161917 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104709134 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.144733523 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094278838 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.123213047 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100489601 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.126863537 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.122332976 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092717026 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11741601 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095127063 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.144565429 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.092829731 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118741832 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.098792135 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.125010951 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.093479187 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.11935767 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117736859 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101852238 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124153303 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094414868 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124275832 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.097271946 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.113027544 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.094398751 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.115419839 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.091681398 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.124536132 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.101794652 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.112798254 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094879439 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.121471353 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097231557 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.118002377 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092689301 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.120338211 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09463813 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116055489 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.085807013 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115734505 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096128595 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.117617912 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.116955124 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097109409 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.120340968 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.096786707 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124540797 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094679597 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.118586476 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.095056705 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.119424244 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.0958458 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.117272369 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.089104661 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117156168 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.098802307 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.115622725 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.09475213 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12697045 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.115871536 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.096936542 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.116913533 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.093979837 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.130707699 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100880196 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.119739791 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096382346 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.115003497 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.098591025 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.116944554 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092386216 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.115975334 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094026216 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119111096 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.118469609 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093125466 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.12013043 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104664295 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.114706069 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.093694966 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11668527 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.09536574 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.122001143 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.095039379 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.116097808 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.09401309 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.113192171 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093067641 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.115619341 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098259288 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116749786 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.09394711 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119039176 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09420098 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.120583903 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095548552 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.119675802 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.115867757 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.087290344 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096565137 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117285622 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.096106094 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.120424484 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.117843161 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.090061802 seconds)
done (took 17.612474959 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.103345507 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188087848 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150266338 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.154692694 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.15141258 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110955916 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.129276539 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.14999263 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.126474522 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124010702 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.148197078 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.140840651 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.153903046 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.102651977 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.136308969 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.125345796 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.100262518 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.137235997 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.158972625 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.121979873 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150939592 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.126590796 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146139617 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.122067673 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.125565347 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154133036 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.103825981 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.125963308 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.127981163 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.109071253 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.141792647 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.128474866 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.104072295 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137639674 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.107628195 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.124297243 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.135977075 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09751363 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.126195713 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.125352505 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113496655 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136366128 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.122168285 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.108797781 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.125908601 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.104320148 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.125729624 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123570873 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.102032912 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.119603577 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107455081 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.145851434 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.124120446 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104120981 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.126826461 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125470795 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104519597 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.129345564 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127365194 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.104575217 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.125691524 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.104476902 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130935891 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143229764 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.124546759 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103240168 seconds)
  done (took 9.269489664 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120241995 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.155961102 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135437241 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109044566 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.129727198 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.116097965 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090923056 seconds)
  done (took 1.794325657 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095216437 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.146468054 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12534622 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.148449819 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.137345749 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.128307195 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134966885 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.116470493 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.116075271 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.126968597 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.144989795 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146659454 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.117674914 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.128739225 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.126837521 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.11639759 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.151258713 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092522509 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124357126 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.125105973 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122435592 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114350388 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.130509488 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.117219123 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114182828 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.118912453 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.184937672 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.105010147 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116890037 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098015396 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121950536 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.189027251 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13911543 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.10371301 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115641907 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121506545 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.139197865 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122483326 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.117577526 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122251451 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.138578643 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.100223132 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.124452581 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.098436218 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.124150784 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.107701512 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.129108163 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.125337111 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.098699706 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145854393 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.102824373 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.138937896 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118567054 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.097725535 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.12768827 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099474275 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132708564 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.097818514 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.145669398 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123857533 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.118657853 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143821424 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.138699294 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.119295869 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135853197 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139299757 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.114365656 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.123228009 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100491646 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.124794131 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.144057256 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.097093704 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.128381069 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.107759789 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126409986 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119913272 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.145187806 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12239903 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.105529472 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.122149066 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.095983463 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.118826179 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.108705403 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121707105 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096294087 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136605903 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129741221 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.099290489 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.121135226 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.139407642 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.097714422 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.128658306 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.104604585 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.122460152 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133468431 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122007985 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.13005795 seconds)
  done (took 12.871113467 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095090812 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.093693139 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.123708901 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.119342309 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.094680026 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.118908523 seconds)
  done (took 1.590642386 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12520862 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122885594 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109689398 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.127760659 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162822787 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.116635372 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.143894799 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.127789157 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.113889329 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134322105 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.141884523 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.118630283 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.147892894 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100155227 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.14544968 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.125201487 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.118677281 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122683489 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.10767154 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122906553 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.134542608 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.101499981 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121905974 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.115806358 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.126508467 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.101235451 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126828438 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.133471363 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.108365258 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.129569662 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.100640377 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.128165944 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.125089017 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.103711563 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.142781262 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.125476551 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096896328 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.128125297 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10220537 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.129531262 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.119721936 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122575087 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.106582188 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.130207296 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.128489426 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.10131726 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.128240021 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099804146 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.142518064 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.128431022 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.103512899 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.126223033 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.101585021 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.127855045 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.101652438 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131141312 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.129574845 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.118386654 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126523319 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.101893932 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.124250003 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.102141264 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.131138405 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.126573629 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.101415436 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.127791567 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.101086199 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122615727 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097634981 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125290759 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.103161094 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.123882119 seconds)
  done (took 9.624952925 seconds)
done (took 36.07683095 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.688021082 seconds)
  done (took 1.622218631 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.89125701 seconds)
  done (took 1.834530508 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.658864752 seconds)
  done (took 18.636042829 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.539013553 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.634901158 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.989889515 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.168599256 seconds)
  done (took 3.267550381 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.979800245 seconds)
  done (took 1.939518557 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.314672057 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.268604555 seconds)
  done (took 1.524691155 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.836874811 seconds)
  done (took 1.789276254 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.577428376 seconds)
  done (took 2.531391705 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.353647289 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.204614019 seconds)
  done (took 1.526421037 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.588972567 seconds)
  done (took 1.55141065 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.438809493 seconds)
  done (took 16.404161665 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238916851 seconds)
  done (took 1.210068109 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307016732 seconds)
  done (took 1.265100575 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.659241415 seconds)
  done (took 4.616814461 seconds)
done (took 60.668225847 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105144481 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132496627 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107202984 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12930006 seconds)
  done (took 1.422624386 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.109748552 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.127976768 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106317666 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127502606 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.110066011 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.128817423 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124847179 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.108140099 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.127564975 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.1031736 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128200455 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101417298 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.130391948 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124539628 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100076836 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.128215114 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105098514 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.128175778 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.10114741 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.130479178 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12575117 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.103363404 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.130640494 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.102043225 seconds)
  done (took 3.780600836 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105087002 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.12289385 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100596784 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122647874 seconds)
  done (took 1.423533098 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.109046472 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141765695 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.114445197 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.136375764 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.140456238 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114076573 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124097552 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097310907 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.126482519 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.107103234 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.126935805 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.143250586 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11504792 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118999854 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.110013756 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.118861265 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.093626231 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.142664302 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.133692746 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.109302787 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.123882327 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.107549185 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.132135341 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.136901328 seconds)
  done (took 3.89058266 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.211991296 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.11104578 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.148646173 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.104290137 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.180552103 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.150403019 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.123375697 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.123220661 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.123675455 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.109499828 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.130762516 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.178224783 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.108954901 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.129091421 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.123945133 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.105327023 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.135416379 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.13355215 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.100791715 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.137072404 seconds)
  done (took 3.636081543 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10695331 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.123143723 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09384105 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.122529164 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.104947205 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125439 seconds)
  done (took 1.65019915 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094213253 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.09235748 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.11919722 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.093039631 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.124254126 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092773097 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.118113241 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.092869552 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.117961431 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.093103331 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.118091439 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091784194 seconds)
  done (took 2.216147986 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.54745684 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.097004209 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.126606096 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.123229588 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.103138608 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.121963384 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.112563396 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.123972341 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.1802391 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.096739303 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.139661332 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.177379388 seconds)
  done (took 2.924835057 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217902989 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102716435 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282584667 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.429342611 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165907627 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172088392 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.351611317 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176661565 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.191352903 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116399169 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236898049 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163324181 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159478004 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183787799 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119738827 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.190628908 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181648438 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236175791 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127711412 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248396424 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170893552 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17312666 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196993058 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158719567 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143220072 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164292351 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.098147306 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133729787 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180584441 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176382567 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179760289 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155002877 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143906417 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206510142 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244497697 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184967924 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.396270795 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116158908 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198689745 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.228836564 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260549906 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14810388 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22858745 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133901927 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138054246 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186492435 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164121222 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.187014153 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139112858 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120627971 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218497616 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183313384 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.186481872 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144525975 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368562334 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130189915 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.150974145 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189005431 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220733279 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206864176 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172793253 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.101498137 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253988579 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196310819 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187638132 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.150447261 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.173796511 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131206589 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183542933 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210394948 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184620304 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173428627 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.2255969 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14036027 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170134114 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186243321 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160041043 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185529515 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166159331 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100250167 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156307956 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142159208 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106826119 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192525082 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128102049 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220130974 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142719413 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.295846505 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215786021 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164190232 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167334438 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170747497 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17351007 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152962704 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.124251477 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125511316 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.177273419 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162718488 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138503119 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163510564 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151263311 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.105090193 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157935659 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.128590127 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163245973 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.113876305 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173802631 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170700775 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.134503754 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170643008 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127696339 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.164643081 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17661146 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229107823 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111130915 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139685459 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20963872 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164198324 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142981161 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191319831 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201782437 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178562747 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143300946 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174553849 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20096632 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14777991 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203171501 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14820306 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139007563 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.154654353 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136528485 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161609375 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161610946 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134631927 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.156954844 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209061788 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.132569972 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114901131 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179879311 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132125783 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105724313 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150383804 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141703404 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.147147484 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127746416 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145822631 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161425201 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165922926 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159851768 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165292444 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148777089 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198988679 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139529141 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.165192283 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125244727 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.124292903 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.185432176 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200493364 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136064175 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192863457 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174815002 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263923391 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170492478 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108516829 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186947814 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136757476 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.125509595 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172985257 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165718393 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167801198 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200460193 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266422429 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.17343033 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.130523475 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155701423 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173257849 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.189866573 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162672011 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.151861017 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169675183 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172826366 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.128812551 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.101422566 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133281733 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145896045 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109311557 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13889902 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186582502 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168031927 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255891028 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169230253 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144583323 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198456397 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104320739 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170743464 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178758489 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144750014 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200178451 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223778456 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17352706 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121472473 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176310777 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.125793637 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103801094 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140303293 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172322877 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139100588 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111724244 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150422237 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197732098 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206734259 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128521849 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272545941 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171997236 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236294384 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101638444 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16999699 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187214963 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163104713 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.167944047 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13708077 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.167777709 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193941456 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150603609 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200450955 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168906855 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175911341 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236919583 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.161853981 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10902416 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156308358 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174595304 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147382514 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17737986 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152702089 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114354828 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16076946 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.143199065 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130903041 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187640772 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147552556 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187935568 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.173607957 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180052365 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131788681 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122578891 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165922131 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152189395 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.12314107 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176267148 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202890769 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151513858 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16534544 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190390842 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136011758 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.357459315 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203596711 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219659615 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115294793 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149413285 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168484053 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176358453 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170227119 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189741254 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150045015 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186590365 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165044993 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.148608914 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113712447 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154211268 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156962084 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.157947357 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110198524 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.158335746 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.149219527 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18864574 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151195072 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164900166 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172241932 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152226234 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.132666497 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147226789 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215778654 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164791779 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18369733 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.162142428 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.182904855 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193619517 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131360361 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105396783 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133313905 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189590833 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138651469 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163894016 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.225690222 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276169616 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165494267 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175374711 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143575724 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.102023942 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166631923 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15598362 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265368424 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121587149 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.14132513 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233750836 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128081765 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138887392 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171210445 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.341480302 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151280962 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193333529 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.127632026 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.317413233 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133421116 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109568183 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176718623 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177062696 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138679275 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.188811431 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172260397 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123049513 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176081556 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145015008 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.257509513 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217749815 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176387641 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180639026 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.149973404 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164338659 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169905966 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19170795 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150258318 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.150534973 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169135132 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198092263 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.202587634 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.137741232 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170367462 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141424161 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166078094 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209185923 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111430817 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192637717 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138206525 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171873655 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147174257 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128607382 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135686396 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.250824368 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138971431 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191545471 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16383601 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109335307 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132734604 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15761893 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164817689 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121481108 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.137981017 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184837301 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.134885921 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169034204 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188275999 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109198838 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161599356 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152895206 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10773157 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148945078 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151814509 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141422639 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.150767505 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195816952 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.139626192 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192267935 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178787783 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172305293 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165952701 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151975404 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66823848 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.104377549 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224719598 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124823844 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220882189 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126135682 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172824355 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167949054 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155327803 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174471028 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156061716 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226511275 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173480034 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.163556235 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109758734 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151546644 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152387471 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.135169598 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12935155 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169363079 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147003216 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.14327376 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.161528301 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125334668 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153168774 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144802928 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200555606 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153791631 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189531639 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190506207 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143500596 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17191164 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182473748 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135078538 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.167350499 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177675612 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119768569 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157090856 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.137471773 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.112954976 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186455923 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.131740344 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167992348 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165620588 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167718228 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16967631 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112394279 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166392674 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149400477 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167364891 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102337744 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160466232 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163202103 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137872938 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104581821 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162097212 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16426285 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166497037 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132199702 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.152393115 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193379465 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.133188752 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138812699 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330184512 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163535328 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199262345 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.158980693 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141571183 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12056184 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162148355 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.159204803 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165681813 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135200667 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108908836 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137518511 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188134274 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.171929974 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164242026 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192946449 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167551542 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194129063 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111726557 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.270229632 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144726025 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160915599 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.108041015 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13586165 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147466891 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111728827 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152930407 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.257674527 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18720274 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.157214613 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.12278179 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133623781 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.132381887 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1108173 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177503887 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160087567 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164764938 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149179831 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.095360532 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151116154 seconds)
  done (took 81.492561541 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.157828152 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148789731 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155296059 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201731614 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173269352 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.261968275 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212347425 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234477774 seconds)
  done (took 2.603909349 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.108829489 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.142170168 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.146872004 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.130785333 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.097723416 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.37505699 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.141722028 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.103334832 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.157530596 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.138881774 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.122608743 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.593284416 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.128121134 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.128720488 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.117563522 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.095973737 seconds)
  done (took 3.779488203 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.45797398 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.551813153 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.113787505 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.25448176 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.234256737 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.182609576 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.758398508 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.171839632 seconds)
  done (took 12.789140778 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.129738226 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146131755 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.145382598 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.172464339 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.157682061 seconds)
  done (took 1.823827238 seconds)
done (took 124.384200683 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100892695 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130075986 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102388782 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131497279 seconds)
  done (took 1.521577525 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.115010337 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.085727539 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.116523874 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084649648 seconds)
  done (took 1.468447958 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.436149749 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.115929558 seconds)
  done (took 1.653751056 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.130044087 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.151629789 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.119012679 seconds)
  done (took 1.472151302 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.112415003 seconds)
  done (took 1.18416358 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.113266503 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.137792529 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.119982578 seconds)
  done (took 1.44020255 seconds)
done (took 9.806465803 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11672631 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.439231168 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.390809966 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143697956 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729552726 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38506607 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.04510286 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164554083 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171429046 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096273496 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14457431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676296734 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.067189145 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.349856148 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.054166836 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.372204868 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.682341735 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125734097 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102963236 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125055876 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.997595916 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123780875 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097932977 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125869826 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67767173 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428625752 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09654068 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.387999184 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095097026 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131067135 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.413624136 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096979096 seconds)
  done (took 17.106855778 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.099711248 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.188115251 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.103478979 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126506829 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100360434 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127758281 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.133859502 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.110596148 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186223436 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124598223 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115796611 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125314641 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101668959 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125718439 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119036701 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126095888 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099226437 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127731786 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102671832 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.129341327 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143760316 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096835952 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125544396 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.099745502 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123437418 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110008318 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125068087 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.109554947 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125444756 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101904681 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130835678 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097160727 seconds)
  done (took 4.938211006 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146614815 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.197429052 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134010123 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132668396 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181566169 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127598775 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.211861309 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164728141 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189741606 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09722511 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145406399 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.096795515 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.162517051 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097517896 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14803812 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095878568 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12962404 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126208565 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.105307694 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126178151 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117642081 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124978569 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098871408 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127359652 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096754214 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13996663 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096753933 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139290423 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123825012 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10287571 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130873921 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098376857 seconds)
  done (took 5.294364352 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.106266976 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.133793505 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114818992 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.144050764 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099525205 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.13503893 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.105637786 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.129559843 seconds)
  done (took 2.048629876 seconds)
done (took 30.460766708 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115829889 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13033371 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.112287192 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.139232443 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.107255394 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.161195375 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.095813571 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136568641 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.11015466 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.133175116 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.11491664 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.126593939 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099387434 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.124262543 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.111117022 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.129851702 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.11291235 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.13472483 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.118107556 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.140937318 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098726241 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.138239924 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106730404 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.147524883 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.145401184 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.119003838 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.142636849 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103833018 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.126585095 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098997676 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.143297988 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.122447326 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129554693 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.113478202 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.132969692 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.101815862 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.126764597 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.098350244 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.141523445 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108332159 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.132684726 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108560766 seconds)
  done (took 6.210262871 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.127185085 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.170168844 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.094504689 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.124347602 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.094902179 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.167442878 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.161588117 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.094983027 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.125506073 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.122063534 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.154184002 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.122694585 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.096464871 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.09477384 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.125226958 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.095433848 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.151038665 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.150972527 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.129633104 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.157760428 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.172429946 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.130359474 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.161670488 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.151879474 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.139239359 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.163997149 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.148395944 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.161237652 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.125584543 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.123311338 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.128071204 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.159555479 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.093868764 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.124091996 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.16675088 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.133881335 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155037106 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.168688809 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.128907946 seconds)
  done (took 6.384188385 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.106519885 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.144870976 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.129935969 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.268488067 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.139823422 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.144647883 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.11354788 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.146276569 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.157394576 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.098030699 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.1390249 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.130523357 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144217016 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.110668839 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.13421297 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141217185 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.11763392 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.128311628 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.108093947 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.147409785 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.116769333 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.142015529 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.116442694 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.140104219 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.097964026 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138721486 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.135875626 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.114272529 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.137347843 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.109373968 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132490793 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.101501998 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.129963751 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.110025775 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.132743346 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.133984674 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.119883394 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.138832062 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.112951599 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.16267496 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.137523503 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.102976364 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.151355073 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.178068474 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.102186681 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.134362479 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.109864227 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.138932416 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098001279 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147664653 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.114008908 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.129946698 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.142945904 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09833545 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.127108408 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108974561 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.129462597 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.102760298 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.13876005 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.103062936 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.149008552 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.109216324 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137460854 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.102630504 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.137749961 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.126259706 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09901114 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.132213028 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.125908455 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1362465 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.134443589 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.131707719 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.132779397 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.109965047 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.136052075 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118044725 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.127577676 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107487229 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139253074 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.10615325 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.139285961 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100796419 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.133250108 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.145101878 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.113805926 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.135654943 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.104255826 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.134712921 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100715184 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.13406663 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14479107 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101169266 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.131554663 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111431895 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.129647359 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.102624112 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.133961813 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.103455876 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.126823439 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121532379 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.133469683 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.097105215 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.150518156 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.128827142 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.103149889 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.13598004 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.113582908 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.128004643 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103722768 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.134121585 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097272757 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.137018202 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.102262672 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.127839363 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.112230853 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.144838005 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.105419534 seconds)
  done (took 15.870971831 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.247026794 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.22680234 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.200399921 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.31168646 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.151464458 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.154074072 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.224030976 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.149026563 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.129822108 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.168510152 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.183920515 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.196175287 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.183781391 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.194514792 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.186430421 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.0984806 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.163373271 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.181859401 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.227662732 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.308011412 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.165664762 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.11310645 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.17015989 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.168621375 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.147439729 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.144931069 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.122780894 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.149643429 seconds)
  done (took 6.174276136 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115379616 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.169672417 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.13698755 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.128662523 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.156658473 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.129883626 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.105079898 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.099270672 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.145481897 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.144391987 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099649488 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.135887623 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.104873193 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.139049342 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.09819199 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.138491795 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.107741936 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.137591395 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.1310116 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.103595343 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.146506595 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.115731991 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.136643747 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.104871707 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.145431307 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.135193049 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.099636434 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.150407443 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.139686747 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.127145863 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.126785852 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.107525524 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.144214754 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097621157 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.136699204 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.130473011 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.101546246 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099635605 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.133216309 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.095550306 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.129034254 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.088546538 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.134988613 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.142890078 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.106754448 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.130158928 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.104228901 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.13367773 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.100499409 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.125533531 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101206607 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.130243146 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.10323601 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.145989885 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.10239526 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.129716228 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.103095237 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.128769805 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.108294567 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.130976051 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.096368858 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.133172101 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.10634956 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.133491865 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10833951 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.136524488 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.103601867 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.131174809 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.104033092 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.137987785 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.101449178 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.142100757 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095553263 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.133167286 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.109541127 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.143124193 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.132046996 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.104556628 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.135739078 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098677483 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.11849908 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098415496 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.085098389 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.133451949 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.097087596 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.13535443 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.102565147 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.134462246 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.145137565 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.108954911 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.137152901 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.099146783 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.135471702 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.103119189 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.126285469 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.103084676 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.146829186 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.148294514 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.097213536 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.125340455 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.121094908 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.130285562 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097080407 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.116315545 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.108920305 seconds)
  done (took 13.834241191 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127657092 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.167852959 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099926732 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.148803846 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.165429679 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.128272475 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.144910969 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.107907468 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.130316595 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119779262 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.137799588 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107582446 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.136896538 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.144482327 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.128301148 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.142775111 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099889452 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.145521343 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.103394399 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171329216 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.148669384 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.126019581 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.162021423 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.140558661 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.104868085 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.154268458 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.130773288 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.145095769 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.111603498 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.162307805 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.143785219 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.130687455 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.163825022 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.135158503 seconds)
  done (took 5.738357653 seconds)
done (took 55.288917443 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.204016715 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.423881747 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.179295419 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.175270656 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.230966303 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.214963074 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.179448322 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.369461348 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.915101777 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.169778976 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.175432317 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.17560512 seconds)
done (took 27.518552304 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.233220666 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.766862125 seconds)
    (2/2) benchmarking "String"...
    done (took 1.536530474 seconds)
  done (took 4.407073967 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.174866071 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.17717667 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.425546832 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.178567615 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.196868203 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.198004317 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.1826386 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.192422803 seconds)
  done (took 15.653292956 seconds)
done (took 25.570810761 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.275106008 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.382639844 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.452896199 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.199991835 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.183043626 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.181570826 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.185617695 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.2218764 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.182736659 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.19895956 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.182735242 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.459996102 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.207001885 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.569780259 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.182899505 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.192842558 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.19526625 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.421365441 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.182840313 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.221930767 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.166173096 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.188587899 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.198302647 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.201217351 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.190126131 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.194490059 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.218616445 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.184026237 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.38464021 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.183833577 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.224669199 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.182634496 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.222045762 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.188881408 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.292099103 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.211393498 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.370695493 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.192460571 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.17210981 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.184523177 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.374703007 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.606509826 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.184075275 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.19345425 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.18880851 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.264877235 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.174583393 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.996740145 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.18564524 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.186252688 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.183905683 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.565621163 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.18852804 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.191527225 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.191605476 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.424298111 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.18604205 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.236865317 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.217999945 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.189984975 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.182072231 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.198074823 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.190322051 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.194911536 seconds)
  done (took 142.435884601 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.181648819 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.18517398 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.186288506 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.205978913 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.186577326 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.184439749 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.18094234 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.181096427 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.186667752 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.210609599 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.187028426 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.181891812 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.187071562 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.143996947 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.18375384 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.203981223 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.186192157 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.185225268 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.187487038 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.18274112 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.189000839 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.188428934 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.199800109 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.184058041 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.187645081 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.266125169 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.241885018 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.191055245 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.187220504 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.184518709 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.232867138 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.211299812 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.824613489 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.044489649 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.189788314 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.212306562 seconds)
  done (took 79.559814348 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.182911038 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.185487575 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.183755841 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.185850897 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.218572183 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.186505139 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.784460653 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.787666336 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.914241253 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.34368581 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.620945683 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.513721298 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.187646807 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279600617 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.198616213 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.190481673 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.201055053 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.212944505 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.185364583 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.185208923 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.784801489 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.201335008 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.17611476 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.380244821 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.203690784 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218899165 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.589161909 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.184956924 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.184839051 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.218255561 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.523937688 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.2369319 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.185711032 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.604750048 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.120615085 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304818491 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.185921943 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.186955794 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219830841 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.189070814 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.472571866 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.189442737 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.185307008 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.188903091 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.907216515 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.190996386 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.786254279 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.191434768 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.191086792 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.189354158 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.185925748 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.257397931 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.946304994 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.208874531 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.187578046 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.189313559 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.186171758 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.187028459 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.225257986 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.377469526 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.303859163 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.190627093 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.191632642 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221282791 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.189040623 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.393984394 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.192538668 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.209724141 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.247740615 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.294139476 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787617906 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.191661386 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288167686 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311536373 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.189015749 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.187923188 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.18819594 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.187612531 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.29951703 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.189664485 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.62066207 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.371778348 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.212442295 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.631074853 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.294381903 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.192548578 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.59813667 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.196980228 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.192342041 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.005972703 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295308912 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.191100363 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.190839496 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.190336913 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.621839535 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.190455387 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.790779025 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.462793377 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.195835718 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.575632175 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.192765266 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.630123043 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.76067817 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.906629931 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.194732307 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304010815 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.368804206 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.208122378 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.190529593 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.627307062 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.196536682 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.246535655 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.194064841 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.590212838 seconds)
  done (took 365.096022944 seconds)
done (took 588.195858645 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.905016737 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.853429351 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.991943471 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.883178299 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.847147599 seconds)
  done (took 10.597055108 seconds)
done (took 11.711314318 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.385972438 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.384277023 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.252343376 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.389479079 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.223605977 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.407188512 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.368671305 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.210301524 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.296975375 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.274907148 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.298361387 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248887399 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227575021 seconds)
  done (took 18.083662806 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.467620627 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.195364048 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27747226 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.456118307 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235360708 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.499573936 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.501114848 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.199075777 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.33840928 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.207029293 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205346263 seconds)
  done (took 17.69938021 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.464927106 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.198093947 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261997913 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.444258618 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236963322 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.483889353 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.512001541 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.198752177 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.322419983 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.206576965 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205529585 seconds)
  done (took 17.651718309 seconds)
done (took 54.550771992 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.230633621 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.363281435 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.223707346 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.204699882 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.202237079 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.203436209 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.206747028 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.201685283 seconds)
  done (took 10.955708907 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.1990768 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.200640983 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.202618809 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.203051194 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.198666824 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.199501745 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.197654077 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.20167869 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.202165011 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.200180249 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.202640767 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.199517891 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.200103012 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.203610136 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.202182062 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.202231328 seconds)
  done (took 20.335207171 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.201188483 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.200412101 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.200587152 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.19925345 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.199578628 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.199566984 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.201400646 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.200442034 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.202475767 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.198366232 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.200637167 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.199135985 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.199269497 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.201497221 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.202672787 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.199561079 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.200905768 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.200597681 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.203239427 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.202765709 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.201244856 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.200333438 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.200693235 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.2014367 seconds)
  done (took 29.937420213 seconds)
done (took 62.346557774 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.194005879 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.232509642 seconds)
  done (took 5.545438015 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.264340264 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.267489834 seconds)
  done (took 3.65450039 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.205724628 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.204492766 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.204247476 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.204008764 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.203023266 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.203524465 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.204785796 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.203107456 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.202878515 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.203923135 seconds)
  done (took 13.159244847 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.206764799 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.204368733 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.201060817 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.203200876 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.20444649 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.201613527 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.204578174 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.203739964 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.204470871 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.202064978 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.205605625 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.201652116 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.205435943 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.203486806 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.2059121 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.202082006 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.202902576 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.202926631 seconds)
  done (took 22.788510172 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.21783105 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.227246137 seconds)
  done (took 3.566981637 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.342487887 seconds)
    (2/7) benchmarking "second"...
    done (took 1.244338971 seconds)
    (3/7) benchmarking "month"...
    done (took 1.319731254 seconds)
    (4/7) benchmarking "year"...
    done (took 1.310387616 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.244093968 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.224465754 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.244517596 seconds)
  done (took 10.051629816 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.205829153 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.397766581 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.507017826 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.775826492 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.207066633 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.209241818 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.069153378 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.209662648 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.211776674 seconds)
  done (took 13.915069288 seconds)
done (took 73.80125032 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.198426098 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.256786231 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.222794596 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.214635496 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.499430608 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.229800926 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.20299916 seconds)
done (took 15.948084766 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.185998885 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.19011981 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.190918508 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.203383554 seconds)
  done (took 9.893143997 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.198783398 seconds)
    (2/2) benchmarking "read"...
    done (took 1.556597048 seconds)
  done (took 4.877123363 seconds)
done (took 15.892355448 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206112382 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.206638792 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.206930518 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.206863147 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.208416722 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.206717504 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.206171623 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.20525053 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.205670988 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.208325712 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.20840956 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.208300598 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.208248208 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207672622 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20592719 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205829896 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207967556 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.206123473 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204886163 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20611259 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208704863 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.206115862 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.206036842 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.207969411 seconds)
  done (took 30.090085044 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.20867155 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.207452952 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.209357319 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.208430552 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.206075629 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.210677666 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.209331545 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.207494916 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.209645363 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.209832824 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206695311 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.206884006 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.211356358 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.206738403 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20923232 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.206621036 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.212069809 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208658325 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210277634 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.207943425 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.21103779 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207372333 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.207175474 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20884107 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.207365996 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208946132 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.211065403 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.207835933 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21126543 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.20842921 seconds)
  done (took 37.388785294 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.215239744 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.219198146 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.209895869 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.210014274 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.210883436 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.211162273 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.210938625 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.212126341 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.211255123 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.210874089 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.20928749 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.210316189 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.21280181 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.211633815 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.212599711 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.212463058 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.21299879 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.211209142 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.211921797 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.212092342 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.212491729 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.211593274 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.212782446 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.213909755 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.211774072 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.211511201 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.211586981 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.213677333 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.212699282 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.213109965 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.212052018 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.212835663 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.213383755 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.212731284 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.21279813 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.214341315 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.217436602 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.220133595 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.212341168 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.213725255 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.213693048 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.213404126 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.213471028 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.213157628 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.213825096 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.214581017 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.214031691 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.214006837 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.212397291 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.215039101 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.215356434 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.213764493 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.214451651 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.213633493 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.212307003 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.214301653 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.214368208 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.212650309 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.214739032 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.213457555 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.214255176 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.213726077 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.215969792 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.214213891 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.215066429 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.215157638 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.216820005 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.216037123 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.214062944 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.2155374 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.214231108 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.215825986 seconds)
  done (took 88.491820822 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.214895927 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.213409143 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.213379848 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.212574113 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212230226 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.214542673 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.213639452 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215648304 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215141945 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.215402269 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217415244 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.215073088 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213023545 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.215952989 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21549157 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.213177903 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.214862833 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21407073 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.21617889 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217439047 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216185164 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.213771092 seconds)
  done (took 27.855398028 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2170295 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218439443 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.214007279 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.217726196 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217285444 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217656643 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.218342629 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.218256347 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218016528 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215084436 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214605038 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.719607491 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216681744 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214993567 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215791584 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217263967 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216982872 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217097721 seconds)
  done (took 23.537059272 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.215539951 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.214557829 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.217463157 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216208187 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.214297077 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.219242503 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21895226 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.218715091 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.218117213 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.215179511 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.21850055 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218908349 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.218432145 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215065311 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217934447 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.21615595 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.216978317 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214864123 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217682623 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21611783 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.215729347 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217397325 seconds)
  done (took 27.905914361 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218900097 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.21899932 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.216006695 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.216107511 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.216688213 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.220303677 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.219690443 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.217053407 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.219479854 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.220325999 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215798976 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.219727273 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.218665036 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.216514063 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.216545352 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216181604 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220196992 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217090223 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218955119 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.216744956 seconds)
  done (took 25.493327368 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.22098853 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221735613 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.221922697 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223483131 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220138592 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.221692555 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222055999 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.221711831 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22132718 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222562598 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.22257014 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222631707 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222925448 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.222597445 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222873962 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223252449 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223744452 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223109955 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.221739413 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222635243 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.222887112 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222720365 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223008206 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223608235 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.222410675 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222344033 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222368652 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.222493934 seconds)
  done (took 35.36341078 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222193427 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221182188 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.219140929 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.21805182 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.219805075 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.219172196 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.218161011 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.221863418 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22254691 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221204619 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.221636007 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.221072464 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221296769 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.221588382 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222417218 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.222105579 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223433565 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.21830626 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219959533 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220076519 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.222522523 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222005571 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.222906238 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.2201871 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220309176 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.221564181 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219604213 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219988533 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223765378 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220438521 seconds)
  done (took 37.764378702 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.266298956 seconds)
    (2/2) benchmarking "in"...
    done (took 1.267178317 seconds)
  done (took 3.669539732 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.220647715 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223232007 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.223619929 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222495113 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220775293 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223032104 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223305086 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22096289 seconds)
  done (took 10.914839348 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.223465292 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.224476621 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.22375563 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.222876276 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.224049417 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.223447566 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229179363 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.244719124 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.224190226 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.226252497 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.230342336 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.230259978 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.225706573 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.223826246 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.2243276 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2277678 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.224147428 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.225020757 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.226045528 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.225705723 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226459242 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227482245 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.2275749 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.224184289 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.226817815 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.235008942 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.229744054 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.227447333 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.2251593 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.229627669 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.226644175 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.223746241 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.226149564 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.227053251 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.228156674 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.226605132 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.23493564 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248837688 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.233000233 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.228977654 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227864738 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.224771023 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.226600711 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.227393638 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.226668429 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.22822502 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.227550749 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.223655652 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.225283892 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.231893044 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.232675336 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226991099 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.22403408 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229621267 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.227643068 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232507607 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.248675289 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.231212946 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.236609479 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.236537665 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.239831936 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.253446283 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23034534 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.227837857 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239237935 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.254332491 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23404142 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.245923126 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.226076202 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.228738228 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.233679583 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240331411 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.25526045 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.230324161 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.229354397 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.229092794 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228663303 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228292415 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235583953 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.250694711 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.229981916 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230351872 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240919136 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252156204 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.228927067 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.22966854 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.230475674 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.230533144 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.231288265 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239737775 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.249784605 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.232177952 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.228683617 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.230379434 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.230178474 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.23086457 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.230043289 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229938278 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.228753976 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.232154062 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232080062 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234821131 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.239307222 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23190307 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232243232 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.239030561 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.232617507 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230347042 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.236674585 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.231102168 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231784836 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.234350412 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.236389545 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.231365968 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234910968 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.239714363 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.232965035 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.233034984 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.232502007 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.235133579 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243000613 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.258988195 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.233321654 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.231726186 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.236881432 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.244913471 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234346809 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.236648003 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.234074654 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.22992018 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.230585174 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.232363642 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.234869781 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.23216197 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233873149 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234613693 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.231121602 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.2333282 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.233997843 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.233527898 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.233714649 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.232618174 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.234883867 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.234315569 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.234666974 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.235263412 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.239235662 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.232418528 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.234916382 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.234633538 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.230197182 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234310256 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.233822541 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.234418391 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.233001446 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235112754 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.234719989 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.235817503 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235990108 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.236500169 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.234561829 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.236900692 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239766631 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.236512194 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.239968811 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.234084546 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.233824401 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.235988544 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.237565744 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.236567752 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.236162227 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.234825597 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.240260524 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.246072752 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.23810029 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.236510586 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.239363814 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235630638 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237466227 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.236886256 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.241436318 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.244960023 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.238834468 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.242768679 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.238099883 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237722977 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.239079532 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.238135843 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.238585208 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238782624 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.241140807 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.244516156 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248673637 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262693721 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.238677056 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.242132502 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.238781344 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.241628644 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.240786597 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.237408009 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.237725516 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237832337 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237266747 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.23665287 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.239508343 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.237555178 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.237152053 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.23919238 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.238602819 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.237650628 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239950917 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.239039414 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239940824 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.235470482 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238339341 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238421862 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.239072186 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.235748805 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.237830499 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.239152157 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.238180871 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.239782642 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.244256223 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.236902508 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240663225 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239141291 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.239450594 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.237931342 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.23925354 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240547579 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.238183931 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244268135 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.258421292 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.239537248 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244301765 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.259187496 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.240597353 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.241898885 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.239777965 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.236570631 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.243022882 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.24941221 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.240294374 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.240070148 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.240141047 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240273179 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240966751 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.246277402 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.2391366 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.240082725 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.241456183 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.241753957 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.238189848 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.240429064 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.239769662 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.241514593 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24081912 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242554015 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.241971291 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2432257 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.2409819 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.242229137 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.24187563 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245747294 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.250482262 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.246128025 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.241813429 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.242083552 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.242707463 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.246154313 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.241320121 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.241700323 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.241781449 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252589071 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.268268313 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248096713 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.263870651 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.244013936 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24780299 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.262675129 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.245296461 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243603996 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244567814 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.244843072 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.245986319 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.241190324 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.243871568 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.242956528 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244625208 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.24543299 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.24991363 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.246319122 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.243930686 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.247469724 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.24617137 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.247602504 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.245423775 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.247565772 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.247982803 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247485478 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.245953731 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.246071905 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252189899 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267207219 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.246021986 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.247175119 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.246890295 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.243948782 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.248181383 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.246268646 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.24967025 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.254220124 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.249278014 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.254580739 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.247153792 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255435681 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.245931484 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.24872043 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.253487196 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.244602609 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.2448502 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.244290762 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.246751037 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251437701 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.265903381 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.246693421 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.251142664 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24668733 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.24749641 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.246150642 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.246338143 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24655845 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.247589397 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253879635 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.269302395 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.250344385 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248507508 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.244758004 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.246469049 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.2462213 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.245469242 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249918059 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.247204682 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.247570262 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.246326791 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.245369043 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.24897152 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.247320288 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.248345768 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.246304761 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.246642161 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252942142 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.270309803 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252375424 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.248798548 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.253759669 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250032668 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255834047 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.26892237 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.247999902 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.25060546 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.25001755 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.250369503 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.249544808 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.250554805 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.24878427 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.249427377 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.253241084 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.250178135 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.250847152 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.249476617 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.249005676 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.249551914 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259662512 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272025974 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.250891026 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255287176 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.245934671 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.251514286 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.254756227 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.252165543 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.250058112 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.252333518 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260627171 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257918345 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.249504945 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.250364805 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250580927 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249931053 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.249821249 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.251228762 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.249390225 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.251317939 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.250762857 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.25048763 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253019431 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.251715963 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.251152451 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252137527 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.251076468 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.26122282 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.251536736 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.251394936 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250004485 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.253607462 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.25117101 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.251336137 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.250761062 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251558131 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251919814 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.251501623 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258421023 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.257998198 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.253394063 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.250282817 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.252138861 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.251736321 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.252238009 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253474635 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.252962432 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253281043 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.254183414 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.2519968 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.251974096 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.251173149 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.254435624 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.252454987 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252275305 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254537666 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.260769725 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252694967 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.249175504 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.252750682 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253781858 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.253129981 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.254691965 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.260561086 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256726523 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.264580447 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.261471924 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.259720081 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.253396453 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257179637 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.263555813 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.253206657 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.255654711 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.254207635 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.25469744 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.254627286 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.259202725 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254512003 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.259793079 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.254978224 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.255714306 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261684163 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.279510495 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254501828 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.25569983 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.25997359 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.254183962 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.252350813 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.255195223 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.253507921 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259237184 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.276429549 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254884545 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257225763 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.254489592 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.256896228 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259954149 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256098836 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.255177957 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.25228114 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.255046278 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.255120204 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257104863 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.254023447 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.254586526 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.254651003 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.258460393 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.261880559 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.254607026 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257605275 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.256209155 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.255786676 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258187584 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258875664 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.25394723 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.255547321 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.256473902 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259179028 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.255989193 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.258327145 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.25645435 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.257282765 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.259673995 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256368336 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261363379 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.26845844 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.265474651 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.256457051 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.257016591 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.257249876 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.259412706 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258164508 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.25865742 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257877895 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.25960445 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.258708295 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259265839 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.25863012 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.260063401 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273243615 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.281852163 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258850961 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.258188663 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259556121 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.259037653 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.256019666 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.25967181 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.259367051 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.261890948 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.267513351 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.261021218 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265510311 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280298233 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.259349821 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.264526265 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.262319943 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.265935351 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.261073287 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258514484 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.25948917 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.264613543 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.274994613 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260858972 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269560057 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.290022275 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.280035014 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.25908693 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.260430239 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259222951 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.259531933 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.261129298 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.260480195 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.261376141 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261798641 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.260277198 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.261432075 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267264822 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.260700129 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.261923748 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.261216392 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.259733749 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.262154826 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.258224694 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.261467552 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.261534884 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.261433115 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.261840954 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.261922861 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.262055478 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273367542 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.288459461 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.262651423 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.261934953 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.259508625 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.265275624 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.26470508 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273857879 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.273116444 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.262956899 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.26364851 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.263609136 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263419959 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.263105055 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.263162338 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.261656095 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262522842 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.261968796 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.275729274 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289931639 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.26623192 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.263888846 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263923489 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.264971947 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265774401 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26460773 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263695265 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.264977194 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.266286393 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267965112 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.263007186 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.264094676 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.266249906 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.272489709 seconds)
  done (took 744.291089285 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263047597 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264078508 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262879275 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.261463296 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262153675 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261291754 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26343552 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.260665235 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.262557996 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.259948077 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.260868886 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261990125 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262941013 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.261339864 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262721017 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.260985238 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262190377 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262401544 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262462927 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261430321 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.261804888 seconds)
  done (took 27.677429328 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.26603285 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.261971516 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.262100516 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.265665185 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263939327 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.266512413 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.263989939 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267184579 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.265046194 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263747028 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.265163244 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26723502 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.263781855 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.263938607 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262508652 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266166717 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.266477344 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.263752671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.266159662 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.263533223 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266404589 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.263581504 seconds)
  done (took 29.000316775 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.267066189 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.268375618 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.265445452 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.263287247 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.268128607 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.263833307 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.267160925 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.268816583 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.267882231 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.265500117 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.265623182 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.266835298 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.273917478 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.273171253 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.267463346 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.268109838 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.267703039 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.269028191 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.267949897 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.264642232 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.272293197 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.286485656 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.265477576 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.266297908 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.268862104 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.268790528 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.269024509 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.268336383 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.269177438 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.274564217 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.268672662 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.268917749 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.269098608 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.269545311 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.270796088 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.273577499 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.268364813 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.267591054 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.270745369 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.279185775 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.291563723 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.26982533 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.273732597 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.291920303 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.270491173 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.272963642 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.278724033 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.267177361 seconds)
  done (took 62.159710425 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.868609986 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.894134094 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.887202456 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.897081869 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.90444858 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.933242367 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.908982309 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.91295536 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.918232662 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.916617425 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.911492776 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.930082343 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.899087654 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.936377308 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.930428787 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.90213525 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.88796981 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.905900581 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.91721314 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.902448274 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.896881172 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.898317911 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.904716934 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.909918056 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.909929572 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.924953673 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.92648155 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.898224872 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.889175121 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.892259037 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.917256018 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.929107418 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.907479649 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.897451068 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.905654324 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.930587253 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.918039099 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.913977347 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.906575535 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.927383861 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.907676354 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.933283719 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.901358926 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.894866652 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.896388251 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.887278502 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.886594562 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.886928345 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.885560009 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.895351367 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.894973791 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.890652686 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.891714254 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.916347686 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.898966562 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.896559894 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.888914375 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.901498569 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.894862671 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.890800677 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.889449288 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.895605568 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.889581167 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.890433325 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.886410684 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.901361778 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.892208535 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.901975921 seconds)
  done (took 130.637351191 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27397699 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.274933972 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275103928 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274895311 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274550032 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.273853843 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.273985327 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.27630908 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275893955 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.27538998 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275273832 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.275610674 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.275217273 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.276055844 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.276016877 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275415813 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.275375773 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275181264 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275879661 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275890592 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.27528805 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.275516371 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.276583576 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276419915 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.276374934 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.277322747 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277277121 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.276806364 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276027875 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.275963307 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.277069581 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.27659432 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.275190319 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277302818 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.277183214 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.277620338 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278004691 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276010434 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.279372088 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.276810382 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.276723681 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279421921 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278147788 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.276950393 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277829298 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276323348 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.276911496 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.278678801 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277884542 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27741749 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.27773796 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278420936 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276810257 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277738864 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276450824 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.278654614 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277839186 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.277089174 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277825798 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278298769 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279212244 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.278089064 seconds)
  done (took 80.336782335 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280044362 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.279084362 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.277464621 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.277070299 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.279214209 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2763106 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.277653796 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.279828974 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.281073664 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.278207686 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281166251 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277356091 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27780752 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279598278 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.278668809 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279608808 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278300634 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277991528 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280821733 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277852551 seconds)
  done (took 26.762411868 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.277666485 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.278913605 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.277995912 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.277711837 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.280912568 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.278775443 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.281831985 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283268686 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277553272 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280682919 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282514812 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280316437 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279675261 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279415282 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.281751546 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27830088 seconds)
  done (took 21.665362901 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.279233388 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.281641321 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.282471619 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.283516199 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.280170744 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.278856379 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.281133033 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.278741649 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.279715105 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.283434912 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.281441074 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.283483298 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.283076892 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.281813532 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.281455617 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.283290687 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.279022481 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.278562678 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.282788449 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.284394052 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.281385406 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.280450585 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.283531092 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.282179385 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.281624587 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.279840117 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.280513797 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.280526797 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.279875367 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.283693246 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.281002285 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.282455169 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.280284778 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.28199543 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.283435545 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.282835231 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.28571207 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.284379178 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.285036052 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.285247912 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.285225045 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.282292678 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.285637592 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.286004282 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.283372406 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.286948059 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.283189906 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.283154226 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.282758759 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.283682842 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.287624277 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.286661745 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.28670205 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.286423644 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.286347276 seconds)
  done (took 71.741582275 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285986254 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287885526 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.282432055 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.285522257 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.286068255 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.284777204 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.286449703 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.285555431 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283002688 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.285052637 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.283255489 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288181619 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283459782 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286593231 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284335319 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285421759 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.282691495 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.285229533 seconds)
  done (took 24.326081211 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.285461963 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286001622 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.28693229 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284039641 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.282958296 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287622214 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284746693 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.286175551 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287207614 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.284476564 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284822945 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.288841126 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287412526 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.2875399 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286320704 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284017495 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.288009407 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288372786 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.284264072 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284853373 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288315439 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289377993 seconds)
  done (took 29.492699736 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.285960604 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.28700745 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.284763027 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.304322787 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.312520857 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.290913154 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.292038818 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.287228635 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.3097418 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.345995701 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.34179729 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.306672774 seconds)
  done (took 16.844974006 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285582319 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291667758 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288083161 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291684929 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28952471 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288141182 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289225843 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288371511 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291984172 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287725673 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288367027 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289024628 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288806316 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287027409 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290513209 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290944879 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288612921 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289059512 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289220247 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292243845 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289340813 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291510492 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289232831 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289837967 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291192622 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290110202 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292536041 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290458681 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289321343 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29264382 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293442706 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291367607 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291707095 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290586143 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292299124 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292640586 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290832895 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29271669 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294153926 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28956941 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29255532 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293124771 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294359571 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290903182 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291931317 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289980312 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290925573 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290989598 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291944384 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294344914 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292929739 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291098326 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293295077 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292937301 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294066154 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293778059 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292383654 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291504403 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293783917 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292715537 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291293365 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293553009 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290872505 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291427722 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293878754 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291838091 seconds)
  done (took 86.41245584 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289924901 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291354299 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291546696 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292708947 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291882123 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292405825 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291461778 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291215342 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291787291 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291885244 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29538444 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290967295 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290925571 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292101667 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289121578 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291141327 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291536017 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291530264 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294394953 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295458324 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292241197 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293100949 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291564634 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29282285 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293624483 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294665439 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294050857 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291778775 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291714948 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29092529 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290979513 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292135773 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294495046 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293793252 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292329437 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293662699 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294219498 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293672107 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294370617 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296231199 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293464342 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297004875 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294670439 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294449422 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293547296 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292524037 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293507318 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294448521 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294073933 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293347211 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293253324 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293729459 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295547474 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29428133 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295075861 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294634893 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295592513 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294373114 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294646381 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297300064 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294840587 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294151111 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297926267 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295490682 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295508666 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296822423 seconds)
  done (took 86.56676176 seconds)
done (took 1787.514014634 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.46658412 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.415381352 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.295640202 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.310537231 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.297038171 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.29925189 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.30929718 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.295555179 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.295752923 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.297487027 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.29551874 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.495232092 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.294627832 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.295860932 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.296357693 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.39064665 seconds)
  done (took 26.556299925 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.325245714 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.304516706 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.426399726 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.325488729 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.326853848 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.504113189 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.36308751 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.306836171 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.491786412 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.348203535 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.303311821 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.326629786 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.305626813 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.29523706 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.322307402 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.504613942 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.573841389 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.301182547 seconds)
  done (took 28.860168703 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.805209717 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.301232031 seconds)
  done (took 5.312341413 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.321497046 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.302734574 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.303512827 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.301348282 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.290573338 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.317588737 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.299854081 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.292021018 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.29495978 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.445307083 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.307197926 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.314724648 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.322491331 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.303000395 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.300695054 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.343283815 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.464899828 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.300446926 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.29804246 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.308173474 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.304203444 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.396799067 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.349169934 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.300586697 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.442048828 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.301420287 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.309279079 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.310834206 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.445042602 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.299785588 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.301007434 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.302593922 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.306000986 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.276182236 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.773272192 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.298824386 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.33331978 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.31238361 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.301318844 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.464597057 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.303833129 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.310550306 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.300510178 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.749802931 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.459364438 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.427738104 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.315247425 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.308072577 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.305645315 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.370489783 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.304718921 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.307104346 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.34921726 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.146637595 seconds)
  done (took 83.731798363 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.341411824 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.297536688 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482057781 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.322732263 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.298398437 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.297420849 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.297659635 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.619568557 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.304907675 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.29773582 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.605686011 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.913286148 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.321659747 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.343412628 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.137558782 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.354845581 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.299090963 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.31740503 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.300483299 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.300439012 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876333057 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.30555505 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.322749618 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.371791247 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.342579939 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.850116761 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.297370691 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.307080116 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.302549187 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.30009439 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.85476828 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.329365805 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.354577945 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.300844097 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.583844389 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.711362704 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.668669036 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.307561766 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.296961698 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.298403535 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.308587058 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.82585899 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.687514822 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.296909957 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.297337023 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.838974588 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.295852997 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.29902671 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.30391398 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.549673643 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.300395349 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.297734348 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.315162687 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.295733426 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.29613806 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.407024504 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.380749587 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.845287258 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.296299422 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.300541457 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.358676382 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.299869101 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.29901106 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.297700219 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.322637609 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.693506092 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.464684464 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.308853155 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.689336277 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.846701298 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.315980647 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.924860162 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.316773072 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.321439451 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.483686109 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.297995098 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.299358127 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.859086888 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.328130804 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.299423493 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.671113763 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.297511777 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.605649143 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.326517676 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.298858458 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.886382898 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.315419099 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.388749224 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.300040886 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.299304696 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.318147058 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.319473666 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.594717225 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.331863358 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.298759977 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.300713679 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.341911607 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.307543562 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.297650188 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.299537465 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.920356641 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.325473284 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.298478971 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.303707018 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.301407282 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.298581858 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.301864563 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.303102109 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568615227 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.308499027 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.312507077 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.299140354 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.300856528 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.304362264 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.374596153 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.304247855 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.642741947 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.30200023 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313558982 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.306603318 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.30856453 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.331523747 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.301083603 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.307095 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.188596844 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.571730358 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.322016266 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.302313011 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.301985318 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.300901798 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.320751382 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.325848382 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.333543416 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.303826794 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.097803906 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.343247864 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.326373657 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.301034081 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.308702196 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.303234062 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.312839844 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.304029877 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.60147059 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.593972321 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.445005817 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.309934212 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.307893289 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.084592719 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.350958521 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484851637 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.327070098 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.301549061 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.554727884 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.510910811 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.30656925 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.302529965 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.303997258 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.565872728 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.306688821 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.61874626 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.881920107 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.321431359 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.314811815 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.10165655 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.05531251 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.311127349 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.308939479 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.607309837 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.325522473 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.304696699 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.305066487 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.303839616 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.323958604 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.326513625 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.311842947 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.303584257 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.308912474 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.322068271 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.498683686 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.326837638 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.3110962 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.846879928 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.312613266 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315229524 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.309059977 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.306906473 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.304135552 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.366945169 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.310502413 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.342604102 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.306135694 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.307121753 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.864405075 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.306514129 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.30917935 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.500102762 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.037423147 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.3241 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.304635441 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.324811119 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.201243887 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.871884893 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.3294635 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.649220879 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.309518129 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.349312619 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.30581634 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.369651267 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.874170431 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.306378294 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.327604726 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.003471065 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.326164743 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.72344647 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.30647772 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.308163358 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.959803698 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.326873075 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.308700231 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.307231693 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.338060545 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.604589393 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.313694069 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.306597848 seconds)
  done (took 492.60793696 seconds)
done (took 638.272546064 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.306899079 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.312299163 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.298584213 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.311331629 seconds)
  done (took 10.448856112 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.317216068 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.314363025 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.317479448 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.314196391 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.315434677 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.314488922 seconds)
  done (took 9.115059629 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.306136447 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.313633693 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.314566784 seconds)
  done (took 8.154660145 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.542512693 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.338471752 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.681425966 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.330728683 seconds)
  done (took 9.115208782 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.315938906 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.316673186 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.315187057 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.316336119 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.318170543 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.321003768 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.317648967 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.317879451 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.319723442 seconds)
  done (took 13.077870531 seconds)
done (took 51.130803331 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.315228102 seconds)
    (2/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.368716243 seconds)
    (3/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.334999175 seconds)
    (4/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.212962089 seconds)
    (5/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.469337034 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.35306882 seconds)
    (7/286) benchmarking ("sort", Float64, true)...
    done (took 1.936657073 seconds)
    (8/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.301812899 seconds)
    (9/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.393555704 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.328418194 seconds)
    (11/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.393220729 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.325765874 seconds)
    (13/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.418051123 seconds)
    (14/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.327621583 seconds)
    (15/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.327782006 seconds)
    (16/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.324686381 seconds)
    (17/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.328586582 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.369594852 seconds)
    (19/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.329221946 seconds)
    (20/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.52636664 seconds)
    (21/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.388311539 seconds)
    (22/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.395917739 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.378927167 seconds)
    (24/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.32878107 seconds)
    (25/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.396519039 seconds)
    (26/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.349177557 seconds)
    (27/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.394999975 seconds)
    (28/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.369524741 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 1.772226207 seconds)
    (30/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.466981142 seconds)
    (31/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.348955451 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.324736042 seconds)
    (33/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.311677961 seconds)
    (34/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.386801146 seconds)
    (35/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.084248675 seconds)
    (36/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.492404954 seconds)
    (37/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.553094525 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.371927302 seconds)
    (39/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.299966847 seconds)
    (40/286) benchmarking ("sort", BigInt, true)...
    done (took 2.32688436 seconds)
    (41/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.312859169 seconds)
    (42/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.703497875 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.339451311 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.344718051 seconds)
    (45/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.497195535 seconds)
    (46/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.335719697 seconds)
    (47/286) benchmarking ("sort", Float64, false)...
    done (took 1.521478469 seconds)
    (48/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.087257923 seconds)
    (49/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.411711851 seconds)
    (50/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.417520951 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.326007895 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.325876543 seconds)
    (53/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.328754809 seconds)
    (54/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.444512188 seconds)
    (55/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.462274312 seconds)
    (56/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.318291846 seconds)
    (57/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.111876626 seconds)
    (58/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.432608729 seconds)
    (59/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.3838718 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.44379443 seconds)
    (61/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.960617755 seconds)
    (62/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.336314047 seconds)
    (63/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.323884828 seconds)
    (64/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.465827851 seconds)
    (65/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.357578159 seconds)
    (66/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.347171992 seconds)
    (67/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.360259966 seconds)
    (68/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.336391586 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.420400246 seconds)
    (70/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.353685384 seconds)
    (71/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.538790006 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.376088625 seconds)
    (73/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.329051226 seconds)
    (74/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.314333166 seconds)
    (75/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.403810953 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 1.513306751 seconds)
    (77/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.389554403 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.443209664 seconds)
    (79/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.334533835 seconds)
    (80/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.366669552 seconds)
    (81/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.597162777 seconds)
    (82/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.331145578 seconds)
    (83/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.325016386 seconds)
    (84/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.334379842 seconds)
    (85/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.035236774 seconds)
    (86/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.977452029 seconds)
    (87/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.39205509 seconds)
    (88/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.401586997 seconds)
    (89/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.333221267 seconds)
    (90/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.434756819 seconds)
    (91/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.394322852 seconds)
    (92/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.345764174 seconds)
    (93/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.337917274 seconds)
    (94/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.335981987 seconds)
    (95/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.409273439 seconds)
    (96/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.321199823 seconds)
    (97/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.672090117 seconds)
    (98/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.34169443 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.323705975 seconds)
    (100/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.308428582 seconds)
    (101/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.241145903 seconds)
    (102/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.463532875 seconds)
    (103/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.352718036 seconds)
    (104/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.331405003 seconds)
    (105/286) benchmarking ("sort", Int8, false)...
    done (took 1.462516843 seconds)
    (106/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.329964193 seconds)
    (107/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.332223596 seconds)
    (108/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.332080143 seconds)
    (109/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.405512573 seconds)
    (110/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.503750646 seconds)
    (111/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.458441498 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 1.349151273 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.325667092 seconds)
    (114/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.339792442 seconds)
    (115/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.339434737 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.343612141 seconds)
    (117/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.523879073 seconds)
    (118/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.337407861 seconds)
    (119/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.327990917 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.411600154 seconds)
    (121/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.475594683 seconds)
    (122/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.352910472 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.349156867 seconds)
    (124/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.342276841 seconds)
    (125/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.51615279 seconds)
    (126/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.475425292 seconds)
    (127/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.336338846 seconds)
    (128/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.370927854 seconds)
    (129/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.348539854 seconds)
    (130/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.325558357 seconds)
    (131/286) benchmarking ("sort", BigInt, false)...
    done (took 2.317417013 seconds)
    (132/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.416161569 seconds)
    (133/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.338548903 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.409913087 seconds)
    (135/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.516195986 seconds)
    (136/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.542436259 seconds)
    (137/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.372351776 seconds)
    (138/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.33505948 seconds)
    (139/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.317819382 seconds)
    (140/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.331118377 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.333774312 seconds)
    (142/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.327864792 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.420072139 seconds)
    (144/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.030955768 seconds)
    (145/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.538696954 seconds)
    (146/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.324326411 seconds)
    (147/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.969940183 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.33303107 seconds)
    (149/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.333977695 seconds)
    (150/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.326124033 seconds)
    (151/286) benchmarking ("sort", Int8, true)...
    done (took 1.664041092 seconds)
    (152/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.032008281 seconds)
    (153/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.336054771 seconds)
    (154/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.442941554 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.410989082 seconds)
    (156/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.391609342 seconds)
    (157/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.473930824 seconds)
    (158/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.159800648 seconds)
    (159/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.408050197 seconds)
    (160/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.425861899 seconds)
    (161/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.308550949 seconds)
    (162/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.352906001 seconds)
    (163/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.343497765 seconds)
    (164/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.320244164 seconds)
    (165/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.36100445 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.336502036 seconds)
    (167/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.334672055 seconds)
    (168/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.088623228 seconds)
    (169/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.355105339 seconds)
    (170/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.535913532 seconds)
    (171/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.324570785 seconds)
    (172/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.39348773 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.391494538 seconds)
    (174/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.510603449 seconds)
    (175/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.544038128 seconds)
    (176/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.457120932 seconds)
    (177/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.333014415 seconds)
    (178/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.335634867 seconds)
    (179/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.335614513 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.375465415 seconds)
    (181/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.340245221 seconds)
    (182/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.366370945 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 1.531669887 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.334037569 seconds)
    (185/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.364270919 seconds)
    (186/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.330864039 seconds)
    (187/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.403050253 seconds)
    (188/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.356686893 seconds)
    (189/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.458221669 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.437792813 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.42222803 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.346873091 seconds)
    (193/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.52859183 seconds)
    (194/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.479650927 seconds)
    (195/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.370066503 seconds)
    (196/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.231160853 seconds)
    (197/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.521354184 seconds)
    (198/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.432783216 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.422766207 seconds)
    (200/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.334002754 seconds)
    (201/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.322196343 seconds)
    (202/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.171738205 seconds)
    (203/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.408549547 seconds)
    (204/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.312529499 seconds)
    (205/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.364827 seconds)
    (206/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.337093238 seconds)
    (207/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.245201032 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.525674973 seconds)
    (209/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.985333315 seconds)
    (210/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.406586653 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.378613843 seconds)
    (212/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.331165823 seconds)
    (213/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.490231121 seconds)
    (214/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.314584452 seconds)
    (215/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.431845462 seconds)
    (216/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.529961933 seconds)
    (217/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.715876432 seconds)
    (218/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.350478379 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.437121629 seconds)
    (220/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.991266706 seconds)
    (221/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.404830645 seconds)
    (222/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.460461399 seconds)
    (223/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.431983276 seconds)
    (224/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.697351118 seconds)
    (225/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.417931774 seconds)
    (226/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.47760227 seconds)
    (227/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.364346138 seconds)
    (228/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.458565546 seconds)
    (229/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.116109045 seconds)
    (230/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.429716063 seconds)
    (231/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.312177381 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.391030983 seconds)
    (233/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.343735294 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.509737791 seconds)
    (235/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.982550885 seconds)
    (236/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.3940388 seconds)
    (237/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.426029249 seconds)
    (238/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.989391123 seconds)
    (239/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.978843972 seconds)
    (240/286) benchmarking ("sort", Float32, true)...
    done (took 1.91861773 seconds)
    (241/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.091738382 seconds)
    (242/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.433641006 seconds)
    (243/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.546160905 seconds)
    (244/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.315946191 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.388719217 seconds)
    (246/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.32542767 seconds)
    (247/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.348941649 seconds)
    (248/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.558170443 seconds)
    (249/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.336390465 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.472978697 seconds)
    (251/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.371095496 seconds)
    (252/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.383296401 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.508231572 seconds)
    (254/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.387522238 seconds)
    (255/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.384746497 seconds)
    (256/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.342642139 seconds)
    (257/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.435040158 seconds)
    (258/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.336634295 seconds)
    (259/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.469845372 seconds)
    (260/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.115858134 seconds)
    (261/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.494700088 seconds)
    (262/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.365408425 seconds)
    (263/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.327660373 seconds)
    (264/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.384655478 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.350431037 seconds)
    (266/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.499873024 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.352730904 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.352405525 seconds)
    (269/286) benchmarking ("sort", Float32, false)...
    done (took 1.488055086 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.532009433 seconds)
    (271/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.406170755 seconds)
    (272/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.348862222 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.405209376 seconds)
    (274/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.354911798 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.336527153 seconds)
    (276/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.377163442 seconds)
    (277/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.054893893 seconds)
    (278/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.10820938 seconds)
    (279/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.414521871 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.449045779 seconds)
    (281/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.438690681 seconds)
    (282/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.347259273 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.336724881 seconds)
    (284/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.347747494 seconds)
    (285/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.356259851 seconds)
    (286/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.482238057 seconds)
  done (took 469.607636504 seconds)
done (took 470.829741814 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.372959657 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385370903 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.337846156 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.373826773 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.451457312 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.517068771 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.348781574 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.380437661 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.386744297 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.388832775 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.34621911 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.515620633 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.339499549 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.341428933 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.340938257 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380039786 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.329857381 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.345377388 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.357944021 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.377873849 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.355718983 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.346800555 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.389612681 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.51638729 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.344436788 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.343330181 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.34405268 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.360418018 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.453622861 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.344967232 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.344898566 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.35209393 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.330312968 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.350772954 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.335734932 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.363139127 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.354165859 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.351244293 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.376219304 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.45388183 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.333764411 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.354125555 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.342465934 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.342899435 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.344582827 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.381126303 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.343937905 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.399009061 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384266577 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385474656 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.336074113 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.361708453 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.353368715 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.343557907 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.353786793 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.342589492 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.398762936 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386640809 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.362440529 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387656582 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.337301228 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.350922469 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.382237313 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.359071842 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.35099549 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.335752386 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.345857795 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.382027024 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.33368042 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.35304286 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.331613909 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.356861376 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.343978429 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.357169138 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.376595968 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.334201733 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.342067942 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.342129776 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.353840648 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.342373227 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.392364214 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386710671 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.394438604 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.344616325 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385712245 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.520410661 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.354104737 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.345519908 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.383080377 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.362924599 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.354553112 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.3568093 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.380705878 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.345954413 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.392137164 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.402924332 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.356058459 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.354451946 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.396639132 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.356288113 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.342327015 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.394919694 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.341849968 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.342626301 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.344629169 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.468929503 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.339014827 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.348714227 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.378744302 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.391682303 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.404518878 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.334611462 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.358031395 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392304452 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.354953331 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.406553193 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.347509283 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.3353972 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.347072574 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.472023078 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.349672247 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.3522049 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393204863 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.405700428 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.347166009 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.344122261 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.350876123 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389303248 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.468874696 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.357944221 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.459552149 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.34637202 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.350404175 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.380387101 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.392946006 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.380415781 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.406913577 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391996468 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.36312986 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.348552362 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.357453796 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.359204375 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.349158063 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.405638837 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.345998477 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.381070152 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39093204 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390812226 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.382363456 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.468875092 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.351518914 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.337060223 seconds)
done (took 225.639418611 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.406698832 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.343893045 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.453867522 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.346901598 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.447284891 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.449791817 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.346329959 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.34512499 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.345118171 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.725285347 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.345033812 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.345800718 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.345402128 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.345900899 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.430070877 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.350151869 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.345929632 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.69836237 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.350341115 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.41824416 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.346647675 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.346735107 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.349481808 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.738041121 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.344853794 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.341882816 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.420132943 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.347715854 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.694444415 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.342682194 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.343584162 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.704842573 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.438589839 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.367242471 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.358871001 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.355027054 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.450008059 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.372821836 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.428465063 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.429700842 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.454260908 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.388607734 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.344150016 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.347487926 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.352090909 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.35120012 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.346498986 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.376141016 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.344289136 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.347130501 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.69032174 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.359619748 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.348297302 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.348789842 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.348983575 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.379636594 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.347987473 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.351623847 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.438781908 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.353143558 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.412481402 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.730654576 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.738818809 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.352798559 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.348009153 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.349716201 seconds)
  done (took 105.507799723 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.414673978 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.425681015 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.470371712 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.375219108 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.402740725 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.477980219 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.376072946 seconds)
  done (took 11.19421167 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.358358407 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.354308078 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.401156344 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.402004061 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.350733572 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.56740884 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353930541 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.36405797 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.347692026 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.428307991 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.352898133 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.353676852 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.359466823 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.3481308 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.400550789 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.364335004 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.469567004 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.354717457 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.353425652 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.505025951 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.350683241 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.360328992 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.428344167 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.363396904 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.355329691 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.359177333 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.316336793 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353882621 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351914113 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.3553302 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351170118 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.460995105 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.354364922 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.351724217 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.353198909 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.511890997 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.353856208 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351015606 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.353862461 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.354519143 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.354441436 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.354339853 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.35571911 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.352362723 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.355311285 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.378005186 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.354146585 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.355270517 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.354056066 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.355937754 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.431875199 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.355574933 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.353262335 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.352316071 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.433163692 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363179669 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.356200758 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.35301481 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.357665341 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353520771 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.5092858 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.403929245 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.356568863 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.405077181 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357879089 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.358602647 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.356601923 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.355056484 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.448315017 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.357728205 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.404155084 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.353664092 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.580681382 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.381170904 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.359718631 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.359550908 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.359490271 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357369542 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.354798347 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.362156413 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.354649669 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.357885769 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.362450603 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354341137 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354655502 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.542037041 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.515133449 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.356522415 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.371982494 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.364893962 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.354883515 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.434219601 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.359461596 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.355246577 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.409100798 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.474160883 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.433484002 seconds)
  done (took 140.252665353 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.360964215 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.365855248 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.362452361 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.381352006 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.360299162 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.358756898 seconds)
  done (took 9.446478597 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.360646858 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.361017364 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.359496707 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.35997006 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.359077114 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.359505313 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.359841456 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359777971 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.363978748 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.360091495 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.35910949 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.360602126 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.36054516 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.360946002 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.360431595 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.360745732 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.359848932 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.357433109 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.362077115 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359756244 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.358484959 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.361436238 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360563381 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.361141662 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.364276149 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.360137731 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.368422428 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.361347321 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.361133525 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.368494799 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.383423613 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.361721898 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.362208662 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.366479055 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.366621232 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.364129833 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366540306 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.363798328 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.358030267 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.362668667 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.363309603 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361498691 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.362166881 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.361908693 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.363215656 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.36883487 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.367578346 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.369852369 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.362527749 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.363902705 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.364086848 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.364533499 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.362110335 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.36432726 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.366159351 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3885826 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.368178183 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.364357244 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.364327151 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.365840403 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.367013645 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.362232988 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.363134685 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.369634749 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.36101294 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.365122621 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.364581165 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.368303466 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363362358 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.363777066 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.364662331 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.360889596 seconds)
  done (took 100.4380307 seconds)
done (took 368.086324224 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.369965742 seconds)
  done (took 3.633079077 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.474965102 seconds)
  done (took 3.740214579 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.567321721 seconds)
  done (took 25.836944949 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.407892732 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.442147062 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.369150758 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.367028788 seconds)
  done (took 10.850540967 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.772177763 seconds)
  done (took 4.036283865 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.358860393 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.361043975 seconds)
  done (took 5.98748418 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.722949416 seconds)
  done (took 3.986979939 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.813190322 seconds)
  done (took 4.082459229 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.384880216 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.374866502 seconds)
  done (took 6.034593659 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.343489904 seconds)
  done (took 3.607735423 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.650984912 seconds)
  done (took 17.918121251 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.363262037 seconds)
  done (took 3.630964736 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.398991504 seconds)
  done (took 3.6633674 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.462643427 seconds)
  done (took 6.726431304 seconds)
done (took 104.99912013 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.359367884 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.363391202 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.364921465 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.363070238 seconds)
  done (took 10.716024394 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.401372528 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.40044356 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.402025429 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.413255204 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.405783165 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.400741141 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.392520057 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.413174636 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.412123013 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.402730412 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.400796046 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.403385966 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.402146316 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.394064388 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.405319644 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.402043502 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.41104382 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.403290229 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.39406503 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.403833021 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.368861625 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.412492455 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.403587382 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.367675569 seconds)
  done (took 34.885400807 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.881947317 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.438101477 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.522331172 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.420159865 seconds)
  done (took 7.528749348 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.445517266 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.446222583 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.44637578 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.48791814 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.509820054 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.446745997 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.396286807 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.390580966 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.375230882 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.437971302 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.495762474 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.428669705 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.533820113 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.366833261 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.572713174 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.368086916 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.368549026 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.445806908 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.486078412 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.501940765 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.369650999 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.429792363 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.446454622 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.430769923 seconds)
  done (took 35.896565752 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.368943412 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.382229898 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.367498318 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.367131162 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.375833413 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.368614498 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.371158028 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.368990713 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.370497905 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.910947981 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.392473917 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.380265649 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.91071762 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.394868297 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.374939994 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.371422741 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.911258965 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.92675301 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.396726606 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.375428283 seconds)
  done (took 30.955229269 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.36187996 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.361257794 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.713826546 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.618314515 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.363595915 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.368378906 seconds)
  done (took 14.057475537 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.451677072 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.632516104 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.374757633 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.79400608 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.879870827 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.375866384 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.371094758 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.646157126 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.028761162 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.013973982 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.437649005 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.453008631 seconds)
  done (took 20.731818383 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.380511487 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.368788541 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.380421263 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.384737796 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.433523397 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.392159423 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.377640513 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.365050156 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.439134979 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.460055208 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.395241882 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.434774571 seconds)
  done (took 22.083656968 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462048129 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366135904 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.38344609 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472654665 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371401332 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.217169456 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.457675759 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.17209149 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.396386833 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642723737 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376206212 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469051021 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626305436 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375459085 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372604599 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.350851063 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60495955 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938153883 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374383282 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366656664 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424107924 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369800256 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370914192 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.641852545 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372136837 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367670765 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.62984038 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36731306 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695622853 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385467562 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379676034 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368093557 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642242482 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089636357 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493667108 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614010236 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390470496 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374338943 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.371174747 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.374013323 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39382755 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375434579 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379369509 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368439437 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367495432 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367968513 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183783754 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.401063896 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.367432402 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368956168 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667778554 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466839268 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.373411444 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369053743 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381894824 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373168825 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.373811986 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.368505723 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980222434 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373394304 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375571479 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.375663316 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397041954 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37561234 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093676258 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.381043557 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.375107028 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374874709 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370711453 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37158043 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410800068 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370718373 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.395427141 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371008494 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226235051 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390231079 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376327907 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013322491 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388572075 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.376293026 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604879316 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37007228 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370931088 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.371185768 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373433481 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202744572 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384833029 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.356551953 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375455333 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.181311165 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.648192171 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397191466 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407693029 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.600517099 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.35755662 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37190984 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.385808174 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379229049 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395254175 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.178213083 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398205555 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.376838336 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633237264 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.587126974 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373099499 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.367390756 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933431504 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412023278 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.394301425 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372403604 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.646686296 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.050543419 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395027875 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373359282 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395117766 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373498379 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246942894 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390412827 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.480334464 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388873015 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688006601 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.27356651 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381138484 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443621452 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379635479 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373120129 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373320181 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378864977 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374543885 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.613007589 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402034548 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.389915689 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.374904962 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374744499 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.383860717 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379542948 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.404448254 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.602311702 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386768629 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657041285 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377038572 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374963351 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376518501 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.601992887 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.391295774 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.716274017 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640606855 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37505244 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401215851 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416699857 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396173296 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481655128 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397343688 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.376952947 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.641589487 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.381059236 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.381133431 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376038512 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384461852 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382399767 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.383988817 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430386387 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053688799 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35855684 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386115992 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270172521 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.391981551 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446677135 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383643844 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627234463 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.387718897 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409468852 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.388276498 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.387826521 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609459642 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389700892 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.379396999 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458385612 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.932636079 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.079286902 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399146975 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.378313033 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.376816616 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.376257457 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379528776 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378491443 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379541944 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.627899953 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40013538 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40252244 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054772531 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386208432 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378453312 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.390990392 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393590453 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.385019455 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380516979 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.382464438 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385131736 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385331861 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.396849708 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526127793 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.394964244 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380877685 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.898395451 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386007881 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381036209 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379088688 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415568147 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380667758 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314250302 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670644467 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410575963 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689257309 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385885958 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.401404036 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.379360791 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397053891 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386224034 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.405247997 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416286349 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.393921439 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381608324 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387667277 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963517333 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236399992 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014020396 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391966547 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.386436074 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386872721 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.198084828 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409461276 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381621743 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642835628 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.217680028 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408547328 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943928695 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.406215 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.29158115 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691085291 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622764726 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386847833 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.40702791 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.697634095 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602146522 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417016337 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382765956 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389348637 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.367993227 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032428432 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419560498 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464572712 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199099011 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410702415 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409415008 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.478707715 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.408393816 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859020188 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411029772 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386580676 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38416078 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388923135 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372169821 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417124303 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384382467 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107610531 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398850711 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.945911385 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410480747 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.636852274 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.401008281 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.389190695 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.382168673 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.403907574 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.646693649 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689571081 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389898299 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396652397 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01232853 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.260648192 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.391994998 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384095486 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252666625 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400067946 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721384314 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.404263714 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.401078187 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394062741 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385996076 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384213257 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.382489641 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389989284 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367297115 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967876555 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.410225118 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420184571 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412512638 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393345428 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.64589374 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.401043895 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.06003034 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626270107 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416456069 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415012521 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.391208385 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388079301 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.378216918 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387334775 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386097834 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516920942 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.616886635 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386533247 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.398511136 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.501438631 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604069159 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391104429 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387354023 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675408069 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.390462342 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.411032318 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223922285 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422833274 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38828803 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393752803 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.430751793 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.401430626 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46467494 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641548732 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.404624278 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.400001523 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862575449 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416246686 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394818163 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.40346329 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485509323 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403239365 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.392043532 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.185615492 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067014756 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268978264 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.077760366 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698026761 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392269843 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398577845 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389554392 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553407619 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39085091 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663237095 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389448028 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.424687138 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417852322 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39061653 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395595722 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607387191 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666183615 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391490645 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403884787 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397396624 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.389466291 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403187972 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.602481818 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976016602 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048162536 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397714836 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391511708 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.194638335 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69186121 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392648989 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39277005 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392115373 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.419179917 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.418645646 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.424411735 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393470935 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53958273 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.693298656 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12479114 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.429530705 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.420265023 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.166843836 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399799423 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.654887559 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390680741 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.652893569 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082142164 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.216664754 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66766032 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463409664 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646632322 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.398682027 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556716222 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.393140653 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398139295 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394090124 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393554223 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.392372024 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.404166384 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076879171 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666900242 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.397338174 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.394910007 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428537497 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.406000675 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.620668042 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.232741711 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625570985 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404512582 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399518214 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394705614 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.076708648 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.707930777 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399898702 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.399000605 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674556464 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400071981 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419042518 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.912592568 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.392735113 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042942016 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.376126067 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416590564 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40892251 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.220955869 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085472845 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.398513416 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987513627 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403693799 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40496752 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674440445 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.403402513 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41185298 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678022035 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.400704749 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.412157686 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656229249 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.085452888 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.294692009 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.399783004 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431298473 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.403974146 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395129103 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514364217 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401685992 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399382162 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.884106925 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424274584 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398370471 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409186349 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.405650839 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418811017 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.39904814 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398520348 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.403318641 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.38622044 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.387626443 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421908187 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.399491981 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064606874 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425713381 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.069919763 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.725819398 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.65670343 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414698052 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.388046655 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.402112214 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400058175 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397928456 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399628857 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.424772459 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052658801 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.406801708 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.416641481 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404017444 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.617835198 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611484161 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399771497 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65968636 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420827526 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419967835 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.384620425 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397953081 seconds)
  done (took 992.590903724 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.409243366 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.415316845 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.413436326 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.447392812 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.430866904 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.529201531 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.500298741 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.434229195 seconds)
  done (took 20.883378098 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.409753749 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.409521629 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.406722246 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.410017091 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.411366491 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.947419466 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.428567432 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.410765233 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.409947133 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.411097699 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.406880944 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.403114844 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.414529055 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.409648636 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.392851791 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.412841715 seconds)
  done (took 33.404070077 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.778727159 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.677800439 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.041415433 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.485923361 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.411597899 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.417358193 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.790201335 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.429824722 seconds)
  done (took 28.337505835 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.415592706 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.41381839 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.413214761 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.413094308 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.413198958 seconds)
  done (took 8.373159284 seconds)
done (took 1261.710053884 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.407621551 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.407363207 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.404274857 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.410267568 seconds)
  done (took 6.933824074 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.389522995 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.391629988 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.391223295 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.404043505 seconds)
  done (took 9.881663778 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.23400475 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.14181572 seconds)
  done (took 5.680117718 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.942387447 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.949972853 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.930980318 seconds)
  done (took 7.130214523 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.716933772 seconds)
  done (took 3.022067522 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.340916605 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.296502632 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.13300011 seconds)
  done (took 8.076774662 seconds)
done (took 42.028155666 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.40273864 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.675738374 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.558264029 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.402290574 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.564433016 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.559359101 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.166925715 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416528868 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.407350709 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.404765947 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.40201461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.566387059 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.224775712 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.658531537 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.224273868 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.65764241 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.594945389 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.407966745 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.420224069 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.414913327 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.171232215 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.404418941 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.432714361 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.402967255 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.579016451 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.54960437 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.416394156 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.656626604 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.404777221 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.405206894 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.554643764 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.415956797 seconds)
  done (took 83.830155399 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.403924366 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.410788394 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.404806057 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.435040464 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.405509783 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.429086619 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.430138932 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.412936031 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.406591026 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.432187866 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.440460187 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.404291916 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.405677192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.426163097 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.426824072 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.423637436 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.42761422 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.41229446 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.403463778 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.424978441 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.416943745 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.419967649 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.406363847 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.414887417 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.411033928 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.407966119 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.425428744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.425653569 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.429275747 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.413172663 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.412978502 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.429131792 seconds)
  done (took 78.688374307 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.40606843 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.42897437 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.419568744 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.409540895 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.430448705 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.416026563 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.413452915 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.412795455 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.422681447 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.427122305 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.409827141 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.409424803 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.434349984 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.411948142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.41322003 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.413984814 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.41000148 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.411376778 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.421743644 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.412324094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.433593194 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.424551955 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.411451971 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.429684044 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.433533459 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.413112212 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.439910729 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.412612249 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.430883746 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.418671542 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.413375942 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.443954514 seconds)
  done (took 78.751537664 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.689007223 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.415461172 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.41873834 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.399018183 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.41638683 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.417646297 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.41009781 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.693474328 seconds)
  done (took 15.170685346 seconds)
done (took 257.747034427 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.408808748 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.437126094 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.654414929 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.438311645 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.409464721 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.460893267 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.437583233 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.66094969 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.433472223 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.6609229 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.430038989 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.43234937 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.410115697 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.432985346 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.718632152 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.577408448 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.402458483 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.410121259 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.788951181 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.434754096 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.706459804 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.415882326 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.707215398 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.411301413 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.41701845 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.410834579 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.41847914 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.384605066 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.457838497 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.793334563 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.423406391 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.403006978 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.511417132 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.527480046 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.642889714 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.582445908 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.410910559 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.529429306 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.651230643 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.41477697 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.413982861 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.233350255 seconds)
  done (took 85.219829759 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.418419447 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.537634961 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.42124546 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.419880049 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.420330761 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.539980392 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.514612311 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.420355596 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.421074725 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.420266165 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.420397119 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.421406831 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.420147514 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.42072749 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.421343302 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.421747794 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.419407882 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.420708135 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.422346966 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.466749478 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.54246636 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.447228333 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.412720872 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.418980757 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.521973554 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.560807177 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.419753551 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.412630763 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.462718038 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.421584138 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.422561936 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.466083011 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.423232749 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.420416314 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.539429056 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.51925013 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.444358046 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.421233425 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.540886554 seconds)
  done (took 57.924172618 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.422359412 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.696896155 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.894416687 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.4223688 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.422906899 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.426605727 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.511136313 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.424589533 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.426103962 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.426961871 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.590778921 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.426637224 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.45975937 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.927735932 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.427374225 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.425954164 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.424782403 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.423383841 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.701106618 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436143347 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.536384425 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.427739416 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.515283104 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.438225255 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.449423424 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.424131044 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.430213348 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.022525079 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.426153874 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.588690652 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.350694614 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.516329379 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.988311438 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.944675671 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.359907632 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.431104083 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.425630397 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.599411284 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.428285906 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.425482011 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.514719536 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.425921924 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.908646239 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.120214845 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.451757132 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.427288087 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.046620523 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.594685538 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.718901242 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.439928632 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.941107133 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.434104636 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.4281588 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.427133714 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.717078451 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.433497426 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.426246193 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.076373134 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.457505348 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.516162558 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.430138003 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.427660543 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.702289456 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.431977747 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.699910258 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.434557534 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.433943528 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.450704697 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.918635587 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.436601145 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.132025302 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.452873069 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.427470156 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.594372707 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.710881073 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.103158355 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.455494353 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.707926803 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.006661737 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.520799069 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.436558936 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.018715112 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.526231591 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.437732755 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.43009014 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.431253414 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.430189248 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.476065355 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.521410745 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.089229799 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.142403383 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.10881588 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.546567636 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.441670353 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.430434517 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.082703669 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.454439791 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.430080966 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.91980776 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.145546837 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.454309612 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.437919383 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.152708237 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.456882211 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.519750687 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.43710774 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.927520295 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.435380245 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.478294349 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.430995087 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.437265575 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.456281227 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.520106538 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.435127711 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.43276522 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.119964096 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.625374302 seconds)
  done (took 189.609489076 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.423520167 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.423752872 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.422787562 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.424818054 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.423597389 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.431550225 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.424096742 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.423681987 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.430249146 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.424092327 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.425014163 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.427744787 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.42638103 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.452967307 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.440831653 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.433386511 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.425643856 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.426953725 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.42563277 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.425783972 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.42450243 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.431520904 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.426377328 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.425614151 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.425359138 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.428897745 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.432119879 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.430161176 seconds)
  done (took 65.312483932 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.433838274 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.112477447 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.440786569 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.588844615 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.463484375 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.430714283 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.580223424 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.497614155 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.433032785 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.432168704 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.430793719 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.778161639 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.433957861 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.023233226 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.655899314 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.602445284 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.021710072 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.455555398 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.434249372 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.431795875 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.58961678 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.451735625 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.777916754 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.079837928 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.434672332 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.078738095 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.423366605 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.435073094 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.433109391 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.087342634 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.452227922 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.796010685 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.521534113 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.502584742 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.103903573 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.008294395 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.027722337 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.608168404 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.43511863 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.435038865 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.432917945 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.424921823 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.083230435 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.438494138 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.436753275 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.07759682 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.456445021 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.438273999 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.442015488 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.435000673 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.502362139 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.504908756 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.787642599 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.157811333 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.524163252 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.451779576 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.586365953 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.802027096 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.444191376 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.031650542 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.444425358 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.088220469 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.459859873 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.426424896 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.437671437 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.442529532 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.609504292 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.588478566 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.035880598 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.456771197 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.03259758 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.625232717 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.436135273 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.436033498 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.438680694 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.088324041 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.022818757 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.635505334 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.59151521 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.666266876 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.430650127 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.437565145 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.427294637 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.526611066 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.440178843 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.091880574 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.056008136 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.459148415 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.440466049 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.439145432 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.43903126 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.648824363 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.114833614 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.529506539 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.013528716 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.812124823 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.790234031 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.440601191 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.506120892 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.458352228 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.853964768 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.440710241 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.504285995 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.882397799 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.794971271 seconds)
  done (took 173.094832435 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.70867791 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.454801884 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.543663877 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.605545586 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.091106929 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.060623531 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.436678473 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.567806833 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.561700521 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.716771536 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.44405806 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.529366402 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.677133298 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.522883749 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.189866409 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.518812332 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.544801925 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.596411736 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.595470212 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.435166507 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.154370889 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.774861561 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.641715263 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.464294404 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.563165638 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.278370075 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.059073565 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.016338273 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.638881686 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.438961936 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.029349808 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.460420994 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.454923371 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.171270773 seconds)
  done (took 67.280981342 seconds)
done (took 639.754234629 seconds)
SAVING RESULT...
DONE!
