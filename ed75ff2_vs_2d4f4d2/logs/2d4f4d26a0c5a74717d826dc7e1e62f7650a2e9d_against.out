cset: moving following pidspec: 29385
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.354220273 seconds)
loading group "string"... done (took 0.554321096 seconds)
loading group "linalg"... done (took 7.0702306 seconds)
loading group "parallel"... done (took 0.159397832 seconds)
loading group "find"... done (took 1.11688477 seconds)
loading group "tuple"... done (took 1.756339999 seconds)
loading group "dates"... done (took 1.24933427 seconds)
loading group "micro"... done (took 0.222152359 seconds)
loading group "io"... done (took 0.917650759 seconds)
loading group "scalar"... done (took 36.23310903 seconds)
loading group "sparse"... done (took 11.438001922 seconds)
loading group "broadcast"... done (took 0.917012191 seconds)
loading group "union"... done (took 11.894055972 seconds)
loading group "simd"... done (took 4.300000243 seconds)
loading group "random"... done (took 8.414896383 seconds)
loading group "problem"... done (took 1.878186063 seconds)
loading group "array"... done (took 19.868975204 seconds)
loading group "misc"... done (took 1.776821079 seconds)
loading group "sort"... done (took 3.144519897 seconds)
loading group "collection"... done (took 16.449191783 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.480646678 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122297861 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113421578 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117290401 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.131167132 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113795862 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122221741 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083060646 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.777293151 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144074385 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118282026 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415967195 seconds)
done (took 5.04541417 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.171562952 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082594516 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080747728 seconds)
  done (took 1.288121712 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065574723 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121353154 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066458497 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066465676 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066596083 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065719377 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06606264 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065670919 seconds)
  done (took 1.643831102 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072814644 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068201961 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068723313 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067975454 seconds)
  done (took 1.402028747 seconds)
done (took 5.705530126 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.763453351 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201422254 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182381359 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.398819617 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127814621 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153770369 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638985758 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.331374058 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183311391 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081562395 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108128003 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317457682 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106880482 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.630663414 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074118734 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089915411 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136223816 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.430702464 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066830657 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082050392 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088683005 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127963888 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086446646 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073998681 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141437568 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067615683 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129857362 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079993305 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066257003 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207141899 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172204608 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.650937756 seconds)
  done (took 10.160683737 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095815456 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097300849 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069056575 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13656087 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096260643 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06938692 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070933231 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067228237 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086673646 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127504608 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088572866 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101445372 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065277608 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068523152 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083897206 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204567319 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080567156 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081611066 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070352996 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074955816 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116673342 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078207458 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078088793 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077204357 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128304909 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18047232 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097664571 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097139963 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066769092 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080330428 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114547969 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125931285 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065236802 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065718642 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124015176 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094217714 seconds)
  done (took 4.585607278 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.92747623 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140655012 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089801969 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131343832 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065075749 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083884275 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106924044 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065112653 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082692909 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199800685 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.376369938 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.574024364 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110457311 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103639295 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067222962 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068054051 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066605729 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.339560728 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107150038 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102955431 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080290736 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069591423 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068059412 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341348913 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068766851 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063068231 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066909453 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057017022 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121344573 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067122876 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.925778839 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125344215 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066822973 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101288709 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162003805 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090333587 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.217906864 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143014215 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068042629 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064521605 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149946161 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065241296 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072486534 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066424913 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083798154 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1039973 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112644608 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065283788 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066846129 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162229381 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064937573 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078884938 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.972021557 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154685838 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078006528 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064312902 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246224969 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085609228 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069612642 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064740779 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.174657395 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134390858 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067385046 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067199337 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067602711 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069114633 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382313031 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065847742 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.714976479 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06923737 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076847316 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068708273 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069119656 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072469629 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072778847 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085207927 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066077792 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074879171 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065482078 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065557228 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066412929 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084477038 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.363022762 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066185873 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068105709 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064765616 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085564021 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096599269 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066167524 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065243137 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099646019 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063636465 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.177005007 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067094916 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106017999 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066269937 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084819397 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069482801 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116716155 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067222415 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.090201878 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066554939 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096864182 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070289248 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099382399 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081294549 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068373746 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.399932504 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065685462 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064943738 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068116111 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065101397 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067469946 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066300861 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079704339 seconds)
  done (took 20.899071576 seconds)
done (took 37.696987632 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271986207 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075498211 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07564688 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075438944 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075555582 seconds)
  done (took 1.789781399 seconds)
done (took 2.988077617 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119321226 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098827598 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064315463 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095546297 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064012856 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099841085 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099062807 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080976035 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099773332 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064041994 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096633036 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064213607 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064224935 seconds)
  done (took 2.325228076 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083047759 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082951026 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069414115 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081778353 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064265051 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082690948 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080613155 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088430026 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080670702 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072290609 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063738892 seconds)
  done (took 2.038577846 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081714683 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083114806 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069188831 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081304456 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063444763 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081617281 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080778376 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085343631 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081319343 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073110032 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064031126 seconds)
  done (took 2.029931057 seconds)
done (took 7.578355849 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076970881 seconds)
  done (took 1.254250659 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593084286 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.064708886 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081825659 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113034002 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184123846 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120163883 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.280356781 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086756193 seconds)
  done (took 8.882583344 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102571957 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069932441 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072371086 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069369251 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069825652 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068426586 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068162391 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071659565 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07089202 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070812394 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069015854 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069332853 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071689549 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070846616 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071512133 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068168423 seconds)
  done (took 2.404075267 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091904424 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091073836 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074054039 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075246659 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071767553 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071916694 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074498122 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073567253 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070828383 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072173878 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074692374 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073778163 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071495456 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064847135 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074235883 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075711148 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070792317 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074446485 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075259106 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074964323 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07476022 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064303405 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071272676 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073753968 seconds)
  done (took 3.065299553 seconds)
done (took 16.791837364 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111168886 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071357975 seconds)
  done (took 1.368276621 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081043622 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082406135 seconds)
  done (took 1.357130065 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082003397 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065452615 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091328006 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077796807 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066718685 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065809623 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087472527 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066494127 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065976409 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066261836 seconds)
  done (took 1.927420244 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069844255 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078785059 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069556824 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081060802 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073612849 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064357578 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072633808 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067453303 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07756946 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062945194 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070929877 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082266299 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071011962 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083821659 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072243435 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06817413 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070441961 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067101072 seconds)
  done (took 2.497208527 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064973605 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066435834 seconds)
  done (took 1.328393272 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066603632 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064031327 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067497365 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066365313 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063307356 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062552294 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063097755 seconds)
  done (took 1.646795252 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.38464924 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110116034 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.29457107 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070678631 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081364989 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250875318 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065596604 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070326369 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070493409 seconds)
  done (took 2.634825706 seconds)
done (took 13.960368101 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078534874 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084747841 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094544606 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.365043472 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091673726 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065710635 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114051466 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191704437 seconds)
done (took 2.293740269 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211928211 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.616220706 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.38216411 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195267137 seconds)
  done (took 2.394258042 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324864329 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086206869 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059000821 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066435105 seconds)
  done (took 1.750761462 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066002788 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068530367 seconds)
  done (took 1.345844953 seconds)
done (took 6.913854131 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066243566 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065550689 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063983275 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06586524 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063003019 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063357072 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085492833 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065799867 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066283588 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065830237 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068345407 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065572683 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065627885 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063379987 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063353542 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065597036 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063316505 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063211451 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063262461 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063341928 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066523862 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065992243 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063572206 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063325795 seconds)
  done (took 2.82102595 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082323469 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066952084 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071308563 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071144557 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070078783 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071154741 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071149602 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066155928 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071205381 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067882396 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069813469 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070155616 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068267451 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069966655 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068064057 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069920952 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071041416 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066254293 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06799999 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070175352 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071058891 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066334715 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070162043 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070882815 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069615086 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069474128 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068170216 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066226255 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070955601 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069693939 seconds)
  done (took 3.313317522 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069383434 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063697847 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063922178 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070566565 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063669214 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064856694 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063520429 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064121785 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064715105 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063145267 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065071016 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063008847 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063728531 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064377665 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064423312 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066952057 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07872853 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064072012 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063372758 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063999188 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06705312 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063247871 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063522353 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06353117 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063577144 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063193553 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063740558 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063438434 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064947127 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063364081 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066272383 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066885129 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063373081 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070105344 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067021027 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063330699 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067490165 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063080364 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.176565953 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062625147 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062935196 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06296079 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063250881 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069654389 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063440344 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064947265 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063414215 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064600595 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063638381 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06551646 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06300429 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063104613 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06479172 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064313551 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066970189 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062690442 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063941328 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062951832 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064298058 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062957599 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063244464 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062753655 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.0655268 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064421866 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077664417 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070387015 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063185003 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066605489 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064204297 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065640361 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064956948 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076232728 seconds)
  done (took 6.024674256 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087827251 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087264975 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065053058 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065437283 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061684134 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063823328 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067582524 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064223259 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065216751 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069946913 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06396385 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065345275 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06564822 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076581464 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064192664 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065086941 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069931512 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061975364 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063799506 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067229009 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064541508 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067178848 seconds)
  done (took 2.723382574 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154253189 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07037076 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105731917 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072742677 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067716244 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073161078 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069804694 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070080547 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070245064 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068322962 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068114327 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070168083 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067470286 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067891789 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068134638 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068168767 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070070131 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068537818 seconds)
  done (took 2.595364317 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076902471 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06621162 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087455745 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065670785 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065922626 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068558297 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070699761 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074549222 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067981607 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065954499 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074105165 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067932156 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068147656 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065709524 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06818498 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066045779 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068065511 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065612139 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07411192 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070476892 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070425777 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074131173 seconds)
  done (took 2.768304759 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079213478 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067726603 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082631432 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068810606 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062187112 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064190605 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069789946 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066426362 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069998833 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067577175 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066209999 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064115183 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06886371 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065524661 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068905247 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065839026 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067600242 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0658458 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067405028 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061732501 seconds)
  done (took 2.589112006 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086081832 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067484673 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067253204 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075959105 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06708589 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067279082 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075217754 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067126217 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067134317 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087115261 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067210512 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066917762 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075109539 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072480069 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067240839 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075353595 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075350182 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074851389 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067380247 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067411022 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08744893 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067342726 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075195302 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067636666 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067765557 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067416114 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067948572 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072821743 seconds)
  done (took 3.240444587 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06636374 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066465866 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06374727 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063263951 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063528077 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063380191 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063455994 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063617611 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066036503 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063463644 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066193984 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066078675 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065598622 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065874635 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066097152 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065855543 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06630675 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063827767 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064360608 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063597072 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065735837 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065524586 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065991975 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06350979 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06345073 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065975796 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063584841 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063706879 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065581577 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063305553 seconds)
  done (took 3.176638048 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075730683 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072316106 seconds)
  done (took 1.382130796 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063302927 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080027311 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063162272 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070218 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069616111 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066443899 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073379283 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069955326 seconds)
  done (took 1.786362964 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082433958 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07772874 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06822883 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081299166 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076525081 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082970553 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132333564 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06751116 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073092062 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064355935 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079578846 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065944272 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072622496 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066912289 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072114104 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072437376 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064036697 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072255027 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06894592 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064468216 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067733998 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075116173 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068779159 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061621657 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068009033 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087863743 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077535109 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066326666 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069553442 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073514063 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072215238 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060592234 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066121028 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066493574 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064088076 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075940138 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081028461 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069379577 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07468724 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066881794 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076679125 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061432446 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070653092 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072176341 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075748563 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06626328 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066734255 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06105634 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063920707 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.0685688 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061705058 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065986775 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061392159 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075511329 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069348616 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076477092 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064939324 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067584905 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068794029 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069449047 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072337508 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067805803 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068925587 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065475828 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072448062 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070154926 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075831827 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061051949 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06260113 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06434425 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075740462 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088756438 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072447286 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066826695 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067257633 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064008698 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069598059 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067505861 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071809862 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072459314 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066758623 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071327329 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073738059 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066485118 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068980096 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074626435 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064632011 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069154456 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063881428 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082132068 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064604283 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064188647 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063883161 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075880378 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069001757 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065300265 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063493497 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072789026 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.0598223 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066446654 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066840328 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066648692 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075594422 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069886239 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069912914 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073450812 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072887903 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065463735 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068029638 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062392175 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066651348 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064402035 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072268031 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059443992 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06846845 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066013519 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065917658 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197503406 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065027558 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067175277 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074126051 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072922262 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065847708 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063303356 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06926509 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066547644 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069698942 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074923805 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065217434 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061728893 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062294394 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070312975 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066597204 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071395955 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07107938 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06991957 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061503795 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065803989 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072039964 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075578081 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067595643 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067607767 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072726926 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068457798 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066446217 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073771184 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069522603 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066565037 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071688923 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068226129 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061944705 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069418264 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069449287 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065376448 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070495869 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069811235 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069483995 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067262664 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065391102 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074448598 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06790018 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066115633 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066398442 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065459159 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077266895 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068961095 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061621828 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063425149 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075769428 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06476166 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066137009 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065901116 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068963093 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067820677 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064293036 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065977268 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068799635 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076652642 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070503762 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067712628 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071197152 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077813235 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066185126 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069320251 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066093533 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067371101 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066733203 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075415891 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072186456 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071690342 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069044436 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062841388 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07231616 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074362601 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06592266 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064282185 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065555641 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07125351 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072093424 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070869902 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067391959 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064542518 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066752666 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069168201 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068972856 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065855431 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065231967 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072925625 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064604996 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073456487 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067439029 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076585509 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069685642 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061309314 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069673634 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064028916 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071992428 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06128438 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064043035 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065524889 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066551303 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064921012 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068060126 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060075839 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072644812 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072942082 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065522573 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064469493 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064909614 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071383107 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066793142 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068878122 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068634203 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071307629 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075473293 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064688264 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068587823 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075584859 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065074314 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.187424021 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072868243 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065908797 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065759922 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066415856 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064985542 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070456484 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07528822 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073115604 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061226311 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069228737 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065637417 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06566506 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061991032 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071648422 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069999089 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067885799 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073866054 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068348357 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068001782 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071201577 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067002604 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067890113 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068357466 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070684564 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068297704 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068695075 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066752819 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069532815 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066129127 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064293788 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069514739 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067142567 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067304052 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07214133 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065896233 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067156852 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068911999 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067508445 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067840372 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066679813 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065676322 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069965008 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06776736 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067146921 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069064763 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062509165 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074237681 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066450083 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074486222 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067155484 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063667539 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074209417 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068645228 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07243834 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067704777 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067890679 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068167278 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066315831 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069436904 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073648817 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064723516 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077724548 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07417834 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067539351 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069473861 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066916252 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068710137 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065850393 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067334798 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06748443 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067535234 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066163748 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070901663 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068736928 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066641672 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067816002 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066794477 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066361713 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06705305 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060877103 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065268483 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065730351 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065876579 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07563025 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066492401 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065644104 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065566659 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067089009 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065242627 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063018934 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074746527 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075764921 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066805879 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073549085 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065536617 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067519538 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076967659 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06047993 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064210975 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06398364 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064168814 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072935493 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06643163 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074731595 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066295273 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065131061 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063181061 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066573773 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064208764 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060408236 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063663194 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069166184 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064934475 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06399702 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065169764 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067952976 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065495344 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073945362 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064129276 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065517981 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065202838 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062552543 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064542016 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064636402 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.198427914 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068665415 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065370355 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063936214 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066383421 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06731651 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067954051 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067220145 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067898391 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076862896 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066396927 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069667838 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070136379 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06213258 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069790684 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066883484 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066778658 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06599825 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070388406 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070008681 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067969894 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075125164 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066985011 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068222425 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066636988 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064156222 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06643207 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066322206 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066154824 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066819858 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06810988 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074885314 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064503592 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069696518 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067005609 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067155542 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.0732711 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067392957 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07011764 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073972624 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066803664 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068468441 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075909531 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071473889 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070007913 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067791302 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068970621 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072715734 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06621852 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072365641 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067328912 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067287183 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068507234 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064877083 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066259326 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066031335 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066373645 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072791012 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067705303 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065907819 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065360101 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064732798 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067874992 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070056981 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074484314 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06914288 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069691933 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061606883 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063576883 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06754742 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064327869 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06765197 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068965539 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07247985 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068550995 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066715528 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064833297 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07533734 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072120577 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069828198 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06408616 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070217718 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067015838 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068711117 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067362125 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066838979 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067839448 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070186208 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067853835 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065654841 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073328698 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070055649 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067473329 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068075334 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06718808 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066679332 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061443051 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066718577 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068220502 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071555157 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068863634 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066318218 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076746748 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064022513 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066604495 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069648757 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065337711 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070792968 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061144935 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067354063 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066918059 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067489163 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061083413 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064953264 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06368007 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067708435 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064592679 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060548288 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075130562 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073978995 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067772531 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06418668 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063910029 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060250763 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060501564 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.196148595 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068872254 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069111484 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076889188 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065658925 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066360915 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062337255 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066861181 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069361 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069795483 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063610798 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062230197 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.0654729 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070206855 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071905754 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065746414 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067016645 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069919994 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069243026 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064941104 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070006323 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063699086 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070774198 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079668464 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067162656 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067373795 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073238812 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074795383 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067842801 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062238456 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06777315 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070221391 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06757128 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068216179 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068773017 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081269614 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070461351 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065927144 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066065506 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069920519 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066636646 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074719575 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067690018 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06804394 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07128198 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068800585 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07663943 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069407886 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074426171 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070111992 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069730197 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065555721 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067641647 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065358519 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065919677 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067434086 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06787625 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071645609 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074702876 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066062499 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077724322 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075292176 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068405965 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063682633 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065907471 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065811201 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061413542 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067513075 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064417103 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06444282 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064957029 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065493615 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067524963 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071572902 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067163186 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066986904 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066110604 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060555191 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068419449 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068477782 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067237231 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062849923 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066131708 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067012617 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069926849 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069419743 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063925467 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06747788 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067677903 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066835255 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061452945 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072486274 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065185976 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068289499 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065522547 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06629034 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067129287 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069867198 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071310524 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067400756 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068208276 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070113296 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068128869 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063036055 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062972428 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071447403 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064346672 seconds)
  done (took 42.555897955 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099866949 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062966289 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061288812 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062185039 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074110853 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063071313 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061863111 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063027662 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063294818 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065344258 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06184556 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062187654 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071288526 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07756698 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073976163 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066341204 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062125215 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063071362 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061798347 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062801 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070959255 seconds)
  done (took 2.739192974 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073979117 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070694286 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073241848 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075806803 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067331046 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070790047 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07264156 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070598076 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075967625 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066879963 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076556371 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070336823 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066906408 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066881573 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066841343 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070469803 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075987575 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067385447 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070307124 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081122632 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070749579 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07254898 seconds)
  done (took 2.878461923 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066475724 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066608726 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06770396 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060938574 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065351564 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061912823 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069281117 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063663552 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.06922561 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065024697 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06490318 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065164558 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067645379 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061582121 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065638842 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064097176 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108247034 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069037092 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065433738 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066342773 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061314244 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067591281 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061395313 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06182766 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064632814 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069617998 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066669715 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063612368 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06552823 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064844881 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065305567 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063260302 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067461154 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066049907 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064921419 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064792777 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06516055 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065102062 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061360271 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063695177 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066067644 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061822691 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065948799 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066710103 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063703015 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063491382 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066940128 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065366687 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060919446 seconds)
  done (took 4.537363461 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078891531 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108250211 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067599208 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087921989 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080014672 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07553618 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069144763 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088895983 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063032916 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064464718 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08134317 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08008068 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065946835 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070243195 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072109167 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065447057 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066637065 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064398329 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069831951 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065077955 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070025155 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071622503 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079696107 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078989188 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069318925 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064338473 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06476713 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06953332 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078393776 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070352621 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070330236 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071118667 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079867577 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070603973 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064563902 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067370533 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081880102 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065889001 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068366638 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063558421 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067623148 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070113085 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072498029 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081768121 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066007095 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070799251 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065867782 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062656761 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077809687 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067922849 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073061692 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079820733 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069518344 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065920792 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069760176 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079617726 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065114232 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064107401 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068035852 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077441021 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062973529 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068972007 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079325508 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067261039 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072283651 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080112597 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070490684 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069227618 seconds)
  done (took 6.33605627 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074626604 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072314614 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080345375 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080356697 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071867248 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072481787 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072263497 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072043481 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071834161 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077023145 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072214358 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093011664 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06755492 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074934931 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072368381 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072476276 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072396589 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072010363 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072132489 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072060206 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072524458 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079962435 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072324933 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080531575 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097610621 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068032774 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07203736 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071951457 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080223536 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07228989 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079252348 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072295231 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072089738 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080361435 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078966594 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072092046 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06470663 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071713067 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072437998 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07214123 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067332353 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07995485 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072374045 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067569712 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072390467 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071822234 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079947566 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07895516 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074573663 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076811294 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071931335 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080073747 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071637926 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071940356 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080332378 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104702884 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079916137 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080548587 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072066203 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079529107 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079538842 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085742574 seconds)
  done (took 6.019157925 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082545108 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075283363 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076542992 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061062613 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063844128 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069618707 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06427045 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064115282 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074420854 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074711239 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076618034 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069981344 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072483463 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076535772 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069965091 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072525714 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069921705 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069801624 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075026292 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070002147 seconds)
  done (took 2.756755257 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073962169 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084050374 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067096377 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071686301 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069000074 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071381832 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068472508 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068807531 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067158157 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068525056 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076449974 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076163586 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066667266 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07149847 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07570263 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071641966 seconds)
  done (took 2.468022379 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074860254 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071806834 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079100175 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066186904 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064118726 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062529591 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065798345 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061537048 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06261025 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077752398 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065526121 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067981916 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066073682 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064483144 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062775263 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06886667 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062376419 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063122328 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06566576 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078051974 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076484648 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064369508 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066772125 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065841723 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066228896 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070684496 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065134743 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063935673 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063625786 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066288384 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066639442 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069446219 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063373943 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063651171 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064539493 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063305665 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065752217 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066090644 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06814316 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065483862 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063451657 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065527821 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065794348 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066306012 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061877118 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065945722 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061958872 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067906412 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063524883 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066091417 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065787851 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06788374 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.0661643 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072637405 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068760002 seconds)
  done (took 4.987334427 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078774018 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069131072 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061948434 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063855827 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069322934 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067548523 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0690611 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067707567 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067650614 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064085883 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067518464 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068814531 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067731476 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069304275 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067687692 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069235749 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061860484 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067726339 seconds)
  done (took 2.551538503 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070978692 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067012783 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073191613 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065741403 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066045968 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067973453 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061848058 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064365491 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065023553 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065939776 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06586941 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06783594 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064543997 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067780019 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065490047 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06569539 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068042659 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064371248 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065654288 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062017685 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067881267 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064317501 seconds)
  done (took 2.782594708 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072337098 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092052227 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.138819019 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083512113 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080680188 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078868524 seconds)
  done (took 1.873399622 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090526068 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07900174 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066612496 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087543105 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073146667 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067251393 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067362176 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067640885 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076177999 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076041897 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067468336 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075821854 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075797053 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075314845 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073174258 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073115206 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067096034 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067598849 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066230847 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084509193 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06745687 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07575505 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067448112 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066885532 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067356215 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075194117 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075744824 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075978748 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067487877 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075571639 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072841019 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067386853 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075931717 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075878148 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069084123 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076044532 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067374862 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084397333 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07332905 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075603986 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06918516 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073979476 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076400323 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072265287 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076336128 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06811586 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072558347 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06792461 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067680901 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086183039 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073084811 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075576733 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07364451 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076590279 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076386456 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086173322 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076196465 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075672224 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07351278 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078586391 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075538903 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072906804 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075110242 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07595937 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073517371 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075188005 seconds)
  done (took 6.207676849 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082490233 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085616597 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067968408 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077019374 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075486045 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067857909 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067821061 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067308405 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06773997 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067136106 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108573989 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067851826 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07584832 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075429834 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067774656 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067775688 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067708229 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075441724 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067198985 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086307992 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067996092 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0755138 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07548719 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075320487 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076240987 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073433223 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067460941 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067711778 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068067938 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067394588 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072713457 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067850416 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075480915 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067012392 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07577253 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067681782 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067473861 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072581696 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068118302 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07330702 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075538627 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08403829 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067623062 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067684767 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076192221 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066986359 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067655915 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066973948 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067748208 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067216254 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076214546 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076262493 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076296529 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075758449 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067557296 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067952172 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067878899 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067795576 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06836296 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073683678 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075723753 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067543616 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086297984 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067523856 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067471753 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075349697 seconds)
  done (took 6.122514152 seconds)
done (took 128.446424288 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184034601 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169664586 seconds)
  done (took 1.681087947 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068840153 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097361712 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076900013 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127937116 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066241168 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100627048 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09971314 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078312924 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066153238 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066297935 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066205262 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068961313 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131846537 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066686769 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066088851 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069037887 seconds)
  done (took 2.659468783 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096673087 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158017657 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099595292 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064956889 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097104443 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073238608 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064815803 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075154224 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070876704 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065440954 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073335662 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070623819 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064833923 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070854101 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071194146 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072924946 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065074183 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072859345 seconds)
  done (took 2.772883747 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101151132 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091323393 seconds)
  done (took 1.538158843 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156016278 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106027424 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150500035 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.347417319 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168173209 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.235713962 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127580876 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12804858 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116661709 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123780627 seconds)
  done (took 3.002515376 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097856284 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152381719 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256199217 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115620326 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072679961 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094964201 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116742887 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077748729 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081288303 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080590079 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080060405 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076179876 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098992866 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074541992 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073242513 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076303992 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102457274 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072501206 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074488411 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076747735 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099009145 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065833723 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073828458 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072244533 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077269897 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077564122 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065126366 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065291761 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077099451 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074051452 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077003098 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093663944 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077375933 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107191712 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070413198 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108452894 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076483508 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073832279 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074190069 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073653923 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07871628 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078567048 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072149192 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075998246 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065484309 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076422709 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065945518 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065419769 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077957485 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066500768 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077893549 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076734579 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107061127 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067099799 seconds)
  done (took 5.952864825 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101992849 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105699793 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071217715 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109267894 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097336111 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071221977 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102693139 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091711793 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102898874 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092742993 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088835387 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071020246 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082172764 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083389258 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110349825 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102073233 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.096004645 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070700874 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102177596 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103037615 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068625683 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094669235 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090921652 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101816206 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067566654 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070433247 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068144827 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070513303 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076970013 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078410089 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070396419 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.102119931 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084837736 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078200005 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067327168 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067855188 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068634106 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079403675 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097966945 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079078856 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077747994 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067572489 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068376673 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069421145 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091285984 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067622791 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079029344 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080525791 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079081744 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069493906 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070560373 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068097404 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069365683 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079866201 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07796977 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080603154 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080105098 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068688507 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068550577 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071716037 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081304035 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079122404 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079529566 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092609025 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079467507 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06885589 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080244459 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084736285 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068835017 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070261777 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06872622 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069783929 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06962059 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078296598 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078046363 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069775033 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069597231 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068461608 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07997388 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078694986 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068036462 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.0771375 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067765107 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068936078 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069781014 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070141392 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077507473 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079672203 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069868608 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068291492 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069193561 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068294024 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067023238 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075776184 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079009909 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077303455 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077527074 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069167538 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078012674 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077487912 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068962631 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077820792 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.196771265 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071065926 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071212097 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079877436 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078811012 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080515332 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069504513 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068697224 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078850303 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081644235 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068704862 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079114806 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082017551 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079120856 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068116481 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082213427 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070411647 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081454805 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069967628 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080409692 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069429257 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079391232 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068967318 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06837326 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068861948 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080255821 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070737789 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069224903 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070542019 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070027304 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080470187 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083244331 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071371784 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082007062 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079055382 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070635403 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079136293 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06915297 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079611456 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070279269 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070589093 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068201881 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082265379 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069516626 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068969725 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070579588 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081794251 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068861824 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080381 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078952404 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068508844 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081646383 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081120981 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078128345 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080493064 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070749663 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069069772 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068138731 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06990421 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077534998 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08009852 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070646969 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068583174 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078693609 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079272631 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067510574 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078558716 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078726505 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078609654 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068760406 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069879607 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080318881 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08091184 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078322952 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07835751 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078866896 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068602725 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077540503 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078465291 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068224553 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084965279 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068241598 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082469865 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079511558 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076764336 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079156761 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081386767 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080655171 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080226055 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082176136 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068057396 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06822429 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079149569 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.0673743 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068840806 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077005747 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069395474 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068927385 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081809931 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067467466 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07812185 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066855237 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077298191 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065889015 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069151835 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.211953563 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068553255 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070651424 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080149662 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069926316 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078006071 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081335997 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079061564 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068811423 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070635009 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079666527 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07974301 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068967656 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068764091 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070952037 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079510411 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07775736 seconds)
  done (took 18.804333648 seconds)
done (took 37.762262526 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209238851 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150609551 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180083035 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120102486 seconds)
  done (took 2.108197815 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121270906 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100751377 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095100563 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064771468 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101846291 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064991029 seconds)
  done (took 1.932165172 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312406716 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212006719 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183288363 seconds)
  done (took 2.088708946 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199514088 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186739953 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.394993831 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253013759 seconds)
  done (took 2.522583501 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143835436 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089111993 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066641492 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08283825 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134686302 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.16197978 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101611713 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126171946 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078204129 seconds)
  done (took 2.418152812 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147412606 seconds)
done (took 12.60210832 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.108037237 seconds)
    (2/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072925208 seconds)
    (3/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073252579 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081429448 seconds)
    (5/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076991605 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.121368288 seconds)
    (7/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.246223148 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.178379222 seconds)
    (9/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.179914829 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077406197 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.149426645 seconds)
    (12/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077831475 seconds)
    (13/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.18388837 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073626861 seconds)
    (15/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081132789 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051472755 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105795368 seconds)
    (18/309) benchmarking ("sort", Int8, false)...
    done (took 0.139731209 seconds)
    (19/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.106949261 seconds)
    (20/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.099762887 seconds)
    (21/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.195742853 seconds)
    (22/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073491907 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.100375384 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.081599774 seconds)
    (25/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071854244 seconds)
    (26/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.159973514 seconds)
    (27/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081415469 seconds)
    (28/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.225146348 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074807172 seconds)
    (30/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.197979737 seconds)
    (31/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.196713112 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168329769 seconds)
    (33/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.148955507 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.095145687 seconds)
    (35/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.215269981 seconds)
    (36/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.15024922 seconds)
    (37/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074329048 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071423577 seconds)
    (39/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071470801 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.160576606 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09042573 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086938057 seconds)
    (43/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.170042767 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.099719253 seconds)
    (45/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067010899 seconds)
    (46/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.148913383 seconds)
    (47/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173601539 seconds)
    (48/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.193059543 seconds)
    (49/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.158800182 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071870317 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065207246 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095397336 seconds)
    (53/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072855425 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071942096 seconds)
    (55/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.148453833 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14251678 seconds)
    (57/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075539173 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.18960696 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13722195 seconds)
    (60/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106543821 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099618804 seconds)
    (62/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050979723 seconds)
    (63/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.147823137 seconds)
    (64/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074694419 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.098069753 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066523018 seconds)
    (67/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050627624 seconds)
    (68/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.10437283 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.15825207 seconds)
    (70/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071037803 seconds)
    (71/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077643929 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090856976 seconds)
    (73/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071582917 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.18350468 seconds)
    (75/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06560553 seconds)
    (76/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.141512844 seconds)
    (77/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.154373045 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135755957 seconds)
    (79/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076332758 seconds)
    (80/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.216942597 seconds)
    (81/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.156164365 seconds)
    (82/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.150553322 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067673873 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088523909 seconds)
    (85/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075734446 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051615704 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066100478 seconds)
    (88/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052097887 seconds)
    (89/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.109431422 seconds)
    (90/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052886792 seconds)
    (91/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.160311947 seconds)
    (92/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099520832 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.066059281 seconds)
    (94/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073384777 seconds)
    (95/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074315426 seconds)
    (96/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185416588 seconds)
    (97/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.1852623 seconds)
    (98/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061889662 seconds)
    (99/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106193153 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.149935906 seconds)
    (101/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.151525612 seconds)
    (102/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078491515 seconds)
    (103/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051804719 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.332762495 seconds)
    (105/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118506659 seconds)
    (106/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09184291 seconds)
    (107/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069072752 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.095399458 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120017866 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053382509 seconds)
    (111/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.185743708 seconds)
    (112/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075152843 seconds)
    (113/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079606482 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051149433 seconds)
    (115/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050929674 seconds)
    (116/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072739917 seconds)
    (117/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068743684 seconds)
    (118/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148830149 seconds)
    (119/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072418306 seconds)
    (120/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066210933 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072718511 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139301489 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.163499074 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094172765 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141768801 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.133623858 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073317396 seconds)
    (128/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070236562 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071646352 seconds)
    (130/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.109869822 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066867822 seconds)
    (132/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072820183 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090493493 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070355436 seconds)
    (135/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.194794022 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071062247 seconds)
    (137/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051117953 seconds)
    (138/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052121819 seconds)
    (139/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.18360376 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071603348 seconds)
    (141/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051588511 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071374336 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169521735 seconds)
    (144/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104277754 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071602862 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065031433 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068598384 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072344732 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06563092 seconds)
    (150/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052537726 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10788749 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097794219 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066148161 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065409687 seconds)
    (155/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052478539 seconds)
    (156/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074172654 seconds)
    (157/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.148980205 seconds)
    (158/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095127412 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064638173 seconds)
    (160/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071533533 seconds)
    (161/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052063007 seconds)
    (162/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.098679424 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073169653 seconds)
    (164/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05100914 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.09538269 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052965582 seconds)
    (167/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051422823 seconds)
    (168/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079360851 seconds)
    (169/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071241976 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092665204 seconds)
    (171/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052865684 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.173146309 seconds)
    (173/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05278571 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180661758 seconds)
    (175/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066772703 seconds)
    (176/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051833647 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081799526 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064842306 seconds)
    (179/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051159115 seconds)
    (180/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063559201 seconds)
    (181/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06404048 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06414147 seconds)
    (183/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067293668 seconds)
    (184/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060389043 seconds)
    (185/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071412072 seconds)
    (186/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052109775 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136517175 seconds)
    (188/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070582955 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051314102 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.105945867 seconds)
    (191/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.204789943 seconds)
    (192/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.056016601 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073939481 seconds)
    (194/309) benchmarking ("sort", Float32, false)...
    done (took 0.128836257 seconds)
    (195/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079309276 seconds)
    (196/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.069128641 seconds)
    (197/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076675067 seconds)
    (198/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06707164 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099672055 seconds)
    (200/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06535447 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065628435 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074227821 seconds)
    (203/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054451538 seconds)
    (204/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061827566 seconds)
    (205/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051561517 seconds)
    (206/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054458049 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067364451 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06643985 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091664953 seconds)
    (210/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053139184 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129050793 seconds)
    (212/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061944984 seconds)
    (213/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071860292 seconds)
    (214/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051459761 seconds)
    (215/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052381226 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064587958 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053979652 seconds)
    (218/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112739537 seconds)
    (219/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063271818 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17905481 seconds)
    (221/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069010365 seconds)
    (222/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052373837 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065707417 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074130831 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072668943 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087800354 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065748559 seconds)
    (228/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.186921667 seconds)
    (229/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052560807 seconds)
    (230/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072356147 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051687948 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091437647 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08872775 seconds)
    (234/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087965084 seconds)
    (235/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051723786 seconds)
    (236/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069288841 seconds)
    (237/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052240485 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070766821 seconds)
    (239/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062943862 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054679073 seconds)
    (241/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053695149 seconds)
    (242/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.149812119 seconds)
    (243/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066472596 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145520199 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065628355 seconds)
    (246/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064168655 seconds)
    (247/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051504208 seconds)
    (248/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051820139 seconds)
    (249/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066600562 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074971073 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135755297 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051145057 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06571425 seconds)
    (254/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065889596 seconds)
    (255/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.145837265 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.08853343 seconds)
    (257/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052758961 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065162636 seconds)
    (259/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066835545 seconds)
    (260/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087468028 seconds)
    (261/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08243734 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086099482 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108938538 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148357371 seconds)
    (265/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071396419 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064610336 seconds)
    (267/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06090511 seconds)
    (268/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067416274 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088894711 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.0715785 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117737619 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053136795 seconds)
    (273/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071090361 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072417209 seconds)
    (275/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079102718 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170519145 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065400037 seconds)
    (278/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086934751 seconds)
    (279/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073462655 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085724804 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065554442 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065350711 seconds)
    (283/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084855868 seconds)
    (284/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052557413 seconds)
    (285/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051735145 seconds)
    (286/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051749247 seconds)
    (287/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066674075 seconds)
    (288/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070465127 seconds)
    (289/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051591278 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111033002 seconds)
    (291/309) benchmarking ("sort", Float64, false)...
    done (took 0.124554776 seconds)
    (292/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064945533 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072374255 seconds)
    (294/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07064371 seconds)
    (295/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064162582 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.0637427 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051327745 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072653302 seconds)
    (299/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051189126 seconds)
    (300/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051576905 seconds)
    (301/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065850882 seconds)
    (302/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051241745 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092640105 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070262592 seconds)
    (305/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052450921 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064892481 seconds)
    (307/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075534494 seconds)
    (308/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073092075 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070754729 seconds)
  done (took 30.466830303 seconds)
done (took 31.861476345 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083797228 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092947273 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074821372 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092749603 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080886364 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076846149 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072332821 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07816766 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079940988 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081393528 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078043788 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055032022 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074282159 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074245065 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074359842 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090816515 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077986513 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072169394 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072621283 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064265963 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072740106 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065798621 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066956597 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054534627 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07744809 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070937956 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072129486 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073684511 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06555349 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065819162 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06856852 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072938072 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065497668 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077745911 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071821196 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072546442 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074500523 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076249964 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067336485 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066241837 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07357866 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065777921 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072625243 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07293007 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071234511 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070701396 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072644513 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07759611 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091288001 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067765978 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074306255 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075654037 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076152849 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07255049 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069005554 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072704135 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070211763 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090660564 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073028537 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067639638 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073784596 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07302973 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070334398 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072520568 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072556569 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074699089 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075166304 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070955671 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07430088 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070701699 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064986406 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072379184 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068423844 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065871407 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075020429 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076210659 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06381262 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070752606 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072066309 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07092892 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064387471 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067257716 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066705858 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071082762 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066955477 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054503957 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068525191 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07117836 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064518259 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072822318 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071349926 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071603572 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066659915 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075026588 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064807564 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070494752 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065482209 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065411763 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066658517 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068883393 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064758253 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067226266 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074240961 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066608208 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071213767 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078757691 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065483304 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071475858 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064296045 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064422091 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078877556 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074375279 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06520092 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067551897 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064268157 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072665089 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064199085 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065217167 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065136352 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065110164 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070722248 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065124776 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066731638 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071569196 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076500475 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064280365 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067578024 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066686002 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064451231 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069589507 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064633886 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064265681 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200364613 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063024384 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068752723 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066544793 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072941534 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068413273 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073888879 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067294873 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07371578 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070365801 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071883054 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071032628 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064389624 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059047198 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06882032 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068811197 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067650867 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066758295 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067314169 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065900842 seconds)
done (took 12.403207235 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067037632 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14265424 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099413654 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095205625 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086063647 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066466668 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076109519 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101584903 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067476905 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102572685 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087271749 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085647761 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112909801 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065031328 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065763957 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069566108 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06688616 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08149272 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100704576 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086278931 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115513016 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065314772 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094444503 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090090809 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087119287 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101180877 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066914826 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069519701 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069658349 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090773053 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086287154 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06973614 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066378759 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100725376 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092121868 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083278553 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066010799 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082132758 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066654193 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065704852 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067548898 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097829608 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080002823 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080202192 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070050151 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069162386 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067294011 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083489135 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08869579 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07875803 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086313128 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103252104 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068506938 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065431001 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064508033 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085163148 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06523401 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068501564 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066024585 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068015002 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065879675 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069064233 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081203764 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081574079 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069848541 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080060666 seconds)
  done (took 6.784214709 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083687573 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089567146 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082745586 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083791809 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065946172 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066305172 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066437951 seconds)
  done (took 2.026828064 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066572013 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088368452 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08916519 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088463986 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084778965 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086941811 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075379449 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066302177 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080448364 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067355284 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087060637 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10199306 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066971578 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072897912 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090859033 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066657633 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090339336 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066856407 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.0693086 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090091693 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068304162 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082349943 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06979803 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066425719 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080439778 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066521986 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112471811 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070616836 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067808855 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069192708 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064310746 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106934003 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080262348 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074978176 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066307966 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081023395 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080560381 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064876702 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.0828053 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071444052 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079695334 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066531066 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06721389 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064157665 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070542813 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076466276 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067346233 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066822791 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068581916 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085621067 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066745306 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079558715 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069352775 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068481683 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067438136 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070288064 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075551638 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067024595 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085721974 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067736271 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082824528 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082410728 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079901512 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082006888 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06836831 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079735513 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080251446 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068827019 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068181016 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069846949 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082516381 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064843933 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068046821 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07715202 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068749816 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089598843 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089126017 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068032742 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075735083 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067004031 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06634525 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066137704 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088869852 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068862454 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066138507 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070399891 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069064774 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.0646311 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065413541 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069823714 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064954344 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068027983 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069030632 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069813023 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068966921 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082855562 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068610456 seconds)
  done (took 8.734234136 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068580544 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068721037 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069426838 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.0674613 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067534543 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067526984 seconds)
  done (took 1.919835768 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093094984 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06929602 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080493769 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072144945 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104362268 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087776341 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086839277 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079045255 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083449242 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078508352 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086817542 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088207591 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092808724 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072470843 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086709575 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071841855 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086884485 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075908308 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078502184 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073092813 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086744348 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072556344 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07327351 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081866498 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075715999 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07189981 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067519081 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07916153 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07834073 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079364692 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072224809 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075874983 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070466496 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078555201 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08698135 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070514475 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07175174 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077403218 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072727796 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075878807 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088432656 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072621802 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074277693 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077303422 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078569352 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070411719 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077014326 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076179499 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086115101 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077139798 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076597674 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071901816 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075545127 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076583686 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070332724 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078079492 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076901771 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086532802 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072250925 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070401867 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068750236 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075060262 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077856912 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075574579 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078740564 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076878366 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070054432 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072488965 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072740317 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071605874 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076547807 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068779467 seconds)
  done (took 7.07496171 seconds)
done (took 28.016803269 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543283546 seconds)
  done (took 2.022584789 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.59995444 seconds)
  done (took 2.102838845 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.547804961 seconds)
  done (took 8.05116286 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.402607585 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.486428282 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.697324899 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133438092 seconds)
  done (took 3.264933935 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.671344483 seconds)
  done (took 2.181483794 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.21059603 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.198141402 seconds)
  done (took 1.929214322 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377086494 seconds)
  done (took 1.879977616 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.115135616 seconds)
  done (took 2.619147937 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263059717 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164444275 seconds)
  done (took 1.937823184 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.461926196 seconds)
  done (took 1.969073735 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.878900717 seconds)
  done (took 6.385836389 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.207760506 seconds)
  done (took 1.759365503 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241074592 seconds)
  done (took 1.749277087 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.692100475 seconds)
  done (took 3.201230921 seconds)
done (took 42.562898672 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080058518 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081732525 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080607891 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077707748 seconds)
  done (took 1.817906904 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076476367 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07271463 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076105639 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073200108 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076847359 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072300289 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074337352 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076661784 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072246827 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07253665 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072357136 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072597819 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074833198 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074305226 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071384549 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074903141 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076166039 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073074394 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075299739 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072176014 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07079396 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074490318 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074774949 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072138147 seconds)
  done (took 3.282629031 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077839154 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072597548 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074187647 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072156578 seconds)
  done (took 1.814656356 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077569806 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092231474 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08998376 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077557244 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091618758 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08592742 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069123671 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069173573 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073077975 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077151114 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067959206 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096399679 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087771593 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076915892 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078890844 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065867085 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068208657 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086792874 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077393054 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07776099 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069913227 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076695466 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067782016 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088125872 seconds)
  done (took 3.404356168 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077756513 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103277825 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077434914 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087328693 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089475847 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065120258 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074303479 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089065658 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122778903 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065261583 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069699625 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06560392 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072045994 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065040538 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076043854 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104532214 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108158515 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068323019 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095914506 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065391142 seconds)
  done (took 3.165814378 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073015837 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069967962 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065753396 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06869925 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077080092 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072964547 seconds)
  done (took 1.951816831 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068674337 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066591008 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067110235 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066558927 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07159648 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067447796 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066184476 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066771744 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066928147 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06699015 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066150842 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065615304 seconds)
  done (took 2.326564356 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.420488637 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068885684 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068868496 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066066494 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071176417 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066359777 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079611918 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067545077 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090601872 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066364818 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066662693 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068419431 seconds)
  done (took 2.722920964 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207290254 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075872828 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238070816 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137109694 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111810246 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116017358 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103866222 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113254043 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144091821 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102009263 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168576131 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166678197 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107361316 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137330596 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08930397 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097769265 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155744006 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162609358 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103125247 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165626585 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14421475 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124336593 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146466355 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101186752 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105629895 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121663635 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070825494 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079756013 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1708162 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131588758 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146544356 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110499102 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093736288 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176910099 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170464256 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141186051 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133764625 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083304184 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102996187 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132472366 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197521486 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088315297 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162282032 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245422505 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081519842 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133530695 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121318967 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120742892 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107390889 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089978127 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146526458 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184825722 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139135527 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086880693 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112295244 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11515062 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116419478 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102525146 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181076111 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161064569 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128073589 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070611836 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099700146 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154037886 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131811872 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109038095 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127092931 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0940095 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134394006 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154790811 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118366062 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143681275 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128728159 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088206507 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11916386 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139524879 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128307317 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169620548 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124303402 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072615495 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12444869 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103815805 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08092714 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141855432 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074765489 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17474815 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098368601 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10565072 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113049696 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108726673 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10842371 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160902934 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14430673 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243203246 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065928414 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104701463 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120256632 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148124021 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087538341 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109640348 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116455591 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077433328 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139857076 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074389091 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123678052 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075197413 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125520436 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132829135 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076093652 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121958594 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101413114 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100258037 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134094298 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160193232 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088660152 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082832431 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166528944 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121135277 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104175026 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143651454 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15574742 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098639384 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102367973 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149173612 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179422424 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088852634 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163182411 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107149802 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083471202 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087213719 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123706364 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112340691 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121786497 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081762668 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118245904 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168714015 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074718412 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094244748 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132679808 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078127062 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080903587 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102732926 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099873577 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094375512 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099956285 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104311352 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137509026 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122332189 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103737657 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269261343 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099610399 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170758325 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08958404 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100983281 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103288243 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069639887 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137157342 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158005579 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079653805 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164493068 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124268186 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104916784 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119261944 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083100975 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140203412 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078812651 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070279865 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143756284 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111396863 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10979412 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151672087 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104519102 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127187883 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119361468 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13593974 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132648829 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128933366 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104384498 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087265031 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111411657 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125284034 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07342143 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091279099 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079930863 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10375188 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095114433 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083108287 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142780462 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124534977 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100003451 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111630276 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09650603 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146714869 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.0767987 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128218986 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118808807 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093362482 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150859099 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152118916 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130808549 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09843202 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144334548 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069476554 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073410025 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088140985 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.265574832 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083262973 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083672007 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117586976 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147144713 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130503597 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138003687 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111525397 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121036492 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154599623 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069030545 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114751716 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14840871 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12190012 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105009284 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090291244 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098889756 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142298262 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108273699 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182142982 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113994282 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125732026 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153476267 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099701096 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079612878 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103086591 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140835806 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104853614 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144516477 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099151917 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087790305 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110653504 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074245842 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100337315 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127513353 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119660114 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135937279 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114892896 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132685629 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077177689 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116473255 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119715244 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121954643 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063512552 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119506832 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160495195 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093137557 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118344002 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153272327 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078853013 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124419858 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321640828 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146511745 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084477401 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110205499 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117590041 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127860575 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120802339 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139878698 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108390052 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136279547 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109590374 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085623197 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086784944 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096993206 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104651687 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094175054 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108466974 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115315252 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095025551 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13261374 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102633742 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110036542 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117419534 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095952427 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089350057 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09771939 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173928418 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120094096 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17276116 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098142918 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144653315 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164081175 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07434474 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079348708 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078027201 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139707976 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083445807 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130940232 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.09738623 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105581811 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123507658 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14208214 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094597164 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068155642 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10888756 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134828391 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111881654 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097724798 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106631942 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16215884 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100117577 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078564268 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11349654 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104346937 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102107235 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170109734 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.204488181 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097855045 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076150656 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081570897 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127571431 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153400616 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080425775 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102174475 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119897816 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111216424 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127148193 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102687453 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099733938 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114350822 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151254532 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129220407 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089625718 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111916421 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129363371 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156526988 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10533819 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095355908 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171884308 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152224363 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160360597 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088322695 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130236448 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1134476 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107875523 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139158759 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082888579 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163910385 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081509419 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136137186 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103889687 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090381159 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129628474 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098719194 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08789957 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148332982 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11793379 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082049195 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07806717 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117986063 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119288171 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105833092 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074650946 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138974323 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072552634 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131700428 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168494611 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080800633 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10319654 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239555619 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080269049 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108794311 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103516338 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089385499 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098025776 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173359795 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088449573 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149676434 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142239588 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113296553 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13759619 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100113599 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636206853 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077844362 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152070581 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116773536 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173366295 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097282661 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117248585 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108496931 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123852285 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144777595 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104807468 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178163633 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131398213 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116907838 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079454082 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102615506 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102750772 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08884143 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104561146 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113924113 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115993751 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093783582 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115984064 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123993639 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081771601 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094866429 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156345477 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116912078 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14512141 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139989674 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084029041 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116998016 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138578746 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079690629 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122142778 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151879515 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105495104 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096947393 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080076216 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.247473925 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171410262 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072681362 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164205888 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12026814 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109537665 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114015893 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11460621 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132892341 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108062767 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12185466 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092991851 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110666747 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112966234 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082347913 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077612137 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104528569 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111841723 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09699696 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098096746 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09723818 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152330637 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071359884 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095473837 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102830695 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145297065 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174448304 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087586912 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08261699 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119722688 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112924836 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113035966 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121124184 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079173771 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081670574 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081445851 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077147416 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108330272 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112109527 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104098064 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111055238 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163603892 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082220365 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224231317 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09483251 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104825034 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069325633 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078736153 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095974718 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096912929 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107990075 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100032369 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169432231 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093591712 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.08871383 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091837447 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072170928 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081758945 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126187596 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254999053 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119675437 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097947679 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062439474 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109710665 seconds)
  done (took 58.833508507 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.104134829 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081737346 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097625936 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150044861 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122308201 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212069944 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157020181 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199605787 seconds)
  done (took 2.757693664 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067812324 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094394487 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099402007 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082222413 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066435013 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068342494 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225093815 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080174099 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066109052 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088391704 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078465854 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068298545 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.422679142 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066285871 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066974925 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061480926 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068771158 seconds)
  done (took 3.394485533 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.363596304 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.35922526 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371551019 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072828475 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.817656195 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088898853 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.096226067 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.097162035 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071669739 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.268955481 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702275691 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.095213346 seconds)
  done (took 14.038365063 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074774672 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069063645 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082943239 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083441447 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072259709 seconds)
  done (took 2.013838976 seconds)
done (took 103.067123767 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079929274 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.391622461 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053586509 seconds)
  done (took 2.105521125 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082769491 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084494224 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083746537 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082635124 seconds)
  done (took 1.971726642 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074026495 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075686229 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084390938 seconds)
  done (took 1.867187434 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223984976 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139110537 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086609919 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081657107 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077645733 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078058275 seconds)
  done (took 1.87456549 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071997529 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075124617 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072536449 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076295314 seconds)
  done (took 1.928072661 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07574151 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052248154 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054644242 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055387408 seconds)
  done (took 1.871676567 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087045684 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078088292 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078344982 seconds)
  done (took 1.8785312 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106558537 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085003607 seconds)
  done (took 1.825346535 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081397167 seconds)
  done (took 1.716485486 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09886541 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112199475 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128829379 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109407361 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136584609 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108957286 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085352775 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086818337 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07725977 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08693539 seconds)
  done (took 2.666360001 seconds)
done (took 21.866136145 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078737242 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.461650516 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360385642 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090325966 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666670108 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.377689715 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.990379767 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091633658 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112801543 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067263972 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083769554 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648069352 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.016007991 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.418833588 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.004016884 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323183253 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649649585 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068723435 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067260978 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068069258 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.975707599 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067350178 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067744808 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068175761 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64917169 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371198042 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06778251 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318671118 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06753535 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069752718 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355298286 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067955763 seconds)
  done (took 16.413472122 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070263433 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117643431 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073315166 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084046621 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070955264 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069932444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071349232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069150554 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11950906 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067491195 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083958119 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067265283 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07149962 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068491331 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087054271 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067921001 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068989606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068240734 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068312817 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068495467 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085920779 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067553155 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06782088 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068068394 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067501037 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079311232 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068222025 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068074206 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068028356 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069901937 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07087615 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069096228 seconds)
  done (took 4.032070452 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115307549 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124118735 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074917958 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103009139 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112083751 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070031703 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142876501 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092215129 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127351662 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068202157 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08407897 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068024549 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100438838 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068725548 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087770883 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068597434 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069323015 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06857992 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067977505 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068657995 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086804665 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068227982 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068511921 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068603696 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068993984 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081492251 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069075711 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068694444 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068238501 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070077516 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071736568 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069022545 seconds)
  done (took 4.293236197 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071971786 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075286863 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082298143 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083861101 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070011386 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071630823 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072564346 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069436165 seconds)
  done (took 2.25046222 seconds)
done (took 28.630335253 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078236517 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068812368 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072303032 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081395851 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073017259 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078694802 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067028467 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074218606 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071811507 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072651825 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074912155 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06762487 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07078204 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06695903 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074010141 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067742021 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079136764 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071887191 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079188736 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079593697 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069882715 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072610535 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073903039 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078954974 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080263308 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078937899 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077311899 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07302054 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069095285 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.06993276 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07649768 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.0833796 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068478536 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079537476 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067416529 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067888793 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071386231 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067670601 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079517556 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07624453 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069451381 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075649161 seconds)
  done (took 4.730021125 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086935456 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090758146 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084966427 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061491346 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06664606 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064886353 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088335439 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059459415 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059695547 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087595588 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056091566 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058991421 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062000904 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053931404 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059452569 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056761609 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061391766 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055627807 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059286748 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059514578 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058223612 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054540992 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060042074 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065119637 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056673325 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062027186 seconds)
  done (took 3.351802011 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074387919 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083525113 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088080757 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126539186 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104002067 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076642201 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077672167 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09218126 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084952306 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066962266 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071189514 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093265264 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087760351 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073789595 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067624219 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084610507 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081837882 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068743638 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073061052 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090451783 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084004778 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083460661 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092845953 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080194766 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06720244 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069373028 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071332898 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081733979 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072492748 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076441465 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071412675 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071125871 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069458938 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078652217 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071512698 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069158827 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09035863 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076904977 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077576818 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068036761 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070881114 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.0685211 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089279585 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121931373 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067020128 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073573641 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07560288 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076268894 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.0676495 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085684117 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078040764 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067348817 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070160887 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066584367 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067096001 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080346605 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069056065 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069534299 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076076733 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070594926 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085905887 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071618053 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082367365 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067232818 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075036634 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067069398 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068327175 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066090611 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092257405 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068610503 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107709029 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068542318 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068299385 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076194965 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074891553 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072928197 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067694461 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08210577 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077585144 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07118672 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075687517 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070544163 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070357372 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08742326 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069447683 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068977513 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068184132 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073362007 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070107654 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069152275 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080349327 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067795049 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07001888 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.0836272 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067054998 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068610196 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073437211 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072028153 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067010543 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078610468 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071804326 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068360026 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076408398 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067844161 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070687196 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077607474 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073790982 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06651251 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072289127 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073244573 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068069307 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06884995 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070616568 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068844594 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075390511 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073760014 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071792495 seconds)
  done (took 10.545689427 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160114966 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154489082 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070108911 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144304946 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07633633 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078816916 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147125233 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093953427 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067563947 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068357292 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068687038 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109411452 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106130573 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115602257 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078750109 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067837339 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082941291 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114142353 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148832894 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142624346 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083382862 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076669767 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07044751 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068869832 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070613275 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078559979 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08487378 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076375044 seconds)
  done (took 4.401916618 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081786236 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096231663 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073284024 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089221037 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090719063 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067786859 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069870919 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069417693 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080188131 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078878034 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067852167 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073513771 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07464517 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071169768 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068719631 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07476105 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075380405 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069805032 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070756615 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073041121 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077397591 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081085182 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072141787 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066965216 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073703311 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067481537 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064514727 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084302111 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067880485 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089200419 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065695633 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074583188 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081454915 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068816222 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067289365 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067818967 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067329635 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066966109 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068857665 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065907367 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066174459 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057957943 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066567267 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079630395 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074070001 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056306014 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072180807 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072683458 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072617288 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065356694 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07036384 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07048024 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070550159 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074360757 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072548169 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072837813 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06851547 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065458153 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074997276 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067865468 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064481706 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06590533 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071909788 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066517459 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075141239 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071983329 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065914901 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06738795 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069090528 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07367755 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067258526 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070163552 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064842109 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068914946 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071921331 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069247986 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067964878 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065802823 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067046304 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067929336 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055338193 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067529564 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053505786 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070117832 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065798762 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066290365 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066884114 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072295909 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079692592 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068942515 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072948384 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068199604 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066273059 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070085088 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060797559 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070344478 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082469989 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082262915 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067389283 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065299406 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081460458 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071849169 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066577595 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05612394 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074563129 seconds)
  done (took 9.130811402 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09348349 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088163429 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069729267 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083098222 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090175231 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086418039 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074480316 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076396361 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069233753 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082047058 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073461141 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07601648 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067627852 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076745291 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093034656 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076739921 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069794067 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076703426 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071707979 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.09994402 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08275782 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081648773 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074861354 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068007171 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075749378 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079607041 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089319814 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080158276 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078017008 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075394631 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080457195 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089027216 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073965996 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072101348 seconds)
  done (took 4.398911034 seconds)
done (took 38.207731082 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.731249279 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.984845062 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.734518218 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.114934757 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.813192863 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.905704942 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.785646456 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.752369716 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.951587412 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.76911839 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.961798202 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.749265895 seconds)
done (took 64.922272906 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.801183075 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.868626125 seconds)
    (2/2) benchmarking "String"...
    done (took 2.002106009 seconds)
  done (took 5.543501767 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.030302546 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.263265007 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.975333872 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.727951421 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.734716376 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.038608919 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.532012065 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.250872229 seconds)
  done (took 30.197468742 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.923043496 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.931571792 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.407800436 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.439503854 seconds)
  done (took 15.422299253 seconds)
done (took 62.750414625 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.718756495 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.775316149 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.759612646 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.713875674 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.789576299 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.735583012 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.792062866 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.938087997 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.72905965 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.722486553 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.732248216 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.161933438 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.731651042 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.776445951 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.729086813 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.734832141 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.790813315 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.139474601 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.886708504 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.740391902 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.7465032 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.741600914 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.732143114 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.741596249 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.75707866 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.733513403 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.156584358 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.744580304 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.367277675 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.735660444 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.763564922 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.996158107 seconds)
  done (took 202.989217545 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.730013067 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.807392217 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.878540241 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.768697624 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.218953862 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.932926707 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.86403933 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.275202004 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.735712736 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.754939057 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.855823168 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.73121876 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.86199593 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.682830766 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.738132255 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.741594086 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.952146849 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.872027217 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.7336 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.975724971 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.733306292 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.678974815 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.649112368 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.837402992 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.759810345 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.806370749 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.888680882 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.747590861 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.92533243 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.939671838 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.743142016 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.733773434 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.9526276 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.60444621 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.754055588 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.745847395 seconds)
  done (took 168.28823697 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.878198756 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.733194359 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.732708985 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.732617913 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.74475035 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.732123589 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.732322756 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.860615862 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.861838067 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.204860136 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.998407341 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.782995037 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.576610046 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.733116874 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.800119312 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.745049261 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.733409648 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.74815149 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.760387063 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.734780232 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.733545951 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.862320031 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.74552853 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.904103117 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.741532108 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.733445765 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.739561267 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.102822112 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.734529744 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.739266992 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.994952992 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.734391951 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.733739611 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.635724932 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.527518066 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.738608989 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.816117405 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.736036094 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.739688076 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.734135815 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.952858101 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.734181035 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.735693292 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.734738215 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.737157097 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.923137057 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.737090444 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.859708646 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.734611266 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.243034601 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.734242848 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.734990993 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.852814734 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.436974249 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.735074291 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.735538155 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.737011323 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.735531739 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.735302891 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.741074525 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.640579039 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.807805433 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.736727247 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.738752615 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.741545905 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.735412705 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.167117404 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.737566327 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.974214561 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.796395785 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.95221749 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.859727893 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.737128516 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.803113262 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.830000238 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.736346806 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.736123051 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.736380034 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.736038659 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.81740662 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.73722985 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.856455156 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.744156617 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.737458975 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.786430201 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.805532663 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.737706303 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.631241257 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.738558533 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.73691984 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.071448176 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.73618513 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.804321588 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.736616316 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.736497107 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.736415265 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.884681981 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.862008728 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.527462655 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.739022588 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.67914091 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.739489358 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.899057323 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.738505559 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.928282017 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.739432736 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.819662658 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.741925889 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.739585612 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.738033405 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.769531278 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.738810384 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.795798168 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.737789601 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.110346973 seconds)
  done (took 397.918807982 seconds)
done (took 772.801640989 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.438140909 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.397329832 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.506252613 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.420428429 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.397820224 seconds)
  done (took 13.841634749 seconds)
done (took 15.520347192 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.824250051 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.830126501 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.763890278 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.829137254 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.75878311 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.827643353 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.809013157 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.763479388 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.795189764 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.76408342 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.795871994 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.763601005 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.751196036 seconds)
  done (took 24.959570665 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.973819287 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.975134266 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.807902236 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.975209378 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.783471123 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.965818046 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.898415045 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.890478402 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.890229255 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.756095504 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.753218303 seconds)
  done (took 22.353844602 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.973213129 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.97901448 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.811974978 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.971521806 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.786062731 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.976024669 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.902276104 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.891536462 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.892225695 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.755218685 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.753034363 seconds)
  done (took 22.376230463 seconds)
done (took 71.368284214 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.748069153 seconds)
  done (took 3.432430843 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.769565477 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.909252725 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.753843437 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.751621645 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.747259316 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.748265038 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.752372805 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.748418777 seconds)
  done (took 15.866329147 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.748035355 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.744201773 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.748267318 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.746303034 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.744865062 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.745750527 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.745625154 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.748186111 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.747752494 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.74861039 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.745549895 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.745164724 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.748308589 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.748249972 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.748805952 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.746540265 seconds)
  done (took 29.635257263 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.747623403 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.746065348 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.745103664 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.747539048 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.744954353 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.746923908 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.746571898 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.745849955 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.745658476 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.746519319 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.747080025 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.746422184 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.747243861 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.747469428 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.746526721 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.747574203 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.747396753 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.746640275 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.752183897 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.747294027 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.747883843 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.747633026 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.747683351 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.747513885 seconds)
  done (took 43.618478303 seconds)
done (took 94.232811538 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.450987556 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.171432369 seconds)
  done (took 8.310109915 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.750674514 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.749449221 seconds)
  done (took 5.22003723 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.749674214 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.749911006 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.750280183 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.750019793 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.750161899 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.749937019 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.750445225 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.750258288 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.750342158 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.750479277 seconds)
  done (took 19.190808772 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.74974652 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.750725275 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.748813892 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.751009668 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.751025636 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.747974719 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.750513232 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.751593821 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.750596492 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.748689612 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.750855141 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.749605125 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.752542527 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.749306712 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.75191764 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.747885424 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.748757729 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.747991463 seconds)
  done (took 33.186756336 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.750680916 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.7512486 seconds)
  done (took 5.190196056 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.748713794 seconds)
    (2/7) benchmarking "second"...
    done (took 1.748876292 seconds)
    (3/7) benchmarking "month"...
    done (took 1.748669727 seconds)
    (4/7) benchmarking "year"...
    done (took 1.748710806 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.748067597 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.749164335 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.749681405 seconds)
  done (took 13.930297868 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.752861631 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.910447541 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.987999288 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.433767126 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.753731999 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.756824795 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.711130479 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.756210113 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.756727733 seconds)
  done (took 19.508742439 seconds)
done (took 106.220132192 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.565360786 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.750541638 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.138192834 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.796929198 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.807435788 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.045246411 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.775108636 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.975164703 seconds)
done (took 42.539659734 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.769383968 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.271725267 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.298526567 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.078638342 seconds)
  done (took 12.338665789 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.746909839 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.294506802 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.788266018 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.430156936 seconds)
  done (took 20.171642605 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.120191644 seconds)
    (2/2) benchmarking "read"...
    done (took 2.107259019 seconds)
  done (took 5.926802026 seconds)
done (took 46.894713695 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.758557923 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.757250115 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.756050864 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.758480661 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.754795222 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.757167307 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.7584317 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.757796276 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.758245054 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.758284841 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.758316422 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.757999263 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758259588 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.756264474 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754844939 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.758311032 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.756132061 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756231374 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.755316085 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.755958923 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.755989771 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.758772963 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.755969633 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.756524428 seconds)
  done (took 43.867188167 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.758982738 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.757832177 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.758149218 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.761241511 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.757424756 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.759727568 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.759009638 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.756575184 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.760834351 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.758968871 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.756316242 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.7568105 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.759409224 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.757282233 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759468694 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.757136859 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.759768261 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757115853 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759986031 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.756838881 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.762709629 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758254435 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.756730538 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.759589135 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.758720929 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.758520147 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.760931305 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.758987331 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.761496625 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.757452531 seconds)
  done (took 54.458445099 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.766919547 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.768778037 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.760891295 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.76041007 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.760841554 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.760749006 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.761884322 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.76058313 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.761360843 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.761073052 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.760202867 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.761559233 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.761641721 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.761194759 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.760854012 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.761299513 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.761362614 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.762194781 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.76113751 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.760707007 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.762413203 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.761201353 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.760988261 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.762544128 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.761425944 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.762668107 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.76169846 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.761762872 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.763635942 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.761763267 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.762375706 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.762673969 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.761834425 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.762097095 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.763029818 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.762374344 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.767655633 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.770242116 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.762590588 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.761870531 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.763461044 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.762302465 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.762988942 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.762202115 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.762384014 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.763959073 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.762606738 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.763508759 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.76257095 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.76368394 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.763523083 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.7639108 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.764056144 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.762817095 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.763795882 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.764115363 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.763351968 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.765776011 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.763900693 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.763879036 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.765139254 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.763247767 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.76509147 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.764684056 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.764241348 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.763653217 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.764287392 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.765521926 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.765936476 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.764713182 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.764244496 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.765374785 seconds)
  done (took 128.63765066 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.764493404 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.764785125 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.762271507 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.761055488 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.762519184 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.764262304 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.761570753 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76617151 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76173919 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.764004497 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764620843 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.761957947 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762260078 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.766097228 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.764231964 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.762182201 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.765199579 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.761895569 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.765420872 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.765493748 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.765782039 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.763380522 seconds)
  done (took 40.503715467 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.765239833 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.76568576 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.763428743 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.765536746 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.763367797 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.764625966 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.765892301 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.76504549 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76589357 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.762330706 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763451262 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768059448 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.764940101 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763126336 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.763862437 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.764550091 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.766471675 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.764198478 seconds)
  done (took 33.468623591 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.764887325 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.763907669 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.766061545 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.763848759 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.764750652 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.767194137 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764070836 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.767442082 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.768004022 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.764101389 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.768958728 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766373501 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.766669886 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764083634 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767789938 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.764499032 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.769948779 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764729129 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.767408981 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765058687 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.764563757 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.767717178 seconds)
  done (took 40.558020515 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.766843609 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.768576599 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.765950388 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.765054673 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.765935881 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.76730517 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.76717323 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.765176086 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.767955451 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.767897063 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768184952 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.768258134 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.764472882 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.765712648 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.765881534 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.765945363 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.767814015 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.765828496 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.76957645 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.766979087 seconds)
  done (took 37.041148159 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.769613998 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770151763 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.76875021 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.767952351 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.768910757 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.76910368 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769934415 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.77027256 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.769311019 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.768660086 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.768862318 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.770361307 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769007728 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.768632605 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.769926848 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770121208 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.769983503 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.770589254 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.769636168 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769759713 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.770981079 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.769389342 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.770049646 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.772277052 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.770180753 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.770031688 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769625736 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.769726008 seconds)
  done (took 51.258002033 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771159137 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.769834407 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.766639582 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.768942028 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.767453928 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.769189524 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.768466976 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.767147195 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.770223932 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.767709369 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.770081343 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.772239782 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.770716104 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.77095448 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.770401776 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.770577946 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771613474 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.768165718 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768513884 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768258724 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.771191845 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770782349 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.773630369 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.768508024 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768038877 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.771813086 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.76923087 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.769309631 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.77132604 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.769345666 seconds)
  done (took 54.800679148 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.790409775 seconds)
    (2/2) benchmarking "in"...
    done (took 1.789740606 seconds)
  done (took 5.28733581 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.769133337 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772334523 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.771837602 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.770969183 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.769491082 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.774818651 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.771567011 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769247493 seconds)
  done (took 15.878596599 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.772396557 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.772992979 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.772947109 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.772298099 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.771968918 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.774955195 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781508895 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.774605932 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.775894151 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.774361112 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.78047231 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.78211536 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.777750318 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.775319742 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.773731955 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.774676677 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.772916214 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.772668323 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.774025643 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.772072111 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.772771096 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.775207053 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.775948138 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.771347746 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.776889381 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.786265344 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.779587503 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.773637911 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.775625609 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.780370319 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.775647011 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.771144461 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.773596516 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.77342553 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.773161196 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.773959608 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.783500761 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.774694939 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.781893378 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.773895853 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.773811186 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.771807455 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.776193136 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.780049574 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.775390095 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.774521002 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.774887173 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.772769113 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.775473389 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.779319788 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.778972829 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.775127412 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.773599457 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.785559176 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.778477474 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.783435643 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.774759631 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.779002722 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.784730483 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.786390203 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.791383846 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.784188008 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.77796895 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.777566511 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.787875391 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.800644454 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.783566504 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.773431991 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.774057909 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.77788597 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.784836006 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.789573002 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.785887557 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.775484673 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.775386456 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.776623971 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.777194349 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.776337125 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.786220473 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.779982643 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.778006506 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.775995374 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.787072999 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.800366459 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.777207605 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.777077492 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.778218845 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.776401242 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.778385234 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.789586149 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.777269294 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.77676678 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.777932711 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.778954306 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.780437915 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.7768967 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.777430218 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.781028561 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.775012006 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.77818316 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.777449397 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.781971147 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.788628434 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.778671695 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.777515517 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.785591234 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.777451376 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778019155 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.78923497 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.777340478 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.777525454 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.779765883 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.787832649 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.776207054 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.784516525 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.787537731 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.778610952 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.781821002 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.778848576 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.777889581 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791747273 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.806457671 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.778818705 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.777875436 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.783831321 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.789913471 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.778453848 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.783221828 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.779053818 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.7767034 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.776759758 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.783930088 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.779496017 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.781397018 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.779246903 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.783231896 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.777490577 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.779154837 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.779690353 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.781291657 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.782964913 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.781819902 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.783026771 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.784179895 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.779970398 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.782670879 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.788212718 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.781471599 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.78252887 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.782583026 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.778331406 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.77979672 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.783079428 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.781525512 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.78198624 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.780018711 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.77999026 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.780204793 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.780280702 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.780824279 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.780854758 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.781983816 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.78678385 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.781701927 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.786532649 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.781983211 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.7786905 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.780872363 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.781763495 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.781479916 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.78152799 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.780782607 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.785521354 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.788707596 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.780368622 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.782211777 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.786934863 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.783004637 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.780547625 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.780611153 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.786061442 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.790186753 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.78242491 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.789927064 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.781738121 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.781214226 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.782457502 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.78300095 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.783472148 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781796983 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.786251618 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.79022317 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.798383751 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.793258006 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.783975685 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.786081494 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.783697492 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.7867971 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.788792448 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.782801306 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.781765293 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.78416645 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.782498951 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.782873599 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.7880878 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.782926139 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.783115681 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.782895987 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.783159109 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.782513807 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.784172318 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.785128313 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.785695969 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.781292981 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.783793596 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.785243365 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.784061905 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.781512482 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.783273147 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.784226706 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.784413981 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.784601722 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.795479067 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.781391728 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.785504463 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.78584388 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.78663954 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.78488164 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.784034871 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.787762978 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.784243813 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.793499522 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.787114887 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.786807504 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.793099168 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.785716662 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.785152504 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.788778441 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.78488802 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.782359626 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.788529419 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.79376559 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.784475624 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.784960829 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.783682817 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.78591615 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.785292864 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.793761674 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.782451133 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.784200915 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.785705389 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.78936277 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.782341898 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.788051551 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.788358759 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.787799627 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.788184698 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.786662188 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.786149878 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.788490029 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.785789173 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.785982186 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.785852113 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790145759 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.79392408 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.793247444 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.787892042 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.790405282 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.78767887 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.791229602 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.788528304 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.786782983 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.787133519 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802288455 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.795968771 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.795271254 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.790607417 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.786310432 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79293802 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.789497704 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.793349822 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789625727 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.787908381 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.788737264 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.787723282 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.784992003 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.790676977 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.788451116 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.789809482 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.791166661 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.791085515 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.787966942 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.788043302 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.787268429 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.787169429 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.788233143 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.788795474 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.788030824 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.79293683 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.790678454 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.789594387 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.789141669 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.795407166 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.78911173 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.79157442 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.788516145 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.788931136 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.789596404 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.791063887 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.788516764 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.794052974 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.795989376 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.792141997 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.800800905 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.791587748 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.801819144 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.788453215 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.793692516 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.796960753 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.788277325 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.788152798 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.790511943 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.789708198 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.797611576 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.788865506 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.791375261 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.79369982 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.789051236 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.789993826 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.788889843 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.789335841 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.790752474 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.789641507 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.800623217 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.790446274 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.794590692 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.79339102 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.786993102 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.791620015 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.790259855 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.790092855 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.79846272 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.789776997 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.793450931 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.790688295 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.792388772 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.790931279 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.791481047 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.791261467 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.78774298 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.79124152 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.800331953 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.79343703 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.795147226 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.790912304 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.803215661 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.790771132 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.799227421 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.790561375 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.792457257 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.790696479 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.791943221 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.79536354 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.79191741 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.793970792 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.791748914 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.794096476 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.795691001 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.791788833 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.796093847 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.79380389 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.791269891 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.793565683 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803152814 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.816200615 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.794754436 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.796396939 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.789837154 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.794969091 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.795497672 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.7925464 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.792078948 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.796509482 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80339285 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.801078174 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.794583992 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.793007545 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.793374051 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.792819868 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.793962626 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.793040622 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.79320134 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.793456787 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.796030914 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.794092637 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.799931282 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.79318509 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.794293238 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.795749267 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.794921156 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.805559837 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.792826689 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.794571735 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.793371364 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.793946613 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.794742675 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.79521668 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.792974213 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.796604542 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.792788602 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.796014993 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801915415 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.801161105 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.797631903 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.794910574 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.794526542 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.796166457 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.79681008 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.794211577 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.794394268 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.795034749 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.796012689 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.795196367 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.798173663 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.794600324 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.794844904 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.796702203 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794684965 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.79873875 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.802452253 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.795372113 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.792797483 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.794569026 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.794765549 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.794687916 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.797102135 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.807014711 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.800160157 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.805908459 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.805016716 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.798948068 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.797693946 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.798472446 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.805588204 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.795922038 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.79859363 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.7955973 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.79948693 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.798472194 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.801511916 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.797079503 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.805332837 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.797697058 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.79730536 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.806135865 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.797837767 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.795776923 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.799350296 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.80176494 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.798545342 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.794159819 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.7959554 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.796374913 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.804824458 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.802228225 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.796268198 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.799377355 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.795625598 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.799463736 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.801007692 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.79699237 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.799904865 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.793609075 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.798596282 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.796920648 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.796813194 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.794344514 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.797777556 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.798442595 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.8020513 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.805544515 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.793985994 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.800360879 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.798750943 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.799817407 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.798608991 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.798435905 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.795415585 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.795047697 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.79878965 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.798051384 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.800014099 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.802215412 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.7988017 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.801329694 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.799603573 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.798784755 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802801166 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.811039662 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.807232315 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.796346952 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.799445793 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.800713501 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.803653973 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.799610367 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.799392743 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.800001307 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.802877159 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.799420882 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.799062373 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.799144212 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.802592837 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.816996118 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.799142891 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.800896844 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.802141315 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.806839867 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.799770454 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.79708298 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.799616552 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.804000867 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.804471882 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.807712342 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.799443093 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.807612656 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.800662453 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.801530544 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.804398834 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.804090814 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.809908093 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.805076912 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.800536076 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.799947182 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.806782676 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.818754327 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.800459668 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.810835365 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.830717044 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.803515102 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.804064659 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.801861254 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.801348074 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.800076838 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.804938185 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.8014944 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.800710917 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.801581857 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.801209357 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.802995407 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.808558683 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.804476468 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.800643417 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.800836921 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.80266141 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.80573642 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.799039507 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.801389836 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.80153698 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.802334554 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.80192141 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.80211804 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.803926919 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817700009 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.814455586 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.801573917 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.802422663 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.798064325 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.808330813 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.806540822 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.815159479 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.810068339 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.802689068 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.803186894 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.805025904 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.802788801 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.799726262 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.803856938 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.804092822 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.803067435 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.799352954 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.818685293 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.811088076 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.809979946 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.803478995 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803468796 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.802721778 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805863261 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.804442892 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.803075411 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.806939239 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.805331591 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.808342874 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.80256406 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.803624477 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.807660973 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.811287314 seconds)
  done (took 1068.930917175 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.802249997 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.800569504 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.802061407 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.802020818 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.800760023 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801504498 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801499492 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.801727622 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.80177344 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.802080528 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.802034655 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801824476 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.801978457 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.802111053 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.803426344 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.802049167 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.802759305 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.802855918 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.802518009 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.803205992 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.802941888 seconds)
  done (took 39.584215644 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.804926527 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.802188361 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.801296716 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.806407226 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802345759 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.805241101 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.804148539 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805339907 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.805335042 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802803069 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.80569614 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805546026 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.802724611 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.802178616 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802496509 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805636287 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.805118072 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.804239852 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.805902867 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.803931083 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805933763 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.802954483 seconds)
  done (took 41.434424753 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.806577093 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.806695256 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.80647089 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.803443698 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.806567475 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.804402039 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.806697747 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.806091353 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.805843663 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.810162598 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.806523301 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.808350069 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.814174925 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.812043355 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.811400456 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.806334147 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.950968854 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.806738692 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.806722579 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.806382806 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.804864739 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.81506733 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.804915772 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.805079024 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.807763886 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.807533585 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.808222116 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.808813126 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.807520111 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.810522987 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.81320694 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.808232748 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.808351769 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.810510429 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.809666475 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.810295464 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.813038145 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.807607184 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.805632728 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.807371962 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.817802791 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.829354369 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.808793538 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.816390982 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.807701866 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.808999027 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.814174714 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.817290508 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.805676021 seconds)
  done (took 90.536825145 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.806820655 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.808891613 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.806747477 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.808130109 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.809692999 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.809770533 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.809322705 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.809499603 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.806464382 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.806279963 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.808781842 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.805960641 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.806535438 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.809744604 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.808149539 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.805608866 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.805836993 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.806668419 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.806240994 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.806989952 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.806404534 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.809475595 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.809668796 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.80777415 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.808187827 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.80680432 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.807380258 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.808393178 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.806795076 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.806498367 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.809076657 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.810906114 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.80991386 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.806776124 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.807735397 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.809475676 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.80830347 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.807279161 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.809733098 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.80766322 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.809322592 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.809912554 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.810573929 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.809659061 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.806535212 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.806714816 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.80748322 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.807806307 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.807249156 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.809871016 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.809796077 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.808490716 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.809984232 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.807146232 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.809836949 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.809107908 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.806808823 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.807619697 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.810512624 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.808714777 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.807900203 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.810562567 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.808022417 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.810388938 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.811285967 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.80883228 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.808112101 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.810736371 seconds)
  done (took 124.712469136 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.811076996 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.810528083 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.811035021 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.810182354 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.811470836 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.811976539 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.810278726 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.811657053 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.810909041 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.81064823 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.811782771 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.813310913 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.812864975 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.813859246 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.812726072 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.813323215 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.813186447 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.812582926 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.813431128 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.812722731 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.813602099 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.81400277 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.814620188 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.813717482 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.814444631 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.813491617 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.813461564 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.814289965 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81438843 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.814405985 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.815383847 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.814655183 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.814837695 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.81496859 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.813839317 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.814311578 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.813796971 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814540869 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.814220135 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.814379044 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.814658767 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.81524155 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.814425944 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.814356618 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.814559678 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.814625584 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.813809474 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.814988306 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.815334109 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.814777267 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.814530987 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.814805134 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815303846 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.815340174 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.81659586 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.816388628 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814485438 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.81500641 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816825444 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.815331184 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.815570058 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.816608808 seconds)
  done (took 114.207179711 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.815898186 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.815369218 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.813419487 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.813342431 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.81572735 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.812499289 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.816119546 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.8154639 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.816491852 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.815506147 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.81692489 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.813661485 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814087535 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815798945 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.814009885 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813927944 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.814354112 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.813426428 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816087572 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.814635521 seconds)
  done (took 38.048271944 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.813916892 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.816166721 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.815772619 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.816037609 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.817157664 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.815340453 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.816903778 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816327185 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814279631 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817731216 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.817647864 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.817752486 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.814062613 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.815330866 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.816596264 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.815234176 seconds)
  done (took 30.809283731 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.815150685 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.819396984 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.817868511 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.818211365 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.81499067 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.815903807 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.818918711 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.81454804 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.815835383 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.818516872 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.817419239 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.817487646 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.817972736 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.817196083 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.815853362 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.817823117 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.815583633 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.816313243 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.817726187 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.819227476 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.816127103 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.816072354 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.818393827 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.817930943 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.816750916 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.816304595 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.817392905 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.816405479 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.818057074 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.818707099 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.81821382 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.817530422 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.817427909 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.816756153 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.819747218 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.816680465 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.820264196 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.820111543 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.819599609 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.820565184 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.820421046 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.817027264 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.819838383 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.820622621 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.818457564 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.820197944 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.817934626 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.817766586 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.817518283 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.817938796 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.820536193 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.819607526 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.82113911 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.821108188 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.820196548 seconds)
  done (took 101.746514768 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.819858446 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.82019628 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.819340582 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.821122636 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.820614628 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.818732369 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.820997801 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.816455868 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.818315115 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.820999049 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.818971672 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.820575455 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.81913775 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.821153688 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.819234486 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820620188 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.817949226 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.819308266 seconds)
  done (took 34.510565632 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.819509581 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.819448469 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.822072919 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.818876738 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.819736854 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.822249438 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.818843065 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.821922599 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822377397 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.819305609 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819790383 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.822745071 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822967731 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.822726112 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.820359968 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819188812 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.822380005 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.822757673 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.820114152 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.819917847 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.824164051 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.822751674 seconds)
  done (took 41.821548736 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.823640884 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.823547218 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.841338449 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.868662154 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.856185785 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.822264318 seconds)
  done (took 12.793987873 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821076522 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823140325 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.821301898 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823301401 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823059086 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821218743 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820723925 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820722228 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823821258 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821646281 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820581169 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824485003 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823172827 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821237422 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823320856 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822597936 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820902909 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821040656 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822109231 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824118234 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821477544 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82443299 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821731237 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820964401 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821745026 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821352531 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824244516 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82265292 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821586509 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825565741 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824882731 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821479293 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823904213 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822574756 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826330134 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825567674 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823130465 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825810501 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82447877 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822597208 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.824305426 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825751403 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825803501 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822171257 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825156326 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823082425 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823988369 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822826757 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823348754 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826327872 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82532445 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822362046 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82653801 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825397646 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824485211 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826279079 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82393726 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823782498 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825955141 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823920635 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822729916 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825986733 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823768815 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823441184 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826970615 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823199006 seconds)
  done (took 122.108311365 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824156705 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823456555 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824292464 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825338956 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823970629 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823603115 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824569897 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825104153 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824143873 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824246941 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827912046 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823950496 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825075413 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823990366 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824680056 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824016381 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824248005 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824734885 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825428285 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827881345 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824967905 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824210839 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825107132 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825428019 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825506263 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827772498 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824534814 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825014009 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825975409 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826332381 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825361586 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826471761 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82549326 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.82601916 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826061403 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826949917 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826572045 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826541273 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826016545 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828237475 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826294089 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828053558 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825920015 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826389836 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824583451 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826233391 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825283536 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827096486 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827180528 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826641288 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827025052 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827114396 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827079689 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826786899 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826138244 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826615051 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826797046 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826958111 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826476908 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830256691 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827173092 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827643352 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831072477 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827610334 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827416546 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826027134 seconds)
  done (took 122.279405486 seconds)
done (took 2490.975004049 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.863680002 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.874508244 seconds)
  done (took 15.503959318 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.994438747 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.947932164 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.831975344 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.877511456 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.833375976 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.851043637 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.851120414 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.831336127 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.831963526 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.832793706 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.831210679 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.019526663 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.837495372 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.832441886 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.832227443 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.924509008 seconds)
  done (took 51.732655791 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.835743675 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.835698239 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.847068989 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.838103913 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.833819545 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.848711631 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.868641147 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.83820948 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.872414078 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.847744331 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.912743981 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.84781412 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.834911367 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.887034186 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.849133418 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.850065448 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.92225834 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.914077109 seconds)
  done (took 35.252533462 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.91566734 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.85947619 seconds)
  done (took 10.551878698 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.864862257 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.84530294 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.831585783 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.841828337 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.827203822 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.856315956 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.832664179 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.836734181 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.856395767 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.89392377 seconds)
  done (took 70.266521699 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.841098966 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.836851152 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.835873127 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.834472483 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.82808746 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.833626364 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.835542168 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.831582392 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.538147928 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.872428102 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.844121951 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.841878952 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.835850096 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.838460083 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.833731194 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.859581971 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.95304445 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.83421743 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.83393838 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.842007434 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.837323808 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.936438939 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.850598617 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.838212304 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.867316665 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.535977865 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.846241061 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.844090125 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.972413834 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.834489083 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.836464024 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.837504705 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.83935901 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.226757481 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.117794105 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.836767292 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.846825122 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.845068319 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.833778679 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.019403971 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.838195115 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.8436662 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.831189702 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.099431368 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.92276874 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.881015082 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.211577628 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.841808492 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.839410684 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.869639204 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.84017161 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.839013947 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.851854029 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.350550938 seconds)
  done (took 131.042977997 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.83511114 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.408540461 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99876909 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.834769049 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.116516738 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079238853 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.835330512 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.885481578 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.834884489 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.084769465 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.015095399 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.955177057 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.835753053 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.834057579 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.831301614 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.831410291 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.987749701 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.907077674 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.837693194 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.832436819 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868707057 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.102083065 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.963138675 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.836065348 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.857909871 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.065648289 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.962778983 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.953692254 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.534010518 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.83371384 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.903335636 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.836813987 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.835197001 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.834270574 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.001016843 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.945008672 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.934911548 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.836221487 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.833837954 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.833436265 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.504954639 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058510876 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.948082217 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.974470167 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.08500155 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.066623294 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.576345531 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.834245201 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.476827376 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.032366419 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.04560189 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.092341691 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.966673838 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.838428091 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.116291994 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.834262841 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.834572447 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.100118816 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.066016751 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.953061146 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.839206932 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.835220804 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.834307579 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.153588404 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.841369061 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.948650316 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.837487333 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.837194651 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.949541103 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.956138731 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.067879643 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08138457 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.868991646 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.751531062 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.376127323 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.12144519 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.910882711 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103524543 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.840078707 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.836331416 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93253463 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.586479189 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.012146951 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.156557851 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.105726381 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.880796439 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.442510674 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.836748953 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.085674609 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.090067741 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.06904314 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.084182097 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.005638221 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.352415304 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.836593355 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.836914894 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.120298901 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.970815044 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.840070942 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.196861913 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.088509881 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.58143241 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.868446463 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.146107946 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977962776 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.838515443 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.46539048 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.836860796 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.038768882 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.881315159 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.83986129 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.838358451 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.087021103 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.716807342 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.836713201 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.62937235 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.90605648 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.842527441 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106063734 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.842390338 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081791652 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.843017798 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.152516123 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.524801591 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.88272176 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.031595681 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.085029966 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.636721955 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.110093584 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.155874282 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.96695861 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.102617134 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.716059993 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.83992451 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.123893542 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.842117436 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.839077345 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.010112924 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.840992517 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.995887294 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.841902468 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.101318889 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.867912725 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012135774 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.843066963 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.117462382 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.887130071 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.894132309 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.843088044 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.958338792 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.840711479 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.882593528 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.024593599 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.840918084 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.841191182 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.422252184 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.840154475 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.990544398 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.142357543 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868023167 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.914826649 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.368124685 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.840431025 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.937188691 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.87216065 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.4458089 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.84121356 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.015077148 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.844312935 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.83779361 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.840749236 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.153612037 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.067620663 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.843432313 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.84266173 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.634253129 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.577699775 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.840671327 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.020157081 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.104131711 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.501449449 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063458831 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.844902463 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976145323 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.846143625 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.1745717 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.193413389 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.841708236 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.840569473 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.842034065 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.841962161 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.842098083 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.072969307 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.873224269 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.52693722 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.981160701 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089220509 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.154856889 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.106111258 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.89341356 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.844891515 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.114141281 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.844890529 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.91304689 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.846057598 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.868242847 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093220405 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.848306274 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.076758845 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.133473114 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.899732533 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.895976467 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.846591537 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.843998915 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.843064397 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.989529459 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.947307331 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.846553564 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.843178021 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.963789479 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.973438578 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.034421559 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.438647776 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.035088935 seconds)
  done (took 898.7197721 seconds)
done (took 1214.831336821 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.844816863 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.843857392 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.834214732 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.845329047 seconds)
  done (took 29.152814106 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.851751468 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.850072591 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.850131428 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.849150842 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.850107413 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.850374366 seconds)
  done (took 12.88675462 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.983324925 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.844358391 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.84487042 seconds)
  done (took 21.456864094 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.920759012 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.268168767 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.955055982 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.307162636 seconds)
  done (took 10.236794299 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.851062607 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.850117693 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.849989809 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.85233658 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.852703164 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.853483785 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.850762114 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.851714435 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.854105821 seconds)
  done (took 18.451244637 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.965468827 seconds)
done (took 97.93005126 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.864515157 seconds)
    (2/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.870851546 seconds)
    (3/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.853403748 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.988447478 seconds)
    (5/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.935873716 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.491772253 seconds)
    (7/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.375721682 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.060848417 seconds)
    (9/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.078353114 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.887396833 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.534261518 seconds)
    (12/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.872142823 seconds)
    (13/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.736806369 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.873324044 seconds)
    (15/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.846714892 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.796636038 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.086561318 seconds)
    (18/309) benchmarking ("sort", Int8, false)...
    done (took 4.846162783 seconds)
    (19/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.865752697 seconds)
    (20/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.408054636 seconds)
    (21/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.858332206 seconds)
    (22/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.873099233 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.753184811 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.075800877 seconds)
    (25/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.9325422 seconds)
    (26/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.187146977 seconds)
    (27/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.661631403 seconds)
    (28/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.838456731 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.083182919 seconds)
    (30/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.137410532 seconds)
    (31/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.213217543 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.849136425 seconds)
    (33/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.994311994 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.0943092 seconds)
    (35/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.376963152 seconds)
    (36/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.277583983 seconds)
    (37/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.953166641 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.94855469 seconds)
    (39/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.871943657 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.946965848 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.00419081 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.758721909 seconds)
    (43/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.04682875 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.107186638 seconds)
    (45/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.974196601 seconds)
    (46/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.475455185 seconds)
    (47/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.850293791 seconds)
    (48/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.238466334 seconds)
    (49/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.047673407 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.964644526 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.141310327 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.234581286 seconds)
    (53/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.576046223 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.206319415 seconds)
    (55/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.832551603 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.86696319 seconds)
    (57/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.852883466 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 4.687492679 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.853209847 seconds)
    (60/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.017196652 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.854310035 seconds)
    (62/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.03936983 seconds)
    (63/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.138171877 seconds)
    (64/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.972463443 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.84966972 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.128966109 seconds)
    (67/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.033501384 seconds)
    (68/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.022934284 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.951722491 seconds)
    (70/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.865186264 seconds)
    (71/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.529608487 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.655351764 seconds)
    (73/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.886981112 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.012770915 seconds)
    (75/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.030371957 seconds)
    (76/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.118414578 seconds)
    (77/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.429763434 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.851305879 seconds)
    (79/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.857147704 seconds)
    (80/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.001900748 seconds)
    (81/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.451129996 seconds)
    (82/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.226900293 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.85639927 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.991809664 seconds)
    (85/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.858948181 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.246408993 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.241855671 seconds)
    (88/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.270056694 seconds)
    (89/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.145267403 seconds)
    (90/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.086975769 seconds)
    (91/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.957177922 seconds)
    (92/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.025059765 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.540720839 seconds)
    (94/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.880780105 seconds)
    (95/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.850619519 seconds)
    (96/309) benchmarking ("sort", BigInt, false)...
    done (took 8.865404037 seconds)
    (97/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.456748334 seconds)
    (98/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.134298542 seconds)
    (99/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.055124457 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.958082833 seconds)
    (101/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.91496991 seconds)
    (102/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.965739921 seconds)
    (103/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.921893904 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.930202202 seconds)
    (105/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.853517935 seconds)
    (106/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.879774777 seconds)
    (107/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.915102996 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.124723767 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.84129732 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.858184946 seconds)
    (111/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.169146492 seconds)
    (112/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.858132012 seconds)
    (113/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.997218143 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.136693083 seconds)
    (115/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.147106362 seconds)
    (116/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.884857959 seconds)
    (117/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.776480198 seconds)
    (118/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.285470752 seconds)
    (119/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.937202524 seconds)
    (120/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.851413497 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 4.343264682 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.866312181 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.732246375 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.840119408 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.873216875 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 2.310631248 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.878800343 seconds)
    (128/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.997448036 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.116886566 seconds)
    (130/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.068778996 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.859746555 seconds)
    (132/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.956559156 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.255423532 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.07279067 seconds)
    (135/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.067645715 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.221574828 seconds)
    (137/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.201580996 seconds)
    (138/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.841564669 seconds)
    (139/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.230098348 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.19660171 seconds)
    (141/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.986778057 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.959764555 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.800762942 seconds)
    (144/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.84190653 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.162561158 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.099760522 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.922413486 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.878902582 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.194055189 seconds)
    (150/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.386988313 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.840272409 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 4.03958884 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.868813887 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 4.11171818 seconds)
    (155/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.47903585 seconds)
    (156/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.942046059 seconds)
    (157/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.101498767 seconds)
    (158/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.923569283 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.027414965 seconds)
    (160/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.886893147 seconds)
    (161/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.199858308 seconds)
    (162/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.999391919 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.88541398 seconds)
    (164/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.152841827 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.243679131 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.845120647 seconds)
    (167/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.295232679 seconds)
    (168/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.369593548 seconds)
    (169/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.884356211 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.903913505 seconds)
    (171/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.219999646 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.170759266 seconds)
    (173/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.846426041 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.989302219 seconds)
    (175/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.917359293 seconds)
    (176/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.00536292 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.70676076 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.168533424 seconds)
    (179/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.044228298 seconds)
    (180/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.942457637 seconds)
    (181/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.788209468 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.099192121 seconds)
    (183/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.92311201 seconds)
    (184/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.363277266 seconds)
    (185/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.942943872 seconds)
    (186/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.362679238 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.86401499 seconds)
    (188/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.977840677 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.159598268 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.296505966 seconds)
    (191/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.57685543 seconds)
    (192/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.955457056 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.886472878 seconds)
    (194/309) benchmarking ("sort", Float32, false)...
    done (took 5.63028726 seconds)
    (195/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.552693429 seconds)
    (196/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.952829585 seconds)
    (197/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.965959421 seconds)
    (198/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.127073765 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.034774446 seconds)
    (200/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.962131515 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.190085252 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.904097256 seconds)
    (203/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.841054901 seconds)
    (204/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.300860552 seconds)
    (205/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.060237784 seconds)
    (206/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.842988746 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.85427555 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.191268079 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.51046942 seconds)
    (210/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.750774627 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.993063091 seconds)
    (212/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.064281243 seconds)
    (213/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.895698676 seconds)
    (214/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.055303365 seconds)
    (215/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.99514359 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.924122865 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.918644158 seconds)
    (218/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.442440691 seconds)
    (219/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.514678399 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.859614294 seconds)
    (221/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.924646114 seconds)
    (222/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.987212837 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.147760309 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.713233525 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.075174144 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.845263246 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.148551432 seconds)
    (228/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.847409866 seconds)
    (229/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.284591574 seconds)
    (230/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.27727936 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.237333822 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.676029947 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.167970341 seconds)
    (234/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.865072072 seconds)
    (235/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 4.297194371 seconds)
    (236/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.997604541 seconds)
    (237/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.010779287 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.885641012 seconds)
    (239/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.922014074 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.84874122 seconds)
    (241/309) benchmarking ("map", abs, BigInt, false)...
    done (took 8.089018735 seconds)
    (242/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 3.152499696 seconds)
    (243/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.948385698 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.960238952 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.18407188 seconds)
    (246/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.904210197 seconds)
    (247/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.127961938 seconds)
    (248/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.017738832 seconds)
    (249/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.9679243 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.919043792 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.764575023 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.104251006 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.870544085 seconds)
    (254/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.88121483 seconds)
    (255/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.900019881 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.909791436 seconds)
    (257/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.111254498 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.200672577 seconds)
    (259/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.865265439 seconds)
    (260/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.920583958 seconds)
    (261/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.827581044 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.785100959 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.949327828 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.882106626 seconds)
    (265/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.887030838 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.958732553 seconds)
    (267/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.386558996 seconds)
    (268/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.032511207 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.552921074 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.906111825 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.884531088 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.845873739 seconds)
    (273/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 3.311605377 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.25275753 seconds)
    (275/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.373076378 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.871530925 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.467871533 seconds)
    (278/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.945857775 seconds)
    (279/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.889103253 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.850618229 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.253440708 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.156370175 seconds)
    (283/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.883730554 seconds)
    (284/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.292997249 seconds)
    (285/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.851391845 seconds)
    (286/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.202079818 seconds)
    (287/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.96736746 seconds)
    (288/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.8890081 seconds)
    (289/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.957428538 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.983728144 seconds)
    (291/309) benchmarking ("sort", Float64, false)...
    done (took 5.670055429 seconds)
    (292/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.275189366 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.955421767 seconds)
    (294/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.960434365 seconds)
    (295/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.950368656 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.978593924 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.012014879 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.06907757 seconds)
    (299/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.178748333 seconds)
    (300/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.94409411 seconds)
    (301/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.868282861 seconds)
    (302/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.051650714 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.926046571 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.911704726 seconds)
    (305/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.471415429 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.998168986 seconds)
    (307/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.878133841 seconds)
    (308/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.872666437 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.886733733 seconds)
  done (took 1022.154570041 seconds)
done (took 1023.949265222 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.897276632 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.891619852 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.874761819 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.897153197 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.987621575 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.905198655 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.885913118 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.877317472 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.92281926 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.924781512 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.875310302 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.903436226 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.877886631 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.876858251 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.875030478 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.890079196 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.186628125 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.907649558 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.893120631 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.885572746 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.89378325 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.875039827 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.925852979 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.9037121 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.880202123 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.87809418 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.879451555 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.896288962 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.98837763 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.879882256 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.879267643 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.888673617 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.186687125 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.906418067 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.871476834 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.8955656 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.889095846 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.88623637 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.880509535 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.9096919 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.335921507 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.884004153 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.878711784 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.877472274 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.878172239 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.881326765 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.878730071 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.885817547 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.890170499 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.891586784 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.334448712 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.900536681 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.881820431 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.878375771 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.888673363 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.878734217 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.88162758 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.894238663 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.898358815 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.895589317 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.178058396 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.913369741 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.880689179 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.895673418 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.887282026 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.368781091 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.8817671 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.883981351 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.336297663 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.892425964 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.369763 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.895430641 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.880063307 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.892908189 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.912368803 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.189084669 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.902642783 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.879600931 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.886456691 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.878414782 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.889601825 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.89283087 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.883871336 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.879882302 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89379735 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.908210053 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.890528641 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.880496838 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.887808019 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.898832506 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.88738969 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.890836914 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.88307081 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.875669548 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.889284415 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.884126269 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.883255966 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.883934784 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.885097831 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.890939441 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.333823655 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.904900005 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.877223646 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.878359194 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.880411102 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.895060831 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.33518809 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.888971667 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.903368234 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.928854457 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.882854218 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.18017428 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.915350015 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.896801759 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.89098804 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.884598783 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.876595311 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.181314055 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.365368104 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.903896137 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.882872676 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.880347327 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.897246249 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.88344241 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.878132515 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.191681195 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.913747786 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.895234113 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.002613027 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.893041707 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.915010855 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.880779669 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.88483885 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.910613642 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.898594711 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.913082827 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.885829243 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899049139 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.898337651 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.879218762 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.894786133 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.893797506 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.8852998 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.888018747 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.876362532 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.911503001 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89619224 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.897056198 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.903085269 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.005073058 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.879590893 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.181151168 seconds)
done (took 295.615811767 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.951468508 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.875044128 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.983376264 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.879505701 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.96740139 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.966877674 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.878006748 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.877254851 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.877605423 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.25777169 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.87722402 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.878316725 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.880215044 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.87711668 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.962361751 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.879974647 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.877729948 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.221455969 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.879741891 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.9505856 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.875307542 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.876834981 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.879516601 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.289339643 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.87885483 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.8789414 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.952203072 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.880216097 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.228157386 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.879290135 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.873997213 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.278220637 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.970806168 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.899695958 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.892280062 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.888096789 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.969795678 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.886212623 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.962630371 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.961626126 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.985586065 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.920911348 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.878135555 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.875474878 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.884797785 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.882246626 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.878765884 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.910091949 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.875169763 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.88014101 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.223859733 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.891612154 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.880455064 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.879880793 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.880243677 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.91327863 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.880253619 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.883476652 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.973016178 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.883371484 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.94503436 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.299767467 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.260969886 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.883020681 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.876251792 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.88115422 seconds)
  done (took 185.222047017 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.949464178 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.957605956 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.951258006 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.888049047 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.935890858 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.95754488 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.888163275 seconds)
  done (took 15.344158589 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.890564851 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.884910965 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.935878113 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.936774877 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.885395699 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.036346542 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.885713846 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.896821141 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.883367037 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.938179997 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.885542536 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.886250651 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.892119527 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.878831812 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.934244569 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.897289145 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.001730428 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.886709122 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.8861179 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.036863741 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.883424201 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.892039808 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.940337815 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.897067099 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.886377607 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.892381055 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.470028941 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.886016557 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.882823658 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.885463401 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.883076106 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.929280043 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.886165525 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.881305044 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.883631238 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.004577306 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.8860461 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.884071959 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.886295461 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.885021772 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.88599124 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.886288041 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.887205464 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.88368419 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.887180367 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.910721697 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.887462572 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.886503922 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.886715659 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.886985245 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.939254328 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.887040635 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.884050943 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.884903648 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.943760558 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.893928427 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.888471086 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.885349913 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.888186548 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.885092144 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.039224249 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.935631185 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.887472428 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.936433448 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.887609314 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.888537759 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.887933481 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.886773324 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.942547766 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.888012792 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.936670898 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.885247582 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.047582326 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.912330478 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 2.362155539 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.891208015 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.891129942 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.88858569 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.881140407 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.894715162 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.884167445 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.890574885 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.894884197 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.885334575 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.885550872 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.001953459 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.998384948 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.886778822 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.901542107 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.896240628 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.886523123 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.942280202 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.888834396 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.885784157 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.942205137 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.00472975 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.947663663 seconds)
  done (took 207.969656082 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.894475519 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.897412199 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.890623393 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.906437827 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.890274462 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.890056204 seconds)
  done (took 13.191022692 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.893056469 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.891577723 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.891272371 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.88979572 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.890129804 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.891675598 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.891162683 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.892368409 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.895109807 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.887827668 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.89077501 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.891511173 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.889897111 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.889903729 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.890155408 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.889645612 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.889961632 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.887547729 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.889891876 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.890176911 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.044409169 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.889029582 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.890421792 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.891831778 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.894557537 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.889819962 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.898346535 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.890251796 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.89027341 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.897060922 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.895056848 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.891327651 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.89266785 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.897941285 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.895820597 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.893121309 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.895405926 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.894111897 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.888541066 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.891807211 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.891649305 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.891811542 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.891324895 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.893626388 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.893193188 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.897739287 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.898275109 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.899591938 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.892524807 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.89435668 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.893983215 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.891967852 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.892613998 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.89413315 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.896166932 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.899074919 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.898935964 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.892530662 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.892925918 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.894090038 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.894112258 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.893008217 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.894960806 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.897582757 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.889551513 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.894308168 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.893608568 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.895386821 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.89284655 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.892654348 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.894612682 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.889217057 seconds)
  done (took 139.262502293 seconds)
done (took 562.815638435 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.137980495 seconds)
  done (took 8.963668927 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.047736628 seconds)
  done (took 8.962077261 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.639633065 seconds)
  done (took 10.465256356 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.917295619 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.922128413 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.899116422 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.888361798 seconds)
  done (took 29.464444153 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.886326787 seconds)
  done (took 8.712311372 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.903488538 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.886751112 seconds)
  done (took 15.653978713 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.987609752 seconds)
  done (took 8.814679704 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.088945071 seconds)
  done (took 8.918443284 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.912753594 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.901142859 seconds)
  done (took 15.655489534 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.873149571 seconds)
  done (took 8.700358218 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.725928931 seconds)
  done (took 11.563062717 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.895464816 seconds)
  done (took 8.738724897 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.914101713 seconds)
  done (took 8.741988246 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.912049674 seconds)
  done (took 8.738662499 seconds)
done (took 163.914376615 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.895271983 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.891908873 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.889885739 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.887978759 seconds)
  done (took 29.392905637 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.929329657 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.927671738 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.929608576 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.940127051 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.931125491 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.927889454 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.9208865 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.921044141 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.939352112 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.932282124 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.930706598 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.931027522 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.928034004 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.920585833 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.930669649 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.930854281 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.939971409 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.929786191 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.921421892 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.932968281 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.895653636 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.939908669 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.93191175 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.896079199 seconds)
  done (took 48.086788605 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.098147587 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.970083869 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.052574685 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.951252342 seconds)
  done (took 9.899935867 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.9472422 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.949764551 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.965010312 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.001222589 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.028416983 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.959750054 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.92048107 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.917849353 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.904579462 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.950803845 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.026300492 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.965875204 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.035797682 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.897063848 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.083856383 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.896552292 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.896065085 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.948757918 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.003297994 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.017122462 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.8973167 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.948752424 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.953012893 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.966709122 seconds)
  done (took 48.91101099 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.895298599 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.903763419 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.902609786 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.896589674 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.895934355 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.896797996 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.902442745 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.898027874 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.917045992 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.898266226 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.895078284 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.89671931 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.895724257 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.897150133 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.896223661 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.909930847 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.910133284 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.897716052 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.900470579 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.90301806 seconds)
  done (took 39.838846787 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.890498638 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.742218078 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.24176651 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.187176482 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.891345698 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.892387786 seconds)
  done (took 31.675758717 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.91180009 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.963460431 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.906711565 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.955487783 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.037502012 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.907129562 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.897558142 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.967020381 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.012585209 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.974844822 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.91874826 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.927247286 seconds)
  done (took 25.213481017 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.893431748 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.892756995 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.892947828 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.909712341 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.910614284 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.908168244 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.906118667 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.89252646 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.91245784 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.918086535 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.906848348 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.912264707 seconds)
  done (took 44.69162768 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982692797 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.946718543 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.920214633 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.666457667 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.28093319 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106472772 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.61795357 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.228778192 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.897860698 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167307242 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.996282883 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999873752 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.153611295 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.538054786 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.932243363 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.355715019 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193482751 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104991785 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922737302 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.600032703 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960415288 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.188442465 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.665957777 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.955380003 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106931824 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.032757053 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.156177615 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.895040058 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031303666 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933234647 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905640708 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895248847 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168783066 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275687055 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001456413 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906760011 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.667157017 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.618008061 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.882731158 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.723613374 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.642875921 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.020960016 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906855964 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895836385 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.83076151 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.152718298 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277454873 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.90167315 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.608040234 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.896142529 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908291921 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990969646 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.90030489 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.718786743 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871844383 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.900443109 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.894512403 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903723979 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.466001941 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.041303886 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.203781966 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.878221899 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.049819124 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.656353101 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286470355 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.047968416 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.901539112 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900904658 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833051372 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.656573491 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956483424 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237666997 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.918335716 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.560289129 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.210218699 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.05751332 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843520747 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17164219 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.572170267 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.877593975 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128355074 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898363093 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837820821 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.850690195 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.832979315 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16286069 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938835908 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.68367389 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944174668 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.230105383 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.911050321 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917010973 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922586945 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.124013341 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.784063365 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899253603 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.737993896 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.034973958 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920570041 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.229831643 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83562083 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.902761712 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159071405 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.111700505 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.09266143 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.397003945 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06175781 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.605343062 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.95649689 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.180491973 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.95278969 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.174271892 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961000211 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.050532189 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955821258 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.900398353 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203794476 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.611216969 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.042849051 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.012067949 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.030036631 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.225789103 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929649389 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983260734 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903523376 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.900936856 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.703538459 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.459983198 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.900649542 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.902566231 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.0762331 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.95358066 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.902104424 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860350128 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.55283923 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.959555867 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.917245589 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.126737984 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.63158952 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218417619 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837137107 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261544713 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.001698304 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.12565387 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.549070298 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.973809812 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167277566 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.102941639 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.13078759 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955783562 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922433865 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000831933 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925216073 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.175464035 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.20423997 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.906308707 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.907474334 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.707836525 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.942394384 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909623742 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.908824093 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.708085389 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190311724 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.927443568 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.91199659 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.798189827 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.917481769 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967356782 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908785527 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.914220934 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.452677857 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.751178727 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.911380162 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.519460589 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132770418 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915919649 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.661634023 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020733618 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.988911736 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191906588 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966407344 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.838921979 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.615688934 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.597402965 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90564444 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.84020828 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.905183836 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914318645 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914724229 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.192684345 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.185489613 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951187264 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.615716579 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.949190229 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916634564 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.91030973 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905364848 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.424508794 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.05613737 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.21629546 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958230593 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050090746 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.918930663 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.839792435 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.909638152 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911153942 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.906844968 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.906800519 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93859879 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.611387758 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294647731 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.168920117 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.645161564 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921002066 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.662752404 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.967160635 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.91021789 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.753897997 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.185172533 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.943942808 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923915373 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.918334738 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.685856202 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.625388179 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.474025283 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226594089 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.21358564 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344512357 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.235441755 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.939244637 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.245737367 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842928393 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.467647332 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.968937235 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.252275966 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863907966 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995163018 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.549598436 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248954888 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924128459 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137638889 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297662463 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.688538198 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082147026 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120304189 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94465444 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.174676276 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.876473144 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.433096812 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052874744 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.622230013 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117776454 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242442006 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.621593746 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.03529433 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.909197101 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.590207859 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998267771 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.621234267 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.088002768 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.208166018 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.928452871 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393820221 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.920509538 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.140425368 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257313111 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.192809664 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.038240809 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850229167 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.920947933 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.920123213 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.911121727 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.914516975 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.804628158 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.167474408 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921145657 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843590521 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.137696659 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.204714743 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.8148416 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.915930974 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909421881 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20479974 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.622586725 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084943182 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.133801862 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.447732893 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918620354 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.844722347 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845684171 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.603626262 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.917568679 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.879591986 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12319298 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.037063156 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.89068329 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.110821488 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.16867004 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.170338323 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.924739852 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.195905585 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191194149 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.738825702 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936325993 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.011646779 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.629072783 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.02107149 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.912252994 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.147317244 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713579967 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.141149603 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.931172383 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.868064511 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.911546503 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127460144 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.912310996 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.889764491 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148065193 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.636680054 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.919132635 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235368798 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989155886 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.889905931 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.965984323 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.063625196 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924599773 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991987005 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924994078 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.925474898 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.925216352 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959963152 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.894011282 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.038926937 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.927198024 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00772818 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.074034238 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.452141218 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.91994209 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201826582 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279517852 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.24679033 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977159112 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.915744862 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918642846 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849163597 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063451512 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.144957485 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18832235 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.036190956 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.096808393 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940603581 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.606392503 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.251139648 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161291557 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189359533 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.815063258 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.573033817 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.962179428 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.915447713 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926221818 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.127159131 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125529253 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215202202 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.073867629 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.107641127 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.280831598 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189075969 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.915814466 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.915414404 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.510407929 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.93273942 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.600990283 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.963880132 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.897849809 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194126668 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927408773 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30092449 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.939356126 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.073060998 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.689308249 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.720926894 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.212270607 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.904649519 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.978079089 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.203262674 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.313491091 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234165591 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983753755 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927714613 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.034089282 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063525671 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.808698927 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.919403887 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.917197142 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.970186524 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.628280691 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.927490697 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199832851 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235398135 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.916408503 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.819007296 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943537293 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.929483811 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.143575071 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183472535 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.174718194 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929406337 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.924431041 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.736039732 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194331594 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978621847 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853590545 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.921953852 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0183288 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.167437365 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939429667 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.370856552 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.630161443 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187574824 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.925734376 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941081491 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.198807504 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.287618899 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24561959 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.46836216 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129528226 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.511178079 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.630651559 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224670549 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.923793287 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.193465906 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227506783 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.922839801 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.126691605 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963846373 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.200136457 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235279842 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.929305042 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.627849667 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.892443161 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.268729239 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.525209048 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859378169 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.929769892 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.980688317 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.92191296 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.039139731 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933413755 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.823958431 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.196190941 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.705285387 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200093291 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.926293156 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.913187277 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.686319149 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.324264762 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960099199 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066829537 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929342874 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.596309782 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.27218444 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.179558741 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.104698225 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.933173083 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.925010062 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921314806 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.921032946 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.12744304 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.211056684 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193460396 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.143722501 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.962894742 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925931747 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.139735327 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134906951 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.859826222 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060366924 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.129678525 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968589167 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.82812466 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.431046259 seconds)
  done (took 1701.207942455 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.94596979 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.963972904 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.964000386 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.938871563 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.951176639 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.03715839 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.027223911 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.025526004 seconds)
  done (took 57.714800334 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.929870988 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.146242305 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.931793642 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.92384697 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.931799297 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.92408568 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.092475013 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.934981379 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.933209987 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.933325399 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.923722897 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.923770789 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.23984434 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.950186259 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.925676452 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.910648295 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.932226529 seconds)
  done (took 75.373764535 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.923231751 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.127091196 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.951386198 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.933409455 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.073539501 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.923806393 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.892405956 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.937160587 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.925616544 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.951784509 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.560043534 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.937927682 seconds)
  done (took 88.001248975 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.932477286 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.930665354 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.934531247 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.931131267 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.931488328 seconds)
  done (took 11.526095535 seconds)
done (took 2213.419144673 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.242178773 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.144352046 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.15122387 seconds)
  done (took 6.158551608 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.073536907 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.121409565 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.278517655 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.261100311 seconds)
  done (took 10.600102968 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.211933828 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.308685192 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.131231403 seconds)
  done (took 8.512708671 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.336905781 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.940503337 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.0376749 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.92305635 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.924540517 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.926285193 seconds)
  done (took 22.636380958 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.928537427 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.929816026 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.927214025 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.930443975 seconds)
  done (took 9.578413316 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.908432973 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.715904353 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.909851836 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.925646261 seconds)
  done (took 21.321213222 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.67649972 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.688383183 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.671543699 seconds)
  done (took 9.89812345 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.513631828 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.842276428 seconds)
  done (took 9.21921634 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.196337706 seconds)
  done (took 4.058440269 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.061203528 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.194191995 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.388963478 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.423853742 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.495993994 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.83670593 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.256300998 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.189805276 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.32142237 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.382698694 seconds)
  done (took 25.414060924 seconds)
done (took 142.813289095 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.321696278 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.333099184 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.138052315 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.280929147 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.160064838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.136481526 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.260266185 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.260948793 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.789406378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.782119372 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.318596157 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.159258759 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.425730627 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.325090109 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.423377856 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.948667987 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.158107297 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.341339443 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.976746721 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.215378337 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.265224763 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.916067656 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.157979685 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.935804825 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.162568827 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.089829828 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.509384503 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.951437514 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.131586073 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.520135289 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.092163839 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.367963892 seconds)
  done (took 171.719006482 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.702641384 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.928983404 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.92702057 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.929078199 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.405183057 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.928961089 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.927745528 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.928521269 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.106331797 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.082355725 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.929209518 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.389364391 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.930071667 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.927823253 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.93188094 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.928582577 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.238307678 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.761945783 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.935353054 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.93834729 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.943649115 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.325959782 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.943983759 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.375588184 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.270412527 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.946709021 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.929951003 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.947383064 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.933173435 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.940182446 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.943564073 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.930911357 seconds)
  done (took 210.077585503 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.929223075 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.931263208 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.929415399 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.930668134 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.93502184 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.937790331 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.932355729 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.9298451 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.749871309 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.739590765 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.939197935 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.937448535 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.960022084 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.931155487 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.937647184 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.929333326 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.936580947 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.936296785 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.937776476 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.938662951 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.942341353 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.696452107 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.941805202 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.702363361 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.93819222 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.938540855 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.931755826 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.939767192 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.940256331 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.941000037 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.941581491 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.931180112 seconds)
  done (took 222.99831825 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.129021675 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.938537624 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.93880161 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.872172661 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.938228999 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.936751417 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.935775141 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.129269021 seconds)
  done (took 19.700546513 seconds)
done (took 626.369024245 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.414342993 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.259880945 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.117809239 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.961077201 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.212160367 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.994818903 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.958596214 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.022238525 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.674623199 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.027087047 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.654865527 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.978726767 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.74585292 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.985541188 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.091283451 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.01649413 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.507693186 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.596633579 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.143035466 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.054584815 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.129198957 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.921443634 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.034860187 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.708993367 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.76831729 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.970098117 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.1483525 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.514180187 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.970657838 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.130467639 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.687178903 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.353565298 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.9720755 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.95712068 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.008989895 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.991670005 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.32108093 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.970113003 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.084968447 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.730964949 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.043533433 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.560707397 seconds)
  done (took 106.266020518 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.928794073 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.92712321 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.92724888 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.927791241 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.928731268 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.92746066 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.92675554 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.92630573 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.927217368 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.927289084 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.927564725 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.929097735 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.927105448 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.92895439 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.926493054 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.927094015 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.927885917 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.929924295 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.927350352 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.9272715 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.927299031 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.927039253 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.92848518 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.926784856 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.92804313 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.928673019 seconds)
  done (took 52.000588091 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.940802597 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.083623172 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.16368749 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.960951644 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.940949158 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.944398247 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.960213805 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.947577533 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.944181812 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.94352503 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.034515548 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.949575936 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.960317208 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.163395138 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.958238894 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.943296545 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.942510322 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.942492438 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.089922274 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.958907759 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.962738514 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.947588929 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.961566837 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.956476082 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.94460516 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.943647187 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.946321032 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.381543148 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.952724601 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.034295419 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.987229324 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.967370603 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.336510148 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.174226761 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.998445025 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.950526352 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.943294707 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.039923246 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.949967151 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.943534516 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.961608753 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.948641457 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.167603746 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.435249679 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.95836767 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.944735132 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.391550524 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.048505063 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.985830529 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.955689981 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.170063873 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.960902143 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.945055495 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.944877192 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.982295493 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.954568283 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.94382474 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.251093119 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.956886155 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.962928659 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.94845526 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.944915968 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.100985803 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.952790595 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.08836013 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.95387049 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.952702891 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.94566835 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.167762966 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.961411381 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.43843219 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.959233626 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.945678012 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.035765654 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.091477168 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.417686518 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.959605377 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.105138654 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.353324422 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.970801445 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.953239461 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.371626752 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.973889358 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.954509576 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.947305347 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.948145944 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.945439899 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.990536259 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.962721204 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.381921041 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.442149788 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.268022154 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.97469043 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.96286843 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.947434919 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.257143861 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.955782793 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.947964993 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.162081651 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.453247348 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.960487822 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.954403369 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.426584401 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.962040374 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.966100855 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.955847579 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.172746425 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.96368972 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.992763973 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.946849536 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.954667988 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.949945536 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.965730242 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.955089456 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.946997577 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.416949072 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.057576747 seconds)
  done (took 240.486456341 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.942891536 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.942786019 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.940886005 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.94319263 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.941953827 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.947567677 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.941434657 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.942238643 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.947940994 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.941389842 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.942447868 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.942799822 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.944987395 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.949964913 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.400812305 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.948957698 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.556106808 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.942743195 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.94411019 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.943251276 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.629124375 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.95086212 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.94220204 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.966361168 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.945291563 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.94619885 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.945030551 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.99277482 seconds)
  done (took 170.14816903 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.949339481 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.139465354 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.967090319 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.986446086 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.958300248 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.946766525 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.974241314 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.971857181 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.956109331 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.94782143 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.947939879 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.011510619 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.964294015 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.088885764 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.98174686 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.981219993 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.057426899 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.956827748 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.948463625 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.948115403 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.978777826 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.947305818 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.012506683 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.080188946 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.970200769 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.068270311 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.954880194 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.951305578 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.950425139 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.072923534 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.967457138 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.011363464 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.981820374 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.969729245 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.075783049 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.069609525 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.06066579 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.981644484 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.954555905 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.948861445 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.949511939 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.938754364 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.069471392 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.972799234 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.953130662 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.06012452 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.971237354 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.952381928 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.959758608 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.949001384 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.964987494 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.970119171 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.019180983 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.087005578 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.985717319 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.977266075 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.977182145 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.244001532 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.96184559 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.053897325 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.945978829 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.070559786 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.974385213 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.939445037 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.951202763 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.957216383 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.980224975 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.984052739 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.060833465 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.961908244 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.055060967 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.988063244 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.959430647 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.951226245 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.954027511 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.07082719 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.07661394 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.988472116 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.989846264 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.986293756 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.948038522 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.953601877 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.942012272 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.971050825 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.956971962 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.073796812 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.073821388 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.9624435 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.955422264 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.954399898 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.955406015 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.980174086 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.082563245 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.992008049 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.054458763 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.024107478 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.030266126 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.968539461 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.96620049 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.956934009 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.017900194 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.967170188 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.965044079 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.291586808 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.026961178 seconds)
  done (took 211.511396622 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.048823861 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.432678451 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.012687582 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.0109384 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.25005997 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.383324252 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.77981044 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.003868524 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.00355076 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.028876296 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.168244465 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.06588861 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.018430506 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.990766996 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.424547979 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.994806349 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.002388094 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.025415335 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.007943602 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.589830073 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.310559474 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.123222313 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.001325067 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.164165723 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.987183944 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.293356657 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.327682679 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.385219255 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.038725014 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.354463663 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.354651168 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.69447612 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.217152767 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.248431822 seconds)
  done (took 77.63640407 seconds)
done (took 859.913439217 seconds)
SAVING RESULT...
DONE!
