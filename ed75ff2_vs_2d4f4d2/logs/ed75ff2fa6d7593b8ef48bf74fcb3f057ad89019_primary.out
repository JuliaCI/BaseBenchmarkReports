cset: moving following pidspec: 8098
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.307574829 seconds)
loading group "string"... done (took 0.60957556 seconds)
loading group "linalg"... done (took 7.151957193 seconds)
loading group "parallel"... done (took 0.161990317 seconds)
loading group "find"... done (took 1.134987746 seconds)
loading group "tuple"... done (took 1.796803832 seconds)
loading group "dates"... done (took 1.276007084 seconds)
loading group "micro"... done (took 0.229701034 seconds)
loading group "io"... done (took 0.925727911 seconds)
loading group "scalar"... done (took 37.803896473 seconds)
loading group "sparse"... done (took 11.87480656 seconds)
loading group "broadcast"... done (took 0.912186138 seconds)
loading group "union"... done (took 12.204837486 seconds)
loading group "simd"... done (took 4.389450924 seconds)
loading group "random"... done (took 8.444657368 seconds)
loading group "problem"... done (took 1.878192631 seconds)
loading group "array"... done (took 19.886294974 seconds)
loading group "misc"... done (took 1.77519353 seconds)
loading group "sort"... done (took 3.140167719 seconds)
loading group "collection"... done (took 16.531022729 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.480925841 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120997198 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113327794 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11712071 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.130272433 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113900696 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122611196 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083155048 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.791930323 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144661014 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11779758 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412404696 seconds)
done (took 5.055046561 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173200983 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082195913 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081038903 seconds)
  done (took 1.29205677 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065401068 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120160854 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06575385 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066469168 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066382995 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065586808 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065490037 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065696461 seconds)
  done (took 1.6441188 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072465965 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06898159 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06870905 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06800163 seconds)
  done (took 1.406958662 seconds)
done (took 5.720647839 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.760835633 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201258807 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182426517 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.399588013 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129355362 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154028508 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.636728393 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.33509773 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183093697 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082235466 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103577282 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317368884 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108924792 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639520263 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07679124 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090003619 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139286888 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.405865548 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066660655 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081470448 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088874357 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12859038 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085907744 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074469955 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143739889 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067796665 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129877564 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080052587 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066244969 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206951651 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172368762 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.653618943 seconds)
  done (took 10.159334185 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095472455 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097039562 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068439456 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136440469 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095866216 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069351226 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070700035 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066879649 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086688397 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12776436 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088865545 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100878181 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064886976 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068436723 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084344512 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204211062 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082100264 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082976413 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070899115 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075081128 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116112325 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078270959 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07761058 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077200875 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128212285 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178907417 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096058342 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097267765 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06639702 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080085742 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115588091 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128608858 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066894048 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065991614 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124306948 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094923158 seconds)
  done (took 4.591129876 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.923462843 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14028259 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090833681 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131282928 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064726047 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106788896 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06535341 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080786758 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.202509813 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.288987865 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.577810139 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11111839 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103595195 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067592342 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067928299 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067057154 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.343497245 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107764754 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102094491 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080625302 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070115459 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068065203 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340547367 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067222866 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063655167 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067257439 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057665422 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122012929 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067427557 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.920268579 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123934764 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066108004 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09973616 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161715449 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086341141 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.273069566 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067670892 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064365042 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149598455 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069908253 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06594111 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083407462 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085722735 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102524644 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111918228 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065250178 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066423817 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16080828 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064174277 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078254075 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.985021641 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153807271 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076301042 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064140768 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245436529 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085716034 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06959844 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064633473 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.175005439 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134187044 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068152536 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066290057 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067976464 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068497618 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364546559 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065726023 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.004384798 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067439829 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076027226 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069078462 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06903448 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072493708 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071774862 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085001658 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065637429 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074679188 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065699213 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065502059 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06638218 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083682155 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.356012734 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066404528 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067800863 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063984499 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08581694 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096434195 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06593172 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064403808 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099753135 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067385323 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065081831 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.208824571 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095058635 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067086571 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084007451 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068758587 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112541228 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066659966 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06638559 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.105482583 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067636985 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096957949 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069206691 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098900151 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081089703 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068136491 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.399011775 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065192144 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064575554 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063270283 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064647149 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068936149 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065581494 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067395861 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079251592 seconds)
  done (took 21.076239903 seconds)
done (took 37.878136241 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271433486 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075012314 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075112738 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075287019 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075286623 seconds)
  done (took 1.788752997 seconds)
done (took 2.98733401 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118563304 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097579548 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063817792 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095490504 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0637853 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099732715 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098728937 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080984443 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098442765 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064074467 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09565389 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063844342 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064073733 seconds)
  done (took 2.3247097 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082509559 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082740434 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069025553 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081930741 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063614064 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08154828 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080824758 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088061997 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080311819 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071472411 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063369464 seconds)
  done (took 2.039720641 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081546612 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083084554 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068894622 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081227569 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063762544 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080954283 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080610355 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084836921 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080399748 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072618203 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0634692 seconds)
  done (took 2.030093201 seconds)
done (took 7.583343252 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078996252 seconds)
  done (took 1.261029347 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.595778598 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.090326496 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081420136 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112418755 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183375889 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119657336 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.281566329 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086511279 seconds)
  done (took 8.914675221 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101684599 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069901428 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071532491 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070704024 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068284255 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071800365 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071665222 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069395468 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068455481 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070508126 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068364333 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068610482 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071243501 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069045101 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071332981 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068629893 seconds)
  done (took 2.405542155 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092141939 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090553353 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073278013 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074376692 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071836109 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07209142 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074056702 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072862132 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070621844 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07176177 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074405064 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073787531 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071678003 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064876994 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074040749 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07524245 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071032311 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073743188 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074574679 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074299444 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074214313 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064032482 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071287974 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073645318 seconds)
  done (took 3.063477051 seconds)
done (took 16.834538693 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112400672 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071163386 seconds)
  done (took 1.374024247 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081172352 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081745483 seconds)
  done (took 1.361010882 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081195571 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065238717 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090353427 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077716072 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066223068 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065823563 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087427364 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066048771 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066321077 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066592925 seconds)
  done (took 1.932191085 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068801382 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077187711 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070522966 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080796435 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073774945 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064137469 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072134501 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067215663 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077561314 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06256747 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070627425 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081723899 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071234267 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083272114 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.0721684 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067816179 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070588648 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06685688 seconds)
  done (took 2.500714196 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066201452 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066701762 seconds)
  done (took 1.337189759 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066548598 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063899725 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066734528 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066016642 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063064805 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062497008 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063206766 seconds)
  done (took 1.653207473 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.386013176 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109907868 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.294773985 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072039808 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082490686 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248369342 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065138277 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070010854 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070074579 seconds)
  done (took 2.642213395 seconds)
done (took 14.004221722 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078661031 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084986023 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093504489 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.362716545 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091651635 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065453857 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113633044 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188581649 seconds)
done (took 2.293398186 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213806676 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.610871444 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.379859415 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.194264663 seconds)
  done (took 2.390388125 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323298099 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086466432 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058968369 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066029758 seconds)
  done (took 1.749672412 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066567194 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068537221 seconds)
  done (took 1.350095275 seconds)
done (took 6.917947583 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067123426 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082683679 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065710644 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066132586 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063599231 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065582599 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063155781 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062958087 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065588629 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065194479 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068246003 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065349531 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065966808 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065187677 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063221245 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06319543 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065303357 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063006408 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066032705 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063546626 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063839267 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065765893 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063155414 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062893589 seconds)
  done (took 2.816103528 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08434666 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065626017 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071922316 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070969584 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069276003 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071329432 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071225621 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065971481 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070832244 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067724783 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069237147 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06938731 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067343342 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069634049 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067606251 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069856993 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070874856 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065808582 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067795944 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069423237 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071202022 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066149579 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069403067 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070196886 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069281393 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069181854 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06775184 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.0662797 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071008853 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069400518 seconds)
  done (took 3.309714792 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071076277 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063760805 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063488156 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069932817 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062922404 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064763413 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063076052 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063381549 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064146764 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062861454 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064590245 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06299276 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063555778 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064162933 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064124623 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066757413 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078470081 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06332768 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063616586 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063837848 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066951461 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062992238 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063295146 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062851641 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062997043 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062828747 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063544466 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06340527 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063683885 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062772906 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066292162 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066465038 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062901232 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069783854 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06677627 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062921293 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066754001 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062824676 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.175065046 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063068963 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062795984 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062929583 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064242767 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069744455 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063114096 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064417668 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063444222 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064195526 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063253195 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065197513 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06293011 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062855765 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064817245 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063954142 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066940178 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062939345 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063892296 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063119533 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064181278 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06283589 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062663988 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062933443 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065284508 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063990348 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077322755 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069828487 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063090445 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064748857 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064168496 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065251218 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064750862 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075895373 seconds)
  done (took 6.01000907 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087894621 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087307981 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064981155 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065114347 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061528255 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063572826 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067596999 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063692265 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064831013 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069659157 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063787093 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064689328 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06486613 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076489663 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063821987 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06489252 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069330398 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061675974 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06361818 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066807613 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064175118 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066675475 seconds)
  done (took 2.720710621 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155724847 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069761466 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105614059 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072680178 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067201444 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072477541 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069427892 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069905806 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070003981 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068255325 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068284628 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069430356 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067378964 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067477526 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0683475 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067853714 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069650059 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067896181 seconds)
  done (took 2.596264001 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078063481 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065510125 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085836752 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0662026 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065812224 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06808135 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070302051 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073797758 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067960813 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065574438 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073912439 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06786518 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068117224 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065540322 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06809975 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065671475 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067620215 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065732248 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073825954 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070479218 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070517208 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074162905 seconds)
  done (took 2.768688563 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080329629 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06759088 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082531477 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06888813 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062042608 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064093403 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06961332 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065635632 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069783632 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067604203 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065581047 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064045598 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069123333 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065468721 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069074296 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065760979 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067246573 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065759626 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06696019 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061634551 seconds)
  done (took 2.588421702 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088113512 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068052052 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066835024 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07521185 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066871209 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067250245 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074965289 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067342279 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06682138 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086857116 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066981127 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067147637 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074594537 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071719503 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066897515 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074945117 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074625839 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074503684 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066686269 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066717883 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086998653 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066909402 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075020916 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067008996 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067546164 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066584751 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0671522 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071674483 seconds)
  done (took 3.233646399 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067375056 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065349797 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063218886 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062811979 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063417392 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063405359 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062968075 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062956942 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065207973 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06345523 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065481953 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065376561 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065281875 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065623313 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065623511 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065472413 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065412361 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063088931 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063378366 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063339535 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065587044 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065737342 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065369615 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063306974 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062996094 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065903216 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062959696 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062992278 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065378016 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063132714 seconds)
  done (took 3.168695097 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076644098 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072820446 seconds)
  done (took 1.386916114 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063804479 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079360334 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063219028 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068904401 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069278088 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066408852 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073113057 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069654641 seconds)
  done (took 1.782196506 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081743859 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.0767115 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068391116 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080362789 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076126669 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082435 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132523027 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067178885 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072750619 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063957293 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079398229 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065298465 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072229478 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066071867 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071297081 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072327382 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063910891 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072336192 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.0685567 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064512858 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066998417 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074374238 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068268396 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061616784 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066783711 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087619773 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076632457 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067329586 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06850196 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073264152 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071215372 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060383107 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065874426 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066720361 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064402599 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075597223 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08097688 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068681672 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074362218 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066799897 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076677328 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061337931 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070339077 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072184738 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075426854 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065874711 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066362384 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060994374 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063498784 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067976515 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060993337 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065805519 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060479234 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075361342 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06929639 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076188583 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064457332 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067373391 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068604554 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068641633 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072342205 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067772814 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068272857 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065158299 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072383276 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070369947 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074685574 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061202019 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060500832 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064428306 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07546616 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088821284 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072155274 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066981806 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066870954 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063825222 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069216705 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067437562 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071579678 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072057363 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065861456 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071433521 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073460495 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06608066 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068788546 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074508373 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064168678 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068874975 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063975628 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082209664 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064630968 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06392408 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063698179 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075978403 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068816693 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065599576 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.0638215 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072473648 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059720703 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066304218 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066620245 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065872821 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07517916 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069789512 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070179816 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073474335 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072391335 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065574407 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067897664 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062018981 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066262905 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064494161 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071737254 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059184285 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067759951 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065827908 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06503011 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199742198 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065437169 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067146069 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074094454 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072262954 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065063298 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063545311 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069550513 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066012058 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069634139 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074184604 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064841857 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061161537 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061266314 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069693843 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066237082 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070976147 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071094059 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068901198 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06139925 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064421422 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072127992 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075593028 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066671859 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067358086 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07271028 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067615249 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065265547 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072700873 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068318876 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065178218 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072083846 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066779396 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061450026 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069360341 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069093002 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064882594 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070224053 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069960071 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068812345 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066905905 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065483313 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073478551 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067728268 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065563174 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066174674 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064644787 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076162208 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067690148 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062028085 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062678304 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076451506 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064419825 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065662124 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064786097 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068439758 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066765608 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064278019 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065810294 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068016539 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077296629 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070036646 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06774512 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071324811 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077269936 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065642449 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068986463 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065515541 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067502325 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06690246 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075617328 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071185742 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070661425 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068909365 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062880138 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07172414 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073241333 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065380261 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064072245 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065212872 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070221111 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071605042 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070328009 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067404697 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064310503 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066653447 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069277268 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068925123 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066117371 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065417985 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072736719 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064570238 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073278284 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06708903 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076172997 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070015267 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061633123 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069551383 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064039151 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071968829 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061457041 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063941931 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065448869 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066789091 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064821045 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068746099 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060069954 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072346641 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073251282 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065510345 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064533501 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065759389 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071969065 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066886921 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068809314 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068614419 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071274153 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075722695 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064472988 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068224834 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075061756 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065054267 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.190076331 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072928806 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066312607 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065832252 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066439498 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064888466 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070600489 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076580731 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073911136 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060316908 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069473643 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065111527 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065869864 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062119836 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071361047 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069688309 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068373804 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072957183 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067776981 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067820597 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069968886 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066995337 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067691041 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067895893 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069799448 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067765521 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069073663 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066323425 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07007737 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066023 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064885058 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068603518 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066889065 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06746329 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072208782 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066283396 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066345195 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069747705 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06701047 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067926392 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067174584 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066104862 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07004223 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067506849 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066798325 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068933017 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062003434 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07431814 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066469666 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07390874 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.0665046 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063265475 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074065343 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069058768 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072677106 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067614906 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067317215 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068456533 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066819512 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069523686 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073299117 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065020462 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07696699 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073901164 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067454582 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069262398 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067187972 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068062982 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06570307 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067207791 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067636733 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067284755 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065991031 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071158113 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068301229 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066348121 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067455402 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06658621 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065925924 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067188133 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060675046 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.0657499 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065467673 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065828047 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075464036 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066496218 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06553679 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064691075 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067004356 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064877829 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063021207 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074512449 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075641834 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066671276 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073372077 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065629317 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067959078 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076573131 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060351692 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064233604 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063502111 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063610415 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072773353 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066582728 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07461609 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065923344 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065110101 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062959328 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066549849 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064409014 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060101861 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06349189 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06860394 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06467145 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064278132 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065233757 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067409409 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065992382 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073934251 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064596765 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065706001 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065415836 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062247748 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06457724 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06422454 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.201844159 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068202162 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064300364 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06409953 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065957925 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067202993 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067550635 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066333259 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068796317 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075775253 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066851695 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069672163 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070529015 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061232158 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069165869 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066058546 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066066119 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065316993 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070743778 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069692115 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067386149 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075457764 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066893745 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067200362 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066923243 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06430638 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066349142 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066474101 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066836904 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065861436 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067502626 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075148212 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064726461 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069839745 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066588854 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066927278 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073105922 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067594409 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068970806 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072774044 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067069537 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068267561 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074251167 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070756398 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069841243 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067715188 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068456183 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072110796 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065862475 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072764391 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067437212 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067353307 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068231648 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064919938 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066261 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066364512 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06578763 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072374892 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066826233 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065318598 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06586521 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064100475 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067496094 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06971516 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073993933 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068626766 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069394007 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061956955 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06438994 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067888638 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064708222 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068306109 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068889502 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071813452 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068450551 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066638984 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065170382 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075750932 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072644837 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069816035 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064280893 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070258827 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067604985 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068697803 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067758425 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066581571 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068618077 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070168053 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068014536 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066036048 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07357578 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070333464 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067525107 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067835788 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067398771 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066961684 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062073753 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067250221 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068880653 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071616802 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068708819 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066201205 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07648123 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063907153 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066416017 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069325125 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065357809 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070512501 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061128353 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06760711 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067126654 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066896573 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061015991 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064699617 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063380298 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067493638 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064200256 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060335189 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075037231 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073731979 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067977245 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064103788 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063950755 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060490938 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060448832 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.198627578 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067859164 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068949552 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076980545 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06669852 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065837663 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062519959 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066195918 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069694951 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069711702 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064204793 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062177301 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065846114 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070299212 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072571157 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065517462 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066752921 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069514172 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068777291 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063946822 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070126848 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063632774 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070916692 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080037156 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.0680911 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067575726 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07281879 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074032952 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067746521 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061768534 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06771119 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069624193 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067220943 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06806527 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06803238 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082290585 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069366007 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065229248 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065390784 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069743328 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065493974 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074211863 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067501879 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067263041 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070563264 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069018154 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076161202 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069259355 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074702778 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069584345 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069648554 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065512022 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067128078 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064692684 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065310275 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067693695 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067150545 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071930292 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074495575 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065749641 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077092248 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075342075 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06819938 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063371334 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066473882 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065977704 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062065408 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067533526 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064111508 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065112003 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06434105 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.0650636 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067350724 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071161375 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066964317 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06689473 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065809678 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060673928 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068781949 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068825655 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067408817 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063677972 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066062474 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066916514 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069862194 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06937664 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064178442 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067419033 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06761783 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066779617 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061546356 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072528838 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064933001 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06786031 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065404747 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066224382 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066971586 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069375577 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070973002 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06723675 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068135648 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069446475 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067941703 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063410402 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062905544 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070717673 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063615024 seconds)
  done (took 42.45805402 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100898469 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063308899 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061595678 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062335133 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073280492 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063017206 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062096953 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062686339 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063232475 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065237656 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062087877 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06196734 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07088351 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078309342 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073649006 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066404172 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06186534 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062837835 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061800229 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062738117 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071304569 seconds)
  done (took 2.741803563 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075161485 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070002636 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0732939 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076535642 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067023025 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07011491 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072426555 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070198565 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075622263 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066741729 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075935788 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070351604 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066715073 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066597818 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067108373 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070799416 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075653844 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067002327 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070689182 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080912248 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07051243 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072232481 seconds)
  done (took 2.880358735 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06615422 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065467256 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067019343 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061369663 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065889513 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061417239 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069303421 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063505839 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068991883 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06532777 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064728055 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065025626 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067618585 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061187491 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065476671 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063643337 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108910706 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068961469 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065441956 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066457786 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060988499 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067294567 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061433775 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061761674 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064422264 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069054355 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066053989 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063960995 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06530954 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064674107 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065455372 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063046591 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067274138 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066123383 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064707621 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064620627 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065274501 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065788612 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061600903 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063639399 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066279982 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061313663 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065835333 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066926074 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063582799 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063243209 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06698193 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064870398 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061210793 seconds)
  done (took 4.534596233 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081040691 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108016079 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067736821 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088163623 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079932331 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075279591 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069038121 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089016798 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063003172 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064275351 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081089363 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079610174 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065701634 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06990879 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072128293 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065745013 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066489409 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064788208 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069775389 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064985167 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069619247 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072419205 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080115336 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078659221 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069305582 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064926535 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064973637 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069705263 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078545806 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069865333 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069905964 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070543242 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080716493 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070843219 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064786532 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067241414 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081108934 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065469473 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067545305 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063352836 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06729853 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069704127 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071998115 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081510829 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065918938 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070467845 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06538198 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062562694 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078457271 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068023017 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073171156 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079454816 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069095045 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065380826 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069699296 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079747243 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065168096 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063642899 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068346755 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077853319 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062805914 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069195233 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07901416 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066978749 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072375166 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079160329 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070340623 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068998192 seconds)
  done (took 6.335065684 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077306099 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073232778 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081172205 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080596354 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071742226 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072319742 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072057448 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072015283 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07182909 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076863678 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07200349 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092731966 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067449474 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074770678 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072854945 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072091862 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072184957 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072071979 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072193845 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072186412 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072097109 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079656277 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071959158 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079652288 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0981967 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067406821 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071915401 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071955247 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080515254 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072542158 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07950338 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072136128 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072299461 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080241972 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078897993 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071762613 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064834199 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072003482 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072255281 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071985439 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067283837 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079985606 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071618089 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067157819 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071833724 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071720472 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.0796379 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078670003 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074441502 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076347842 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071687236 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080188411 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072105774 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071795063 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079636683 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104574127 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079348381 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079689796 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072085623 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079618167 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079450354 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085780501 seconds)
  done (took 6.019835919 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082853223 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074481722 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075906178 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061201315 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063766839 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069316213 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06384065 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063842881 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074231852 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073955081 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076437538 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069455979 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072506647 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07690499 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069661155 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072419996 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069508844 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069671338 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074280455 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069399134 seconds)
  done (took 2.760726029 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075889647 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083701964 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066568128 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071948574 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068160276 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07171867 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067879178 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068748884 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066620766 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068664824 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075532027 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075939624 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066526331 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071864766 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075486309 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071635432 seconds)
  done (took 2.47515931 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076840309 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072571794 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079164915 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066720203 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063657748 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062384423 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065796847 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061095434 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062267674 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077281185 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065812386 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067925152 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065580736 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064577303 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062777463 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068420671 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062342083 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063199778 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066220493 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078377956 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076216882 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064302569 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066491343 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065639641 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065623069 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070533495 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065114132 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063301477 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062960544 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065755488 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066115381 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069282336 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062965988 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063573209 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064558672 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063228171 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065419178 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066329648 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068340734 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065213505 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.0639105 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065506691 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06529903 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066336542 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061884792 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065940609 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061982345 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067991928 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063463166 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065538527 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06568671 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067920386 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065845272 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07243287 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068512433 seconds)
  done (took 4.992149975 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080364981 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070299982 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061513923 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063911397 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068429509 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067519548 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069035089 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067446481 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067339084 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064077964 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067451128 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068714168 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067222517 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068987067 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06737411 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069416607 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061696436 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067293183 seconds)
  done (took 2.559483961 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072327172 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066333221 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072250885 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065778121 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066134624 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067867759 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061638681 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064672281 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063983707 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065802763 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06551156 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068008197 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06419062 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06780276 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065631982 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065497869 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067873187 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064416352 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065747315 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06200094 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067778562 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064320288 seconds)
  done (took 2.79039957 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073564589 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091263911 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137389026 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083011915 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08132338 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078164562 seconds)
  done (took 1.880858882 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092235201 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079039868 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066338131 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087878852 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073449533 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067142517 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066961212 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0675148 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075938426 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076004467 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067738996 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076329954 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076174142 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075603482 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073236988 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072874858 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067476135 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067287155 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065974821 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083944904 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067261557 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075718679 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067459029 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066786627 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06719602 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075121843 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07612972 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075822579 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067055857 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075841379 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072772419 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067096913 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075991126 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07588939 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068863974 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075894176 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067064254 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08425159 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072984579 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075312582 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068440633 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073585253 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075827388 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072083871 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07558576 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067481504 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072189148 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067582159 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067764076 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0858496 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072999245 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075209405 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073319753 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076101834 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07589661 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085856711 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076380445 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075304964 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073364504 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078791416 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074928792 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072846588 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074844516 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076486327 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073344835 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0753004 seconds)
  done (took 6.206867703 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084244011 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087760468 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068911197 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076235164 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075567391 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067393251 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067638556 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06740789 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067426721 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06711594 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108205309 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06793294 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075669732 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075924423 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067905391 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067658609 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067422299 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075297145 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067111221 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086472774 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06751053 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075720483 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075803673 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075325444 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07646922 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073304264 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067395261 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067418994 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067574372 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067250644 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072346177 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067946182 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075423417 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067226801 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075556202 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067747686 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067630768 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072264751 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06756288 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073237409 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076225644 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08366811 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067408851 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067097395 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075943703 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067028487 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067652449 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066849222 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067207636 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067242971 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07619847 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07623857 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076619932 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075836246 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067719534 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067901737 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067850907 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068052307 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068144555 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073394926 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07582295 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067523356 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086408617 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06747444 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067814549 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075473543 seconds)
  done (took 6.131532217 seconds)
done (took 128.360230445 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186985808 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168376775 seconds)
  done (took 1.6843735 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071567338 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098832878 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077188969 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128120585 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066737136 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100119536 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099202631 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077738026 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06600962 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066177942 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066141824 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068828027 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131518911 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066131712 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066004037 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068492363 seconds)
  done (took 2.663820588 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100280102 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.15764322 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099398155 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065139779 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097417896 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072949235 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065189069 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075079328 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070813073 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064908887 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073227759 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070452543 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065159274 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070619024 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070862647 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072923559 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064996163 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07276927 seconds)
  done (took 2.779082303 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104783884 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093531363 seconds)
  done (took 1.54896603 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159824926 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105089391 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150831367 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346784943 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168296777 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229702161 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127437293 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126916834 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.122822988 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123530621 seconds)
  done (took 3.008288367 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099919825 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151963178 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255440005 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115313862 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072301927 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095084958 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116915856 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077842697 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081106412 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080549156 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080287008 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076580087 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098541267 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073329981 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073280056 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075901668 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.1022094 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071998375 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073786196 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076538359 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099157371 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066096074 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073691114 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072241324 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077363012 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077645046 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065576522 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065468597 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076733796 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074309998 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076966604 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093618145 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077093245 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106970212 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070197745 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10854319 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076938252 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073811408 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073864561 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073759293 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078881416 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078854947 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072318985 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075477582 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065046979 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076295903 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065082461 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065270415 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07771055 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066302469 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07802349 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076666706 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107039057 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066596617 seconds)
  done (took 5.956407677 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103386171 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105403613 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0720184 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109135591 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097260499 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071471053 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103191505 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091500711 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102334933 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09277255 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088882875 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071197114 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08252526 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08338528 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110369748 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102156678 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095644941 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070736999 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102216087 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102754586 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068713557 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094711657 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091371222 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10211786 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067671628 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069976777 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067914766 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070339399 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077167325 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078223398 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070664821 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.10225696 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084693239 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078530155 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067043827 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067906775 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069084962 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079195876 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097739092 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079183349 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077960369 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067308395 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067594577 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069455782 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090607122 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067597291 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07899287 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080367614 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078666522 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069366689 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069920777 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06772473 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069220896 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079819884 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078049571 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080594067 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079908272 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068111145 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068410027 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071656099 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080870754 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079394117 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079315497 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092414923 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079087718 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068167699 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080629906 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084594065 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.0685123 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069997174 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068682599 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06987621 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069505216 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078534377 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078311772 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070326444 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069926057 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068905349 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080853175 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078839568 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06868319 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077936587 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067313565 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068850697 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069863837 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069944993 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07776756 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079604546 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069817531 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067495745 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068744438 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068129297 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066363678 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076027066 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078618063 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078012342 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077739399 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068671274 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077969542 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077764991 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068807431 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077933327 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.198563849 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071538583 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071473469 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080267856 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078991141 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.0802839 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070602573 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069084566 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079249904 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081546343 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069366151 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078944915 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08154321 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07941992 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069234791 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082315216 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068840405 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080184156 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070789595 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080812547 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069645837 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080335408 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069173361 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069026258 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069575821 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080498627 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070862673 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068595337 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070226036 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07012669 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079948202 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083927826 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071648762 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082486472 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078918311 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071189804 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080261146 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069001278 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07967604 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070306724 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070627105 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067212859 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082304009 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068824681 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068285055 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069757562 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080808123 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069152547 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080321365 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078451542 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068005811 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082222537 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080625251 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078445653 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080326706 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071141114 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068872376 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068358814 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069386934 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078566616 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08095494 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071456616 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068642676 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077844586 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079374687 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067058708 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078014969 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078300845 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078841264 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06881547 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069803577 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080393695 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081218882 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078729262 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078114717 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078640005 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068684615 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077504138 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078553673 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068358012 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085070815 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06836529 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082367025 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080163037 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076968749 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078907572 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080747383 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080666355 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07993703 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082165666 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067682484 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067754165 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078559789 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067640068 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068782773 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07755641 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069075458 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069056544 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082035637 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06743956 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078471098 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066777904 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077500685 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066400195 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068985777 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.2147737 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068872454 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071061406 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080006296 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070610968 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079002421 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081689852 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080134946 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068620514 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071792734 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080439091 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079721472 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068274041 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068954513 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071703063 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078807545 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078167649 seconds)
  done (took 18.819262142 seconds)
done (took 37.819011606 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209754822 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151062826 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179777694 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118694865 seconds)
  done (took 2.109227583 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122890426 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100602624 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094983356 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064629556 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102162339 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064873988 seconds)
  done (took 1.939923885 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.31600924 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213517456 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183036476 seconds)
  done (took 2.100623702 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198923554 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.1875456 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.394521796 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253658296 seconds)
  done (took 2.532615972 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143774187 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08930726 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066745278 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082696106 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135062658 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161936727 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101508618 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126540157 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077805734 seconds)
  done (took 2.425238264 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147696648 seconds)
done (took 12.643611693 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.203176546 seconds)
    (2/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101664457 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.128680838 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.174146993 seconds)
    (5/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.228507357 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.106619771 seconds)
    (7/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.224470803 seconds)
    (8/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.095387469 seconds)
    (9/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.171895717 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070983249 seconds)
    (11/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077006641 seconds)
    (12/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.194750922 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077078025 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174685942 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072475195 seconds)
    (16/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.167428302 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.119644861 seconds)
    (18/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073064538 seconds)
    (19/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.195579077 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.141313472 seconds)
    (21/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051402738 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108468373 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.096320544 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.094336469 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088368457 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070544814 seconds)
    (27/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074410709 seconds)
    (28/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.177313225 seconds)
    (29/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.160416352 seconds)
    (30/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.108517043 seconds)
    (31/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074844218 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.0712322 seconds)
    (33/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071688952 seconds)
    (34/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.151960652 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091098827 seconds)
    (36/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.089169395 seconds)
    (37/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.177879444 seconds)
    (38/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080365323 seconds)
    (39/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072056368 seconds)
    (40/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074921773 seconds)
    (41/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071639088 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064906532 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089548533 seconds)
    (44/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072653123 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.095294644 seconds)
    (46/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076714312 seconds)
    (47/309) benchmarking ("sort", BigInt, false)...
    done (took 0.190847953 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088589115 seconds)
    (49/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.217161283 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111314659 seconds)
    (51/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.172693429 seconds)
    (52/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060205924 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072747783 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070231567 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072118704 seconds)
    (56/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.148144147 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06529269 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064699744 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06481936 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091408743 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067110268 seconds)
    (62/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087748508 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.099796805 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118746699 seconds)
    (65/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108811488 seconds)
    (66/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.18054698 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.171801289 seconds)
    (68/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.106761072 seconds)
    (69/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070447952 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064785812 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051108132 seconds)
    (72/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051877026 seconds)
    (73/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.158647676 seconds)
    (74/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.154574628 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050996424 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086627525 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.147783895 seconds)
    (78/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.148289548 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.0655513 seconds)
    (80/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089487389 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07089023 seconds)
    (82/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07468379 seconds)
    (83/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079178541 seconds)
    (84/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071467549 seconds)
    (85/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.233376868 seconds)
    (86/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.18084687 seconds)
    (87/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.140152357 seconds)
    (88/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078497571 seconds)
    (89/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052854925 seconds)
    (90/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.207327151 seconds)
    (91/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072317018 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126934654 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072453774 seconds)
    (94/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062222634 seconds)
    (95/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.140071279 seconds)
    (96/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052124449 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086418099 seconds)
    (98/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051749314 seconds)
    (99/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089338592 seconds)
    (100/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.144744822 seconds)
    (101/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065197851 seconds)
    (102/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.158731701 seconds)
    (103/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06997059 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072902403 seconds)
    (105/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069640681 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090443729 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066827997 seconds)
    (108/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.36789863 seconds)
    (109/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.111280824 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138564696 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092103644 seconds)
    (112/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065243876 seconds)
    (113/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088879195 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138591532 seconds)
    (115/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051596255 seconds)
    (116/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054394402 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06581937 seconds)
    (118/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076371666 seconds)
    (119/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076240295 seconds)
    (120/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.147776021 seconds)
    (121/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087481559 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136773322 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.195269155 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.133027026 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072934041 seconds)
    (126/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.170554233 seconds)
    (127/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066450087 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093330672 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.152137172 seconds)
    (130/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.179857886 seconds)
    (131/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073816605 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070669873 seconds)
    (133/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069995145 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072362788 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176057779 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.17379854 seconds)
    (137/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053127007 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.182313098 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071676285 seconds)
    (140/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068823539 seconds)
    (141/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052350569 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088892751 seconds)
    (143/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075200952 seconds)
    (144/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069638965 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.096897484 seconds)
    (146/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075875652 seconds)
    (147/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.184619463 seconds)
    (148/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069087525 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065007963 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071685141 seconds)
    (151/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.182377163 seconds)
    (152/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052444543 seconds)
    (153/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052392615 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144112077 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.149466422 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073465286 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065243374 seconds)
    (158/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075074388 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051266398 seconds)
    (160/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.149328955 seconds)
    (161/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.104997947 seconds)
    (162/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072749269 seconds)
    (163/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087259583 seconds)
    (164/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.097848343 seconds)
    (165/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052274973 seconds)
    (166/309) benchmarking ("sort", Float32, false)...
    done (took 0.127042728 seconds)
    (167/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051248406 seconds)
    (168/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052111605 seconds)
    (169/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06668152 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128316346 seconds)
    (171/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051901014 seconds)
    (172/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065439278 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.075263481 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067814046 seconds)
    (175/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065217822 seconds)
    (176/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072312401 seconds)
    (177/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060614927 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078508416 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069969855 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052395689 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08934315 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136654767 seconds)
    (183/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067492957 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066862039 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05096958 seconds)
    (186/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052008354 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064551574 seconds)
    (188/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05351695 seconds)
    (189/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.102571054 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071493152 seconds)
    (191/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.223815846 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074643899 seconds)
    (193/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067136808 seconds)
    (194/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065001171 seconds)
    (195/309) benchmarking ("sort", Int8, false)...
    done (took 0.14204301 seconds)
    (196/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052871208 seconds)
    (197/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.186340882 seconds)
    (198/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073186677 seconds)
    (199/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.09896745 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06713422 seconds)
    (201/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051636039 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091126475 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066337403 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051824779 seconds)
    (205/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053035769 seconds)
    (206/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.096111522 seconds)
    (207/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06789077 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066526653 seconds)
    (209/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054024806 seconds)
    (210/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052481733 seconds)
    (211/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062695113 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054994509 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066841706 seconds)
    (214/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.151067002 seconds)
    (215/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173253422 seconds)
    (216/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063766651 seconds)
    (217/309) benchmarking ("sort", Float64, false)...
    done (took 0.127201707 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075041054 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072251276 seconds)
    (220/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052010682 seconds)
    (221/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078607878 seconds)
    (222/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068293026 seconds)
    (223/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080977155 seconds)
    (224/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051520086 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114354635 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065252699 seconds)
    (227/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051063899 seconds)
    (228/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11850334 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07121782 seconds)
    (230/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051894323 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064966732 seconds)
    (232/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064829189 seconds)
    (233/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076966753 seconds)
    (234/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051408449 seconds)
    (235/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072543075 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138204719 seconds)
    (237/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052251292 seconds)
    (238/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076157479 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092599178 seconds)
    (240/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066307051 seconds)
    (241/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066279397 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051441313 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051833117 seconds)
    (244/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075007345 seconds)
    (245/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065195831 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065345673 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122003647 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051905847 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055550819 seconds)
    (250/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054935461 seconds)
    (251/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074620196 seconds)
    (252/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052960385 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05439396 seconds)
    (254/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081082493 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182740156 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067207391 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097871493 seconds)
    (258/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062232676 seconds)
    (259/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108640338 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.102453581 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054126587 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068051827 seconds)
    (263/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074681706 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052180964 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.0717205 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065833056 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051563482 seconds)
    (268/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051685972 seconds)
    (269/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060897419 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088244074 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072705531 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06725406 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089428803 seconds)
    (274/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.05098448 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137621367 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064927217 seconds)
    (277/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071783298 seconds)
    (278/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072732747 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066405081 seconds)
    (280/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052377397 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.08806087 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095541133 seconds)
    (283/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066359902 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072313279 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141386467 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107019823 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063925849 seconds)
    (288/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070969223 seconds)
    (289/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066863054 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063792949 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072641458 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052875009 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067152014 seconds)
    (294/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079665664 seconds)
    (295/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071780898 seconds)
    (296/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050951383 seconds)
    (297/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051973288 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13161748 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070031639 seconds)
    (300/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064731035 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176319905 seconds)
    (302/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071387772 seconds)
    (303/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052449211 seconds)
    (304/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065733479 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070530382 seconds)
    (306/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051290116 seconds)
    (307/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068295182 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078383842 seconds)
    (309/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053538705 seconds)
  done (took 30.528067589 seconds)
done (took 31.925967258 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087746049 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093032373 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074328759 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09237708 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081015141 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076156871 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072191953 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077919632 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079336617 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080943425 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07775053 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054749376 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073697936 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073670623 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074145743 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090702004 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077637915 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072231737 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072310036 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064337698 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072516901 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065500516 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066715352 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054433683 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077306901 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07115791 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072392354 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07370818 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065793352 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06532601 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068438203 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072967572 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065469948 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077646531 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071833589 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072340621 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074353061 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075799427 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067585344 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065158962 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073222683 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065490051 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072240108 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072619967 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071241864 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070656947 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072723661 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077452057 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090712799 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067614011 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073439441 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075157504 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075766598 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07186695 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068986354 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072911154 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070137438 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090698444 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073335209 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067550099 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073429695 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073179887 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070681074 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072214048 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072534497 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07439239 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074600064 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070994962 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073826217 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070535419 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064937225 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072088878 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068319912 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065232246 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074977196 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075895465 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064157634 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070696857 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071985336 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070473163 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064603068 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066921195 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066769495 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070956974 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067054762 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054411013 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068751762 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071116325 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06429397 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07254929 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071105415 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071738285 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06655083 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074604891 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064357103 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.06991164 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065049338 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064812828 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06650673 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068737043 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065028592 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067224832 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073644112 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066659452 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071351103 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079018544 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065437009 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07099072 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06431547 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064524096 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079185818 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074172371 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065224381 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067240931 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064175529 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072040497 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063891046 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064752373 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06470773 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065337986 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07085357 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06525144 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066776012 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071469833 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076584203 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064215794 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068083545 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066548806 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064248638 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069376374 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064107259 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064096538 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201602412 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062609075 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068631618 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066802531 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072730257 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068113798 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072610881 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066605556 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073242409 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069765353 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070967577 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071629265 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064217603 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059003237 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067525931 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067598585 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067858493 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066131142 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067085226 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066365129 seconds)
done (took 12.393436986 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068653156 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146143426 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098399435 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095352291 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085773428 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066404232 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076024773 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101685906 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067467497 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102394312 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087080803 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084752349 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112772489 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064433659 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065511984 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069144663 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066922348 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081251876 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100635413 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085965332 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116134139 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065492572 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09403655 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089756586 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.0873397 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101674479 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066553163 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070246266 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069191816 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091121273 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08614177 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069665907 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066447215 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100320664 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092582889 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083253245 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066108837 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082153272 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067018665 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065799425 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067107669 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098501986 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079919244 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080138354 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069863669 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068644526 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067039854 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083681139 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089070149 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078793999 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086678392 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102497869 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06826758 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06533033 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064532592 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085313609 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065177354 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068265706 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066136603 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067957854 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065833247 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068984363 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080974517 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08168906 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069719551 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080087939 seconds)
  done (took 6.786383752 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086520325 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091512219 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082703976 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083510379 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065405021 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06600424 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066402976 seconds)
  done (took 2.037240381 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069240711 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091235627 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088550257 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089285918 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084917104 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087151762 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075369016 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066512603 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080539871 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067051458 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086857524 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10172591 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066817116 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072671848 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090462765 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066120312 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090121778 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066844641 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069195262 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090043209 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068325298 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082179883 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06960396 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066760021 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081135639 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066284995 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111937366 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070436162 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06761514 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06919029 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064359137 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106841604 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080182282 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075555288 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066053993 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081246437 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080618026 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064494662 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082684235 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071356595 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079848899 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066296354 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067030914 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064425366 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070557166 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076456067 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066780776 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066714527 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068754622 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085816291 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066972506 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079542308 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069310389 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068707163 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067490436 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070618276 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075776869 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066968622 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085837782 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067579689 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08245573 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082215821 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079764546 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082271696 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069274132 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079977938 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08060923 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068476792 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068145514 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069534891 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082498527 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064736484 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067730621 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07698082 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068541272 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089047754 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08924563 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068092562 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075727436 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066955913 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066590988 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066555144 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08919294 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069481761 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066552505 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070545107 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069859759 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065560618 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065837209 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070448003 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064853711 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068045947 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070154632 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069677007 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069029249 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082933822 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069260308 seconds)
  done (took 8.748571769 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070965239 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070869873 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071034443 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068231123 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068855094 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06783554 seconds)
  done (took 1.933791502 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097855864 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071097263 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080882407 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072282037 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10482205 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086657035 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087206509 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079192298 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083691913 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07863671 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086524461 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088846429 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092929989 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072758182 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.0866169 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072274663 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086977949 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075913606 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078581288 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073035592 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086988007 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072707096 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073625275 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081975351 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07600217 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072532775 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067778464 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079290844 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078532951 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078812621 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072471836 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075929219 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070749631 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078695061 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086967405 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070549785 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072023507 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077400861 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072799735 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075529953 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087829619 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072857058 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074662315 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07709808 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078797768 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070659291 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07747481 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076032779 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08666982 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07696935 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077387531 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071677978 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075070991 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077156561 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070630807 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078450789 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07744515 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086753678 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07282576 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070723525 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069374208 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075910983 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07790235 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075881823 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079163688 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077098953 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070890637 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07253754 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073091361 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072342172 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077219415 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069350831 seconds)
  done (took 7.097681363 seconds)
done (took 28.085162857 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.547772162 seconds)
  done (took 2.027283951 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.609221707 seconds)
  done (took 2.1165168 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.596394316 seconds)
  done (took 8.098504532 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.412152876 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.485980964 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.697778792 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131825652 seconds)
  done (took 3.281866817 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.680894248 seconds)
  done (took 2.19943954 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.217161732 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201031949 seconds)
  done (took 1.945268382 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.384759612 seconds)
  done (took 1.891886291 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.121590099 seconds)
  done (took 2.630460515 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.271357533 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.167192733 seconds)
  done (took 1.95303078 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.479829522 seconds)
  done (took 1.99139789 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.877931178 seconds)
  done (took 6.391010097 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213041229 seconds)
  done (took 1.772749296 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245600532 seconds)
  done (took 1.759218693 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.710044412 seconds)
  done (took 3.224325751 seconds)
done (took 42.795222526 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082992318 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080476441 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081082035 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078264678 seconds)
  done (took 1.823221543 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079326541 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07420241 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076354105 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072156746 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076611096 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072687595 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073707963 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076933748 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072319898 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072587182 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072034133 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072361321 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074909221 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074058409 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071280804 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07507624 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076164736 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072163208 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075266939 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072563981 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070642067 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074317891 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074903203 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071676628 seconds)
  done (took 3.293263558 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080103135 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074924996 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075586253 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073355591 seconds)
  done (took 1.830006545 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080525727 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095570272 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.0890917 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076897975 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092356579 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086468384 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069017097 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068665093 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072989958 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076849982 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067615639 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095770381 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08796918 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076880782 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078782858 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065779321 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068250806 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087288528 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077391789 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077284178 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070063599 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076747534 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067778611 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088044831 seconds)
  done (took 3.41184124 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080933494 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106191819 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077194699 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087206871 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.08997784 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064914715 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074261044 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088771273 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12285824 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065415548 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069915089 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065631951 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.0721553 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064986155 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07579165 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10474262 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108068062 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068342173 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095561784 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065446178 seconds)
  done (took 3.177339859 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075490874 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071307028 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06716932 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069269624 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078824465 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072338566 seconds)
  done (took 1.966382294 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070838528 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06958383 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06857949 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067052065 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071894178 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06730121 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06569913 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067183361 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06685655 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066694931 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066941234 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066027225 seconds)
  done (took 2.341911599 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.436012587 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068424586 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068463672 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065667319 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070637366 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065887825 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079698946 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067587878 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090535512 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066489439 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066334328 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068521416 seconds)
  done (took 2.741698782 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211488713 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07657739 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237279148 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137035851 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111531827 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115789103 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103707522 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112802401 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143882232 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102108159 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168379413 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166548003 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106917583 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13729814 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088764065 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097905481 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15620456 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162737723 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103733397 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165558611 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14405532 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124507186 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146805697 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101549586 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106401716 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122455411 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07090885 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079616864 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171095581 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131606188 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146940943 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111036221 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093593386 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177152556 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170312962 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141961174 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133484702 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083259697 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101869738 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132452039 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198157996 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088060056 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162698137 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246474655 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081633793 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133548312 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121540404 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119261421 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107181707 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089347241 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146337792 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18518922 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141876555 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087448376 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112507858 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115787534 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116628946 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103029895 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181262691 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16043863 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128940089 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071371231 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099208566 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153345683 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132439377 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108807036 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126130942 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093361503 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135189572 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154297744 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11854222 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143545756 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128542679 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088508822 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11869157 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13952052 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128222471 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170526666 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124417368 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072854379 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125865688 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103322348 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08071654 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141818339 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074747346 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17433717 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097979632 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105786512 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112621338 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108717888 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109147926 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163196716 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143362824 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245620925 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065660766 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103572102 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120878381 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149146154 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087174485 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108185607 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1169698 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077510881 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14092343 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074640385 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123538434 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075336065 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126163062 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132147161 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075946669 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121772495 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101182902 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100211374 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133408072 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160486045 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089433343 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08176916 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16696414 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12220547 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103797218 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143542502 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15592281 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099003437 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102263667 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150302416 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179373989 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089316181 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162427894 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107068684 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083479279 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087347622 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12398922 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112164785 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121914948 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081815667 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118718465 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168988677 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074104977 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094993062 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132374449 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078566938 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080207942 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103345374 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100219404 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094457027 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100094984 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104228599 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137325583 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122822001 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104017058 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269687885 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098701652 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171215816 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088610191 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100470465 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102758875 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070257396 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138559705 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15705616 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079577286 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164647329 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12385612 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104971587 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119168148 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082901501 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140498664 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078985911 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069894562 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144229538 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111469978 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110555125 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150994345 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104879714 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128960282 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.123835535 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140264661 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137114642 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.13284557 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108280833 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089237636 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111811252 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124799319 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072350192 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091047599 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080202672 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103713196 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095829339 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082890611 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142837507 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125444994 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099832191 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11228671 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096572966 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14725337 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076201179 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128255671 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118504041 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093484158 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151796044 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152040356 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130858975 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099161348 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144323878 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.06992021 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07323277 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088281061 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12110723 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081603884 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081787781 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113939898 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142937008 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125874331 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13320066 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108866191 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117574206 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151022186 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068450099 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11304668 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14298917 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117764581 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10317436 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088045861 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.096583182 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137022593 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101863031 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168726226 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109148553 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11971539 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145058332 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.095010127 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082938262 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099501806 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127885598 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098289641 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136266417 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095345239 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083347302 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104529751 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071045489 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09451324 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12084981 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113758017 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127120141 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.109294898 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12454958 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073675447 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109507634 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114101775 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115413524 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06205018 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112611737 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149906281 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089582975 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111813142 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144701693 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076971221 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.11874279 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.427313392 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149900362 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089556607 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112652722 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11992309 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129137018 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122452027 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141444082 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10915477 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136839309 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110509768 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086412464 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087448513 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097948483 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105557639 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095441306 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108826833 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116163382 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095104529 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133305446 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102998973 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10938562 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118084503 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097084727 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089407471 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09686062 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17543664 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119298565 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171433412 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098276815 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147288493 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165250469 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07438345 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078991172 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077827368 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139811965 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083537115 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130830452 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097134988 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105293048 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124066948 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142228411 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09535634 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06808635 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107844695 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13417871 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111358107 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097203355 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106270801 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16229244 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100258837 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079388678 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113547253 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103920483 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102470257 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172488441 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.20791628 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097397243 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076367078 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081969484 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127989882 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15357089 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081490235 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103079256 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119356826 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110316762 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127527355 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101321005 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099230543 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113740721 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149487789 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129724227 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090042267 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112594303 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130312879 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156854712 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105382414 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096002617 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171759395 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152269798 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16196679 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089057334 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131481968 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114663669 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108437287 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139738138 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083553098 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163941267 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081839405 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136185991 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104032715 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090044017 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130326604 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098421598 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088172177 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147924567 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11781764 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082235476 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077617026 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117508706 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118893987 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105111685 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075076437 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138867061 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072773791 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13193262 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16807949 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080773904 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103733292 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.243339559 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079778119 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108207626 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102613231 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090296339 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099582814 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174281371 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089184936 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150571147 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14171342 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113608588 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137665399 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100082438 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635781558 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07773061 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152121052 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116955158 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172536697 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097267449 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117543884 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108950636 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123276287 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144453293 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105204355 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179860733 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131896461 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116310796 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07969743 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102627855 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102880365 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088783235 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105307696 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113658589 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116743206 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094249408 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115719253 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123284323 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082008011 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094772406 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155682446 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117243404 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144807947 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140557573 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084175286 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116347477 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138078705 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079326451 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121965678 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153303099 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106511291 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097308474 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080053392 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.249327901 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173187456 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074234904 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164254117 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120930713 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109961178 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113129624 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115016193 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131609829 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108065013 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121700991 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093055793 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109856081 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112058335 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082036123 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076504244 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103881124 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112057243 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097148302 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098202991 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.0978767 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151311354 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071210063 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095542116 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103313477 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145530967 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174338258 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087782951 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082368115 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118820805 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112915422 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113778281 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120399764 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079499672 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081867828 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081981618 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076912162 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10820494 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112105612 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103788726 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111306962 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164037539 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082392817 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224810184 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095029868 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104281141 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069465593 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078585653 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095908914 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09732325 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107900732 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099668819 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168398726 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094173841 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089435363 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092466515 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073000015 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082515859 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274534528 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111090723 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119416694 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097740183 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062920225 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10917679 seconds)
  done (took 58.655552516 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106869902 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084783528 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098484901 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149655584 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122305179 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212666212 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156740991 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199399143 seconds)
  done (took 2.799242502 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070666607 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097457927 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102706952 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084353267 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069152177 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070942319 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225370037 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079740592 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066031271 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088708502 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078243364 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068031215 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.426609337 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068352692 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069319645 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063075471 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066832024 seconds)
  done (took 3.45422944 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.372660447 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.363680535 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371574495 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072475383 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.80591935 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088497906 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.07560672 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095798612 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070638098 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.267741052 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703001188 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.09172964 seconds)
  done (took 14.05017831 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07888761 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071924744 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086733912 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086086655 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074715777 seconds)
  done (took 2.064042541 seconds)
done (took 103.158439706 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083585867 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.413156153 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055884137 seconds)
  done (took 2.164440924 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085222796 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087583437 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087455408 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085205066 seconds)
  done (took 2.019203374 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077093379 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078659302 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.086525026 seconds)
  done (took 1.90923262 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228948085 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140515405 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087087159 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084483268 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079850309 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078325051 seconds)
  done (took 1.918601228 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074902403 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077283046 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074527155 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078169363 seconds)
  done (took 1.973232311 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078821814 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054492916 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056842616 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058101792 seconds)
  done (took 1.920477376 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090085241 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080982802 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080094049 seconds)
  done (took 1.923791106 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109463274 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087321832 seconds)
  done (took 1.866334213 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085001209 seconds)
  done (took 1.759463035 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102079505 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.117130772 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131969768 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113245826 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143702734 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112518603 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088480369 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089679124 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079601891 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089151554 seconds)
  done (took 2.739513698 seconds)
done (took 22.402590263 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081738813 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372588686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360666445 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091281784 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671753334 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359035333 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98038155 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093026743 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114272923 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068108552 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08476111 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647900059 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.969000578 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325755257 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.955661509 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.415704078 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650555376 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067897391 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067149891 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067461726 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965556325 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067319814 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06781608 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068032612 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649235011 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370891879 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067923977 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.417568812 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067547712 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069288044 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35490574 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067968192 seconds)
  done (took 16.334574648 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.0737127 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121862089 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076101218 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088185434 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072344459 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072415322 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073841562 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071813997 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123282894 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07018193 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086977508 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068981586 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071692289 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068092437 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086763957 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067908668 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068643987 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068616087 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068318221 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068475196 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085947274 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067357412 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068218814 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068583452 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067207512 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079280973 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067976844 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067451337 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067976571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06969383 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070878897 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068752631 seconds)
  done (took 4.104567965 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117778646 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127032058 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074147712 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103369106 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113126874 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069931206 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143270048 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092335679 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127068358 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068054049 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084491459 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067952521 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100728789 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068688737 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087695074 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068477127 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068717485 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06845359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068299807 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068548828 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086966535 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06813484 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068283318 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068539182 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068476752 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081634475 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068553486 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068496495 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068274701 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070221809 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071379784 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068734998 seconds)
  done (took 4.332710293 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075116237 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077414015 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08271705 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083924114 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071890284 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074202769 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072360243 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070834728 seconds)
  done (took 2.299450969 seconds)
done (took 28.748733513 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082262633 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071447064 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074110786 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082071615 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075003444 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080273272 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069164896 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074695305 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071722668 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072564995 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074435782 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067658759 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070676853 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06710647 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073159156 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067698996 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079069054 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071985995 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079184804 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07918438 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069416444 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072519105 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073797093 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078628008 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080269935 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078755931 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07686206 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072476687 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06886995 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070744469 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07641823 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083669781 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068856293 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079232939 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06743109 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06772637 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071068306 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067464628 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079305305 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076567839 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069423482 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076662726 seconds)
  done (took 4.775164866 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090855523 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092066192 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084543635 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061471476 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066780797 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064557317 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088342313 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059350195 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059708478 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087397195 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055864032 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059100281 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062422012 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053807737 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059283839 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056746851 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061399092 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055620622 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058902786 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059273584 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057778628 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054071392 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059997316 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065160327 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056226592 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061784572 seconds)
  done (took 3.390779836 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076540222 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083534159 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088880877 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12663324 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103853706 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077435672 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077629965 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092492469 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084930754 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066668364 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071194834 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093887272 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087876194 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073526412 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067561229 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084773187 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082703934 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069149739 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073259153 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090720034 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084299592 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084020835 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092759679 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081156522 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066972289 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069430107 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070982599 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081681728 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072441537 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076950917 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.082578083 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070999306 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069445245 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079097865 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071183082 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068779699 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090188521 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076959505 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077524788 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068554608 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070478363 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06883108 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089324412 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122099345 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06719223 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073869201 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075458427 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076877912 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067476374 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086025638 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078493125 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066738187 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070681514 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066610989 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067422872 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080244883 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06951573 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06947632 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076201605 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070352556 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085215073 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071468406 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082690434 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067055998 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07497194 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066526296 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068140905 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06630432 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091909789 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068492058 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107707791 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070348088 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069794578 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076102678 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074664929 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073407421 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067806411 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082396538 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077606667 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071142441 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075783858 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071126242 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070144068 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087262675 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069910539 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068528661 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068006352 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073592085 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069688851 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068950925 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080103161 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067647621 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070384996 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08370047 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067064395 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068771116 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07370598 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072597027 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066821326 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078627776 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072303692 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068334545 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076359191 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067732646 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070288298 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077421794 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074399738 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067146374 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071639288 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072946816 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067766904 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068656317 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069959783 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068746323 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075260455 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073736751 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072056953 seconds)
  done (took 10.603945107 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164540217 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153255984 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069846543 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144555687 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076412894 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07921011 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147508276 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094391889 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067643317 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068338577 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068506325 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110165417 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10581338 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114960798 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078889037 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06751625 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082803925 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113777114 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149504893 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142502217 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083018859 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076285748 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069856825 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069129177 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070652146 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078104407 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085358279 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076286186 seconds)
  done (took 4.440401123 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084652134 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096868837 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074320482 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088483085 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090889798 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067505357 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069747204 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069374424 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080184928 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078653222 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067322405 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073269904 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074005426 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071025679 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068547904 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074436951 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074569562 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069053775 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070870097 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072962537 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07727941 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080580456 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071837387 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066956406 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074160757 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066938722 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06439222 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084662492 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067826748 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.08968392 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065517471 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074989772 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081437352 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068072178 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067283303 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067411922 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067425227 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067172107 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069316269 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066360516 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066005866 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057531592 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06680536 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079452532 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074448396 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056739892 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072385327 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072428171 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072247505 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065228242 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070153545 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07029048 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070424625 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074328489 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072310561 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072955437 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068526407 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065963445 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075544454 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067118381 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064770236 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065943742 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07188105 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065923114 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075286904 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071861238 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065909679 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066963558 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069662604 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073269106 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067237563 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070355816 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065097722 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069365193 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072151239 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069131528 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06805144 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066294434 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067349254 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067497418 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055392506 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067344965 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053632457 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070408624 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065500198 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065751787 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066928716 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072704142 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079910737 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068877958 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073138846 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068029664 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066325784 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07011073 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060185586 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070401659 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082431601 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083034004 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067409845 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065279542 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08143889 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072046891 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066510034 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056112154 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074785803 seconds)
  done (took 9.169500336 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096601633 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088112788 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069163595 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083011268 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090562219 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086079206 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074376377 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07665515 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069231525 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081743985 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073241663 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076128594 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067986201 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076621476 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093087813 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076489198 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069553561 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07665005 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071744892 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100038013 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082146154 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.0815106 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074864343 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067907175 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075479206 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079794057 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088604176 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080269886 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078241966 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075597285 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079575143 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088888085 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.07387749 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071717233 seconds)
  done (took 4.434783543 seconds)
done (took 38.497273564 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.77982074 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.037788504 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.770491596 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.187049349 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.857496551 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.922886296 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.814466804 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.766598948 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.082598615 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.811586415 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.012920405 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.829067685 seconds)
done (took 65.579224021 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.788676667 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.913376746 seconds)
    (2/2) benchmarking "String"...
    done (took 2.039680673 seconds)
  done (took 5.660513506 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.0544227 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.304254427 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.009428134 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.765587896 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.766924132 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.056165771 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.574331199 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.304106932 seconds)
  done (took 30.485968918 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.064962382 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.972725335 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.471099847 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.509496312 seconds)
  done (took 15.779462603 seconds)
done (took 63.559846421 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.800515472 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.806364482 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.784555714 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.746641033 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.822919004 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.786195547 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.887673194 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.995621122 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.764512398 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.74934568 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.768276433 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.202316587 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.767776165 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.919567044 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.765232696 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.768006676 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.767896522 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.176871223 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.920858974 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.778250205 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.789102436 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.81913818 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.763396903 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.777858726 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.782362253 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.76674623 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.194816394 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.766549591 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.590412866 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.765834643 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.813927133 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.063282507 seconds)
  done (took 204.578077528 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.767927102 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.843553206 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.929629907 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.807158357 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.277897517 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.965233227 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.904690737 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.326240772 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.771025711 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.773008852 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.074323881 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.767262938 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.076011487 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.717989499 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.774643432 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.772864405 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.026451241 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.079820858 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.76710192 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.039578958 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.792747464 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.946959756 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.906877248 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.040246525 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.768268711 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.85877762 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.779039155 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.787994953 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.955256108 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.008021304 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.796107588 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.775567045 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.975863156 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.641938235 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.775882027 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.773562884 seconds)
  done (took 170.753625493 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.90751964 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.769197941 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.770163144 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.770369111 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.776037113 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.771761905 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.892744209 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.891160647 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.227123718 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.035458163 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.820933914 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.60899979 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.764371566 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.839018444 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.780021617 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.776111193 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.787202843 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.796877302 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.770350913 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.771323177 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.896275415 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.778975848 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.98506642 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.774566254 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.768075113 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.774573039 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.14261419 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.762746187 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.770351939 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.009477201 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.761798597 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.765843325 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.666523826 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.409460017 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.85335527 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.763931925 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.771999155 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.765821474 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.988088443 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.765826121 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.765265616 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.768514769 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.759854538 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.937749576 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.756124186 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.886935282 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.755412769 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.253473089 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.755114422 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.761481072 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.277129594 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.241196302 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.628713336 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.628201064 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.630714863 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.629121381 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.628726009 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.634834572 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.791331068 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.699650115 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.630929784 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.632253916 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.634985672 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.628958543 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.86693439 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.629756547 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.904190217 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.683408309 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.738619409 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.751248797 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.629554107 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.693878514 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.721402365 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.62819071 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.629314064 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.6299278 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.628748545 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.711370977 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.625984347 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.721807536 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.633316285 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.630776099 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.67970626 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.703310796 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.627042944 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.459132199 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.627630709 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.629781764 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.904015523 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.689458504 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.626305735 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.629774666 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.63296107 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.629499959 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.719736396 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.748600361 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.391194776 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.629695278 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.629595214 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.818035308 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.720929009 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.88596035 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.749272708 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.948462258 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.75084418 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.832019402 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.751062329 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.751713653 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.753678358 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.750378241 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.750281641 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.783147697 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.749880741 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.808384503 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.120325872 seconds)
  done (took 392.571937003 seconds)
done (took 771.579425901 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.444179114 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.402400773 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.525305224 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.432129255 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.411204194 seconds)
  done (took 13.901425688 seconds)
done (took 15.588109974 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.835723089 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.843853859 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.77545722 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.840862373 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.770635354 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.841979315 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.822154217 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.776313592 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.806023417 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.775833225 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.809510677 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.775524324 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.763764403 seconds)
  done (took 25.124839171 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.979929959 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.991009166 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.822542735 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.98995176 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.79730837 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.976496233 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.916494236 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.903450344 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.901786488 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.765851161 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.762874153 seconds)
  done (took 22.495868143 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.981236506 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.995063696 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.826198784 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.99646565 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.800248644 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.991411483 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.917198289 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.903848459 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.904617526 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.766186307 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.763152107 seconds)
  done (took 22.534325005 seconds)
done (took 71.842054053 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.758189564 seconds)
  done (took 3.445722792 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.780239772 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.918324156 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.764373995 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.761484087 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.756267907 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.757522342 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.761657418 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.760576675 seconds)
  done (took 15.95009743 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.755855122 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.75367475 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.756650462 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.756721955 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.757112058 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.755630078 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.757064343 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.753595035 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.753424148 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.75551737 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.754722843 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.752448461 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.756135803 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.752751825 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.755939918 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.753612492 seconds)
  done (took 29.768354104 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.753994096 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.752480574 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.751895028 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.751884388 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.753205564 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.752973458 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.753133498 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.751956397 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.751186974 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.752239549 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.755185982 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.751083097 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.751462997 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.750562437 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.751704633 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.752488174 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.754754815 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.751942504 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.755961524 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.751033227 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.751968668 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.755215407 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.75052967 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.75146788 seconds)
  done (took 43.749791368 seconds)
done (took 94.603767268 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.486234406 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.234935582 seconds)
  done (took 8.40418062 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.752204486 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.751012433 seconds)
  done (took 5.228876999 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.748552009 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.749632445 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.750837148 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.749220819 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.749239521 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.750645341 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.749624826 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.74973187 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.749425586 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.749912893 seconds)
  done (took 19.184233178 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.749644216 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.75011549 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.746965405 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.749809809 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.749252914 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.749073591 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.749839649 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.749593424 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.748411408 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.747040022 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.750103545 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.748320337 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.749329036 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.746629462 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.749221906 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.746314732 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.746727733 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.747170573 seconds)
  done (took 33.156246167 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.749818768 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.74751743 seconds)
  done (took 5.177709393 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.747596227 seconds)
    (2/7) benchmarking "second"...
    done (took 1.747219652 seconds)
    (3/7) benchmarking "month"...
    done (took 1.746637152 seconds)
    (4/7) benchmarking "year"...
    done (took 1.747328502 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.747110505 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.746622656 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.746800006 seconds)
  done (took 13.909238901 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.750099835 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.914042593 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.97707517 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.426180358 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.752560726 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.752745241 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.714874512 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.753089635 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.754798713 seconds)
  done (took 19.476334513 seconds)
done (took 106.22167718 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.553311933 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.74325143 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.126430566 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.800905579 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.805783165 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.043095343 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.767621208 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.965315582 seconds)
done (took 42.490899051 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.799156197 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.27576608 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.306915959 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.23126419 seconds)
  done (took 12.494129775 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.728219974 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.286012731 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.792798061 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.413841108 seconds)
  done (took 20.113750808 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.112747712 seconds)
    (2/2) benchmarking "read"...
    done (took 2.11163355 seconds)
  done (took 5.910393234 seconds)
done (took 46.999539896 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749250495 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.74645135 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.749205023 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.749265624 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.751350268 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.748143479 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.746734207 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.746125868 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.74927392 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.751036857 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.748839634 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.7488722 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.749267615 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749199561 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.746660434 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748047922 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748990627 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.746873155 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746357213 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.745806741 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.747220587 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.750725335 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.745894512 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.746347184 seconds)
  done (took 43.637347216 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.749248231 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.746813623 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.750502765 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.748618813 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.746157002 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.748058239 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.749105449 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.746268045 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.748833766 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.748138992 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745813127 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.746577899 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.74871328 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.748042047 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.748132931 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.746226139 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.748744303 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746252549 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747802785 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.747274557 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.747775944 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745432066 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.745517603 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748588631 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.747651963 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.745983456 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.748583673 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.74625969 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748653376 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.747398644 seconds)
  done (took 54.10930503 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.752629546 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.756244142 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.74820137 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.748074033 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.749186134 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.753534987 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.748199075 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.748917387 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.748292853 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.748578803 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.749375572 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.751729631 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.748386917 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.748871586 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.749503093 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.749119135 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.751925091 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.747845495 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.749266356 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.748652944 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.748278325 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.748146644 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.750412599 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.748306125 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.749286622 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.749533075 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.747959129 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.748975419 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.749724684 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.748019472 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.748072879 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.748235897 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.748465144 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.747770958 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.750147823 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.748713099 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.75299016 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.756021373 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.747724011 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.748988351 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.748272601 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.747736845 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.749899345 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.748167523 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.747876075 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.750241125 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.747922558 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.74725689 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.748249128 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.748048273 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.748022509 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.751137475 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.747484126 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.747462756 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.748589463 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.747624978 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.751384636 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.749154708 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.748832077 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.749514424 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.748618631 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.748549261 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.750729822 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.748993294 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.748606532 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.749058548 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.748167846 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.748019808 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.751384093 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.749225185 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.748752587 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.749256276 seconds)
  done (took 127.629355823 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.748263765 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.748516866 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.746140591 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.746438282 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.746692397 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.749072554 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.749518735 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749532039 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746418077 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.749190968 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748835126 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.746879854 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748537614 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.751191208 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749540737 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.749697947 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.748577355 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748858852 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.751446679 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.75244037 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.750067412 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.749823387 seconds)
  done (took 40.156966786 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750857576 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.752620838 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.748809542 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.750216502 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.748042706 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.751562507 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.753907538 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.751098921 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753321688 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747649194 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749375611 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750166812 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.75115457 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749010178 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748350008 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.748743672 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.751654456 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.749665396 seconds)
  done (took 33.190633438 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.748525357 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.749358672 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.750972905 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.748907867 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.751345971 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.754453623 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.75013666 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.751480426 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.753933251 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.748198905 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.753584045 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752149593 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.750722395 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749855172 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752068595 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.749940329 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.753155316 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750886835 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.7523441 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748250498 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.750188312 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.753275033 seconds)
  done (took 40.210213997 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.75379758 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.752168549 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.750397411 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.749883591 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.750250744 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.752606338 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.752622294 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.750497167 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.752877462 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.753711809 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.752520541 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.753728882 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.750682219 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.751267076 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.751716241 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.749360539 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.754631241 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.75251442 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.75429791 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.751128505 seconds)
  done (took 36.727186544 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.755449664 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.754786622 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.754153634 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.753849809 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754688001 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.757131432 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.758290651 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.754705514 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.756226928 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.755047203 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.755326263 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.75568956 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.75698803 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.759211352 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.75400609 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754202536 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.754819419 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.754935602 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.758213017 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.755112761 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.75858967 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.756077892 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.756564772 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.757413958 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.756891863 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.755880455 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.754769328 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.756611045 seconds)
  done (took 50.85238239 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.758534107 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.755664262 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.754067394 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.754314991 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.753289657 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.753102 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.754419176 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.752090775 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.755283456 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.754893566 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.755404743 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.756016066 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.756773699 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.756504264 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.756223077 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.756470792 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756796854 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.754414519 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.75422151 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753263984 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.75645953 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755922887 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.754490793 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.754204086 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754153313 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.756008311 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.753559103 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.754338508 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.759942042 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.754533894 seconds)
  done (took 54.342013058 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.775026329 seconds)
    (2/2) benchmarking "in"...
    done (took 1.774845385 seconds)
  done (took 5.239253615 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.75365712 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.759387721 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.75694387 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.757691223 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.753643768 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.757076154 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.757690058 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.75759899 seconds)
  done (took 15.743200361 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.758619947 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.759849466 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.758625798 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.758387293 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.757343105 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.76136194 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.767796549 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.757719304 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.76437644 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.761086295 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.76740544 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.770660799 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.764200162 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.762147491 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.762559266 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.763588212 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.757966187 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.7594661 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.758084645 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.758822405 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.762342135 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765572882 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.761417913 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.755941849 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.761151538 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.775251768 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.768316511 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.760603011 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.762997148 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.767846163 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.763054005 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.757597849 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.759526088 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.760404468 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.759800843 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.759822438 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.771491747 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.768268313 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.768374919 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.759511412 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.758702794 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.756220503 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.764148737 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.766667849 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.762773891 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.75986972 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.760434818 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.757253858 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.762775266 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.763713567 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.762838966 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.763365081 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.756535731 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.76994886 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.768931483 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.771808171 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.761163602 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.763347917 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.76955081 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.773683992 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.777519852 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.769546209 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.767393779 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.761019316 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.771909021 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.783484384 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.770008088 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.758095613 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.757512413 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.761770264 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.771668885 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.777939419 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.774274032 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.763078532 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.761211651 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.761431493 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.76497512 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.761126891 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.772586214 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.767601112 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.761100621 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.759953524 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.774209251 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.784313032 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.76262872 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.761631837 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.762599189 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.761095445 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.7667765 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.774961915 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.761285765 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.759906558 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.764288734 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.764615018 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.768575644 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.76204337 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.762971809 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.766732643 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.759744965 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.763130394 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.762768571 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.766186274 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.77420969 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.761724258 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.762404223 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.774920876 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.763036041 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.764306426 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.775651623 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.762504329 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.763216902 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.764658465 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.774005982 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.762565978 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.767377683 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.77382858 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.765590325 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.767855297 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.763585813 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.764177893 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.77265962 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.790096911 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.765695335 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.763394246 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.768833054 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.772024178 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.762448578 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.770844147 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.763792646 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.760458085 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.761283116 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.768055479 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.763426142 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.770372301 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.765938988 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.769921271 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.76166342 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.763021488 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.764160834 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.770597505 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.768649542 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.767925385 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.767653627 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.76970983 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.767229772 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.768716933 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.773228508 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.76809008 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.77000399 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.768711861 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.763544665 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.766794244 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.770224063 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.764522039 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.769515059 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.765600445 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.767555923 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.764284285 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.764651634 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.766454144 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.765711647 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.769921843 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.771304626 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.766778305 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.774253897 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.765365475 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.763025625 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.767659973 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.766181666 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.769731387 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.764223771 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.766814238 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.770323666 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.773603162 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.767340053 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.767186836 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.774517057 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.767453365 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.76866174 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.767417402 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.771134833 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.774115122 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.765939285 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.777302537 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.766973909 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.766969528 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.764977643 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.769752366 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.767113974 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.767456103 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.770405512 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.773368599 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.781920122 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.778594381 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.768839925 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.770375656 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.770891917 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.771635902 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.774677507 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.767668056 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.767160664 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.767605153 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.76960896 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.76678677 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.773290833 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.76847913 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.768985497 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.768506595 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.767857712 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.767583639 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.767206767 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.772679288 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.774472443 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.764096047 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.767819794 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.76926009 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.769834641 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.765594873 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.769660986 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.77020148 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.768428991 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.770720335 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.781642479 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.768458658 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.771726879 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.77163284 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.771278471 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.768562451 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.76938331 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.774354634 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.771223341 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.777821717 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.774132857 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.775636522 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.778767138 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.777457344 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.771591226 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.775182031 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.768247193 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.766342108 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.775005031 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.776541611 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.769642446 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.769326474 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.769115714 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.770175225 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.77223877 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.780181508 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.766821632 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.77056932 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.769554956 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.77579306 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.768552509 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.774082277 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.774115863 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.774439553 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.7753241 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.772474474 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.770657645 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.778454489 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.769675491 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.770924639 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.768383638 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.776161367 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.777985135 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.777797003 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.776444103 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.77702447 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.773462479 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.774327535 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.776467329 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.770770046 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.773072395 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.787924163 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.778781626 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.780748868 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.777721084 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.770544313 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.778996675 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.774518945 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.7799564 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.774296883 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.776037142 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.775581228 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.772448169 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.770555576 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.777566325 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.771220482 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.775594561 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.774454211 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.775984246 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.773612646 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.773672302 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.77281936 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.771889114 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.772863899 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.773926195 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.775137555 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.781688144 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.779326935 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.775558124 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.776233138 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.785758494 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.775790916 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.778088406 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.775170785 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.77696273 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.776626402 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.77739393 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.77332905 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.777784351 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.779207133 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.777158832 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.786217022 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.776727574 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.786065343 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.775761431 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.777644779 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.781486618 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.772082352 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.774009479 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.777390263 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.774048092 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.785582437 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.774853186 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.775750889 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.779056719 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.774099836 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.775212449 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.77408155 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.777223522 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.775272184 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.774422949 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.787427721 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.776952606 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.78093139 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.781824107 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.771620956 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.773853373 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.774229197 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.776695358 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.783210409 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.77613154 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.780843624 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.776390141 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.779000485 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.776366301 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.776066992 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.77426575 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.772573614 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.773829918 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.785862405 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.776891476 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.779059816 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.77476956 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.79061999 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.774317605 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.786353493 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.775415016 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.779909149 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.774845353 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.776091563 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.781565498 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.778988742 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.784235854 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.775716302 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.778643317 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.778649174 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.776110953 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.784373689 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.778748667 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.77752037 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.780071616 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.786490962 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.796966805 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.782207287 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.779127845 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.77272918 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.77824462 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.780195675 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.776628246 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.776301288 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.780363882 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.788144379 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.782080827 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.780006571 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.776070159 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.780855322 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.777495123 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.775666791 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.77625529 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.778071719 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.777472231 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.781681841 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.77727481 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.786449489 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.776889372 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.781653365 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.782816688 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.779318105 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.790811316 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.77754528 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.782004253 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.778557764 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.779657414 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.781030306 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.780084997 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.777947985 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.781801976 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.778787681 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.781510037 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.785092101 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.785824073 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.784644264 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.778495541 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.78110296 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.782479548 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.781872374 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.778109753 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.777627051 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.778490129 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.783256371 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.777421573 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.783735815 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.77890898 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.778815664 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.784199009 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.778071675 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.782310823 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.786330933 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.782321317 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.776233864 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.779709176 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.778940298 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.779704528 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.785464079 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.79351917 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.784941045 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.789934094 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.789240324 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.782447782 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.784434447 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.783865244 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.790611005 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.781471627 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.786135418 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.780584243 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.785183855 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.783749597 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.785565643 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.780134917 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.793316805 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.783400424 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.782906587 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.793410738 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.786268393 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.779951235 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.783413665 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.786359175 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.78394687 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.779568102 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.779297244 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.782203277 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.792103408 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.786103168 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.78056807 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.786170815 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.780318554 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.78375636 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78401323 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.780362967 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.784476056 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.778167154 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.782864048 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.781058928 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.780185169 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.779138394 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.785113937 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.784567596 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.784987214 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.789225384 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.779478989 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.787461952 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.785671443 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.784574301 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.781099439 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.782146466 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.778435753 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.779948147 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.785700516 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.78263893 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.786431623 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.789792264 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.78704314 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.784158015 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.782916457 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.782501877 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.78553884 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.792174042 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.789273211 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.779025889 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.7837932 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.786430934 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.789219946 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.783604296 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.782629188 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786370296 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.788285465 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.782664009 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.782977326 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.783805857 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.787095103 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802812945 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.78299739 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.78569629 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.788220993 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.791411261 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.783386271 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.780291176 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.784957543 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.790389011 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.788086422 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.789245944 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.783239728 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.795261951 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.785302193 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.785398054 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.786888677 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.786588271 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.795343226 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.790319592 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.783103262 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.784849342 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.78972403 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.802138677 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.784832211 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794633149 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.814044905 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.788135456 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.787644639 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.784738707 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.785556555 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.784084948 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.788912337 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.783957918 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.785654294 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.782813652 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.783510009 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.786628614 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.793339638 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.789551697 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.784378119 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.783903426 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.789527336 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.790934215 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.782551858 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.786129552 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.78475943 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.785623886 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.784553208 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.784724886 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.790704918 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801463864 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.799063303 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.784836575 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.785293206 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.783880219 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.792038658 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.789470008 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.796393139 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.792766858 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.785881328 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.78470338 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.790916256 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.785438661 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.784295465 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.789183381 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.789538997 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.788585164 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.782708897 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.801819656 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.795251594 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.79275626 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.792515222 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.78629797 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.786097546 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.793123597 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.787208989 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787230037 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.792294452 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.789209971 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.789619672 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.786352899 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.786648918 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.792238134 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.794372337 seconds)
  done (took 1060.124134103 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.784574232 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784059805 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.783673184 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.786858331 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.785635107 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.785255839 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.78428714 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.785907538 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.786417122 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.783800395 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.783970369 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.785168323 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.784470387 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.784985593 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785463403 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.785449863 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.785791718 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.784332525 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.785790294 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.785357218 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.786001589 seconds)
  done (took 39.206568414 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.78766443 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.787064446 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.785748222 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.790154079 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.785181388 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.790101064 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.786746183 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78847294 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.789354079 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786831508 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.789112245 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790767596 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.787036127 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.785649576 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788291151 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.788339717 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.788005124 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.786334656 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.788319114 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.78447073 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.790775091 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.78709724 seconds)
  done (took 41.051051087 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.789228743 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.789321577 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.79008948 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.787493982 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.789326363 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.786723692 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.788367198 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.789724855 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.791044746 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.793205167 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.791085876 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.792379233 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.797576612 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.793867772 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.795485439 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.789375189 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.93447929 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.789525414 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.791275664 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.791133188 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.788006054 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.798626862 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.787067479 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.787900499 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.790989135 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.790552182 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.789762205 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.790922094 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.790281753 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.794028456 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.793591324 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.79195299 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.793143266 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.795708812 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.792497731 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.793674443 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.795209301 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.790794009 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.788218308 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.79116921 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.802159934 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.809138842 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.792069826 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.801461705 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.791049382 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.790338922 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.794724767 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.799651632 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.788954268 seconds)
  done (took 89.686713844 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.791825464 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.791228959 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.789296849 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.792669408 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.793102651 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.792432898 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.792305493 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.792511828 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.789567636 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.789305809 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.791620963 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.790044387 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.788354512 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.791717324 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.793852575 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.789983729 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.78987969 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.790354557 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.790596725 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.791206372 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.789484989 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.793440845 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.792648949 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.790003819 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.792962865 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.791083356 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.790382633 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.793295534 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.790161497 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.790385479 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.792606036 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.792681464 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.793618422 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.790891151 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.791633824 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.794483764 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.794710726 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.791122692 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.793133337 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.790677457 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.794387432 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.793814866 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.794970112 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.794145959 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.790222012 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.792136291 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.791310156 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.792881832 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.793901956 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.794973935 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.795160722 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.792264038 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.795500382 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.794538683 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.795632019 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.795249938 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.79184104 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.791169889 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.796183017 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.791622535 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.791719016 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.795139238 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.791616533 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.79458833 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.7968367 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.793083861 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.792701828 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.79408799 seconds)
  done (took 123.607358176 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.795386345 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.795410908 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.79447976 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794716314 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.796671203 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.796550829 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.795500575 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.794820643 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.796088048 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.795704544 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.796206558 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.795412744 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.79826646 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.795878598 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.796320096 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.795719515 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.796647372 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.798778483 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.795864199 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798178256 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.796110646 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.797141598 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.795812204 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.797262874 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.796898267 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.798091339 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.796918891 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.796094477 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798114423 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.797897276 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.796641843 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.798083308 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.796913766 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.797146061 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.799899907 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.797122093 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.797518001 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.797334383 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.797788033 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.796825227 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.798010308 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797504841 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.797469703 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.797613435 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.797840037 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.796411969 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.79786705 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.797648594 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.798063413 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.798131626 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.797998768 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798612441 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797009902 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.797806798 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.798501546 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.798255044 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801614799 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.797635707 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.797079462 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.796840455 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.79803679 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.799287153 seconds)
  done (took 113.15183478 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797547716 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.798285622 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.795090025 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.795887879 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.799699762 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.79546241 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.799103399 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.798786283 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.797715256 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.796929104 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799268259 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.796169865 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79613318 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799010433 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.796224676 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797561977 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795810406 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.796000486 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798732606 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.796665233 seconds)
  done (took 37.67737031 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.796191946 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.80021595 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.797620453 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.796801786 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.799996728 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.798064415 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.800427716 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800100573 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796420547 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800576254 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.800410619 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.801295114 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797686095 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.796415711 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.799462272 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.796521082 seconds)
  done (took 30.508621081 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.797411052 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.799501575 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.800208427 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.800578715 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.797402302 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.797789854 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.799846953 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.798812814 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.797609122 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.801021478 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.799956502 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.799982688 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.80106271 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.800387212 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.79868647 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.800120821 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.798856346 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.798490698 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.801221602 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.801068676 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.799055917 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.798370876 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.8013106 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.802216774 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.797571758 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.798396113 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.797873328 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.798663918 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.798182316 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.801537257 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.797559704 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.799288898 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.799921637 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.800219591 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.802253697 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.800718843 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.802530227 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.802409573 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.801376779 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.802902783 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.802522001 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.799828521 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.801461847 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.802146229 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.800352918 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.802973066 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.799796252 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.79904561 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.799501828 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.800253912 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.802653722 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.802565269 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.803304884 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.803832276 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.802914119 seconds)
  done (took 100.748388156 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802585081 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.803910558 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.799856977 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.8031675 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.802631136 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.801659804 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.803216455 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.799662151 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800852407 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.805322919 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.801882527 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.802835111 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.80117239 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.803676592 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.802052428 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803018251 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.801332572 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.801345064 seconds)
  done (took 34.174341651 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.801260062 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.800879382 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.803714346 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.802802891 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.801558378 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.804120309 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802137692 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.803695207 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80418798 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.801852022 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803511821 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.804695695 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804347155 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.804481911 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.803497149 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802213165 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.805627497 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805508452 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.802026686 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.804128359 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.80608633 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805163094 seconds)
  done (took 41.413127215 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.805958784 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.806417544 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.821787595 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.849273539 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.837738705 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.807522196 seconds)
  done (took 12.664724623 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802988953 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8072308 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.804418207 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806975192 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804553485 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802452655 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802699543 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801878475 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806075272 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804554819 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802984753 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807273283 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80588756 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804405436 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806839731 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805482153 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80335813 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804504162 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804768793 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80719659 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803035305 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807026024 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803307665 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8038075 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804775725 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803273856 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806933761 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805260423 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805090668 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806920112 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806833647 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805658791 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80613844 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804621728 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808367105 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807495292 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805182044 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806003048 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806722998 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80418052 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.807245315 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80882432 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808195231 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805905115 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807555877 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805586814 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805707093 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804786534 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805842693 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807767521 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808434561 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80490645 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8094163 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808756154 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808671804 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808748655 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806717451 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804940906 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808628147 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806306176 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804741744 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809302654 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805381827 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806936081 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807974423 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806237069 seconds)
  done (took 120.928159314 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806079922 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.806429396 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8071788 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806446838 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806480946 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8072284 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806164716 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80664067 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806632187 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806203755 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808778702 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806924843 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806574685 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806678493 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805759118 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807882327 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807849496 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807472518 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807111445 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809613226 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80613484 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807153444 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806550085 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807397444 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806784814 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809325663 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807643919 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808275733 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808296218 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808258693 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807952608 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807821105 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807763227 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.80781706 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807851809 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808635951 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808256778 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807612714 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808312681 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810982345 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809151155 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810778226 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80973291 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80930399 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809938028 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808658788 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808692195 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808077889 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80909066 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808446436 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809508856 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810175733 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809649665 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809571328 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808929733 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809742443 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809736708 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809674715 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808918197 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810438998 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809671415 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810139899 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811428514 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809413586 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808926371 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809705147 seconds)
  done (took 121.08780267 seconds)
done (took 2469.551631503 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.859411601 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.888711891 seconds)
  done (took 15.489471584 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.976929022 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.929041079 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.811498117 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.863608229 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.80935033 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.837327779 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.815347376 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.808191106 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.813754888 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.813923999 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.811640081 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.999611361 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.819672985 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.810082933 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.811935002 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.905243644 seconds)
  done (took 51.38452424 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.816835031 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.815737511 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.828734495 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.818623691 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.81650438 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.828425937 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.850237309 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.821190054 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.849765507 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.825694311 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.884067721 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.822763819 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.816515692 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.866374149 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.825928617 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.83352885 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.901796889 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.884865473 seconds)
  done (took 34.85099818 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.892285673 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.812821294 seconds)
  done (took 10.454986493 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.835942083 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.827157549 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.842675957 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.831929528 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.804391836 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.810296479 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.82220057 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.85002899 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.835020829 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.821685748 seconds)
  done (took 70.029172263 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.824376888 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.819856765 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.820111517 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.817880677 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.810616653 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.814059829 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.820943229 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.813510366 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.485429379 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.845280956 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.819458372 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.821561593 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.816348314 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.817408578 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.811443678 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.839270944 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.931922376 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.8127477 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.812187967 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.820149475 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.816766328 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.909932163 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.828761544 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.81439044 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.844037471 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.486050607 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.825925136 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.825087556 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.953270296 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.81445696 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.81693004 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.817234732 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.8204827 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.213140637 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.108337824 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.811413264 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.822364525 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.821613623 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.812854615 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.988707415 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.82028424 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.822812397 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.800160448 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.099146071 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.900810497 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.857635385 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.172708792 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.819271933 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.819581079 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.849736322 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.819159591 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.819351269 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.834557587 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.326906901 seconds)
  done (took 129.839146131 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.812999043 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.386366383 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.977898756 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.813644952 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091000432 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050233491 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.81081786 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.863326339 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.81323651 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.061864023 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.986936619 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.929422021 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.812144231 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.816259185 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.812395684 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.809686405 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.965936326 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.879333711 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.814114593 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.811032198 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849521238 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.077422865 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.936676371 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.812895462 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.83558226 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.042253172 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.935145958 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.928488554 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.307804659 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.814684108 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.880018529 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.811975877 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.813999619 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.809643324 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.978992981 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.91905741 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907370563 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.81326168 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.814987574 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.813475078 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.478032102 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.037414329 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.92413301 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.946350543 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.057807674 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.039107469 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.458265323 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.812693626 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.451614512 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.010056285 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.022518715 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.067537276 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.938030401 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.813423032 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.072174166 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.812676723 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.81281443 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.074995908 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.039421306 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.923143896 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.816964047 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.814524549 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.811269711 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.131187951 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.814309632 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.920736924 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.813989239 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.81092522 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.926096507 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.927546039 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.040179839 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.055013672 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.841165656 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.707612561 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.335655456 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.097771361 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.881338625 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074002356 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.815242491 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.813922577 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907679572 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.568963752 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.987635261 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.128403687 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.076477464 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853834152 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.416045702 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.814964486 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.062520208 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.060894628 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.041377424 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.060435782 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.9775948 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.128825862 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.814650687 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.814724915 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.028748222 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.944228435 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.816369875 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.178822191 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.066233024 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.540698052 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.848316351 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.120913242 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.955183353 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.809877638 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.444172235 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.819841342 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.016332697 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.862799384 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.818359601 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.815859884 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.059650804 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.685774306 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.820036195 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.596603475 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.880763172 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.815823746 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.083366735 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.816070375 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056980247 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.815199852 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.127724882 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.304489355 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.858723605 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.008488626 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.063730399 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.6098386 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.087538573 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.127955218 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.938499229 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.072620924 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.640649446 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.818270914 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100852132 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.815125657 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.817919952 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.984467409 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.816286793 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.967489598 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.810721837 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.073271445 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.839309092 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.983696392 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.819186855 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.086115997 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.857139908 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.868848137 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.817446067 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.937566013 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.818132153 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.857078042 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.000906718 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.817949851 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.816498118 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.39200301 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.816971408 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.96589986 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.115866072 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836091164 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.887094188 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.336775028 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.816036902 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911498594 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.844122309 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.418054 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.819715572 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.986512439 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.816133063 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.797166938 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.815785493 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.125875879 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.034976477 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.818247683 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.819014684 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.612498638 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.527207538 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.818396083 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.996584482 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.046077596 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.466705069 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036728538 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.822113502 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946176456 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.819724035 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.896606098 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.1737606 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.820173705 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.819587607 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.821222142 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.823900547 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.818815115 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.046564994 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.845660784 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.504031153 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.958705116 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.064118273 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.134588031 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.084721926 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.870047748 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.821648499 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.084449837 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.815962773 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.88965792 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.820672778 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.843813197 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06617688 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.816989467 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.046853897 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.100747414 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.868237361 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.871578875 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.817166629 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.820165188 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.815661316 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.965325291 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.917002223 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.816929279 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.82009432 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.935108516 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.94042194 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.002371203 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.407990841 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.997566089 seconds)
  done (took 891.870629235 seconds)
done (took 1205.661932097 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.818934177 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.82038455 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.80339862 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.822113625 seconds)
  done (took 29.017797869 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.826258582 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.824719441 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.825705137 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.828564515 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.825770799 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.827019893 seconds)
  done (took 12.70973112 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.844089238 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.822610563 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.821624197 seconds)
  done (took 21.243531654 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.894318359 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.222678549 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.930175856 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.260754945 seconds)
  done (took 10.061185058 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.828694934 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.828397255 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.828345526 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.825759434 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.833323141 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.829301405 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.825842896 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.829343526 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.827057166 seconds)
  done (took 18.21323018 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.993057628 seconds)
done (took 96.990253525 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.841751676 seconds)
    (2/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.647552069 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.819839463 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.841289014 seconds)
    (5/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.132401383 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.161354743 seconds)
    (7/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.411676628 seconds)
    (8/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.95646629 seconds)
    (9/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.967605875 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.977197077 seconds)
    (11/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.967825346 seconds)
    (12/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.889564169 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.870861801 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.833547554 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.857596491 seconds)
    (16/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.001156909 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.734746126 seconds)
    (18/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.860505942 seconds)
    (19/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.128616746 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.957309695 seconds)
    (21/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.832866485 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.490375701 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.206736146 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.127875243 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.81495628 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.980295036 seconds)
    (27/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.859937494 seconds)
    (28/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.188011706 seconds)
    (29/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.898536416 seconds)
    (30/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.155782438 seconds)
    (31/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.883201263 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.066793135 seconds)
    (33/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.952778595 seconds)
    (34/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.963342624 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.191868973 seconds)
    (36/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.852545769 seconds)
    (37/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.938012557 seconds)
    (38/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.349011044 seconds)
    (39/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.865633428 seconds)
    (40/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.920147111 seconds)
    (41/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.188737438 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.221556007 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.067987504 seconds)
    (44/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.91429893 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.218299973 seconds)
    (46/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.837143844 seconds)
    (47/309) benchmarking ("sort", BigInt, false)...
    done (took 6.852678091 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.745839059 seconds)
    (49/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.933240202 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.914265685 seconds)
    (51/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.821574311 seconds)
    (52/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.091043737 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.948456833 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.861206218 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.110490127 seconds)
    (56/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.198977112 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.158726703 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.171501137 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.133668085 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.881835669 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.892583946 seconds)
    (62/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.075175554 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.796475015 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.933633246 seconds)
    (65/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.235091339 seconds)
    (66/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.721079051 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.133144826 seconds)
    (68/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.118587888 seconds)
    (69/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.931081902 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.42977445 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.1256062 seconds)
    (72/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.175735803 seconds)
    (73/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.927756259 seconds)
    (74/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.41898113 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.123903823 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.827651217 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.827569188 seconds)
    (78/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.1190454 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.537726565 seconds)
    (80/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.842524406 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.061955426 seconds)
    (82/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.530114206 seconds)
    (83/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.649907587 seconds)
    (84/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.240577404 seconds)
    (85/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.916525504 seconds)
    (86/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.035942937 seconds)
    (87/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.970998466 seconds)
    (88/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.94796848 seconds)
    (89/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.242739414 seconds)
    (90/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.433550086 seconds)
    (91/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.860442535 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.95712869 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.084103088 seconds)
    (94/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.114952634 seconds)
    (95/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.197836806 seconds)
    (96/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.211123767 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.730281118 seconds)
    (98/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.981113589 seconds)
    (99/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.867337155 seconds)
    (100/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.168036546 seconds)
    (101/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.17520399 seconds)
    (102/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.023901903 seconds)
    (103/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.344481174 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.060051739 seconds)
    (105/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.900297765 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.52279339 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.851510656 seconds)
    (108/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.876083779 seconds)
    (109/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.22920149 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.928974931 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.88601443 seconds)
    (112/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.973135653 seconds)
    (113/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.848391339 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.839913299 seconds)
    (115/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.010926936 seconds)
    (116/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.823361975 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 8.142127777 seconds)
    (118/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.851754479 seconds)
    (119/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.842096518 seconds)
    (120/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.265057263 seconds)
    (121/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.856983755 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.840391167 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.824091 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 3.640837383 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.861047835 seconds)
    (126/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.035414041 seconds)
    (127/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.238336681 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.104407679 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.895739825 seconds)
    (130/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.356883001 seconds)
    (131/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.940664788 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.056030005 seconds)
    (133/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.698671272 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.098699377 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.842184556 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.839130891 seconds)
    (137/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.459337415 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.019185065 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.944446403 seconds)
    (140/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.902477917 seconds)
    (141/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.82663727 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.662891178 seconds)
    (143/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.902171867 seconds)
    (144/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.921885686 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.842067377 seconds)
    (146/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 8.323751014 seconds)
    (147/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.830776296 seconds)
    (148/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.952615944 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.080230354 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.866512456 seconds)
    (151/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.297201849 seconds)
    (152/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.312622565 seconds)
    (153/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.352039996 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.84385399 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.920270027 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.864065338 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.079668131 seconds)
    (158/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.84359194 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.012073935 seconds)
    (160/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.143654371 seconds)
    (161/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.013491277 seconds)
    (162/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.852699055 seconds)
    (163/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.857360569 seconds)
    (164/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.995714887 seconds)
    (165/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.827714213 seconds)
    (166/309) benchmarking ("sort", Float32, false)...
    done (took 5.623155699 seconds)
    (167/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.274354417 seconds)
    (168/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.074615382 seconds)
    (169/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.968372962 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.865769235 seconds)
    (171/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.431745527 seconds)
    (172/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.842712984 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.23254699 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.085341035 seconds)
    (175/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.844622906 seconds)
    (176/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.032077596 seconds)
    (177/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.438706712 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.401660156 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.867018141 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.924287564 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.169748939 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.841544715 seconds)
    (183/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.906721719 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.92660534 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.933878687 seconds)
    (186/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.971525011 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.171476899 seconds)
    (188/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.825774978 seconds)
    (189/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 3.625821496 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.865771937 seconds)
    (191/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.966645176 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.884259541 seconds)
    (193/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.844728718 seconds)
    (194/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.969877474 seconds)
    (195/309) benchmarking ("sort", Int8, false)...
    done (took 4.80338919 seconds)
    (196/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.986567351 seconds)
    (197/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.201602373 seconds)
    (198/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.868958273 seconds)
    (199/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.976573806 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.931461579 seconds)
    (201/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.0645337 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.643056863 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.509326264 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.039499391 seconds)
    (205/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.199245575 seconds)
    (206/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.830416834 seconds)
    (207/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.060915159 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.995257912 seconds)
    (209/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.971741777 seconds)
    (210/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.950181548 seconds)
    (211/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.051164875 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.831511552 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.230267768 seconds)
    (214/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.938312963 seconds)
    (215/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.779012023 seconds)
    (216/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.379889752 seconds)
    (217/309) benchmarking ("sort", Float64, false)...
    done (took 5.651043845 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.476516351 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.067193703 seconds)
    (220/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.232775499 seconds)
    (221/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.514519537 seconds)
    (222/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.913033284 seconds)
    (223/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.654899263 seconds)
    (224/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.72335016 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.945818159 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.006713632 seconds)
    (227/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.154388803 seconds)
    (228/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.847129964 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.865775852 seconds)
    (230/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.128213697 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.888269901 seconds)
    (232/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.928233128 seconds)
    (233/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.869935982 seconds)
    (234/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.040298899 seconds)
    (235/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.874418588 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.733934328 seconds)
    (237/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.832296049 seconds)
    (238/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.009097605 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.894642576 seconds)
    (240/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.846623998 seconds)
    (241/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.945138873 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.330557167 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.133437581 seconds)
    (244/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.89749175 seconds)
    (245/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.775190285 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.063829966 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.921941895 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.452122945 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.82835028 seconds)
    (250/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.9253345 seconds)
    (251/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.878344109 seconds)
    (252/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.99612927 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.834162518 seconds)
    (254/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 3.468388509 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.854030876 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.947033438 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.260743693 seconds)
    (258/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.145474906 seconds)
    (259/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.360166146 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.919404242 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.834205113 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 3.530459657 seconds)
    (263/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.86961374 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.197249357 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.874984198 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.120660533 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.037747498 seconds)
    (268/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.195609384 seconds)
    (269/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.041649111 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.005871914 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.242580865 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.994965747 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.498302292 seconds)
    (274/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.058698541 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.87498686 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.137666104 seconds)
    (277/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.875346293 seconds)
    (278/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.862352993 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.85099471 seconds)
    (280/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.465873806 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.492524404 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.87652671 seconds)
    (283/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.951716954 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.945178314 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.849659613 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.836251187 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.934793891 seconds)
    (288/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.934141017 seconds)
    (289/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.95932313 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.970111315 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.036560421 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.729963942 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.849220456 seconds)
    (294/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.112407983 seconds)
    (295/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.878222507 seconds)
    (296/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.033240357 seconds)
    (297/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.018520211 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.950302003 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.89660562 seconds)
    (300/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.127342324 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.85200947 seconds)
    (302/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.93847949 seconds)
    (303/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.445096522 seconds)
    (304/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.971769142 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.983072118 seconds)
    (306/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.129983483 seconds)
    (307/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.854164684 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.492900847 seconds)
    (309/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.838869606 seconds)
  done (took 1010.687466093 seconds)
done (took 1012.472269317 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.032005646 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.880676168 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.863223979 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.884034929 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.97499758 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.898240883 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.872354015 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.864828543 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.910776139 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.912638475 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.862527625 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.897625502 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.865903169 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.864130249 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.862176517 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.877391451 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.168009848 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.883265476 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.881422036 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.872222089 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.881094775 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.865069555 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.912212975 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.899334985 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.867262081 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.867364838 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.868401531 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.883665508 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.978397877 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.867779217 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.865536872 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.877412569 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.166324425 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.880676443 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.858254311 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.883975349 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.875866791 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.874671226 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.868082016 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.897500373 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.295967914 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.867502274 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.866829744 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.865846547 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.865165586 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.869074423 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.867610759 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.871670203 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.878853246 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.879697329 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.294884168 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.882539441 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.869952623 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.867038094 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.876387734 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.866455539 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.868921273 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.881204378 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.886830806 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.882808062 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.158360034 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.888741636 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.869397598 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.882880791 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.874850825 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.331936627 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.862679182 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.870642556 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.296688706 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.872827364 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.33334238 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.877023841 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.868012576 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.881311324 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.899127449 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.169337085 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.880089628 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.866234947 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.875223549 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.867144848 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.876170379 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.879809594 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.871161274 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.866798439 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.882064323 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.903203353 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.876970547 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.869509783 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.876912314 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.887457526 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.875984526 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.878537993 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.86941919 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.861616802 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.877289383 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.871236866 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.870956139 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.871407911 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.871728066 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.878732148 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.296203749 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.887123048 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.864278143 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.864558259 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.865455521 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.882878193 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.296127983 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.869945319 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.890623643 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.915923093 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.871089732 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.159929529 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.891048312 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.885268871 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.877580804 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.871622424 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.864733338 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.162399321 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.317414781 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.885402746 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.869707593 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.867918832 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.885652533 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.870881924 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.864734833 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.173288492 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.889548121 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.883379135 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.990658444 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.879032344 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.902388533 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.868490814 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.872326172 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.899223155 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.88400077 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.901247694 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.873583985 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.884646595 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.886197407 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.864476897 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.881739372 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.879027035 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.869508905 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.871948427 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.86161859 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.899508129 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.881165197 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.880384869 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.887886576 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.987892591 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.86418354 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.159358239 seconds)
done (took 294.904509947 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.933417105 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.85498263 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.962330267 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.860220297 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.951245037 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.944979605 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.857888976 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.858162624 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.857507566 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.242225026 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.857331608 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.858193537 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.856977105 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.857077607 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.945565138 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.859933173 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.856375676 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.205864007 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.859923492 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.934105083 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.852526347 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.857513862 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.86027672 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.245789349 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.855180761 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.86119652 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.933924812 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.859841853 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.210313688 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.860354431 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.86278559 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.209103817 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.953473799 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.876946365 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.869248182 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.866492888 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.946279233 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.862578267 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.942503221 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.941498237 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.960278942 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.897740887 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.857679215 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.856309206 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.860810309 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.859253831 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.856336524 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.887836795 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.859549241 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.856387521 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.207282461 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.869346089 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.867729429 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.856637035 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.856712719 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.88093521 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.857433663 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.860791962 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.951348738 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.85960621 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.922380775 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.245618094 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.240512074 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.858370206 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.856930483 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.85674318 seconds)
  done (took 183.733743304 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.926380045 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.935474436 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.929904353 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.863854735 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.911550442 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.933532766 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.863344045 seconds)
  done (took 15.151147515 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.865991145 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.859775724 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.910941226 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.911606502 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.860132127 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.010286841 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.858924778 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.871643975 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.856251891 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.913493436 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.859135023 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.859534737 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.86534136 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.861021442 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.908675788 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.87168494 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.976451425 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.862756966 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.860737708 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.012732178 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.857722064 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.866516595 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.916524527 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.873196275 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.860982721 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.867899512 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.448245546 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.860103891 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.858002421 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.858960924 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.855994667 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.904407525 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.859469194 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.855755625 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.856851646 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.978031915 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.859907884 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.856740549 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.85856176 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.856737221 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.858907957 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.858665309 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.860559584 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.856246605 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.860628112 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.883910643 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.858889392 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.859323065 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.858706918 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.860326391 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.911577527 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.859569311 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.856123167 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.856806533 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.918525995 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.867009575 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.860255914 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.856538253 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.859951592 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.8566899 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.014336524 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.909589138 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.859394609 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.909904596 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.859348766 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.860029293 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.85934735 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.859871937 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.915672825 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.859202442 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.911473734 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.857722061 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.022506372 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.293959291 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.861487673 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.865429808 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.865060986 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.861460684 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.851703639 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.86764261 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.856240116 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.862583009 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.868429688 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.859726005 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.856613112 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.975563857 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.970659608 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.856863076 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.874102356 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.869110858 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.857308696 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.91443592 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.860180329 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.857024077 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.915014743 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.976665738 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.917279134 seconds)
  done (took 205.292154929 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.866065535 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.870831372 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.862163923 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.87767536 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.86177122 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.861468039 seconds)
  done (took 12.987623829 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.864614559 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.859761576 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.859143206 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.860746756 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.859315424 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.861621737 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.86138755 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.863422421 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.864189898 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.860656364 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.860682867 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.863144342 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.861632735 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.860830109 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.860303232 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.859219488 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.862490463 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.857231032 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.860669064 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.85956882 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.0049873 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.86178138 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.859922704 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.860813975 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.863597733 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.858379199 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.870215708 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.85822287 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.857749446 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.866461719 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.861829198 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.862989595 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.86009553 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.863334849 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.862218085 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.861036318 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.861322922 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.863074806 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.855326595 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.857533143 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.858256818 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.85671621 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.859867361 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.858058913 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.860718862 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.862695102 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.862729465 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.866754688 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.854863592 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.853885229 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.856381394 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.854817762 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.855354896 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.858571747 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.85579205 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.855278135 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.854906645 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.85166141 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.851712019 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.850765652 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.848429924 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.849383023 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.851075431 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.852907434 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.859358942 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.850608802 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.851441752 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.851742389 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.848715435 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.849144641 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.850264011 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.8433709 seconds)
  done (took 136.728618752 seconds)
done (took 555.695964256 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.014352009 seconds)
  done (took 8.790079804 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.974999507 seconds)
  done (took 8.882349462 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.308905141 seconds)
  done (took 10.111294772 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.872946228 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.878215457 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.875261844 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.867495108 seconds)
  done (took 29.302227567 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.917852995 seconds)
  done (took 8.715716545 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.878232304 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.863251722 seconds)
  done (took 15.577002342 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.898484615 seconds)
  done (took 8.699683457 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.966893568 seconds)
  done (took 8.769976678 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.869764074 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.867404256 seconds)
  done (took 15.551865502 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.852596493 seconds)
  done (took 8.651908416 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.55430152 seconds)
  done (took 11.363592913 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.86381126 seconds)
  done (took 8.673829389 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.919006214 seconds)
  done (took 8.716341776 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.869074531 seconds)
  done (took 9.665057695 seconds)
done (took 163.247812181 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.861600777 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.864241138 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.857541477 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.856357905 seconds)
  done (took 29.232484264 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.892492866 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.89218028 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.894340075 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.903156698 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.895709699 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.890815209 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.883014985 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.881712817 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.901462115 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.893667197 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.89317332 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.890797396 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.888721318 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.881365474 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.8912595 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.893878442 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.899567243 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.889883443 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.880933536 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.891751089 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.858764462 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.901515934 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.891920263 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.856906668 seconds)
  done (took 47.130134165 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.055482605 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.930341611 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.009856367 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.910363319 seconds)
  done (took 9.690765208 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.907194291 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.909342928 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.920390646 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.960331016 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.987599481 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.919383216 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.881796105 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.878803951 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.86506777 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.909499253 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.984443587 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.926226028 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.991800409 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.856511547 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.041984589 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.858029182 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.857912135 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.909744771 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.958586352 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.973239302 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.856475321 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.908003616 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.917008355 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.923372447 seconds)
  done (took 47.887152185 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.852672216 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.862319624 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.86123581 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.852531194 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.852967265 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.853180697 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.858451123 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.856790009 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.873817834 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.852873476 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.849943132 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.850730501 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.849629462 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.855358555 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.848327895 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.861285875 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.862510387 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.849969419 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.854168077 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.853936973 seconds)
  done (took 38.894483672 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.843572755 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.695679953 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.192666857 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.097076495 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.842965724 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.839297192 seconds)
  done (took 31.287668181 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.854917839 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.905145323 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.84817272 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.895798214 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.972217581 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.84406482 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.840920438 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.912602159 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.942753055 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.904659437 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.853211062 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.863448074 seconds)
  done (took 24.409705015 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.844710093 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.831671333 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.830922066 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.844918339 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.84460116 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.842498543 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.841793654 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.828368339 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.842458734 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.849855451 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.839791133 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.845440844 seconds)
  done (took 43.856343487 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911975828 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.871794257 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.857699082 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.510550405 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.197825237 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03378178 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.438053172 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.154268201 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.819807322 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090675908 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.910628776 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944172232 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.090484282 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.205025705 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.862374273 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.286504581 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.13173185 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042803382 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857293413 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.532720814 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902947386 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.878518312 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.654984728 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.896254991 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048577775 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.966638686 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.097580562 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.836264813 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974674384 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874068397 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847640872 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.836188459 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.111065522 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217856843 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940050863 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848065267 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.464097672 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.547038818 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.824348947 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.621663832 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.61477307 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.969648795 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848100201 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838145111 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.774703997 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.852198015 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209860202 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.841155047 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.549636312 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.839493492 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.849154451 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933360956 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.841956565 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.652835386 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761327588 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.836022324 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.835058392 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843536362 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407250044 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.982351674 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.881086252 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.79827039 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.923434895 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.616268104 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218674074 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.978977242 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.831988729 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.832958858 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.764151186 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.537010791 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885889794 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.159335421 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.84776426 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.48054094 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123215918 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.007978723 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.770760702 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0961212 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.230677985 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.796119836 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059037747 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831056312 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766082109 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.779505717 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.764991166 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090415543 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867009525 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.58095216 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872699707 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.160255563 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.838775708 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850905788 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853829967 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.054372505 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.715966384 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832212486 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.727442743 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972130253 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849544972 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.161995887 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76394289 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.832147825 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087796959 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.04384525 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.768081805 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.310466451 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992024906 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.252838463 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.874208264 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.845249998 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.869770497 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.099246782 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89179665 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.971946341 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888068507 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.833801548 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12268939 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288930569 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.959646963 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.966574575 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.954912597 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.140565367 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859236973 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914670008 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.835340333 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.832852039 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.643091736 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.387191134 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.834230271 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.8357163 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.764506288 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.874873991 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.835329937 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778801855 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.452062104 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.997858257 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.845770668 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.059297539 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.27259836 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142027468 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769512698 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.164733078 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.924778239 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.055001496 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.483355178 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.919633597 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096942644 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.771538221 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.802990075 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874532934 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854622946 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933393967 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857257521 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.84509623 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.120670787 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.8393628 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.839647713 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.643196435 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.870236501 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844018521 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.842201218 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.594216624 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104252151 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.862453409 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.844670762 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.726431923 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.850464591 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901782519 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841635635 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.845999837 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.365207321 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.563431246 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.841637394 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.416600591 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059469157 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847648023 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.55191345 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953857425 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.920761703 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.105610545 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899113224 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.77253012 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.549441605 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.531123934 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838191803 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.772795631 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.838853376 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847487583 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849822095 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.037112032 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109017366 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882364997 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.554271169 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.882099524 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84962509 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.84440272 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840392677 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.345998103 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.985383036 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.88760484 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.877782656 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984992155 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.854045451 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.774641012 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.844286335 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844680072 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.841211943 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.840390522 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872955195 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.558338425 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219762627 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099778931 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.492212077 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851763151 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.632395625 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.899294811 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.841595646 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.610944167 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.0263991 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.915259119 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859313018 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.859547044 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.569436618 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.544833051 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.413789066 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152091955 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150725856 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290475628 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.929798105 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.871949451 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.185501136 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781588552 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.408107732 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908679617 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192041382 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791258146 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931616753 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.495330889 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199668718 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86009386 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078009704 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.23648914 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.673854348 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000000836 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061539615 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88593874 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.860742425 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.80364318 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.15064863 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993227703 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.610524829 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061635093 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183629854 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.626084578 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.981558926 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.85215329 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.534443398 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933694765 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.56171157 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.023994542 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.896372771 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.878667806 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329643427 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.857375623 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.076427504 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195001521 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.877532086 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.964418075 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784671914 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.862579509 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.862057804 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.852734569 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.847199075 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.724731469 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.102709653 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862647391 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785789364 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.825435151 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128579183 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.75599 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.857173558 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851891737 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142248737 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.259627347 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014124467 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.818973578 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.371333234 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858555599 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.78743269 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787270327 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.546189872 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.859341463 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.828614445 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05762835 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.95323546 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.800688265 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.793766917 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.925058061 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109109994 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.866268634 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.121001058 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128675555 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.564398351 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876100139 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.95376054 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.601005718 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.968751234 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.852976055 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.089836814 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.607451677 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.077186814 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.908681994 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.811535102 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.854044449 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065759769 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.853798806 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.846559822 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089126866 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.575328228 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.970676635 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159966579 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932130132 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.858764418 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.912911638 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.950938808 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870580157 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939137482 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87028746 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.870426983 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.871606597 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904937117 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.858638015 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.991298682 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.873984028 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954054924 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.003734259 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.394098192 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.863394614 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130134335 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212067307 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.179520505 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920675407 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860604994 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860024788 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794460929 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007190929 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.086974609 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135420361 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.990190389 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.976878699 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885284644 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.609407249 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.947095658 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093187395 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136013469 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.755473276 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.239498489 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.897278466 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.86124454 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87187462 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.071083183 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06738264 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153954202 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.006316742 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.800581521 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.216183498 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133911638 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.86151703 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.861607257 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.455048351 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.972993669 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.555551391 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.908408062 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.838807867 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144765852 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874722373 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245202665 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.885912264 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.022960162 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.639488058 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.673792816 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154898423 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.853191765 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.928383813 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135200749 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.246786482 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180930719 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933157403 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87696229 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.977193096 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013706645 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.740824104 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.863643211 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.86664436 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.914506096 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.577853243 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.876907079 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138336239 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17893369 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.863937306 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.742446109 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888068822 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.877472818 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.092481851 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125715893 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117812376 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876543375 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.874309193 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.68279175 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137384867 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927709286 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800977636 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.868719302 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96651851 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.11353532 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8895618 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.320202884 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.579053826 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131702723 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.866347857 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889139607 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.887978243 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.218717978 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187749682 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.40902814 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070124612 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.455085692 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.359820144 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162678966 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.874124923 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.889773241 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165200086 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.872178667 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.823690313 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900059879 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.134789564 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180469787 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.959391343 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.592313593 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.84034105 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.214605427 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.433528289 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808510649 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.87963134 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.931872862 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.86906826 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.001088299 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.881246495 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.745457222 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.892785066 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.644120004 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.153250299 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.875883324 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.858908763 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.682525296 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.034201656 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900602736 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018576849 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878155843 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.551578619 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.223834816 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.130661388 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.832787614 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.8742198 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.876366938 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87347857 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.860416577 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.071239841 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.0699877 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140994197 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.848696945 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.90204805 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.877537673 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.090109162 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085812955 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.853043208 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018909533 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.829379182 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908955505 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.77977662 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.377844119 seconds)
  done (took 1661.148356763 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.94127014 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.891203215 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.945230596 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.937501847 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.950964026 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.89308768 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.897067054 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.96236377 seconds)
  done (took 57.226951789 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.872242284 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.091687204 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.883152364 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.874188793 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.880810297 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.874513179 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.036693531 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.879952432 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.880793982 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.885335934 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.874954363 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.871263424 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.172703332 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.893019266 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.887462484 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.859282608 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.88104755 seconds)
  done (took 74.421616284 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.876211752 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.067963844 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.895414234 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.89097724 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.869450448 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.881994636 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.652946917 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.890252989 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.874903989 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.980268227 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.503447199 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.884236553 seconds)
  done (took 87.076523132 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.88465484 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.88278772 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.88232725 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.881285958 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.882747272 seconds)
  done (took 11.223622864 seconds)
done (took 2165.305823206 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.145200835 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.092803354 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.098100394 seconds)
  done (took 5.999167545 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.025277486 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.073839893 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.194209521 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.213567835 seconds)
  done (took 10.317846895 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.160361747 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.264255594 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.092644903 seconds)
  done (took 8.325641096 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.268273512 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.886180877 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.982484227 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.874349408 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.872818075 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.875043911 seconds)
  done (took 22.431347416 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.880499212 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.881916552 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.880014089 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.88205679 seconds)
  done (took 9.332404502 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.861366598 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.671390053 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.862952352 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.876938232 seconds)
  done (took 21.081848069 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.626708739 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.639670104 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.623970483 seconds)
  done (took 9.699937206 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.605496362 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.815455914 seconds)
  done (took 9.230873703 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.140855216 seconds)
  done (took 3.951073969 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.01174363 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.147721929 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.345842931 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.385342295 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.463315822 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.724515373 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.17247531 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.108588423 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.268692096 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.314334448 seconds)
  done (took 24.753413643 seconds)
done (took 140.214244831 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.254125376 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.11760247 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.079702315 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.255325053 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.098224782 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.08200515 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.100952619 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.241526378 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.72054582 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.719854956 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.211094164 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.098992622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.044197922 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.114149157 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.044256425 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.240690752 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.099930238 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.267418785 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.90477878 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.114052783 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.102975451 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.853257801 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.057475316 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.862541033 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.097814262 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.057837279 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.443597254 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.240615362 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.060509566 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.447429715 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.030326393 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.270555423 seconds)
  done (took 171.144915417 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.633345795 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.877571859 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.876150477 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.882909955 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.473371885 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.876802695 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.877080306 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.877053579 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.042509 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.037631816 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.878147847 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.467253224 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.880278316 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.878351403 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.879158277 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.878093166 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.179358269 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.686739014 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.891151705 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.896796493 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.900578043 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.450338179 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.906215202 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.522076925 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.241836678 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.909236808 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.878384533 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.910635851 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.885926414 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.898876541 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.904901306 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.879886117 seconds)
  done (took 209.071607479 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.881206863 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.879594784 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.883985184 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.880506247 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.887045696 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.893942939 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.882093815 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.879543973 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.647762652 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.656332455 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.91146848 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.891506701 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.895400358 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.878927748 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.886613257 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.87941905 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.890958695 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.889454645 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.89017325 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.893587438 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.897853629 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.69424834 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.880980648 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.69660108 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.880823524 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.883872648 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.880615313 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.888286358 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.890714713 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.891507789 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.891449859 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.880204009 seconds)
  done (took 221.380545376 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.077661457 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.88878374 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.889703013 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.822800462 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.889297161 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.888557382 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.885237971 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.078345907 seconds)
  done (took 19.249190513 seconds)
done (took 622.665874723 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.315276672 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.149619461 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.05718892 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.91167572 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.140055456 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.937147015 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.910059863 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.969817686 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.621575199 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.971108466 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.584631613 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.92140129 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.684563037 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.923665576 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.032687561 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.960300338 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.446381593 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.53402752 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.078285165 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.95849573 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.073889214 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.860900511 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.976908885 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.657311465 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.698254669 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.90054314 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.076368944 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.449427942 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.9138648 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.069121732 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.617907474 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.279060964 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.913213394 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.906000498 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.958904737 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.942167331 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.250512899 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.913318081 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.034782723 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.669896438 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.957398753 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.504686697 seconds)
  done (took 103.548431335 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.87994609 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.878398199 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.878280721 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.87994161 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.880289976 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.879200942 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.8787632 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.878885406 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.880119115 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.878613157 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.878913606 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.880825152 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.878546933 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.880322148 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.879536306 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.879568998 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.879444683 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.882611959 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.879204081 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.879639939 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.880874803 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.87896739 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.881504777 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.87918867 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.880910537 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.881077479 seconds)
  done (took 50.700077941 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.89267351 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.037507867 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.109335933 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.906473988 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.893260458 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.896345098 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.911318431 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.894607198 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.897548606 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.895913409 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.985907058 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.895536281 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.912522773 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.113511363 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.904353699 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.893295949 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.893943353 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.89524042 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.041975996 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.906882015 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.914223386 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.895561435 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.912486095 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.905122043 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.897059867 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.895260707 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.897658442 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.329417649 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.900983893 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.985896615 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.947127097 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.912756391 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.283596445 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.129305263 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.941159511 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.898591499 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.893664856 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.992585443 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.898212769 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.896200159 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.911720054 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.897039928 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.115048259 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.387997008 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.904831931 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.895257344 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.340912326 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.993300418 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.933622513 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.903762214 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.120239191 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.906662219 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.895696701 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.896573324 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.931016911 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.90326289 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.895808548 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.20575261 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.903783672 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.91287313 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.898444664 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.897923048 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.048420389 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.901548428 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.047777695 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.902736469 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.904604307 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.898460008 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.11700501 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.90554737 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.393523013 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.901480415 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.894240509 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.986974063 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.045974067 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.361921136 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.902890369 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.053164381 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.299400685 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.914490456 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.899971872 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.318164343 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.918644739 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.900492307 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.895379963 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.89560529 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.895210236 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.938770495 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.910745393 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.327876504 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.396081867 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.209095999 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.917655338 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.909858935 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.897656751 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.205237052 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.899131734 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.896230888 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.107907779 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.400882354 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.905075512 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.905039136 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.384446522 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.905233667 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.915010015 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.903554939 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.119783704 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.904500008 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.939161167 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.895801601 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.90326025 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.899647147 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.915260354 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.903006048 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.896768599 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.367837585 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.000198883 seconds)
  done (took 234.464557382 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.891934756 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.889457823 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.891760616 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.889254526 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.890154408 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.89932094 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.891629726 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.891264961 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.897727497 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.891716193 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.891410449 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.894667093 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.892746796 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.897331424 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.422692408 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.903404903 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.508919415 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.896372374 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.896844209 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.895735472 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.58363436 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.905555484 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.898111156 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.895033881 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.898034177 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.899858816 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.9040008 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.943133475 seconds)
  done (took 168.775933121 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.903083566 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.086468741 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.917343298 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.940496038 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.910756345 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.901948882 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.928750486 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.922539192 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.910084192 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.902107333 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.901317689 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.965935194 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.911902506 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.038704206 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.934106487 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.935529287 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.0073725 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.91074189 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.902801597 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.902072223 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.933945159 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.899704201 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.967275009 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.031118706 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.919692779 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.020829957 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.911995937 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.904922333 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.90551702 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.023540941 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.917916091 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.966149929 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.93365428 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.922111122 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.025429696 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.021765793 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.014118903 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.937390361 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.910203832 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.903827751 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.90315654 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.893412652 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.022764372 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.923543772 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.90806005 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.013244117 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.922675664 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.907377911 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.915559095 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.904334723 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.919759987 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.924736749 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.974438068 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.038755457 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.940445402 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.931670709 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.931911779 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.207804456 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.916458294 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.010554628 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.899432636 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.023581419 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.923964433 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.893808877 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.905300755 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.910174399 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.933549398 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.934737433 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.014610762 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.914070947 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.009278662 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.939999617 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.911829699 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.904606118 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.908466151 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.02528299 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.026749006 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.939784488 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.944691859 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.938114915 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.90225079 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.907960554 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.894966179 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.926563879 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.910152449 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.022598216 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.027596726 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.913923156 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.909428111 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.908312503 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.909214399 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.934259909 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.03312973 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.943840784 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.003456522 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.975765343 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.981941919 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.919004915 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.920324036 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.910987534 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.972779765 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.921397376 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.918553274 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.258353434 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.981241612 seconds)
  done (took 206.559041215 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.0037294 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.374947606 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.95969578 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.964264572 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.198738788 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.342817919 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.724638278 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.956805163 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.956898104 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.982775402 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.122196166 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.015541055 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.96992756 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.944009231 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.36953266 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.947865503 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.957566838 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.978186854 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.960918714 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.501233057 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.275043007 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.077228312 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.958078722 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.057926292 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.939565065 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.243915237 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.280455135 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.339951125 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.992092979 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.302778932 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.302634871 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.637160345 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.170685219 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.206174104 seconds)
  done (took 75.856343873 seconds)
done (took 841.720108894 seconds)
SAVING RESULT...
DONE!
